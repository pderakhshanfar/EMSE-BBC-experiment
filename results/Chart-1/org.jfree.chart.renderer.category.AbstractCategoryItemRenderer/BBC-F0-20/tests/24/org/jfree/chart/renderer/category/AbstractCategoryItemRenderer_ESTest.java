/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 12:14:53 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.Format;
import java.text.NumberFormat;
import java.util.LinkedList;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.SoftBevelBorder;
import javax.swing.plaf.basic.BasicTextPaneUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.JTextComponent;
import javax.swing.text.Position;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Second;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      double[][] doubleArray0 = new double[2][7];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 10;
      doubleArray1[1] = 0.2;
      doubleArray1[2] = (double) 1.0F;
      doubleArray1[3] = (double) 1.0F;
      doubleArray1[4] = (double) 0.0F;
      doubleArray1[5] = 2.0;
      doubleArray1[6] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      arc2D_Float0.x = (float) 10;
      doubleArray2[1] = (double) 0.0F;
      doubleArray2[2] = (double) 10;
      doubleArray2[3] = (double) 0.0F;
      doubleArray2[4] = (double) 0.0F;
      doubleArray2[5] = (double) 1.0F;
      doubleArray2[6] = (double) 10.0F;
      doubleArray2[7] = (double) 10;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer0.addEntity(standardEntityCollection0, arc2D_Float0, defaultIntervalCategoryDataset0, 0, 0, true, 0.0F, 12.0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      stackedAreaRenderer1.getBaseToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(true);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(11, 5, 0.05);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      numberAxis3D0.addChangeListener(waferMapPlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(500, 10, 10, 10);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.clone();
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-541);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      double[][] doubleArray0 = new double[4][4];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) (-541);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = 3586.4323;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) (-541);
      doubleArray3[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[2] = 1219.73606;
      doubleArray3[3] = 3586.4323;
      doubleArray3[4] = 3586.4323;
      doubleArray3[5] = 3586.4323;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[2] = (double) (-541);
      doubleArray4[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[4] = (double) (-541);
      doubleArray4[5] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[3] = doubleArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesToolTipGenerator((-541), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      JFreeChart jFreeChart0 = new JFreeChart("{2}", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Second second0 = new Second();
      PeriodAxis periodAxis0 = new PeriodAxis("{2}");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, taskSeriesCollection0, (-869), (-1792), true, 20000.0, 15, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue(0.2, (Comparable) levelRenderer0.ZERO, (Comparable) 0.2);
      levelRenderer0.findRangeBounds(defaultCategoryDataset0);
      levelRenderer0.getMaximumItemWidth();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.equals(defaultCategoryDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double[][] doubleArray0 = new double[6][7];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) levelRenderer0.ZERO;
      doubleArray1[1] = (double) levelRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1297;
      doubleArray2[1] = (double) levelRenderer0.ZERO;
      doubleArray2[2] = 0.2;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = (double) levelRenderer0.ZERO;
      doubleArray2[5] = (double) 1297;
      doubleArray2[6] = (double) levelRenderer0.ZERO;
      doubleArray2[7] = (double) levelRenderer0.ZERO;
      doubleArray2[8] = (double) 1297;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) levelRenderer0.ZERO;
      doubleArray3[1] = 0.2;
      doubleArray3[2] = (double) 1297;
      doubleArray3[3] = (double) 1297;
      doubleArray3[4] = (double) 1297;
      doubleArray3[5] = (double) levelRenderer0.ZERO;
      doubleArray3[6] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) levelRenderer0.ZERO;
      doubleArray4[1] = 0.0;
      doubleArray4[2] = (double) levelRenderer0.ZERO;
      doubleArray4[3] = (double) 1297;
      doubleArray4[4] = (-443.0);
      doubleArray4[5] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = 0.0;
      doubleArray5[1] = (-443.0);
      doubleArray5[2] = 0.2;
      doubleArray5[3] = (double) 1297;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[6];
      doubleArray6[0] = 0.2;
      doubleArray6[1] = 0.2;
      doubleArray6[2] = 0.0;
      doubleArray6[3] = (double) levelRenderer0.ZERO;
      doubleArray6[4] = 0.0;
      doubleArray6[5] = (-443.0);
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      levelRenderer0.setDefaultEntityRadius(1297);
      levelRenderer0.getLegendItems();
      levelRenderer0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      String string0 = "Ra\\ pC";
      JFreeChart jFreeChart0 = new JFreeChart("Ra pC", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Second second0 = new Second();
      PeriodAxis periodAxis0 = new PeriodAxis("Ra pC", second0, second0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, taskSeriesCollection0, 0, 12, true, 0.01, 1.0F, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-3.5696731217310735), 2.0F);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      jFreeChart0.getRenderingHints();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      jFreeChart0.setBackgroundImage(bufferedImage0);
      intervalMarker0.setLabel("org.jfree.chart.renderer.xy.XYItemRendererState");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, defaultCaret0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      LogAxis logAxis0 = new LogAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      stackedAreaRenderer1.getRangeAxis(combinedRangeCategoryPlot0, 382);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getSeriesBarWidth(25);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      JFreeChart jFreeChart0 = new JFreeChart("ns%V\"dhhh.AO", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Second second0 = new Second();
      PeriodAxis periodAxis0 = new PeriodAxis("ns%V\"dhhh.AO", second0, second0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, (CategoryDataset) null, 2879, 59, false, 728.27745, 0.0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("f)Srh(", numberFormat0);
      levelRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      levelRenderer0.getLegendItems();
      levelRenderer1.equals(levelRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseOutlinePaint(false);
      lineRenderer3D0.getSeriesURLGenerator((-620));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation1, defaultMultiValueCategoryDataset0, 4148, 365, true, 0.0, 0.0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 10, 10, false, 1.0F, 10, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 10, 10, false, 10, 10, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 10, true, 2, 0, 10, 3, plotOrientation0);
      levelRenderer0.getPlot();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getPassCount();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(4.0, 2);
      Graphics2D graphics2D0 = null;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2, (double) stackedAreaRenderer0.ZERO);
      CategoryPlot categoryPlot0 = stackedBarRenderer3D0.getPlot();
      double[][] doubleArray0 = new double[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      int int0 = 1662;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(10, 10, true);
      Rectangle rectangle0 = new Rectangle(0, 1137, 1137, 1);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("S");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "8R>B+;Df7O5*\"Bd}a");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, (-1086), (-3206), true, categoryStepRenderer_State0, rectangle0);
      // Undeclared exception!
      try { 
        categoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)0;
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte) (-26);
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedAreaRenderer0.clone();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((byte)1, 0.0);
      stackedBarRenderer3D0.getShadowXOffset();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Rd430l#dz#o4JXy%", true, 0);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 10, true, 2, 0, 10, 3, plotOrientation0);
      levelRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      minMaxCategoryRenderer0.getToolTipGenerator(10, 10, true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent(0.0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(3462.76);
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      boolean boolean0 = false;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-609), 10, (-609), 3, 22, 21, true, false, false, true, false, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultBoxAndWhiskerCategoryDataset0, 10, 678, true, 4.0, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Not implemented.");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesToolTipGenerator(Integer.MAX_VALUE, (CategoryToolTipGenerator) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultKeyedValues2DDataset0, (-865), (-1767), true, (-865), 1.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator(":P~Gg<f(Oe<x:", numberFormat0);
      levelRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 2, 2);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) slidingCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 1.0F);
      short[] shortArray0 = new short[9];
      shortArray0[0] = (short)6;
      shortArray0[1] = (short)6;
      shortArray0[2] = (short)6;
      shortArray0[3] = (short)6;
      shortArray0[4] = (short)6;
      shortArray0[5] = (short)6;
      shortArray0[6] = (short)6;
      shortArray0[7] = (short)6;
      shortArray0[8] = (short)6;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(10, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      jFreeChart0.getRenderingHints();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage((int) (short)6, 9);
      jFreeChart0.setBackgroundImage(bufferedImage0);
      Rectangle rectangle0 = new Rectangle((short)6, (short)6, (short)6, (short)6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      stackedAreaRenderer0.clone();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setRenderAsPercentages(false);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Not implemented.");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Not implemented.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(500, 10, 10, 10);
      JFreeChart jFreeChart0 = new JFreeChart("Not implemented.", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeCategoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(0.05, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      valueMarker0.setLabel("$w0'jPWS");
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, rectangle0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.setStagger(true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.0F);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)6;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(500, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      jFreeChart0.getRenderingHints();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      jFreeChart0.setBackgroundImage(bufferedImage0);
      Rectangle rectangle0 = new Rectangle((short)6, (short)6, 500, 15);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(combinedRangeCategoryPlot0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      stackedAreaRenderer0.clone();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      try { 
        stackedAreaRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 10, 10, false, 0.2, 10, false);
      CategoryAxis categoryAxis0 = new CategoryAxis("rp+@9GqwlC,}$O8");
      char[] charArray0 = new char[7];
      charArray0[0] = 'v';
      charArray0[1] = 'x';
      charArray0[2] = '%';
      charArray0[3] = '#';
      charArray0[4] = ':';
      charArray0[5] = '[';
      charArray0[6] = 'k';
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) '[';
      doubleArray0[1] = (double) '%';
      doubleArray0[2] = 0.05;
      doubleArray0[3] = (double) '%';
      doubleArray0[4] = (double) ':';
      doubleArray0[5] = (double) '[';
      doubleArray0[6] = (double) ':';
      doubleArray0[7] = 0.2;
      AffineTransform affineTransform0 = new AffineTransform(doubleArray0);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = categoryAxis0.DEFAULT_AXIS_LABEL_FONT.getStringBounds(charArray0, 4, 4, fontRenderContext0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      levelRenderer0.getItemMiddle(1.0F, 10, defaultMultiValueCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.equals(stackedAreaRenderer1);
      stackedAreaRenderer0.getLegendItemLabelGenerator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stackedAreaRenderer1.equals(stackedAreaRenderer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 10, 420, false, (double) stackedAreaRenderer1.ZERO, (-3912.0), true);
      boxAndWhiskerRenderer0.getItemMargin();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.labels.HighLowItemLabelGenerator", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1990, (double) 10, (-1878.9935), chartRenderingInfo0);
      bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(1.0, jFreeChart0.DEFAULT_BACKGROUND_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Week week0 = new Week();
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.labels.HighLowItemLabelGenerator", week0, week0);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, periodAxis0, valueMarker0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 10);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 10, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      levelRenderer1.equals(levelRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItem(83, (-2722));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (-3014.184549580658), stackedAreaRenderer0.ZERO, (-4667.6509), stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      categoryLineAnnotation0.setStroke(stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      spiderWebPlot0.setAxisLabelGap((double) stackedAreaRenderer0.ZERO);
      spiderWebPlot0.setOutlineVisible(false);
      stackedAreaRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      stackedAreaRenderer0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(10);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{2}");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      thermometerPlot0.equals(categoryLineAnnotation0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      levelRenderer0.clone();
      AnnotationChangeEvent annotationChangeEvent0 = new AnnotationChangeEvent(levelRenderer0, categoryLineAnnotation0);
      thermometerPlot0.annotationChanged(annotationChangeEvent0);
      stackedAreaRenderer0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        levelRenderer0.updateCrosshairValues(categoryCrosshairState0, stackedAreaRenderer0.ZERO, 90.0, 0.0, 0, (-1495.0689401936), 1.0F, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (-3014.184549580658), stackedAreaRenderer0.ZERO, (-4667.6509), stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      categoryLineAnnotation0.setStroke(stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      spiderWebPlot0.setAxisLabelGap((double) stackedAreaRenderer0.ZERO);
      spiderWebPlot0.setOutlineVisible(false);
      stackedAreaRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      stackedAreaRenderer0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(10);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getXOffset();
      barRenderer3D0.getItemMargin();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-824.827923583998), 12.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, dateAxis0, stackedBarRenderer3D0);
      Rectangle rectangle0 = new Rectangle();
      categoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      JFreeChart jFreeChart0 = new JFreeChart("", barRenderer3D0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      double[][] doubleArray0 = new double[2][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, levelRenderer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.getTickLabelFont((Comparable) true);
      JTextField jTextField0 = new JTextField(10);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds((-1277));
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-3595.45948));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 2.0F, 2, 0.0, (-2708), 4.0, (-3595.45948), plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(">kwcV[3?");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle rectangle0 = new Rectangle(500, 10, 10, 10);
      JFreeChart jFreeChart0 = new JFreeChart(">kwcV[3?", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, (double) 10, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(0.05, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      levelRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, valueMarker0, rectangle0);
      Layer layer0 = Layer.FOREGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      scatterRenderer0.equals(categoryStepRenderer0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(0.0, 2.0F, (-2439.06931));
      barRenderer3D0.setBarPainter(gradientBarPainter0);
      scatterRenderer0.getUseOutlinePaint();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(levelRenderer0.ZERO, 0.2, 0.2, 0.2, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1022), 5730);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("gi");
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, true, true);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      Rectangle2D rectangle2D0 = subCategoryAxis0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      PaintScale paintScale0 = xYShapeRenderer0.getPaintScale();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) levelRenderer0.ZERO, "1yg]_x`D*Ir7");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, cyclicNumberAxis0);
      RectangleEdge rectangleEdge0 = paintScaleLegend0.getPosition();
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(0.2, levelRenderer0.ZERO, slidingCategoryDataset0, subCategoryAxis0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(">kwcV[3?");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle rectangle0 = new Rectangle(500, 4, 4, 1);
      JFreeChart jFreeChart0 = new JFreeChart("i4 hNO;qQY", subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 4, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(0.05, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      levelRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, valueMarker0, rectangle0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, (-102.19128F), 10, 1.0F);
      NumberAxis numberAxis0 = new NumberAxis("@~ZZ?VbPp&");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LabelBlock labelBlock0 = new LabelBlock("@~ZZ?VbPp&");
      Size2D size2D0 = new Size2D();
      RectangleAnchor.createRectangle(size2D0, 0.05, 2.0F, (RectangleAnchor) null);
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis0, defaultMultiValueCategoryDataset0, (-4115), 10, true, (CategoryItemRendererState) null, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 0.2, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short)6;
      shortArray0[1] = (short)6;
      shortArray0[2] = (short)6;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(6, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("9-QNt", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(6, 16777215);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, valueAxis0, ganttRenderer0);
      ganttRenderer0.getRangeAxis(categoryPlot0, 10);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String string0 = "org.jfree.chart.renderer.xy.DeviationRenderer$State";
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.xy.DeviationRenderer$State", categoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      IndexColorModel indexColorModel0 = null;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1217), 1, 1, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.0F);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)6;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(500, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      RenderingHints renderingHints0 = jFreeChart1.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      JFreeChart jFreeChart2 = new JFreeChart("Base item URL generator not cloneable.", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(438, 3);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.setPlot(categoryPlot0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 2);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JTable jTable0 = new JTable(961, 10);
      Rectangle rectangle0 = jTable0.getCellRect(2, 67, false);
      Rectangle2D rectangle2D0 = categoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("Unknown layer.", stringArray0);
      Layer layer0 = Layer.FOREGROUND;
      levelRenderer0.drawAnnotations(graphics2D0, rectangle2D0, (CategoryAxis) null, symbolAxis0, layer0, (PlotRenderingInfo) null);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 1.0F);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-975.372342018), 1.0F);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, (CategoryDataset) null, (-4115), (-4115), false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, (-3139), 10, false, 1.0, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 1.0F);
      NumberAxis numberAxis0 = new NumberAxis("@~ZZ?VbPp&");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis0, defaultMultiValueCategoryDataset0, 10, (-4115), true, (CategoryItemRendererState) null, rectangle2D_Float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.setPlot(categoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      minMaxCategoryRenderer0.lookupLegendTextPaint(10);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("GObM*Rb");
      NumberAxis numberAxis0 = new NumberAxis("Null 'paint' argument.");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, extendedCategoryAxis0, numberAxis0, defaultMultiValueCategoryDataset0, 10, 500, true, (CategoryItemRendererState) null, rectangle2D_Float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[4];
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) groupedStackedBarRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) levelRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) minMaxCategoryRenderer1;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) minMaxCategoryRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(10, 3819);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1635, 9, 9);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("T");
      CategoryMarker categoryMarker0 = new CategoryMarker(true, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      Line2D.Float line2D_Float0 = new Line2D.Float((-1.0F), (-1252.63F), 0.0F, (-1636.3156F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainMarker(graphics2D0, combinedDomainCategoryPlot0, subCategoryAxis0, categoryMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (String) null);
      ValueMarker valueMarker0 = new ValueMarker(0.0, levelRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Graphics2D graphics2D0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1.0F);
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      Color color0 = systemColor0.brighter();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder((-2782), color0, color0);
      JLabel jLabel0 = new JLabel((Icon) null);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jLabel0, 500, 7, 50, (-2310));
      levelRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis1, (Marker) null, rectangle0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(cyclicNumberAxis1);
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot1, rectangle0, 1760.168162451916, cyclicNumberAxis1.DEFAULT_TICK_MARK_PAINT, cyclicNumberAxis1.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0);
      spiderWebPlot0.getURLGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("[#");
      DateAxis dateAxis0 = new DateAxis("[#");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, dateAxis0, levelRenderer0);
      ValueMarker valueMarker0 = new ValueMarker((-2006.0));
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(3, (CategoryDataset) taskSeriesCollection0);
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-1.0F), (-1.0F), 0.0F);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      LogAxis logAxis0 = new LogAxis();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      rectangle2D_Float0.x = (float) 10;
      levelRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis1 = new ExtendedCategoryAxis((String) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.hitTest(2.0F, 1644.89736759, (Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, extendedCategoryAxis1, logAxis0, (CategoryDataset) null, (-1), 2485, true, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 1.0F);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.hitTest(10, 1.0E-4, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, defaultStatisticalCategoryDataset0, (-1324), 10, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_SHADOW_PAINT;
      lineRenderer3D0.setWallPaint(color0);
      lineRenderer3D0.setXOffset(2678.046132889859);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = false;
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) lineRenderer3D0.ZERO;
      doubleArray1[1] = 2655.8997643845;
      doubleArray1[2] = (double) statisticalBarRenderer0.ZERO;
      doubleArray1[3] = 50000.0;
      doubleArray1[4] = (double) lineRenderer3D0.ZERO;
      doubleArray1[5] = 3.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 8.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      Color color0 = Color.black;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(levelRenderer1.ZERO, 0.2, levelRenderer1.ZERO, (-761.3535693), color0, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      assertTrue(levelRenderer1.equals((Object)levelRenderer0));
      
      Layer layer0 = Layer.FOREGROUND;
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      levelRenderer0.getLegendItems();
      boolean boolean0 = levelRenderer1.equals(levelRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Shape shape0 = scatterRenderer0.lookupLegendShape(6);
      GeneralPath generalPath0 = new GeneralPath(shape0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 3.0F, 10, 1.0F);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Base item URL generator not cloneable.");
      LogAxis logAxis0 = new LogAxis();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.hitTest(4.0, 1.0F, (Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, extendedCategoryAxis0, logAxis0, defaultMultiValueCategoryDataset0, (-1200), (-1856), false, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      levelRenderer0.getLegendItem(10, 10);
      int int0 = 7;
      levelRenderer0.lookupSeriesOutlineStroke(7);
      Graphics2D graphics2D0 = null;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      combinedDomainCategoryPlot0.setDataset(4442, (CategoryDataset) jDBCCategoryDataset0);
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 10, 10);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      double double0 = 974.4314709;
      String string0 = null;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      LogAxis logAxis0 = new LogAxis();
      int int1 = (-1200);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.hitTest(10.0F, 1.0F, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, extendedCategoryAxis0, logAxis0, jDBCCategoryDataset0, (-1), (-1200), true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      levelRenderer0.lookupSeriesOutlineStroke(3);
      Graphics2D graphics2D0 = null;
      GeneralPath generalPath0 = new GeneralPath(levelRenderer0.DEFAULT_SHAPE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 3, 0.0F, 0.0F);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      double double0 = 100.0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(100.0, (String) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 35, 5);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, cyclicNumberAxis0, levelRenderer0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      levelRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle2D_Float0, 974.4314709, cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      short[][] shortArray0 = new short[2][6];
      short[] shortArray1 = new short[4];
      shortArray1[1] = (short)24;
      shortArray1[2] = (short)5188;
      shortArray1[3] = (short)5188;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[9];
      shortArray2[1] = (short)5188;
      shortArray2[2] = (short)5188;
      shortArray1[3] = (short)5188;
      shortArray2[4] = (short)5188;
      shortArray2[1] = (short)24;
      shortArray2[6] = (short)5188;
      shortArray2[7] = (short) (-4115);
      shortArray2[8] = (short)5188;
      shortArray0[1] = shortArray1;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1042, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage((int) (short)24, 55);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      Graphics2D graphics2D0 = null;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1910.3846863, (String) null);
      ValueMarker valueMarker0 = new ValueMarker(0.5F, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      short[][] shortArray0 = new short[2][6];
      short[] shortArray1 = new short[4];
      shortArray1[0] = (short)24;
      shortArray1[1] = (short)24;
      shortArray1[2] = (short)5188;
      shortArray1[3] = (short)5188;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[9];
      shortArray2[0] = (short)24;
      shortArray2[1] = (short)5188;
      shortArray2[2] = (short)5188;
      shortArray2[3] = (short)5188;
      shortArray2[4] = (short)24;
      shortArray2[5] = (short)24;
      shortArray2[6] = (short)5188;
      shortArray2[7] = (short) (-4115);
      shortArray2[8] = (short)5188;
      shortArray0[1] = shortArray2;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1042, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage((int) (short)24, 55);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1910.3846863, (String) null);
      ValueMarker valueMarker0 = new ValueMarker(3152.728);
      levelRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double double0 = 770.2889939651;
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-862.14597), 884.142764);
      short[][] shortArray0 = new short[7][1];
      short[] shortArray1 = new short[4];
      shortArray1[0] = (short)6;
      shortArray1[1] = (short)0;
      shortArray1[2] = (short)0;
      shortArray1[3] = (short)9;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[8];
      shortArray2[0] = (short)9;
      shortArray2[1] = (short)0;
      shortArray2[2] = (short)6;
      shortArray2[3] = (short)9;
      shortArray2[4] = (short)0;
      shortArray2[5] = (short)0;
      shortArray2[6] = (short)0;
      shortArray2[7] = (short)5188;
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[3];
      shortArray3[0] = (short)9;
      shortArray3[1] = (short)0;
      shortArray3[2] = (short)6;
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[4];
      shortArray4[0] = (short)9;
      shortArray4[1] = (short)0;
      shortArray4[2] = (short)9;
      shortArray4[3] = (short)0;
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[4];
      shortArray5[0] = (short)6;
      shortArray5[1] = (short)0;
      shortArray5[2] = (short)5188;
      shortArray5[3] = (short)9;
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[4];
      shortArray6[0] = (short)6;
      shortArray6[1] = (short)24;
      shortArray6[2] = (short)5188;
      shortArray6[3] = (short)0;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[0];
      shortArray0[6] = shortArray7;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(9, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage((int) (short)6, 74);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      // Undeclared exception!
      try { 
        levelRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GeneralPath generalPath0 = new GeneralPath(levelRenderer0.DEFAULT_SHAPE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-4052.8F), (-4052.8F), (-4052.8F), (-4052.8F));
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-821.954306870648));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, (-4052.8F), (Paint) null, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getURLGenerator(0, 0, false);
      layeredBarRenderer0.equals((Object) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setDrawOutlines(false);
      assertFalse(statisticalLineAndShapeRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double[][] doubleArray0 = new double[8][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer1.addEntity(standardEntityCollection0, levelRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset1, 3, 3, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
      
      levelRenderer0.getLegendItems();
      boolean boolean0 = levelRenderer1.equals(levelRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendTextPaint((-4247));
      levelRenderer0.getLegendItems();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, levelRenderer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setItemMargin((-674.6826));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 3.0, 3.0, 3.0, stackedBarRenderer0.DEFAULT_PAINT, stackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      scatterRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseShapesFilled(true);
      assertTrue(lineAndShapeRenderer0.getBaseLinesVisible());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      boolean boolean0 = levelRenderer1.equals(levelRenderer0);
      assertTrue(boolean0);
      
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 4.0);
      boolean boolean1 = stackedBarRenderer3D0.getRenderAsPercentages();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("t");
      LogAxis logAxis0 = new LogAxis("t");
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, logAxis0, barRenderer0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(10, 500, 1879.522715405378, 256.2883, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, levelRenderer0);
      numberAxis3D0.resizeRange(0.2);
      assertEquals(1.0E-9, numberAxis3D0.getUpperBound(), 0.01);
      
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.lookupSeriesStroke(10);
      LegendItemCollection legendItemCollection1 = levelRenderer0.getLegendItems();
      assertTrue(legendItemCollection1.equals((Object)legendItemCollection0));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer1.getLegendItem(0, (-4719));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Font font0 = levelRenderer0.DEFAULT_VALUE_LABEL_FONT.deriveFont(36);
      levelRenderer0.setBaseLegendTextFont(font0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.CombinedRangeXYPlot", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) defaultCaret0);
      Rectangle2D rectangle2D0 = rectangle0.createIntersection(defaultCaret0);
      chartPanel0.scale(rectangle2D0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("rw^p}/a3O+e|");
      BufferedImage bufferedImage0 = new BufferedImage(420, 2819, 1);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, rectangle0, (CategoryPlot) null, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      minMaxCategoryRenderer0.getLegendItem(10, 990);
      Number[][] numberArray0 = new Number[1][2];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[2] = (Number) 10;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray1[3] = (Number) integer0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(10, 0.0F);
      LinkedList<StackedBarRenderer> linkedList0 = new LinkedList<StackedBarRenderer>();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "H\"OXum5b/0\ry";
      stringArray0[1] = "H\"OXum5b/0\ry";
      stringArray0[2] = "H\"OXum5b/0\ry";
      stringArray0[3] = "H\"OXum5b/0\ry";
      stringArray0[4] = "H\"OXum5b/0\ry";
      stringArray0[5] = "H\"OXum5b/0\ry";
      stringArray0[6] = "H\"OXum5b/0\ry";
      stringArray0[7] = "H\"OXum5b/0\ry";
      stringArray0[8] = "H\"OXum5b/0\ry";
      SymbolAxis symbolAxis0 = new SymbolAxis("H\"OXum5b/0\ry", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      levelRenderer0.lookupSeriesStroke(3);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0.0, 0.2, 0.2, scatterRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        levelRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-867.461049937402), 0.2, 0.05, (-5.0));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1215.482F), (-1215.482F), 10, (-1.0F));
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      rectangle2D_Double0.createUnion(rectangle2D0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      boxAndWhiskerRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer1.getFillBox();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT, extendedCategoryAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      SystemColor systemColor0 = SystemColor.textInactiveText;
      Color color0 = systemColor0.darker();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(color0, boxAndWhiskerRenderer1.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      waterfallBarRenderer1.getFirstBarPaint();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Graphics2D graphics2D1 = null;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, (-521), (-521), false, (double) levelRenderer0.ZERO, 10, false);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 1923.339424425634, 2254.0, (-521));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-3549.79F), 2.0F, 10, 10);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      CategoryAxis categoryAxis0 = stackedBarRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Graphics2D graphics2D0 = null;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-923.1840270607), false, (XYToolTipGenerator) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainCategoryPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis3D0, (CategoryDataset) null, 10, 10, true, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, rectangle2D_Float0, defaultIntervalCategoryDataset0, (-6), 10, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryAxis categoryAxis0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, levelRenderer0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 10, 1575.20956, 1623.777806037488, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItems();
      double[][] doubleArray0 = new double[6][1];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) scatterRenderer0.ZERO;
      doubleArray1[1] = (double) lineRenderer3D0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = 0.2;
      doubleArray2[1] = (double) scatterRenderer0.ZERO;
      doubleArray2[2] = (double) lineRenderer3D0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) lineRenderer3D0.ZERO;
      doubleArray3[1] = 1.0;
      doubleArray3[2] = 12.0;
      doubleArray3[3] = (double) lineRenderer3D0.ZERO;
      doubleArray3[4] = 0.2;
      doubleArray3[5] = (double) lineRenderer3D0.ZERO;
      doubleArray3[6] = 3.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[0];
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = 8.0;
      doubleArray6[1] = 0.0;
      doubleArray6[2] = (double) lineRenderer3D1.ZERO;
      doubleArray6[3] = 8.0;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (double) levelRenderer0.ZERO);
      stackedBarRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 3.0, (Comparable) 3.0, (Comparable) levelRenderer0.ZERO);
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(1.5, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      minMaxCategoryRenderer0.getLegendItem(3, 3);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP;
      levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor1);
      levelRenderer0.getLegendItems();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.renderer.RendererState");
      CategoryDataset categoryDataset0 = null;
      int int0 = (-3470);
      int int1 = 3;
      boolean boolean0 = false;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer2.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(10, color0, color0);
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, numberAxis0, levelRenderer0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JEditorPane jEditorPane0 = new JEditorPane();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(270);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.setBulbRadius(4);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, (double) statisticalBarRenderer2.ZERO, 10, 2.5E-7);
      Point2D point2D0 = statisticalBarRenderer2.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer2.setShadowXOffset(4);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      CategoryDataset categoryDataset0 = null;
      // Undeclared exception!
      try { 
        statisticalBarRenderer2.initialise((Graphics2D) null, rectangle2D0, (CategoryPlot) null, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JEditorPane jEditorPane0 = new JEditorPane();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(270);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(270);
      softBevelBorder0.getInteriorRectangle((Component) jEditorPane0, 4, 52, 4, 2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, (-2), (-4), 2, 1178, 1178, 2.5E-4, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      minMaxCategoryRenderer0.getLegendItem(3, 3);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      MinMaxCategoryRenderer minMaxCategoryRenderer3 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer2.getLegendItem(6, 3);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("khs5hW]cLB%c", 0.2, 0.2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("/p^46 !D", 0.0, 0.0, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Integer.getInteger("", 10);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = BigInteger.ONE;
      Number[][] numberArray0 = new Number[1][7];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 0.0;
      numberArray1[1] = (Number) bigInteger1;
      numberArray1[2] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      categoryPointerAnnotation0.setArrowWidth(0.0);
      Vector<Format.Field> vector0 = new Vector<Format.Field>();
      JTable jTable0 = new JTable(vector0, vector0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 3.0, levelRenderer0.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-9), 0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, 45, (-9), false, (-9), (double) scatterRenderer0.ZERO);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 45, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (double) levelRenderer0.ZERO);
      boolean boolean0 = stackedBarRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      assertFalse(boolean0);
      
      boolean boolean1 = stackedBarRenderer3D0.equals(levelRenderer0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("khs5hW]cLB%c", 0.2, 0.2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("/p^46 !D", 0.0, 0.0, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BigInteger bigInteger0 = BigInteger.ZERO;
      Integer.getInteger("", 10);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = BigInteger.ONE;
      Number[][] numberArray0 = new Number[1][7];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 0.0;
      numberArray1[1] = (Number) bigInteger1;
      numberArray1[2] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      Vector<Format.Field> vector0 = new Vector<Format.Field>();
      JTable jTable0 = new JTable(vector0, vector0);
      Rectangle rectangle0 = jTable0.getCellRect(2331, 10, false);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer0.setShadowXOffset(0.0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = 3;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      minMaxCategoryRenderer0.getLegendItem(3, 3);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)4;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1493), (-1493), byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setSeriesItemLabelGenerator(79, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      ganttRenderer0.getItemLabelGenerator(79, 79, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      assertEquals(0.2, layeredBarRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-788), 2940, true, (-788), (-788));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("TextAnchor.BASELINE_LEFT", 0.2, 0.2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      levelRenderer0.lookupSeriesStroke(998);
      levelRenderer0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) levelRenderer0.ZERO;
      doubleArray1[1] = (double) levelRenderer0.ZERO;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) levelRenderer0.ZERO;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = (double) scatterRenderer0.ZERO;
      doubleArray1[6] = (double) scatterRenderer0.ZERO;
      doubleArray1[7] = (double) 998;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) levelRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer0.lookupLegendTextPaint(998);
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 4, 998, false, 921.58, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(", height=", scatterRenderer1.ZERO, (double) levelRenderer0.ZERO);
      scatterRenderer1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[] numberArray0 = new Number[7];
      numberArray0[0] = (Number) 1.0F;
      numberArray0[1] = (Number) 10;
      numberArray0[2] = (Number) 0.2;
      numberArray0[4] = (Number) scatterRenderer0.ZERO;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(10, color0, color0);
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(boxAndWhiskerRenderer0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      Rectangle rectangle0 = chartPanel0.getBounds();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis3D0, rectangle0, 4.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_STROKE);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(26, color0, color0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(waterfallBarRenderer0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      Rectangle rectangle0 = chartPanel0.getBounds();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle0, 1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, waterfallBarRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesStroke((-2966));
      levelRenderer0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[0][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer0.lookupLegendTextPaint(4);
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, (-2966), (-2966), false, 586.189002124, (-2966));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 0, 67, 67, 10, (-6), false, true, false, true, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(234, (-1));
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      RectangleEdge rectangleEdge1 = Title.DEFAULT_POSITION;
      RectangleEdge.coordinate(rectangle2D0, rectangleEdge0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      stackedAreaRenderer0.getLegendItems();
      CategoryAxis categoryAxis0 = new CategoryAxis("21?A");
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle("SAVE", 10, defaultMultiValueCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, (-521), (-521), false, (double) levelRenderer0.ZERO, 4.0, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("Null 'generator' argument.", zoneInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(scatterRenderer0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle0, 1.0F, dateAxis0.DEFAULT_TICK_MARK_PAINT, levelRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = 5;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond((-2764L));
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) stackedAreaRenderer0.ZERO);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("[d&f ", compassPlot0);
      boolean boolean0 = true;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 5, 0, 0, 5, 0, true, true, true, true, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(3, 10);
      chartPanel0.setMouseZoomable(true, true);
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      RectangleEdge rectangleEdge1 = Title.DEFAULT_POSITION;
      RectangleEdge.coordinate(rectangle2D0, rectangleEdge1);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle(fixedMillisecond0, fixedMillisecond0, defaultMultiValueCategoryDataset0, (CategoryAxis) null, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("", meterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle rectangle0 = new Rectangle(9999, 10);
      Rectangle rectangle1 = new Rectangle(rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      levelRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle1, rectangle1, meterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      levelRenderer0.setAutoPopulateSeriesFillPaint(false);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(", height=", scatterRenderer1.ZERO, (double) levelRenderer0.ZERO);
      scatterRenderer1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getBaseShapesFilled();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[5][9];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) levelRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) 1.0F;
      numberArray2[1] = (Number) 10;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) 0.0;
      numberArray2[4] = (Number) scatterRenderer0.ZERO;
      BigInteger bigInteger0 = BigInteger.ZERO;
      numberArray2[5] = (Number) bigInteger0;
      numberArray2[6] = (Number) scatterRenderer1.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      numberArray3[0] = (Number) scatterRenderer1.ZERO;
      numberArray3[1] = (Number) 10;
      Integer integer0 = Integer.getInteger("]=j_b,", 10);
      numberArray3[2] = (Number) integer0;
      numberArray3[3] = (Number) 0.0;
      numberArray3[4] = (Number) 0.0;
      numberArray3[5] = (Number) 0.0;
      numberArray3[6] = combinedRangeCategoryPlot0.ZERO;
      numberArray3[7] = (Number) 10;
      numberArray3[8] = (Number) levelRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[4];
      numberArray4[0] = combinedRangeCategoryPlot0.ZERO;
      numberArray4[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray4[2] = (Number) levelRenderer0.ZERO;
      numberArray4[3] = combinedRangeCategoryPlot0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      BigInteger bigInteger1 = BigInteger.TEN;
      numberArray5[0] = (Number) bigInteger1;
      BigInteger bigInteger2 = BigInteger.ONE;
      numberArray5[1] = (Number) bigInteger2;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clearSeriesPaints(true);
      int int0 = minMaxCategoryRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle2D0, (-2604.2), levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = null;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0);
      spiderWebPlot0.getURLGenerator();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-134), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BasicStroke basicStroke0 = new BasicStroke();
      levelRenderer0.getLegendItems();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Bill Kelemen", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 140.7, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(827, color0, color0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jTextPane0, (-551), (-1), 827, 827);
      Paint paint0 = combinedDomainCategoryPlot0.getRangeGridlinePaint();
      statisticalLineAndShapeRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, (-1), paint0, xYPlot0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(true);
      assertTrue(scatterRenderer0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.getRowKeys();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultCategoryDataset0, 1, 1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DateAxis dateAxis0 = new DateAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, dateAxis0, dateAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = dateAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle(rectangle2D0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D1, rectangle2D0, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      levelRenderer0.setAutoPopulateSeriesFillPaint(true);
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesStroke((-2966));
      levelRenderer0.getLegendItems();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Bill Kelemen", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 4293, (double) 1.0F, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectedTextColor();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(4293, color0, color0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jTextPane0, 744, 75, (-2966), (-2966));
      statisticalLineAndShapeRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 10, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(true);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      minMaxCategoryRenderer0.getToolTipGenerator((-3289), (-3289), true);
      stackedBarRenderer0.setSeriesToolTipGenerator(25, (CategoryToolTipGenerator) null);
      assertTrue(stackedBarRenderer0.getDefaultShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 3739;
      levelRenderer0.lookupSeriesPaint((-410));
      int int1 = 2685;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      GeneralPath generalPath0 = new GeneralPath(levelRenderer0.DEFAULT_SHAPE);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int2 = 0;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, generalPath0, taskSeriesCollection0, (-479), 273, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[3][8];
      Number[] numberArray1 = new Number[8];
      numberArray1[0] = (Number) statisticalBarRenderer0.ZERO;
      numberArray1[1] = (Number) statisticalBarRenderer0.ZERO;
      numberArray1[2] = (Number) scatterRenderer0.ZERO;
      numberArray1[3] = (Number) 3.0;
      numberArray1[4] = (Number) scatterRenderer0.ZERO;
      numberArray1[5] = (Number) 3.0;
      numberArray1[6] = (Number) 0.2;
      numberArray1[7] = (Number) scatterRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) statisticalBarRenderer0.ZERO;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) scatterRenderer0.ZERO;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 3.0;
      numberArray2[5] = (Number) statisticalBarRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 3543, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      levelRenderer0.getSeriesToolTipGenerator((-1));
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-511), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3716);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(jDBCCategoryDataset0, tableOrder0);
      spiderWebPlot0.getToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-2342), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Paint paint0 = levelRenderer0.lookupSeriesPaint(3739);
      levelRenderer0.getURLGenerator(2685, 3739, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_VALUE_LABEL_PAINT, paint0, levelRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer((-2664));
      GradientPaintTransformer gradientPaintTransformer0 = stackedXYAreaRenderer0.getGradientTransformer();
      waterfallBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{0}");
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis0, statisticalBarRenderer0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, 0);
      assertTrue(valueAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 3739;
      levelRenderer0.lookupSeriesPaint(3739);
      int int1 = 2685;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      GeneralPath generalPath0 = new GeneralPath(levelRenderer0.DEFAULT_SHAPE);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int2 = 0;
      // Undeclared exception!
      try { 
        levelRenderer0.addEntity(standardEntityCollection0, generalPath0, taskSeriesCollection0, 3739, 0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3739, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      NumberFormat numberFormat1 = NumberFormat.getIntegerInstance();
      numberFormat0.setMinimumIntegerDigits(10);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Not implemented.", numberFormat0, numberFormat1);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-926), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      minMaxCategoryRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle2D0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      assertTrue(layeredBarRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      minMaxCategoryRenderer1.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, (-2694), 1, false, (double) minMaxCategoryRenderer0.ZERO, (double) levelRenderer0.ZERO, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      String string0 = null;
      JPasswordField jPasswordField0 = new JPasswordField((String) null);
      Position.Bias position_Bias0 = Position.Bias.Forward;
      // Undeclared exception!
      try { 
        basicTextPaneUI0.modelToView((JTextComponent) jPasswordField0, 3715, position_Bias0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTextUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4.0, 3562.9501914692, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Paint paint0 = extendedCategoryAxis0.getAxisLinePaint();
      stackedBarRenderer3D0.setWallPaint(paint0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 1, (-2022));
      // Undeclared exception!
      try { 
        layeredBarRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getToolTipGenerator(1, 1, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      double double0 = 799.8223615;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      int int0 = 3106;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1282, 3106, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3106, 4.0, 2, 1);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Double0.createUnion(rectangle2D_Float0);
      minMaxCategoryRenderer0.getPlot();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 1, (-2605), false, 1.0F, (-2768.209229864628), false);
      minMaxCategoryRenderer0.getToolTipGenerator(1, 1, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      assertFalse(minMaxCategoryRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator(527);
      statisticalBarRenderer0.setSeriesToolTipGenerator(527, (CategoryToolTipGenerator) null, true);
      statisticalBarRenderer0.setSeriesToolTipGenerator(527, (CategoryToolTipGenerator) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Paint paint0 = categoryStepRenderer0.lookupSeriesOutlinePaint((-556));
      statisticalBarRenderer0.equals(categoryStepRenderer0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(paint0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setRenderAsPercentages(true);
      stackedBarRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 3778;
      levelRenderer0.getItemLabelGenerator(8, 3778, false);
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesItemLabelGenerator((-2453), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("{0}");
      NumberAxis numberAxis0 = new NumberAxis();
      numberAxis0.zoomRange((-1260.022), 2.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis0, statisticalBarRenderer0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, (-5805));
      assertEquals(0.0F, valueAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getLegendItem(20, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer.getDefaultShadowsVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("g", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      defaultShadowGenerator0.createDropShadow(bufferedImage0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedBarRenderer0.setShadowXOffset(225.0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseLegendTextPaint(thermometerPlot0.DEFAULT_BACKGROUND_PAINT);
      scatterRenderer0.getDrawOutlines();
      int int0 = levelRenderer0.getColumnCount();
      assertEquals(0, int0);
      
      stackedBarRenderer0.setDrawBarOutline(false);
      assertEquals(0, stackedBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer.getDefaultShadowsVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("g", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedBarRenderer0.setShadowXOffset(225.0);
      levelRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0, 0.0, boxAndWhiskerRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getDrawOutlines();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 62;
      statisticalBarRenderer0.getPlot();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      JTree jTree0 = new JTree();
      metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      layeredBarRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      layeredBarRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      layeredBarRenderer0.createState(plotRenderingInfo1);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      int int0 = (-2848);
      boolean boolean0 = true;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 36, 1358, 3, 3, (-2848), 36, true, true, true, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-3154.0), 2.0);
      stackedBarRenderer3D0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.getRenderAsPercentages();
      stackedBarRenderer3D0.getBaseItemLabelGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 10, 15, 0, (-1561), 1, false, true, false, true, false, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("[y", "[y", "");
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getURLGenerator(1515, 1515, false);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      double double0 = 1076.0824169580017;
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4.0, 1076.0824169580017, false);
      int int0 = 1852;
      LogAxis logAxis0 = new LogAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      logAxis0.getNumberFormatOverride();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = null;
      try {
        standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'plot' argument.", (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(minMaxCategoryRenderer1.ZERO, 0.0, statisticalBarRenderer0.ZERO, 3526.2541, minMaxCategoryRenderer1.DEFAULT_VALUE_LABEL_PAINT, minMaxCategoryRenderer1.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      statisticalBarRenderer0.getURLGenerator(1515, 1515, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      boolean boolean0 = statisticalLineAndShapeRenderer0.getItemShapeVisible(1515, (-462));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedBarRenderer0.ZERO, (-3033.8588208801), 3.0, 2094.09983, stackedBarRenderer0.DEFAULT_PAINT, stroke0);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation1 = new CategoryLineAnnotation(false, 659.44606, 0.2, 0.0, stackedBarRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation1, layer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      scatterRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
      assertEquals(0.2, scatterRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Millisecond millisecond0 = new Millisecond();
      scatterRenderer1.updateCrosshairValues((CategoryCrosshairState) null, millisecond0, boxAndWhiskerRenderer0.ZERO, (-1100.627252182823), 999, (-2021.462), 3.0, plotOrientation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getBaseShapesFilled();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(4053, 4053);
      minMaxCategoryRenderer0.setDefaultEntityRadius(62);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      minMaxCategoryRenderer0.findRangeBounds(jDBCCategoryDataset0);
      minMaxCategoryRenderer0.getToolTipGenerator(1246, 4053, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setCompletePaint(waterfallBarRenderer0.DEFAULT_PAINT);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      ganttRenderer0.setSeriesItemLabelGenerator(79, (CategoryItemLabelGenerator) null, true);
      ganttRenderer0.getItemLabelGenerator(3, 79, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      assertTrue(layeredBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4.0, 1076.0824169580017, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, 1076.0824169580017, stackedBarRenderer3D0.ZERO, 1076.0824169580017, scatterRenderer0.DEFAULT_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      stackedBarRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      scatterRenderer0.getLegendItems();
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
      assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4.0, 1076.0824169580017, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, 1076.0824169580017, stackedBarRenderer3D0.ZERO, 1076.0824169580017, scatterRenderer0.DEFAULT_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      scatterRenderer0.getLegendItems();
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
      assertTrue(scatterRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = 593;
      waterfallBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 593);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getLegendItemToolTipGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      statisticalBarRenderer0.getLegendItemLabelGenerator();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Layer layer0 = Layer.FOREGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      minMaxCategoryRenderer0.getURLGenerator((-2143), 2526, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getBaseToolTipGenerator();
      stackedBarRenderer0.setSeriesToolTipGenerator(966, (CategoryToolTipGenerator) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, (-1756));
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 0.0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 593);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getLegendItemToolTipGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      statisticalBarRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.hashCode();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      assertFalse(layeredBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      ellipse2D_Float0.getBounds2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      String string0 = ";7Ou)Rp";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      CategoryDataset categoryDataset0 = null;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset(connection0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(3, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      boxAndWhiskerRenderer0.getURLGenerator(10, (-3693), true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      assertTrue(stackedAreaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(4053, 1233);
      minMaxCategoryRenderer0.setDefaultEntityRadius(62);
      minMaxCategoryRenderer0.getToolTipGenerator(62, (-4048), true);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-1475), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(250, (CategoryToolTipGenerator) null, true);
      boxAndWhiskerRenderer0.isMedianVisible();
      statisticalBarRenderer0.setShadowPaint(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      statisticalBarRenderer0.setBase(3024.93);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      statisticalBarRenderer0.getItemLabelGenerator((-605), 1, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer1.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 2, 128, 15, 2, 2, false, false, false, true, true, false, true);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      scatterRenderer0.getLegendItem(2, 1024);
      minMaxCategoryRenderer0.setDrawLines(true);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.getItemLabelGenerator(79, 79, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      levelRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertFalse(levelRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'paint' argument.", 0.2, (double) layeredBarRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      layeredBarRenderer0.clone();
      layeredBarRenderer0.getBaseURLGenerator();
      layeredBarRenderer0.setShadowVisible(false);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
      
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.equals((Object) null);
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, false);
      boxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0, tableOrder0);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      layeredBarRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ModuloAxis moduloAxis0 = new ModuloAxis("{0}", (Range) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = null;
      try {
        combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1750);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      assertEquals(0, layeredBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(2028);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.setDefaultEntityRadius(105);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setShadowXOffset(2.0);
      StackedBarRenderer3D stackedBarRenderer3D2 = new StackedBarRenderer3D();
      stackedBarRenderer3D2.getItemLabelGenerator(7, 1, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getStartPercent();
      ganttRenderer0.setIncompletePaint(minMaxCategoryRenderer0.DEFAULT_PAINT);
      assertEquals(1, ganttRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getLegendItem(8, 1558);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      jFreeChart0.createBufferedImage(2, 10, 10, (ChartRenderingInfo) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 1, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 2, 3, 0);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";7Ou)Rp");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedBarRenderer0.setShadowXOffset(8);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotShape(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, (CategoryDataset) null, (-4052), 0, false, categoryStepRenderer_State0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), 1354.5765184305326, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0.2, scatterRenderer0.ZERO, 0.2, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer1.DEFAULT_OUTLINE_PAINT, scatterRenderer1.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_PAINT, scatterRenderer0.DEFAULT_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 0.0, 3.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Base tool tip generator not cloneable.");
      LogAxis logAxis0 = new LogAxis("Base tool tip generator not cloneable.");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotShape(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, extendedCategoryAxis0, logAxis0, jDBCCategoryDataset0, 10, 481, false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint((-1));
      levelRenderer0.setDefaultEntityRadius(950);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D1.setShadowXOffset((-987.2562945));
      statisticalBarRenderer0.getItemLabelGenerator(79, 0, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getStartPercent();
      assertEquals(0.35, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1061, false);
      statisticalLineAndShapeRenderer0.clone();
      stackedAreaRenderer0.getURLGenerator(3778, 0, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getSeriesToolTipGenerator(1061);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("/1");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, ganttRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      logarithmicAxis0.setLabelToolTip("}VSq$1&vxtejz<`Ac");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator(0);
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("/1");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, logarithmicAxis0, ganttRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      logarithmicAxis0.setLabelToolTip("/1");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(768, 2.0F, true);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.2, true, highLowItemLabelGenerator0);
      Stroke stroke0 = candlestickRenderer0.getItemStroke(500, 45, false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0E-8, 0.5F, true, 0.2, categoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      assertEquals(8.0, BarRenderer3D.DEFAULT_Y_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-1);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getRangeAxis((CategoryPlot) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2302.889709947), (-717.9314187925));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItem(0, 0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      boolean boolean0 = defaultCategoryItemRenderer0.getItemShapeVisible(0, 0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean1 = boxAndWhiskerRenderer0.getFillBox();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      levelRenderer0.hasListener(stackedXYBarRenderer0);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setShadowXOffset((double) levelRenderer0.ZERO);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getSeriesItemLabelGenerator(734);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(734, (CategoryItemLabelGenerator) null, true);
      minMaxCategoryRenderer0.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setShadowPaint(stackedBarRenderer3D0.DEFAULT_WALL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart("S!K-vH08p]&D", piePlot3D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, 10, 1, 3778, 1, 1800, false, false, false, true, true, true);
      waterfallBarRenderer0.getIncludeBaseInRange();
      BasicStroke basicStroke0 = (BasicStroke)minMaxCategoryRenderer0.getGroupStroke();
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1061, false);
      statisticalLineAndShapeRenderer0.clone();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("LunJvN", "LunJvN", "rY&t}");
      boxAndWhiskerRenderer0.getURLGenerator(1061, 90, false);
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      assertTrue(stackedAreaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setShadowXOffset((double) levelRenderer0.ZERO);
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(12.0, false, boxAndWhiskerXYToolTipGenerator0);
      Stroke stroke0 = candlestickRenderer0.getItemStroke(365, 0, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", 0.0, 12.0, 0.2, candlestickRenderer0.DEFAULT_OUTLINE_PAINT, stroke0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("{0}: ({1}, {2})", 0.2, (-830.291805314), 0);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      stackedBarRenderer3D0.getRowCount();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      minMaxCategoryRenderer1.setSeriesItemLabelGenerator(71, categoryItemLabelGenerator0, true);
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.data.eyedObject2D", piePlot3D0);
      waterfallBarRenderer0.getIncludeBaseInRange();
      BasicStroke basicStroke0 = (BasicStroke)minMaxCategoryRenderer1.getGroupStroke();
      assertEquals(0, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(250, (CategoryToolTipGenerator) null, true);
      boxAndWhiskerRenderer0.isMedianVisible();
      statisticalBarRenderer0.setShadowPaint(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      statisticalBarRenderer0.setBase(3024.93);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, statisticalBarRenderer0.ZERO, 0.2, (-2199.4), 250, 0.0, 3024.93, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), 1354.5765184305326, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0.2, scatterRenderer0.ZERO, 0.2, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.setBaseShapesFilled(false);
      assertFalse(scatterRenderer1.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      boxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer1.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1061, false);
      statisticalLineAndShapeRenderer0.clone();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("LunJvN", "Null 'stroke' argument.", "LunJvN");
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      stackedAreaRenderer1.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      statisticalLineAndShapeRenderer0.setItemMargin((double) stackedAreaRenderer0.ZERO);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      minMaxCategoryRenderer1.setSeriesItemLabelGenerator(71, categoryItemLabelGenerator0, false);
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.data.KeyedObjects2D", piePlot3D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1239), (-1678), 10, (-1239), (-1700), 3778, true, true, false, false, false, false);
      waterfallBarRenderer0.getIncludeBaseInRange();
      BasicStroke basicStroke0 = (BasicStroke)minMaxCategoryRenderer1.getGroupStroke();
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setShadowXOffset((double) levelRenderer0.ZERO);
      levelRenderer0.getItemLabelGenerator(79, 2369, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(0, boxAndWhiskerRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, levelRenderer0);
      assertEquals((-5.0E-9), numberAxis3D0.getLowerBound(), 0.01);
      
      levelRenderer0.setDefaultEntityRadius((-439));
      LevelRenderer levelRenderer1 = new LevelRenderer();
      LegendItemCollection legendItemCollection1 = levelRenderer0.getLegendItems();
      assertTrue(legendItemCollection1.equals((Object)legendItemCollection0));
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("/1");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, ganttRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      logarithmicAxis0.setLabelToolTip("}VSq$1&vxtejz<`Ac");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("49StR&E3(~h(73T3N");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-1), 500);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("S)$hc0!Q}&i&%C");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, extendedCategoryAxis0, logarithmicAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      logarithmicAxis0.setLabelToolTip("49StR&E3(~h(73T3N");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Color color0 = Color.blue;
      lineRenderer3D0.getItemLabelGenerator(0, 6, false);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      scatterRenderer0.setBaseShapesFilled(true);
      assertEquals(3, scatterRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getToolTipGenerator(1515, (-27), false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("{0}", piePlot3D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 1515, 10, (-4138), 86, (-27), true, false, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = waterfallBarRenderer0.getIncludeBaseInRange();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getToolTipGenerator(1515, (-27), false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      minMaxCategoryRenderer1.getRangeAxis(combinedDomainCategoryPlot0, 1515);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 0, 10, 10, (-1), 36, (-1), false, true, true, true, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Number[][] numberArray0 = new Number[7][3];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 10;
      numberArray1[1] = categoryPlot0.ZERO;
      numberArray1[2] = (Number) 1.0F;
      numberArray1[3] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 10;
      numberArray2[1] = categoryPlot0.ZERO;
      numberArray2[2] = (Number) 10;
      numberArray2[3] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[4] = (Number) 10;
      numberArray2[5] = categoryPlot0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[7];
      numberArray3[0] = (Number) 10;
      numberArray3[1] = categoryPlot0.ZERO;
      numberArray3[2] = (Number) 10;
      numberArray3[3] = categoryPlot0.ZERO;
      numberArray3[4] = (Number) 10;
      numberArray3[5] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray3[6] = (Number) 10;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) 1.0F;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[0];
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[1];
      numberArray6[0] = (Number) 1.0F;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[5];
      numberArray7[0] = (Number) 1.0F;
      numberArray7[1] = (Number) 10;
      numberArray7[2] = (Number) 1.0F;
      numberArray7[3] = (Number) 10;
      numberArray7[4] = (Number) 1.0F;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      spiderWebPlot0.getURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesURLGenerator((-504), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getToolTipGenerator(1515, (-27), false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendItemLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      boolean boolean0 = waterfallBarRenderer0.getIncludeBaseInRange();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      stackedAreaRenderer0.findRangeBounds(defaultCategoryDataset0);
      stackedAreaRenderer0.removeAnnotations();
      assertFalse(stackedAreaRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-541);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getItemShapeVisible(0, 0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Object object0 = defaultCategoryItemRenderer0.clone();
      statisticalBarRenderer0.equals(object0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      boxAndWhiskerRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      statisticalBarRenderer0.calculateBarL0L1(1424.8641332052, 0.0, 1424.8641332052);
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0, tableOrder0);
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot();
      spiderWebPlot1.getURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null, false);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0, tableOrder0);
      spiderWebPlot0.getURLGenerator();
      statisticalBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null, true);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Day day0 = new Day();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryCrosshairState0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.updateCrosshairValues(categoryCrosshairState0, day0, day0, (-369.644946261473), 0, 0.0, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      int int0 = 1061;
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1061, false);
      statisticalLineAndShapeRenderer0.clone();
      String string0 = "LunJ\\vN";
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("LunJvN", "LunJvN", "LunJvN");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setItemMargin(2250.227961362506);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getWallPaint();
      lineRenderer3D0.getItemLabelGenerator(0, 6, true);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = 1;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(17, "j>wOzBQs`y#*h8o)Ri", 0, 6, (-1), 1, 0, 1, 0, 1, 2406, 6, 3);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("j>wOzBQs`y#*h8o)Ri", simpleTimeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, (-5300), (-2080.51), (double) 0, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (10) and height (-5300) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("/1");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, logarithmicAxis0, ganttRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      logarithmicAxis0.setLabelToolTip("/1");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getLegendItemURLGenerator();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "10";
      stringArray0[1] = "";
      stringArray0[2] = "Mnzj";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "Nh=&/xs/5sXD;sl";
      Number[][] numberArray0 = new Number[7][6];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[3];
      numberArray2[0] = (Number) 0.2;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[3];
      numberArray3[0] = (Number) 3.0;
      numberArray3[1] = (Number) 3.0;
      numberArray3[2] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[2];
      numberArray4[0] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray4[1] = (Number) 0.2;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) groupedStackedBarRenderer0.ZERO;
      Long long0 = new Long(16L);
      numberArray5[1] = (Number) long0;
      numberArray5[2] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray5[3] = (Number) 0.2;
      numberArray5[4] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray5[5] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray5[6] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[2];
      numberArray6[0] = (Number) long0;
      numberArray6[1] = (Number) 3.0;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[3];
      numberArray7[0] = (Number) long0;
      numberArray7[1] = (Number) long0;
      numberArray7[2] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), 1344.1, false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (double) stackedBarRenderer3D0.ZERO, 12.0, 1479.4, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.lookupSeriesPaint(3778);
      levelRenderer0.setDefaultEntityRadius(0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setShadowXOffset((double) levelRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset((String) null, "x", "x", "WKG}5$ST>F5^`lD");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Not implemented.");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawItem((Graphics2D) null, categoryStepRenderer_State0, rectangle0, (CategoryPlot) null, extendedCategoryAxis0, (ValueAxis) null, defaultCategoryDataset0, (-4138), 0, true, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryDataset categoryDataset0 = null;
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      statisticalLineAndShapeRenderer0.getSeriesLinesVisible(1204);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) statisticalLineAndShapeRenderer0.ZERO, 1204, true);
      stackedBarRenderer3D0.equals((Object) null);
      stackedBarRenderer3D0.getShadowYOffset();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getPassCount();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      int int0 = 0;
      stackedBarRenderer3D0.getSeriesURLGenerator(0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      Kernel kernel0 = new Kernel(0, 3, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)43;
      byteArray0[0] = (byte)43;
      byte byte1 = (byte)31;
      byteArray0[1] = (byte)31;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-345), 0, byteArray0, byteArray0, byteArray0, (byte)31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-541);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesToolTipGenerator((-541), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      int int0 = 64;
      Rectangle rectangle0 = new Rectangle(64, (-2), 1734, 10);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 64;
      floatArray0[1] = (float) 10;
      floatArray0[2] = (float) (-2);
      floatArray0[3] = (float) 10;
      floatArray0[4] = (-1360.7F);
      floatArray0[5] = (float) 1734;
      floatArray0[6] = (float) 64;
      floatArray0[7] = (float) 10;
      floatArray0[8] = 1.0F;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((String) null, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, (Plot) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)74;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)63;
      byteArray0[8] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
