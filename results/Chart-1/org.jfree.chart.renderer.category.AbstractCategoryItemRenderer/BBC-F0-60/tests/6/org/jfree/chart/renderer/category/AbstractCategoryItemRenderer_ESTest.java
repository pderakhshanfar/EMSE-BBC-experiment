/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:49:52 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Date;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.border.SoftBevelBorder;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.event.SeriesChangeEvent;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesChangeInfo;
import org.jfree.data.general.SeriesChangeType;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.xy.XYDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultKeyedValues2DDataset0, 5, 10, false, 5, 346.76289179);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\">f", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2932.7399061);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.GRAY;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, color0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      valueMarker0.setLabel("\">f");
      GeneralPath generalPath0 = new GeneralPath(lineAndShapeRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      lineAndShapeRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
      ValueMarker valueMarker1 = new ValueMarker(2932.7399061);
      Boolean boolean0 = new Boolean("\">f");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.2, (Comparable) 3.0, (Comparable) layeredBarRenderer0.ZERO);
      layeredBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      lineAndShapeRenderer0.getSeriesShapesFilled((-3696));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      groupedStackedBarRenderer0.equals(lineAndShapeRenderer0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(false);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Graphics2D graphics2D0 = null;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DateAxis dateAxis0 = new DateAxis();
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 3, 500);
      // Undeclared exception!
      try { 
        scatterRenderer1.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'hotspot' argument.");
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, layeredBarRenderer1);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      BufferedImage bufferedImage1 = defaultShadowGenerator0.createDropShadow(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage1);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "hw3wk{O=)hKn^iHZ";
      objectArray0[1] = (Object) "Null 'hotspot' argument.";
      objectArray0[2] = (Object) bufferedImage1;
      objectArray0[3] = (Object) layeredBarRenderer1;
      objectArray0[4] = (Object) defaultShadowGenerator0;
      objectArray0[5] = (Object) graphics2D0;
      objectArray0[6] = (Object) layeredBarRenderer0;
      objectArray0[7] = (Object) logarithmicAxis0;
      objectArray0[8] = (Object) categoryPlot0;
      JTree jTree0 = new JTree(objectArray0);
      jTree0.getRowBounds(95);
      // Undeclared exception!
      try { 
        layeredBarRenderer1.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("[>t", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2932.7399061);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = Color.GRAY;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("[>t");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      groupedStackedBarRenderer0.createHotSpotBounds(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, logarithmicAxis0, taskSeriesCollection0, 10, 10, true, categoryItemRendererState0, (Rectangle2D) null);
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      scatterRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Locale locale0 = new Locale("");
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      numberFormat0.clone();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", numberFormat0);
      defaultCategoryItemRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      defaultCategoryItemRenderer0.clone();
      defaultCategoryItemRenderer0.getToolTipGenerator(10, 2166, true);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.equals(lineAndShapeRenderer0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("[>t", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2932.7399061);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Color color0 = (Color)TextAnnotation.DEFAULT_PAINT;
      ValueMarker valueMarker0 = new ValueMarker((-2913.98), color0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      GeneralPath generalPath0 = new GeneralPath(lineAndShapeRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      lineAndShapeRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setIgnoreZeroValues(true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(ringPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, color0, lineAndShapeRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Object object0 = stackedAreaRenderer0.clone();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 12.0;
      numberArray1[1] = (Number) ((AbstractRenderer) object0).ZERO;
      numberArray1[2] = (Number) 12.0;
      numberArray1[3] = (Number) 12.0;
      numberArray1[4] = (Number) 8.0;
      numberArray1[5] = (Number) stackedAreaRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) 12.0;
      numberArray3[1] = (Number) stackedAreaRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[5];
      numberArray4[0] = (Number) stackedAreaRenderer0.ZERO;
      numberArray4[1] = (Number) ((AbstractRenderer) object0).ZERO;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getItemMargin();
      numberArray4[2] = (Number) 0.0;
      numberArray4[3] = (Number) lineRenderer3D0.ZERO;
      numberArray4[4] = (Number) 12.0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[5];
      numberArray5[0] = (Number) 8.0;
      numberArray5[1] = (Number) 12.0;
      numberArray5[2] = (Number) ((AbstractRenderer) object0).ZERO;
      numberArray5[3] = (Number) stackedAreaRenderer0.ZERO;
      numberArray5[4] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      lineRenderer3D0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 4, 4, true, 4, (double) stackedAreaRenderer0.ZERO);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(4, 4227);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("ItemLabelGenerator not cloneale.", dateFormat0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"-$");
      lineAndShapeRenderer0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      lineAndShapeRenderer0.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[8][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.hitTest(10, 2.0, (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultIntervalCategoryDataset0, 10, 10, false, categoryItemRendererState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedAreaRenderer0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.getRowKeys();
      defaultKeyedValues2DDataset0.addValue((double) layeredBarRenderer0.ZERO, (Comparable) layeredBarRenderer0.ZERO, (Comparable) 0.2);
      layeredBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      layeredBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (-3077.4), true);
      stackedBarRenderer3D0.setIgnoreZeroValues(false);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.0, 0.0, 0.0, 551.85081, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      // Undeclared exception!
      try { 
        scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, logarithmicAxis0, layer0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.CategoryLineAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      MockDate mockDate0 = new MockDate((-5));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, levelRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      lineRenderer3D0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 25, 34, true, 0.0, 0.05);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 25, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RingPlot ringPlot0 = new RingPlot();
      categoryAxis3D0.removeChangeListener(ringPlot0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("}[^");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      layeredBarRenderer0.hitTest(1.0E-8, 0.0F, (Graphics2D) null, rectangle2D_Double0, categoryPlot0, categoryAxis3D0, logarithmicAxis0, defaultMultiValueCategoryDataset0, 17, 10, true, categoryItemRendererState0);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, layeredBarRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0);
      layeredBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot1, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RingPlot ringPlot0 = new RingPlot();
      categoryAxis3D0.removeChangeListener(ringPlot0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("}[^");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_PAINT);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, layeredBarRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0);
      layeredBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      MockDateFormat.getTimeInstance();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      lineAndShapeRenderer0.setUseOutlinePaint(false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle0, (-1218.92), lineAndShapeRenderer0.DEFAULT_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "[X3<5{ujE";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      symbolAxis0.resizeRange(0.2);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0, false);
      waterfallBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.2, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      int[] intArray0 = new int[5];
      intArray0[0] = 500;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 10;
      intArray0[4] = 10;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createStackedValueList(defaultKeyedValues2DDataset0, 500, intArray0, (-1681.9886), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      MockDate mockDate0 = new MockDate((-5));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      PeriodAxis periodAxis0 = new PeriodAxis("-");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, lineRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle rectangle0 = new Rectangle(1, 1);
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYToolTipGenerator0, customXYURLGenerator0);
      Shape shape0 = stackedXYAreaRenderer2_0.getLegendArea();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(entityCollection0, shape0, defaultKeyedValues2DDataset0, 1, 42, true, 0.0, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("  O4H6");
      MockDate mockDate0 = new MockDate((-1396L));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      Month month0 = new Month(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("  O4H6");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, lineRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D_Double0, categoryPlot0, categoryAxis0, periodAxis0, defaultKeyedValues2DDataset0, 10, 232, false, (-1001));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, categoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultKeyedValues2DDataset0, 50, 6, true, (-177.13), (-1396L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 50, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRenderer(2958465, (CategoryItemRenderer) layeredBarRenderer0, false);
      layeredBarRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      layeredBarRenderer0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      MockDate mockDate0 = new MockDate((-5));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("}");
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection1);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getPlot();
      Instant instant0 = MockInstant.ofEpochSecond((long) 10);
      Date date0 = Date.from(instant0);
      Quarter quarter0 = new Quarter(date0, simpleTimeZone0);
      Locale locale1 = Locale.PRC;
      PeriodAxis periodAxis0 = new PeriodAxis("unspecified in c'tor", quarter0, quarter0, simpleTimeZone0, locale1);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis0, periodAxis0, defaultKeyedValues2DDataset0, 1, 3672, false, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3672, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = 2147483637;
      areaRenderer0.getToolTipGenerator((-525), (-525), true);
      // Undeclared exception!
      areaRenderer0.setSeriesToolTipGenerator(2147483637, (CategoryToolTipGenerator) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.getRowIndex(areaRenderer0.ZERO);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 54, 54);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      areaRenderer0.setSeriesItemLabelGenerator(481, categoryItemLabelGenerator0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Locale locale0 = Locale.CANADA_FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("org.jfree.chart.entity.JFreeChartEntity", numberFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      MockDate mockDate0 = new MockDate((-12));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      Month month0 = new Month(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", month0, month0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, levelRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      levelRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 500, false, 0.05, 4779, 1675.15, (-1209.6661777777), plotOrientation0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(0, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 8, 8);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, (-3673), 439);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis3D0, periodAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BufferedImage bufferedImage0 = new BufferedImage(500, 500, 2);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle2D_Double0, categoryPlot0, slidingCategoryDataset0, plotRenderingInfo0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer1.hitTest(300, (-1.0), graphics2D0, rectangle2D_Double0, categoryPlot0, categoryAxis3D0, periodAxis0, taskSeriesCollection0, 2, (-2403), false, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      MockDate mockDate0 = new MockDate((-12));
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      Month month0 = new Month(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", month0, month0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, levelRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      levelRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, (Rectangle2D) null, categoryPlot0, categoryAxis0, periodAxis0, defaultKeyedValues2DDataset0, 8, 330, true, 10);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, (-12), (-12), false, 0.2, 0.2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      DateAxis dateAxis0 = new DateAxis();
      scatterRenderer0.getUseFillPaint();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      LogAxis logAxis0 = new LogAxis("iHhW6AE]#x(fK");
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest((-447.0180923683), 0.0, (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, logAxis0, (CategoryDataset) null, (-2710), (-3938), false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Point point0 = new Point(10, 10);
      Rectangle rectangle0 = new Rectangle(point0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("org.jfree.chart.util.Rotation");
      scatterRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle0, 3.4028234663852886E38, layeredBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.util.Rotation");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis3D0, defaultKeyedValues2DDataset0, 500, (-1388), true, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("");
      combinedDomainCategoryPlot0.getRangeZeroBaselinePaint();
      scatterRenderer0.getLegendItemURLGenerator();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(",I");
      PeriodAxis periodAxis0 = new PeriodAxis("i\"Vn^D;]w&UVg)");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 500, 42);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, 42, 42);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, slidingGanttCategoryDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(0.05, (-1854.6), (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, periodAxis0, slidingCategoryDataset0, 20, 500, true, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1042, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      layeredBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = layeredBarRenderer0.getBaseItemLabelGenerator();
      lineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      lineAndShapeRenderer0.clone();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, 0, 1, 2, (double) layeredBarRenderer0.ZERO, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator(Integer.MAX_VALUE, (CategoryURLGenerator) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      layeredBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      layeredBarRenderer0.clone();
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      areaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      stackedAreaRenderer0.lookupLegendTextPaint(2132);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("YGPu");
      stackedAreaRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      areaRenderer0.equals(stackedAreaRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(false);
      assertEquals(0.2, boxAndWhiskerRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Point point0 = new Point(54, 54);
      Rectangle rectangle0 = new Rectangle(point0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryItemRendererState categoryItemRendererState1 = new CategoryItemRendererState(plotRenderingInfo0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, (CategoryAxis) null, numberAxis0, defaultMultiValueCategoryDataset0, 10, 0, true, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Point point0 = new Point(10, 532);
      Rectangle rectangle0 = new Rectangle(point0);
      scatterRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, rectangle0, 2.0, layeredBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, subCategoryAxis0, dateAxis0, defaultKeyedValues2DDataset0, 1593, 2868, false, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2868, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(2794.391216966558, (-593.5), (double) layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueMarker valueMarker0 = new ValueMarker((-593.5), combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double1);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((double[][]) null, (double[][]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0.0, (double) stackedAreaRenderer0.ZERO, 0.0, 0.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[8][4];
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, 3.0, 0.2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, dateAxis0.DEFAULT_TICK_MARK_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      scatterRenderer0.getLegendItem(8, (-2934));
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, categoryMarker0, rectangle2D_Double0);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis numberAxis0 = new NumberAxis("wq1x`f\u0006DTtsp-;");
      // Undeclared exception!
      try { 
        scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle2D0, categoryAxis0, numberAxis0, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, true, false, true);
      Rectangle rectangle0 = new Rectangle(200, 8, 420, 2778);
      rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("b1TwQ2;XE");
      PeriodAxis periodAxis0 = new PeriodAxis("Not implemented.");
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      PlotRenderingInfo plotRenderingInfo0 = null;
      scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle0, subCategoryAxis0, periodAxis0, layer1, (PlotRenderingInfo) null);
      spiderWebPlot0.getBaseSeriesPaint();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer2.drawDomainLine((Graphics2D) null, categoryPlot0, (Rectangle2D) null, (-1679.1402), stackedAreaRenderer0.DEFAULT_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, true, false, true);
      Rectangle rectangle0 = new Rectangle(200, 8, 420, 2778);
      rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      scatterRenderer0.createState(plotRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("b1TwQ2;XE");
      PeriodAxis periodAxis0 = new PeriodAxis("Not implemented.");
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle0, subCategoryAxis0, periodAxis0, layer1, (PlotRenderingInfo) null);
      spiderWebPlot0.getBaseSeriesPaint();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      stackedAreaRenderer0.getRangeAxis(categoryPlot0, 866);
      // Undeclared exception!
      try { 
        scatterRenderer2.drawDomainLine((Graphics2D) null, categoryPlot0, (Rectangle2D) null, (-1679.1402), stackedAreaRenderer0.DEFAULT_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, false, false, false);
      Rectangle rectangle0 = new Rectangle(10, 420, (-63), 8);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      PeriodAxis periodAxis0 = new PeriodAxis("f");
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer1.drawAnnotations((Graphics2D) null, rectangle2D0, subCategoryAxis0, periodAxis0, layer0, plotRenderingInfo0);
      spiderWebPlot0.getBaseSeriesPaint();
      // Undeclared exception!
      try { 
        scatterRenderer1.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0.0, (Paint) null, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("#PLB\"V)09");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("Base item URL generator not cloneable.", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2381, 2381, 1, 10, 0, 2381, true, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, 3.0, 0.2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainMarker((Graphics2D) null, combinedRangeCategoryPlot0, categoryAxis0, categoryMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("$f'r'|D6I\"");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.302585092994046);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle rectangle0 = new Rectangle();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0, 2.302585092994046);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle rectangle0 = new Rectangle();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      lineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle2D0);
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      lineAndShapeRenderer0.clone();
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ItemLabelGenerator not cloneable.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      DrawingSupplier drawingSupplier0 = stackedAreaRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = Integer.MAX_VALUE;
      areaRenderer0.getToolTipGenerator((-525), (-525), true);
      // Undeclared exception!
      try { 
        areaRenderer0.setSeriesToolTipGenerator(Integer.MAX_VALUE, (CategoryToolTipGenerator) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      rectangle2D_Double0.intersects(rectangle2D0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(4.0, (Comparable) 0.0, (Comparable) 3.0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis categoryAxis0 = null;
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
      try { 
        layeredBarRenderer0.getItemMiddle(0.2, 0.0, defaultKeyedValues2DDataset0, (CategoryAxis) null, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      SerialDate serialDate0 = SerialDate.createInstance(5);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Base item URL generator not cloneable.", serialDate0, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d;");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      boolean boolean1 = statisticalLineAndShapeRenderer0.getDrawOutlines();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      layeredBarRenderer0.setPlot(categoryPlot0);
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot1 = new CategoryPlot();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      scatterRenderer0.drawRangeLine(graphics2D0, categoryPlot1, dateAxis0, rectangle0, 0.0, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      assertEquals("({0}, {1}) = {2}", standardCategoryToolTipGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      areaRenderer0.equals(statisticalLineAndShapeRenderer0);
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("o5L4Aa1TuEQS", dateFormat0);
      areaRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("R=64$*1");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1.0F, (-1.0F), (-104.0F));
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(2);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot1, rectangle2D_Float0, 1.0F, combinedDomainCategoryPlot1.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      layeredBarRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      defaultCategoryItemRenderer0.clone();
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("XlL]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(".6W}N", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(9, 9, 9);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawItemLabel(graphics2D0, plotOrientation0, (CategoryDataset) null, 4, 4, false, 22.758, 4, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double1.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("|?kee/O` G7");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      double[][] doubleArray0 = new double[2][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMaximumBarWidth((-163.20044280618));
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      areaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      areaRenderer0.equals(stackedAreaRenderer0);
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = areaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(0.05, valueAxis0.getUpperMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("Xt?~c1O^;FG6");
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      areaRenderer0.equals(stackedAreaRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double1.getBounds2D();
      String string0 = "|?kee/O` G7";
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("|?kee/O` G7");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      CategoryDataset categoryDataset0 = null;
      boolean boolean0 = true;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2485.9808), 1.0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      defaultCategoryItemRenderer0.clone();
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("XlL]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(".6W}N", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(9, 9, 9);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getOrientation();
      double[][] doubleArray0 = new double[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point point0 = new Point(15, 10);
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      areaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      areaRenderer0.equals(stackedAreaRenderer0);
      DrawingSupplier drawingSupplier0 = areaRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) areaRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      areaRenderer0.equals(stackedAreaRenderer0);
      DrawingSupplier drawingSupplier0 = areaRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      LineAndShapeRenderer lineAndShapeRenderer1 = (LineAndShapeRenderer)lineAndShapeRenderer0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("CategoryLabelWidthType.RANGE");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer1.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultMultiValueCategoryDataset0, 10, Integer.MAX_VALUE, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2984.7578419));
      candlestickRenderer0.getSeriesVisibleInLegend(2);
      defaultCategoryItemRenderer0.setSeriesLinesVisible(2, (Boolean) null);
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      defaultCategoryItemRenderer0.clone();
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis(".6W}N", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("XlL]", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(439, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.getOrientation();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, (-2181), 10, false, 0.0, (-904.57792364759), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      defaultCategoryItemRenderer0.clone();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "({0}, {1}) = {3} - {4}";
      SymbolAxis symbolAxis0 = new SymbolAxis("XlL]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(".6W}N", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(9, 9, 9);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getOrientation();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 5, 10, true, 5, 1.0F, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Paint paint0 = stackedAreaRenderer0.lookupSeriesPaint((-81));
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (-81), stackedAreaRenderer0.ZERO, (-81), paint0, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryLineAnnotation0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      boolean boolean1 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      defaultCategoryItemRenderer0.clone();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "({0}, {1}) = {3} - {4}";
      SymbolAxis symbolAxis0 = new SymbolAxis("XlL]", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(".6W}N", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(9, 439);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 5, 10, false, (-591.52870833981), (-904.57792364759), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = layeredBarRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("ItemLabelGenerator not cloneale.", dateFormat0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boolean boolean0 = false;
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      boolean boolean1 = false;
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      lineAndShapeRenderer0.clone();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "ItemLabelGenerator not cloneale.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MockDateFormat.getInstance();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      lineAndShapeRenderer0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      levelRenderer0.setDefaultEntityRadius(1998);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double double0 = stackedBarRenderer3D0.getXOffset();
      assertEquals(12.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.2, (Comparable) 0.2, (Comparable) layeredBarRenderer0.ZERO);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Range range0 = areaRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(0.2, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 0.2;
      numberArray1[1] = (Number) 1;
      numberArray1[2] = (Number) 1.0F;
      Short short0 = new Short((short) (-1253));
      numberArray1[3] = (Number) short0;
      numberArray1[4] = (Number) 2.0F;
      numberArray1[5] = (Number) 1.0F;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 0;
      numberArray2[1] = (Number) 1.0F;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      numberArray2[2] = (Number) integer0;
      numberArray2[3] = (Number) 10;
      numberArray2[4] = (Number) 10;
      Long long0 = new Long(10);
      numberArray2[5] = (Number) long0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[5];
      numberArray3[0] = (Number) 2;
      numberArray3[1] = (Number) integer0;
      numberArray3[2] = (Number) 1.0F;
      BigInteger bigInteger0 = BigInteger.TEN;
      numberArray3[3] = (Number) bigInteger0;
      numberArray3[4] = (Number) 3;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) 10;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[6];
      numberArray5[0] = (Number) 0;
      numberArray5[1] = (Number) 0;
      numberArray5[2] = (Number) 0.0F;
      numberArray5[3] = (Number) short0;
      numberArray5[4] = (Number) 3;
      numberArray5[5] = (Number) 3;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = new Rectangle((-1), 680, (-1), 10);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)1541;
      shortArray0[2] = (short) (-3519);
      shortArray0[3] = (short) (-834);
      shortArray0[4] = (short)1541;
      shortArray0[5] = (short)1;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(10, shortArray0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ShortLookupTable shortLookupTable1 = new ShortLookupTable(10, shortArray0);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable1, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 300);
      ColorModel colorModel0 = chartPanel0.getColorModel();
      BufferedImage bufferedImage1 = lookupOp0.createCompatibleDestImage(bufferedImage0, colorModel0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      stackedAreaRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle2D_Double0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      assertEquals("({0}, {1}) = {2}", standardCategoryToolTipGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("%fv.hB0BX1]`B", dateFormat0);
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      lineAndShapeRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      int int0 = 3;
      int int1 = 4214;
      int int2 = 674;
      int int3 = 2202;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(3, 4214, (int[]) null, 4214, true, 3, 2202);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.2, (Comparable) 0.2, (Comparable) layeredBarRenderer0.ZERO);
      layeredBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      Range range0 = layeredBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(0.2, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.0, (Comparable) 0.2, (Comparable) true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double double0 = stackedBarRenderer3D0.getXOffset();
      assertEquals(12.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((-1552.6605668), (Comparable) layeredBarRenderer0.ZERO, (Comparable) layeredBarRenderer0.ZERO);
      layeredBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unrecognised 'edge' argument.");
      stackedBarRenderer3D0.getXOffset();
      layeredBarRenderer0.setShadowYOffset(12.0);
      assertTrue(layeredBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseOutlinePaint(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(0, valueAxis0.getMinorTickCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      layeredBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      Object object0 = layeredBarRenderer0.clone();
      assertTrue(object0.equals((Object)layeredBarRenderer0));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ryKvm99B-YUC::#%oQj");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      JFreeChart jFreeChart0 = new JFreeChart("ryKvm99B-YUC::#%oQj", combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 9, 10);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage1);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-83), 10, 0.5F, (-589.5F));
      layeredBarRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      assertEquals((-83.0), rectangle2D_Float0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer0.equals(levelRenderer1);
      String string0 = "UFsR4:SR9e8e<=<W*Js";
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        levelRenderer1.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      JTable jTable0 = new JTable(1934, 1934);
      Color color0 = jTable0.getSelectionForeground();
      stackedAreaRenderer0.setBaseLegendTextPaint(color0);
      stackedAreaRenderer0.getLegendTextPaint((-83));
      Paint paint0 = stackedAreaRenderer0.lookupSeriesPaint((-83));
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (-72), stackedAreaRenderer0.ZERO, (-83), paint0, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.clone();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity((EntityCollection) null, stackedAreaRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, (-83), (-72), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, true, (-2443.0), 2, 1, 1.0F, plotOrientation0);
      CategoryPlot categoryPlot0 = levelRenderer0.getPlot();
      assertTrue(categoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Graphics2D graphics2D0 = null;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("}YRG");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      Rectangle2D rectangle2D0 = null;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(3.0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 10, 3);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot1, slidingCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Number[][] numberArray0 = new Number[3][2];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) 3.0;
      numberArray1[1] = (Number) 0.2;
      numberArray1[2] = (Number) layeredBarRenderer0.ZERO;
      numberArray1[3] = (Number) areaRenderer0.ZERO;
      numberArray1[4] = (Number) areaRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[3];
      numberArray2[0] = (Number) areaRenderer0.ZERO;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) areaRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[4];
      numberArray3[0] = (Number) 3.0;
      numberArray3[1] = (Number) 0.2;
      numberArray3[2] = (Number) areaRenderer0.ZERO;
      Long long0 = new Long(2112L);
      numberArray3[3] = (Number) long0;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        areaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getSeriesItemLabelGenerator(70);
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4805, (CategoryItemLabelGenerator) null, false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      intervalCategoryItemLabelGenerator0.clone();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4805, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = (LayeredBarRenderer)layeredBarRenderer0.clone();
      assertFalse(layeredBarRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4805, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 4805, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = null;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ib jBKxye");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      levelRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, true, (-1025.1496253877258), 2, 1, 2.0, plotOrientation0);
      assertEquals(0.2, LevelRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(34, 34, 34, 2285.44F);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(entityCollection0, levelRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 5, 34, false, 303.512230758, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#");
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 10, 0);
      defaultCategoryItemRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, 10, 10, false, 1.0F, 10, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.findRangeBounds(taskSeriesCollection0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.setItemMargin(0.0);
      Size2D size2D0 = new Size2D(1.0F, 32.449444027);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 5.0E9, rectangleAnchor0);
      Rectangle2D rectangle2D1 = combinedDomainXYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0, false, false);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("#");
      ModuloAxis moduloAxis0 = new ModuloAxis("Base item URL generator not cloneable.", (Range) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D1, (CategoryPlot) null, extendedCategoryAxis0, moduloAxis0, slidingCategoryDataset0, 10, 2447, false, categoryStepRenderer_State0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("org.jfree.chart.axis.CategoryAxis");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Paint paint0 = combinedDomainXYPlot0.getRangeCrosshairPaint();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (double) stackedAreaRenderer0.ZERO, 3.0, 0.0, paint0, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo1.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("}", decimalFormat0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(chartRenderingInfo1, true);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, false, true, false);
      Rectangle rectangle0 = new Rectangle(1579, 420, 1579, 1579);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis("PRINT");
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, dateAxis0, rectangle2D0, 0.0, (Paint) null, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = 4805;
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesURLGenerator((-2101), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, taskSeriesCollection0, (-1), 5, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("+=h)V5#_wY", defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("", 0.0, (double) defaultCategoryItemRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation1);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Point2D.Float point2D_Float0 = new Point2D.Float(2.0F, 2572.463F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      IntervalMarker intervalMarker0 = new IntervalMarker(2572.463F, 0.0F);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setLastBarPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      lineRenderer3D0.setItemMargin((double) defaultCategoryItemRenderer0.ZERO);
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      Font.getFont("kQ5");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("QUjVx37!-'");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(timePeriodValuesCollection0, logarithmicAxis0, defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("kQ5", (Font) null, polarPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D1 = chartRenderingInfo0.getChartArea();
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZOOM_RESET_RANGE");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 10);
      intervalMarker0.getLabelAnchor();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 1.0, (double) levelRenderer0.ZERO, 154.15524377477);
      // Undeclared exception!
      try { 
        lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D1, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType1, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      RectangleInsets rectangleInsets1 = RectangleInsets.ZERO_INSETS;
      RectangleInsets rectangleInsets2 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Hashtable<StackedBarRenderer3D, BoxAndWhiskerRenderer> hashtable0 = new Hashtable<StackedBarRenderer3D, BoxAndWhiskerRenderer>();
      JTree jTree0 = new JTree(hashtable0);
      jTree0.getRowBounds(1396);
      RectangleInsets rectangleInsets3 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets3, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      RectangleInsets rectangleInsets1 = RectangleInsets.ZERO_INSETS;
      RectangleInsets rectangleInsets2 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.CONTRACT;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis("n;-S");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets1, lengthAdjustmentType1, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, 2.0F);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-877.6));
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      assertFalse(stackedAreaRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      levelRenderer1.setDefaultEntityRadius((-1241));
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem((-419), 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(1.0F, 2.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ItemLabelAnchor.INSIDE8");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-877.6));
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, categoryTextAnnotation0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      waterfallBarRenderer0.setLastBarPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setItemMargin(1000000.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(61, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      LevelRenderer levelRenderer1 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, jDBCCategoryDataset0, 61, 61, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      Number[][] numberArray0 = new Number[0][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(entityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 523, 1712, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, taskSeriesCollection0, 0, 5, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      levelRenderer0.setDefaultEntityRadius((-419));
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(40, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, (-2104.585F));
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Double0, rectangleAnchor0);
      SystemColor systemColor0 = SystemColor.controlDkShadow;
      GradientPaint gradientPaint0 = new GradientPaint(point2D0, systemColor0, point2D0, systemColor0, false);
      GradientPaint gradientPaint1 = standardGradientPaintTransformer0.transform(gradientPaint0, stackedBarRenderer3D0.DEFAULT_SHAPE);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(8.0, 0.8, 2000.0, 0.0, (double) statisticalLineAndShapeRenderer0.ZERO, 0.0);
      standardGradientPaintTransformer0.transform(gradientPaint1, roundRectangle2D_Double0);
      stackedBarRenderer3D0.setGradientPaintTransformer(standardGradientPaintTransformer0);
      stackedBarRenderer3D0.getNegativeItemLabelPositionFallback();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      DecimalFormat decimalFormat0 = new DecimalFormat("ItemLabelGenerator not cloneable.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("XB9>Klos1a~", decimalFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedAreaRenderer0.getLegendItem(2, 2);
      int int0 = stackedAreaRenderer0.getRowCount();
      assertEquals(0, int0);
      
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalLineAndShapeRenderer0.setItemMargin(0.2);
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseLegendTextPaint(statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      statisticalLineAndShapeRenderer0.getSeriesURLGenerator((-956));
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      statisticalLineAndShapeRenderer0.getItemShapeVisible((-2151), (-920));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame("{KY_o", true, true, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(3.0, 0.2, defaultMultiValueCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.setSeriesItemLabelGenerator(127, (CategoryItemLabelGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint((-102));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 531, 531);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = false;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 34;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      defaultCategoryDataset0.addChangeListener(multiplePiePlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":<!6{pnKSfF&");
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(true);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-102), (-102), false, 1049.6635402, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Null 'orientation' argument.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4805, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getItemLabelGenerator(4805, 1939, true);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      RectangleInsets rectangleInsets1 = RectangleInsets.ZERO_INSETS;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Viktor Rajewski");
      IntervalMarker intervalMarker0 = new IntervalMarker((double) stackedAreaRenderer0.ZERO, (double) levelRenderer0.ZERO, stackedAreaRenderer0.DEFAULT_PAINT);
      RectangleAnchor rectangleAnchor1 = intervalMarker0.getLabelAnchor();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LengthAdjustmentType lengthAdjustmentType1 = intervalMarker0.getLabelOffsetType();
      // Undeclared exception!
      try { 
        lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets1, lengthAdjustmentType1, rectangleAnchor1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 1477, 120, true, 0.0, 572.197326498);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1477, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Null 'orientation' argument.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.getSeriesItemLabelGenerator(4805);
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4805, (CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      stackedAreaRenderer1.setAutoPopulateSeriesShape(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Null 'orientation' argument.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      stackedAreaRenderer0.setBaseLegendTextPaint(lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.setItemLabelAnchorOffset((double) stackedAreaRenderer0.ZERO);
      lineRenderer3D1.getWallPaint();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo1.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultCategoryDataset0, 34, 34, true, 0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(255.0, 255.0, false);
      double double0 = (-2028.874);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(8.0, (-2028.874), (-2028.874), (-480.0), 255.0, 3.0);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      stackedBarRenderer3D0.setLegendShape(90, rectangle2D0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ed");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Ed";
      stringArray0[1] = "Ed";
      stringArray0[2] = "";
      stringArray0[3] = "Ed";
      stringArray0[4] = "Ed";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, symbolAxis0, intervalBarRenderer0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      JFreeChart jFreeChart0 = new JFreeChart("Ed", symbolAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(categoryPlot0, (PlotOrientation) null, rectangle2D0, categoryAxis3D0, categoryItemRendererState0, (-466), 300);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 300
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      minMaxCategoryRenderer0.getColumnCount();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Graphics2D graphics2D0 = null;
      Font font0 = groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT.deriveFont(0.0F);
      String string0 = "";
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0, (double) 0, (double) 0.0F);
      boolean boolean0 = true;
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      font0.getStringBounds("", fontRenderContext0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      String string1 = "Null 'generator' argument.";
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "Null 'generator' argument.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      IntervalMarker intervalMarker0 = new IntervalMarker((-795.0742456365335), 680);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.setMaximumBarWidth((double) layeredBarRenderer0.ZERO);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      MockDateFormat.getTimeInstance();
      Float float0 = new Float(3.0);
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) layeredBarRenderer0.ZERO;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = new Rectangle(9, 750, (-733), (-733));
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createIntersection(rectangle0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, rectangle2D_Double1, defaultIntervalCategoryDataset0, 2021, 750, true, 3.0, (-887.1601732));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getItemLabelGenerator(34, 34, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, false, 1.0F, 2.0, 10, 2457, 0.0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getLegendItem(3, 3);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      Color color0 = Color.cyan;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(2, color0, color0, color0, color0);
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      JButton jButton0 = new JButton(defaultEditorKit_InsertBreakAction0);
      softBevelBorder0.getInteriorRectangle((Component) jButton0, (-8), 1, 7, 0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      stackedBarRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 0, 4, 1520.2205429, 0, 0.0, 0.0, plotOrientation0);
      stackedBarRenderer3D0.getWallPaint();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) taskSeriesCollection0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 160);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-2888.861F), 1.0F, (-1.0F), 340.6F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0, 1119.6448779328502, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, piePlot3D0.DEFAULT_LABEL_OUTLINE_STROKE);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("B_ KG21+TNe1Gq$S,j", "B_ KG21+TNe1Gq$S,j", (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryCrosshairState categoryCrosshairState1 = new CategoryCrosshairState();
      XYDataItem xYDataItem0 = new XYDataItem(0.0, 8.0);
      Color color0 = (Color)stackedBarRenderer3D0.getWallPaint();
      assertEquals(221, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      boolean boolean0 = true;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("pXd]$rY=", 3.0, 0.2, (double) layeredBarRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      layeredBarRenderer0.setDrawBarOutline(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-1);
      int int1 = 0;
      layeredBarRenderer0.getLegendTextPaint(0);
      layeredBarRenderer0.getSeriesURLGenerator((-1));
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = false;
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-1), (-1), false, 2398.14839356277, 2398.14839356277);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("B_ KG21+TNe1Gq$S,j", "B_ KG21+TNe1Gq$S,j", (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1116.70045328018), (double) stackedAreaRenderer0.ZERO);
      stackedBarRenderer3D0.clone();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Dimension dimension0 = defaultTreeCellRenderer0.getPreferredSize();
      Rectangle rectangle0 = new Rectangle(dimension0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("B_ KG21+TNe1Gq$S,j");
      LogAxis logAxis0 = new LogAxis("B_ KG21+TNe1Gq$S,j");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      taskSeriesCollection0.removeAll();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, (-770));
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle0, (CategoryPlot) null, categoryAxis0, logAxis0, slidingGanttCategoryDataset0, 0, (-770), true, 2972);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      String string0 = "LuH~N:;}]mCu;*";
      ChoiceFormat choiceFormat0 = new ChoiceFormat("LuH~N:;}]mCu;*");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("LuH~N:;}]mCu;*", choiceFormat0, choiceFormat0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesItemLabelGenerator((-102), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo1.getPlotInfo();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, false, false, false);
      Rectangle rectangle0 = new Rectangle(10, 420, (-63), 8);
      rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getBaseSeriesPaint();
      // Undeclared exception!
      try { 
        scatterRenderer1.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0.0, (Paint) null, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getLegendItem(3, 3);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Color color0 = Color.cyan;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(2, color0, color0, color0, color0);
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      JButton jButton0 = new JButton(defaultEditorKit_InsertBreakAction0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jButton0, (-8), 1, 7, 0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getWallPaint();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Z=??tm");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, numberAxis3D0, layeredBarRenderer0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawOutline((Graphics2D) null, categoryPlot0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ZOOM_OUT_BOTH");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      stackedAreaRenderer0.getPlot();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawOutline((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      chartRenderingInfo1.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      rectangle2D_Double0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Invalid day-of-the-week code.", "Invalid day-of-the-week code.", "");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Color color0 = Color.cyan;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(5, color0, color0, color0, color0);
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      JButton jButton0 = new JButton(defaultEditorKit_InsertBreakAction0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jButton0, 7, (-983), 1, 10);
      rectangle0.y = 86;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D_Double0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getWallPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setIgnoreZeroValues(false);
      assertEquals(1, stackedBarRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getBaseShapesFilled();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryDataset categoryDataset0 = null;
      ganttRenderer0.findRangeBounds((CategoryDataset) null);
      ganttRenderer0.equals(defaultCategoryItemRenderer0);
      int int0 = (-1918);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-1918), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("LuH~N:;}]mCu;*");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("LuH~N:;}]mCu;*", choiceFormat0, choiceFormat0);
      stackedAreaRenderer0.setSeriesItemLabelGenerator(4833, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint((-102));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo1.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("}", numberFormat0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(chartRenderingInfo1, true);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, false, true, false);
      Rectangle rectangle0 = new Rectangle(1579, 420, 1579, 1579);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis(")");
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, dateAxis0, rectangle2D0, 0.0, dateAxis0.DEFAULT_TICK_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getBaseShapesFilled();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryDataset categoryDataset0 = null;
      ganttRenderer0.findRangeBounds((CategoryDataset) null);
      ganttRenderer0.equals(defaultCategoryItemRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-1918), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMaximumBarWidth((-3870.92));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 91;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 8, 91);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingGanttCategoryDataset0);
      Font font0 = spiderWebPlot0.getLabelFont();
      boxAndWhiskerRenderer0.setBaseLegendTextFont(font0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(boxAndWhiskerRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO, boxAndWhiskerRenderer0.ZERO, (-190.59105), boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      categoryLineAnnotation0.hasListener(spiderWebPlot0);
      boxAndWhiskerRenderer0.removeAnnotation(categoryLineAnnotation0);
      boxAndWhiskerRenderer0.getDrawingSupplier();
      boxAndWhiskerRenderer0.getFillBox();
      boxAndWhiskerRenderer0.getPassCount();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Object object0 = levelRenderer0.clone();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(object0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer0.ZERO, layeredBarRenderer0.ZERO, 732.739334632, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2, 5, 192, 979, 117, 1054, true, true, true, true, false, false, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, "SAVE", true, (-2419.3908), 10, (-1.0), 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 1;
      defaultPolarItemRenderer0.getSeriesFillPaint(1);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint((Paint) null);
      layeredBarRenderer0.getLegendItems();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(294.0985292, (double) layeredBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      double double0 = 3837.6732960392;
      double double1 = 14.0;
      double double2 = 0.0;
      RendererChangeEvent rendererChangeEvent0 = null;
      try {
        rendererChangeEvent0 = new RendererChangeEvent((Object) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String string0 = "*";
      layeredBarRenderer0.getLegendItem(3, 3);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      boolean boolean0 = true;
      JFreeChart jFreeChart0 = new JFreeChart("njoSsb7R1O&-@&`WC", layeredBarRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer1.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      double[][] doubleArray0 = new double[6][9];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 3.0;
      doubleArray2[1] = 0.2;
      doubleArray2[2] = 0.05;
      doubleArray2[3] = (double) 2.0F;
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = (double) 1.0F;
      doubleArray2[6] = (double) 1.0F;
      doubleArray2[7] = (double) 0.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = 0.2;
      doubleArray3[1] = 3.0;
      doubleArray3[2] = 3.0;
      doubleArray3[3] = 0.2;
      doubleArray3[4] = (double) 1.0F;
      doubleArray3[5] = (double) 1.0F;
      doubleArray3[6] = (double) 10;
      doubleArray3[7] = (double) 1.0F;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 10;
      doubleArray4[1] = 0.05;
      doubleArray4[2] = (double) 1.0F;
      doubleArray4[3] = 0.2;
      doubleArray4[4] = 0.05;
      doubleArray4[5] = (double) 1.0F;
      doubleArray4[6] = (double) 0.0F;
      doubleArray4[7] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (double) 1.0F;
      doubleArray5[1] = (double) layeredBarRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 1.0F;
      doubleArray6[1] = 2.0;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double1, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getLegendItem(3, 3);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Color color0 = Color.cyan;
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(2, color0, color0, color0, color0);
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      JButton jButton0 = new JButton(defaultEditorKit_InsertBreakAction0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jButton0, (-8), 1, 7, 0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, (-6));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      assertEquals(1, scatterRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Base item URL generator not cloneable.", "#9k):e';", "Base item URL generator not cloneable.");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.getPlotArea();
      layeredBarRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, (Rectangle2D) null, 10, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      layeredBarRenderer1.setIncludeBaseInRange(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1281.0), 0.0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertTrue(stackedBarRenderer3D1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("*");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = layeredBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, valueAxis0, layeredBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer2 = new LayeredBarRenderer();
      layeredBarRenderer2.setIncludeBaseInRange(false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("*", 3.0, 0.025);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      assertEquals(1.0, levelRenderer0.getMaximumItemWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      waterfallBarRenderer0.getLegendItemToolTipGenerator();
      scatterRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      Object object0 = new Object();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.getItemMargin();
      stackedBarRenderer3D0.setShadowYOffset(0.0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator(";>q1jY!", numberFormat0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultCategoryItemRenderer0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, true, true, true, false);
      Rectangle rectangle0 = new Rectangle((-1), 10, 500, 420);
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null);
      Rectangle2D rectangle2D0 = chartPanel1.scale(rectangle0);
      // Undeclared exception!
      try { 
        scatterRenderer1.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 420, waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      layeredBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LegendItem legendItem0 = new LegendItem("*", "*", "*", "*", layeredBarRenderer0.DEFAULT_SHAPE, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE, layeredBarRenderer0.DEFAULT_PAINT);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.getPlotArea();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, (Rectangle2D) null, (double) layeredBarRenderer1.ZERO, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, levelRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = false;
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint((-102));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        barRenderer3D0.getDomainAxis((CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      scatterRenderer0.getLegendItemToolTipGenerator();
      scatterRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D0.clone();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.getItemMargin();
      stackedBarRenderer3D0.setShadowYOffset(2.5E-8);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(defaultCategoryItemRenderer1, true);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, false, false, false);
      Rectangle rectangle0 = new Rectangle(200, 10, 680, (-2583));
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle0);
      // Undeclared exception!
      try { 
        scatterRenderer1.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 1.0F, scatterRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint(680);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      ValueMarker valueMarker0 = new ValueMarker((double) scatterRenderer0.ZERO, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.createState((PlotRenderingInfo) null);
      waterfallBarRenderer0.setMaximumBarWidth(1326.490988);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      waterfallBarRenderer0.getURLGenerator(500, 5, false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      layeredBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      layeredBarRenderer1.clone();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Color color0 = (Color)lineRenderer3D0.getWallPaint();
      assertEquals(221, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.setMaximumBarWidth(0.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      boolean boolean0 = levelRenderer0.equals(levelRenderer1);
      assertTrue(boolean0);
      
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer1.getRangeAxis(categoryPlot0, 0);
      assertTrue(levelRenderer1.equals((Object)levelRenderer0));
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      Paint paint0 = stackedAreaRenderer0.lookupSeriesPaint((-102));
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Number[][] numberArray0 = new Number[1][7];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) layeredBarRenderer0.ZERO;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) stackedAreaRenderer0.ZERO;
      numberArray1[3] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(paint0);
      SeriesChangeType seriesChangeType0 = SeriesChangeType.UPDATE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, (-1916), (-1916));
      seriesChangeEvent0.setSummary(seriesChangeInfo0);
      defaultIntervalCategoryDataset0.seriesChanged(seriesChangeEvent0);
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(3.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      Layer layer0 = Layer.BACKGROUND;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      ValueMarker valueMarker0 = new ValueMarker((double) scatterRenderer0.ZERO, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.createState((PlotRenderingInfo) null);
      waterfallBarRenderer0.setMaximumBarWidth(1326.490988);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      levelRenderer0.equals(layeredBarRenderer1);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      waterfallBarRenderer0.getURLGenerator(500, 5, false);
      levelRenderer1.setSeriesURLGenerator(5, (CategoryURLGenerator) null, true);
      assertTrue(levelRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator((-1));
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      stackedBarRenderer3D0.getRenderAsPercentages();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth(3.0);
      assertEquals(3.0, levelRenderer0.getMaximumItemWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String string0 = "*";
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("*", "*", "*");
      layeredBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      try { 
        layeredBarRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.setMaximumBarWidth(0.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      MockDateFormat.getTimeInstance();
      Number[][] numberArray0 = new Number[2][2];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 0.2;
      Float float0 = new Float(3.0);
      numberArray2[2] = (Number) float0;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 3.0;
      numberArray2[5] = (Number) minMaxCategoryRenderer0.ZERO;
      String string0 = "JG,~rkA)B2xd|'I_S";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("JG,~rkA)B2xd|'I_S");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      layeredBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        NumberFormat.getInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-1697.18), layeredBarRenderer0.ZERO, 732.739334632, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setMaximumBarWidth(2.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      MockDateFormat.getTimeInstance();
      Float float0 = new Float(0.2);
      Number[][] numberArray0 = new Number[1][3];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) waterfallBarRenderer0.ZERO;
      numberArray1[1] = (Number) 0.2;
      numberArray1[2] = (Number) 3.0;
      numberArray1[3] = (Number) 0.2;
      layeredBarRenderer1.getBaseURLGenerator();
      layeredBarRenderer0.setSeriesURLGenerator(866, (CategoryURLGenerator) null);
      numberArray1[4] = (Number) waterfallBarRenderer0.ZERO;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      numberArray1[5] = (Number) 3.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(1.5, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      waterfallBarRenderer0.getBaseItemLabelGenerator();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      categoryStepRenderer0.setAutoPopulateSeriesShape(true);
      categoryStepRenderer0.getToolTipGenerator(65535, 4, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(stackedBarRenderer3D0);
      rendererChangeEvent0.getChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint(10);
      stackedAreaRenderer0.setRenderAsPercentages(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("B_ KG21+TNe1Gq$S,j", "B_ KG21+TNe1Gq$S,j", 90.0);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertTrue(levelRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Series Title", dateFormat0);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("Series Title", dateFormat0);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 1, 2214);
      // Undeclared exception!
      try { 
        intervalCategoryToolTipGenerator0.generateToolTip(slidingGanttCategoryDataset0, 0, 2214);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      waterfallBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getRangeAxis((CategoryPlot) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals(standardGradientPaintTransformer0);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer1.setPositiveBarPaint(minMaxCategoryRenderer0.DEFAULT_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("d[[XJ23VSN:", combinedDomainCategoryPlot0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      JTree jTree0 = new JTree();
      TreePath treePath0 = jTree0.getClosestPathForLocation(10, 10);
      jTree0.getPathBounds(treePath0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      // Undeclared exception!
      try { 
        waterfallBarRenderer1.getDomainAxis(combinedDomainCategoryPlot0, defaultCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-1697.18), layeredBarRenderer0.ZERO, 732.739334632, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LayeredBarRenderer layeredBarRenderer2 = new LayeredBarRenderer();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("9!L0o^`u", dateFormat0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      lineAndShapeRenderer0.getPassCount();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      int int0 = 0;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(jDBCCategoryDataset0, 0, 0);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, slidingCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      scatterRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      scatterRenderer0.equals(stackedBarRenderer3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      standardCategorySeriesLabelGenerator0.clone();
      stackedBarRenderer3D0.clone();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("{0}", "{0}", ";", "{0}");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-1697.18), layeredBarRenderer0.ZERO, 732.739334632, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = true;
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = null;
      try {
        standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator((String) null, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'labelFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      spiderWebPlot0.setInsets(rectangleInsets0, true);
      spiderWebPlot0.getURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'stroke' argument.", 0.4, (-870.8978771550716));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      boolean boolean1 = minMaxCategoryRenderer1.equals(minMaxCategoryRenderer2);
      assertFalse(boolean1 == boolean0);
      
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      levelRenderer0.setItemMargin((-2674.26118546));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(scatterRenderer0.DEFAULT_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.setStagger(true);
      minMaxCategoryRenderer2.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertTrue(minMaxCategoryRenderer2.equals((Object)minMaxCategoryRenderer0));
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      boxAndWhiskerRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 7, 131, true, 7, 7, false);
      boxAndWhiskerRenderer0.setMedianVisible(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, (-2370), 10, 8, 10, 4, true, true, false, false, false, true);
      chartPanel0.getZoomRectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis("COPY");
      Quarter quarter0 = new Quarter();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(10, 4);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = new Locale("");
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.", quarter0, quarter0, timeZone0, locale0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis0, periodAxis0, defaultMultiValueCategoryDataset0, 54, 54, true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 54, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      Rectangle rectangle0 = new Rectangle();
      layeredBarRenderer0.setLegendShape(79, rectangle0);
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      layeredBarRenderer0.getPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.setMaximumBarWidth(0.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.equals(plotRenderingInfo0);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setSeriesURLGenerator(4, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      minMaxCategoryRenderer0.equals(customCategoryURLGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap(minMaxCategoryRenderer0.ZERO);
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
      assertFalse(groupedStackedBarRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      spiderWebPlot0.setInsets(rectangleInsets0, true);
      spiderWebPlot0.getURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'stroke' argument.", 0.4, (-870.8978771550716));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.equals(minMaxCategoryRenderer2);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_PAINT, spiderWebPlot0.DEFAULT_OUTLINE_PAINT, spiderWebPlot0.DEFAULT_LABEL_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      levelRenderer0.setItemMargin((-2674.26118546));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setArtifactPaint(scatterRenderer0.DEFAULT_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.setStagger(true);
      assertEquals(0, categoryStepRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      spiderWebPlot0.setInsets(rectangleInsets0, true);
      spiderWebPlot0.getURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      minMaxCategoryRenderer0.removeAnnotations();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      scatterRenderer0.getLegendItemToolTipGenerator();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2.0, (-1.0));
      scatterRenderer0.getBaseShapesFilled();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setSeriesURLGenerator(4, (CategoryURLGenerator) null, true);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      waterfallBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.setMaximumBarWidth(0.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.equals(plotRenderingInfo0);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setSeriesURLGenerator(4, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      assertTrue(levelRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getToolTipGenerator(0, 213, false);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, false);
      layeredBarRenderer0.getSeriesBarWidth(3);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("QOf9:K+kR2pey|@", statisticalLineAndShapeRenderer0.ZERO, 1.3267148633724317, 0.2);
      categoryPointerAnnotation0.setArrowStroke(levelRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      // Undeclared exception!
      try { 
        levelRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      int int0 = (-102);
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint((-102));
      stackedAreaRenderer0.setRenderAsPercentages(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      minMaxCategoryRenderer0.equals(standardGradientPaintTransformer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("ItemLabelGenerator not cloneable.", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2000, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      boolean boolean0 = true;
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesToolTipGenerator((-206), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      defaultCategoryItemRenderer0.getLegendTextPaint(680);
      defaultCategoryItemRenderer0.getLegendShape(680);
      defaultCategoryItemRenderer0.getItemShapeFilled(680, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 0.0, false);
      BarPainter barPainter0 = stackedBarRenderer3D0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, (double) stackedBarRenderer3D0.ZERO, stackedAreaRenderer0.ZERO, 0.0, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      stackedAreaRenderer0.equals(barPainter0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      defaultCategoryItemRenderer0.getBaseShapesFilled();
      SymbolAxis symbolAxis0 = null;
      try {
        symbolAxis0 = new SymbolAxis("1=H[C}C}u]wi*s4", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double double0 = scatterRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      spiderWebPlot0.setInsets(rectangleInsets0, true);
      spiderWebPlot0.getURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      minMaxCategoryRenderer0.removeAnnotations();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator(1);
      scatterRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) null);
      scatterRenderer0.setUseSeriesOffset(false);
      scatterRenderer0.getLegendItemToolTipGenerator();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2.0, (-1.0));
      barRenderer3D0.equals(spiderWebPlot0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      lineAndShapeRenderer0.getSeriesShapesFilled((-1));
      System.setCurrentTimeMillis(10);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        layeredBarRenderer0.setSeriesURLGenerator((-1725), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getBaseToolTipGenerator();
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      minMaxCategoryRenderer0.getObjectIcon();
      BarRenderer.getDefaultShadowsVisible();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      boolean boolean0 = false;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      double[][] doubleArray0 = new double[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Eo^4w){#";
      stringArray0[1] = "v<q@x2Y]";
      SymbolAxis symbolAxis0 = new SymbolAxis("v<q@x2Y]", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, symbolAxis0, stackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("v<q@x2Y]", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      int int0 = 0;
      int int1 = 1531;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(0, 10, 1531, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1531
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.findRangeBounds((CategoryDataset) null);
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.equals((Object) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      short[][] shortArray0 = new short[2][6];
      short[] shortArray1 = new short[3];
      short short0 = (short)1856;
      shortArray1[0] = (short)1856;
      shortArray1[1] = (short)1966;
      shortArray1[2] = (short)38;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[9];
      shortArray2[0] = (short)1966;
      shortArray2[1] = (short)38;
      shortArray2[2] = (short)1856;
      shortArray2[3] = (short)38;
      shortArray2[4] = (short)38;
      shortArray2[5] = (short)1966;
      shortArray2[6] = (short)38;
      shortArray2[7] = (short)38;
      shortArray2[8] = (short)1966;
      shortArray0[1] = shortArray2;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(92, shortArray0);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.getLegendItem(0, 0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0, stackedBarRenderer0.ZERO, 0.0, stackedBarRenderer0.DEFAULT_PAINT, stackedBarRenderer0.DEFAULT_STROKE);
      stackedBarRenderer0.removeAnnotation(categoryLineAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0);
      LinkedList<LineAndShapeRenderer> linkedList0 = new LinkedList<LineAndShapeRenderer>();
      byte[][] byteArray0 = new byte[9][2];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte) (-13);
      byteArray1[2] = (byte)3;
      byteArray1[3] = (byte)3;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)3;
      byteArray2[2] = (byte) (-13);
      byteArray2[3] = (byte)1;
      byteArray2[4] = (byte)3;
      byteArray2[5] = (byte)3;
      byteArray2[6] = (byte) (-13);
      byteArray2[7] = (byte) (-13);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)3;
      byteArray3[2] = (byte)3;
      byteArray3[3] = (byte) (-13);
      byteArray3[4] = (byte)113;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)113;
      byteArray4[1] = (byte)3;
      byteArray4[2] = (byte)113;
      byteArray4[3] = (byte)3;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)1;
      byteArray5[1] = (byte) (-13);
      byteArray5[2] = (byte)3;
      byteArray5[3] = (byte)3;
      byteArray5[4] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)113;
      byteArray0[1] = byteArray7;
      byte[] byteArray8 = new byte[2];
      byteArray8[0] = (byte)0;
      byteArray8[1] = (byte)0;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[2];
      byteArray9[0] = (byte)113;
      byteArray9[1] = (byte) (-13);
      byteArray0[8] = byteArray9;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("Null 'layer' not permitted.", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo1.getPlotInfo();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      levelRenderer0.getLegendItem((-3518), (-3518));
      // Undeclared exception!
      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      int int0 = 0;
      int int1 = 0;
      stackedBarRenderer0.getLegendItem(0, 0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0, stackedBarRenderer0.ZERO, 0.0, stackedBarRenderer0.DEFAULT_PAINT, stackedBarRenderer0.DEFAULT_STROKE);
      stackedBarRenderer0.removeAnnotation(categoryLineAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0);
      LinkedList<LineAndShapeRenderer> linkedList0 = new LinkedList<LineAndShapeRenderer>();
      byte[][] byteArray0 = new byte[9][2];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte) (-13);
      byteArray1[2] = (byte)3;
      byte byte0 = (byte)3;
      byteArray1[3] = (byte)3;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)3;
      byteArray2[2] = (byte) (-13);
      byteArray2[3] = (byte)1;
      byteArray2[4] = (byte)3;
      byteArray2[5] = (byte)3;
      byteArray2[6] = (byte) (-13);
      byteArray2[7] = (byte) (-13);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)3;
      byteArray3[2] = (byte)3;
      byteArray3[3] = (byte) (-13);
      byteArray3[4] = (byte)113;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)113;
      byteArray4[1] = (byte)3;
      byteArray4[2] = (byte)113;
      byteArray4[3] = (byte)3;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)1;
      byteArray5[1] = (byte) (-13);
      byteArray5[2] = (byte)3;
      byteArray5[3] = (byte)3;
      byteArray5[4] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte)113;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[2];
      byteArray8[0] = (byte)0;
      byteArray8[1] = (byte)0;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[2];
      byteArray9[0] = (byte)113;
      byteArray9[1] = (byte) (-13);
      byteArray0[8] = byteArray9;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      String string0 = "Null 'layer' not permitted.";
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("Null 'layer' not permitted.", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      categoryStepRenderer0.setAutoPopulateSeriesShape(false);
      int int0 = 65535;
      categoryStepRenderer0.getToolTipGenerator(65535, 65535, true);
      double double0 = (-3263.6);
      double double1 = (-1428.255);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(intervalCategoryItemLabelGenerator0);
      rendererChangeEvent0.getChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getShadowXOffset();
      barRenderer3D0.getBaseToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryStepRenderer0.createState(plotRenderingInfo0);
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon((int[]) null, (int[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      stackedAreaRenderer0.lookupSeriesPaint((-102));
      stackedAreaRenderer0.setRenderAsPercentages(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      minMaxCategoryRenderer0.equals(standardGradientPaintTransformer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.setPositiveBarPaint(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-102));
      assertFalse(levelRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Color color0 = (Color)JFreeChart.DEFAULT_BACKGROUND_PAINT;
      boxAndWhiskerRenderer0.setLegendTextPaint(1023, color0);
      boxAndWhiskerRenderer0.getArtifactPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent(1.0E9);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Number[][] numberArray0 = new Number[8][4];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) ganttRenderer0.ZERO;
      numberArray1[1] = (Number) 12.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[0];
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) 0.2;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[9];
      numberArray6[0] = (Number) 3.0;
      numberArray6[1] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray6[2] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray6[3] = (Number) 3.0;
      numberArray6[4] = (Number) 12.0;
      numberArray6[5] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray6[6] = (Number) 3.0;
      numberArray6[7] = (Number) 12.0;
      numberArray6[8] = (Number) 0.2;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[4];
      numberArray7[0] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray7[1] = (Number) ganttRenderer0.ZERO;
      numberArray7[2] = (Number) 8.0;
      numberArray7[3] = (Number) 8.0;
      numberArray0[6] = numberArray7;
      Number[] numberArray8 = new Number[0];
      numberArray0[7] = numberArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getNegativeBarPaint();
      waterfallBarRenderer0.lookupSeriesFillPaint(1028);
      waterfallBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      waterfallBarRenderer0.getFirstBarPaint();
      waterfallBarRenderer0.setShadowXOffset(0);
      statisticalLineAndShapeRenderer0.hashCode();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMeanVisible(true);
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      spiderWebPlot0.setInsets(rectangleInsets0, true);
      spiderWebPlot0.getURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      minMaxCategoryRenderer0.removeAnnotations();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(false);
      scatterRenderer0.getLegendItemToolTipGenerator();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2.0, (-1.0));
      barRenderer3D0.equals(spiderWebPlot0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMedianVisible();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      Boolean boolean0 = lineAndShapeRenderer0.getSeriesShapesFilled((-1));
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = 680;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(taskSeriesCollection0, 1396, 0);
      defaultCategoryItemRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingCategoryDataset0, 10, (-278), false, (-278), (-984.4541549859148), false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      defaultCategoryItemRenderer0.getLegendTextPaint(680);
      defaultCategoryItemRenderer0.getLegendShape(680);
      defaultCategoryItemRenderer0.getItemShapeFilled(680, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 0.0, false);
      BarPainter barPainter0 = stackedBarRenderer3D0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.equals(barPainter0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      String string0 = "The 'pieChart' argument must be a chart based on a PiePlot.";
      SymbolAxis symbolAxis0 = null;
      try {
        symbolAxis0 = new SymbolAxis("1=H[C}C}u]wi*s4", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      scatterRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      scatterRenderer0.equals(stackedBarRenderer3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("{0}", "{0}", ";", "{0}");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = 0.0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("Null 'generator' argument.", "Null 'plot' argument.", "c:Y:sY~}=f_!K\"BG;", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = areaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      ValueMarker valueMarker0 = new ValueMarker((double) scatterRenderer0.ZERO, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      GeneralPath generalPath0 = null;
      try {
        generalPath0 = new GeneralPath(10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
         //
         verifyException("java.awt.geom.Path2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getToolTipGenerator(0, 213, true);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.getSeriesBarWidth(3);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("QOf9:K+kR2pey|@", statisticalLineAndShapeRenderer0.ZERO, 0.0, 0.2);
      categoryPointerAnnotation0.setArrowStroke(levelRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      // Undeclared exception!
      try { 
        levelRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalBarRenderer0.createState(plotRenderingInfo0);
      Polygon polygon0 = new Polygon();
      polygon0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // A connection must be supplied.
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setIncludeBaseInRange(false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertFalse(layeredBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineAndShapeRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
  }
}
