/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 15:01:26 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Rectangle2D rectangle2D0 = thermometerPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Double0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(8.0, point2D_Double0.x, 0.01);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      JTable jTable0 = new JTable(vector0, vector0);
      Rectangle rectangle0 = jTable0.getCellRect((-455), 1, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.005, "OH1.%ZB.");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1, 0.0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D rectangle2D0 = cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 0.2, stackedBarRenderer3D0.ZERO, 8.0, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = stackedBarRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      lineAndShapeRenderer0.addEntity(standardEntityCollection0, categoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultIntervalCategoryDataset0, 3, 3, true, 500, 0.05);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesItemLabelGenerator(2312, (CategoryItemLabelGenerator) null);
      assertTrue(lineRenderer3D0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      JTable jTable0 = new JTable(vector0, vector0);
      Rectangle rectangle0 = jTable0.getCellRect((-455), 1, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.005, "OH1.%ZB.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Number[][] numberArray0 = new Number[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryItemRendererState categoryItemRendererState0 = areaRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Vector<BoxAndWhiskerRenderer> vector0 = new Vector<BoxAndWhiskerRenderer>();
      JTable jTable0 = new JTable(vector0, vector0);
      Rectangle rectangle0 = jTable0.getCellRect((-996), (-996), false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[0][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(22.52236776417, 3.0, 3780.82189124707, 0.0, 0.0, (-100.0));
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, periodAxis0, waterfallBarRenderer0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(3391.9397021223626, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {3} - {4}");
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, (ValueAxis) null, stackedBarRenderer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      GeneralPath generalPath0 = new GeneralPath(defaultCategoryItemRenderer0.DEFAULT_SHAPE);
      Rectangle rectangle0 = generalPath0.getBounds();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle0, categoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)stackedBarRenderer3D0.getToolTipGenerator(2823, 299, true);
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = waterfallBarRenderer0.getSeriesURLGenerator(0);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = minMaxCategoryRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      ValueAxis valueAxis1 = stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 3);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      LogAxis logAxis0 = new LogAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, logAxis0, boxAndWhiskerRenderer0);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertTrue(valueAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, levelRenderer0);
      CategoryPlot categoryPlot1 = levelRenderer0.getPlot();
      assertEquals(0, categoryPlot1.getCrosshairDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      levelRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemURLGenerator();
      assertSame(categorySeriesLabelGenerator0, standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) levelRenderer0.ZERO, 1.0F, false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getItemLabelGenerator((-143), (-143), true);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      LogAxis logAxis0 = new LogAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, logAxis0, boxAndWhiskerRenderer0);
      DrawingSupplier drawingSupplier0 = boxAndWhiskerRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("~-'uV");
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      subCategoryAxis0.setAxisLineVisible(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, "~-'uV");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, groupedStackedBarRenderer0);
      CategoryAxis categoryAxis0 = intervalBarRenderer0.getDomainAxis(categoryPlot0, defaultMultiValueCategoryDataset0);
      assertTrue(categoryAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Number[][] numberArray0 = new Number[2][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      CategoryAxis categoryAxis1 = stackedBarRenderer3D0.getDomainAxis(categoryPlot0, defaultIntervalCategoryDataset0);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[1][4];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) levelRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((Number) 0.2, (Comparable) levelRenderer0.ZERO, (Comparable) 0.2);
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(0.2, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) (-903);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals((-451.5), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Range range0 = levelRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 3.0, (Comparable) statisticalBarRenderer0.ZERO, (Comparable) 3.0);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(3.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 8.0, 1.0, (double) stackedBarRenderer3D0.ZERO);
      boolean boolean0 = stackedBarRenderer3D0.equals(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0, "OH1.%ZB.");
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, cyclicNumberAxis0.DEFAULT_TICK_UNIT, 0, 0.05, (-455), Double.NaN, 0.0F, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-2628), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesURLGenerator((-31), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesToolTipGenerator((-2404), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesToolTipGenerator((-698), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-2974), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ct6=)");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-45.0), "ct6=)");
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(1.0F, 0.0F, (Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, (CategoryDataset) null, 6, (-783), false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("eAv", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(5, 1.0F, (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultKeyedValues2DDataset0, 1, 4, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Number[][] numberArray0 = new Number[8][4];
      Number[] numberArray1 = new Number[15];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(1.0F, (-30.0), (Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultIntervalCategoryDataset0, 1947, 10, false, categoryItemRendererState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Number[][] numberArray0 = new Number[8][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(1.0F, (-30.0), (Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultIntervalCategoryDataset0, 1947, 1416, false, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1416
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(5.0E-7, 1.0, true);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getItemMiddle(10, "K?", defaultCategoryDataset0, subCategoryAxis0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getDomainAxis((CategoryPlot) null, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 75, 0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, barRenderer3D0);
      // Undeclared exception!
      try { 
        barRenderer3D0.getDomainAxis(categoryPlot0, slidingGanttCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, (-473), 1157);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds((CategoryDataset) slidingCategoryDataset0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[5][9];
      Number[] numberArray1 = new Number[4];
      numberArray0[2] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      String[] stringArray0 = new String[7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Number[][] numberArray0 = new Number[3][8];
      Number[] numberArray1 = new Number[3];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        levelRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 3);
      Rectangle rectangle0 = new Rectangle(point0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, (CategoryAxis) null, categoryMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PeriodAxis periodAxis0 = new PeriodAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, periodAxis0, intervalBarRenderer0);
      // Undeclared exception!
      try { 
        intervalBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, subCategoryAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle rectangle0 = new Rectangle(10, 1024, 300, 10);
      // Undeclared exception!
      try { 
        ganttRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0.5F, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-130.4), (-130.4), (double) levelRenderer0.ZERO, (-34.8223911659));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F);
      // Undeclared exception!
      try { 
        levelRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis0, cyclicNumberAxis0, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Base itemUR generato not cloneable.", barRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, 15, 10, 10, false, true, true, true, false, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 100);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(10, 2267.9222019225, true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, (Rectangle2D) null, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, levelRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 0, 9, false, 0.0, 617.8693);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Number[][] numberArray0 = new Number[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 7, (-1794), true, 10, 2.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, (-2628), (-673));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, 5, (-1), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, levelRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 33, 33, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 33, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(entityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-1967), (-1967), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (double) levelRenderer0.ZERO);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 1.0, 12.0, 0.0, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(1209, (CategoryURLGenerator) null, true);
      assertEquals(0, scatterRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getURLGenerator(0, 10, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setSeriesToolTipGenerator(351, (CategoryToolTipGenerator) null, true);
      assertFalse(levelRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getToolTipGenerator(2823, 299, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getItemLabelGenerator((-143), (-143), true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getSeriesToolTipGenerator(2640);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = levelRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("Overlapping bin");
      NumberAxis numberAxis0 = new NumberAxis("");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, categoryPlot0, categoryAxis0, numberAxis0, taskSeriesCollection0, (-1668), (-1668), true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("~ob`=N[{5_5Vu");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, extendedCategoryAxis0, (ValueAxis) null, defaultKeyedValues2DDataset0, 10, 10, false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", dateFormat0);
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 8, (-461));
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, lineAndShapeRenderer0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, slidingCategoryDataset0, (-461), 4, false, (-2242.074625981), 2.5E-7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 5, 5, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Number[][] numberArray0 = new Number[9][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(3515, 3515, 3515, 0.0F, (-2.0F), 0.0F, 2);
      boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, arc2D_Float0, defaultIntervalCategoryDataset0, 2, 2, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LegendItemCollection legendItemCollection0 = statisticalLineAndShapeRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1143);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, (-6));
      assertEquals(0.0F, valueAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 9, (-660));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, 0);
      assertEquals(0.0, valueAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertTrue(boxAndWhiskerRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(2.0, stackedBarRenderer3D1.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(8.0, stackedBarRenderer3D1.getYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("~-'uV", "~-'uV", "");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      try { 
        stackedBarRenderer3D0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("({0}, {1}) = {2}", numberFormat0);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertFalse(stackedBarRenderer3D1.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.renderer.x.XYDotRenderer", statisticalLineAndShapeRenderer0.ZERO, 0.0, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 6, 6);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.x.XYDotRenderer", categoryPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1265, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-130.4), (-130.4), (double) levelRenderer0.ZERO, 0.2);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.FOREGROUND;
      levelRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryAxis3D0.getFixedDimension(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("~-'uV");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, "~-'uV");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("g", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1309), (-1309), 500, 15, 15, 31, false, false, false, true, false, true, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      groupedStackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, "PROPERTIES", true, 10, 420, 1.0E-8, 768, plotOrientation0);
      assertTrue(groupedStackedBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.updateCrosshairValues(categoryCrosshairState0, (Comparable) null, (Comparable) null, 1561.07301955, 0, 200000.0, 1561.07301955, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 1.0F, 10, (-1074.4505), 209, 239.6, (-1.0), plotOrientation0);
      assertEquals("PlotOrientation.VERTICAL", plotOrientation0.toString());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.setPlot(categoryPlot0);
      BasicStroke basicStroke0 = (BasicStroke)levelRenderer0.lookupSeriesStroke(792);
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)stackedBarRenderer3D0.getLegendItemLabelGenerator();
      assertTrue(stackedBarRenderer3D0.equals((Object)stackedBarRenderer3D1));
      
      stackedBarRenderer3D1.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer3D1.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer3D1.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("Unknown layer.");
      stackedBarRenderer3D1.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer3D1.equals(stackedBarRenderer3D0);
      assertFalse(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D1.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      MeterPlot meterPlot0 = new MeterPlot();
      DecimalFormat decimalFormat0 = (DecimalFormat)meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Not implemented.", decimalFormat0);
      stackedBarRenderer3D1.setSeriesToolTipGenerator(951, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boolean boolean0 = stackedBarRenderer3D1.equals(stackedBarRenderer3D0);
      assertFalse(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertTrue(stackedBarRenderer3D0.equals((Object)stackedBarRenderer3D1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (-1.0));
      Object object0 = stackedBarRenderer3D0.clone();
      boolean boolean0 = stackedBarRenderer3D0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem((-470), (-470));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      levelRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(40, (-3262));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Vector<DefaultCategoryDataset> vector1 = new Vector<DefaultCategoryDataset>();
      JTable jTable0 = new JTable(vector0, vector1);
      Rectangle rectangle0 = jTable0.getCellRect(1614, (-983), false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0, "OH1.%ZB.");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-983), 0.0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 192, 192, 1, 10, 0, 10, false, false, false, false, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(1971, 100);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
      try { 
        stackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("Base item URL generator not cloneable.", barRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea((-1905), (-725));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Select a region...");
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(3.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      LogAxis logAxis0 = new LogAxis("NS,DVNufB%]rzI%2");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      DateAxis dateAxis0 = new DateAxis("NS,DVNufB%]rzI%2");
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      GrayPaintScale grayPaintScale0 = new GrayPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, dateAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(3.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) levelRenderer0.ZERO, 1.0F, "Null 'stroke' argument.");
      IntervalMarker intervalMarker0 = new IntervalMarker((-2172.64159866725), (double) levelRenderer0.ZERO);
      lineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle2D_Double0);
      assertTrue(lineAndShapeRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.7976931348623157E308, "Null 'stroke' argument.");
      IntervalMarker intervalMarker0 = new IntervalMarker((double) lineAndShapeRenderer0.ZERO, 790.52);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      IntervalMarker intervalMarker0 = new IntervalMarker(565.213772563729, 565.213772563729);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      MockDate mockDate0 = new MockDate(10, 10, (-1635), 10, 0, 1761);
      Week week0 = new Week(mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis("hj=", week0, week0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, intervalMarker0, rectangle2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      ValueMarker valueMarker0 = new ValueMarker((double) statisticalLineAndShapeRenderer0.ZERO, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_STROKE);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      ValueMarker valueMarker0 = new ValueMarker((-1866.192));
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      statisticalLineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D0);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, lineAndShapeRenderer0);
      lineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis3D0, (Marker) null, (Rectangle2D) null);
      assertEquals(1.05, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CategoryMarker categoryMarker0 = new CategoryMarker("");
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MockDate mockDate0 = new MockDate(10, 10, 10, 2, (-3066), (-3066));
      Minute minute0 = new Minute(mockDate0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.FRENCH;
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, minute0, minute0, timeZone0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, periodAxis0, intervalBarRenderer0);
      intervalBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, subCategoryAxis0, categoryMarker0, (Rectangle2D) null);
      assertEquals(2.0, periodAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      MockDate mockDate0 = new MockDate(10, 10, 10, 2, (-3066), (-3066));
      Minute minute0 = new Minute(mockDate0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.FRENCH;
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, minute0, minute0, timeZone0, locale0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke((-3066), 10, false);
      defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, periodAxis0, (Rectangle2D) null, 428.2, categoryPlot0.DEFAULT_OUTLINE_PAINT, stroke0);
      assertTrue(periodAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3225.160331168897, (double) statisticalLineAndShapeRenderer0.ZERO, "ItemLabelGenerator not cloneable.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Line2D.Double line2D_Double0 = new Line2D.Double(10, 2.0F, 2.0F, 10);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D0, 0.0, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 234, 7, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Rectangle rectangle0 = new Rectangle(6, 8);
      // Undeclared exception!
      try { 
        ganttRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 0.0, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle0, 1.0F, (Paint) null, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 6, 6);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.renderer.x.XYDotRenderer");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, extendedCategoryAxis0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(15, 500, 8);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(275.006879294, 0.0, 8, 100.0);
      ganttRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Double0, (-2867), extendedCategoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(0.2, CategoryAxis.DEFAULT_CATEGORY_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[3][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 6, 6);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      assertFalse(categoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, levelRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Vector<String> vector0 = new Vector<String>();
      JTable jTable0 = new JTable(vector0, vector0);
      Rectangle rectangle0 = jTable0.getCellRect((-455), 1, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.005, "OH1.%ZB.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Number[][] numberArray0 = new Number[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(997, (CategoryURLGenerator) null, false);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator1 = (IntervalCategoryToolTipGenerator)stackedBarRenderer3D0.getBaseToolTipGenerator();
      assertEquals("", intervalCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setSeriesToolTipGenerator(3668, (CategoryToolTipGenerator) null, false);
      assertTrue(levelRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertEquals(0.2, levelRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) boxAndWhiskerRenderer0.ZERO, 12.0);
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'orientation' argument.", numberFormat0);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, false);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, (-2299), 40, true, (-3578.0143995221), 40, false);
      assertEquals(12.0, stackedBarRenderer3D0.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, numberAxis3D0, levelRenderer0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, 8, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.createHotSpotShape(graphics2D0, rectangle2D_Double0, categoryPlot0, categoryAxis0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, 66, (-2705), true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, (-2299), 40, true, (-3578.0143995221), 40, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = lineRenderer3D0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(853, 853, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      boxAndWhiskerRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Double0);
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = barRenderer3D0.getSeriesItemLabelGenerator(70);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.removeAnnotations();
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      assertTrue(stackedAreaRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryURLGenerator categoryURLGenerator0 = boxAndWhiskerRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0, (-214.470404118), (-1.0), (double) stackedBarRenderer3D0.ZERO);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      levelRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Double0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.hashCode();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 8, (-461));
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, slidingCategoryDataset0, (-461), 4, false, (-2242.074625981), 2.5E-7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ZEk");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge((-4018));
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getItemMiddle(0, 0, (CategoryDataset) null, subCategoryAxis0, defaultCaret0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = stackedBarRenderer3D0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      int int0 = statisticalLineAndShapeRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, (CategoryAxis) null, logarithmicAxis0, levelRenderer0);
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(categoryPlot0, defaultCategoryDataset0);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, 0.0, statisticalLineAndShapeRenderer0.DEFAULT_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesItemLabelGenerator((-2355), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }
}
