/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:50:12 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JEditorPane;
import javax.swing.JPasswordField;
import javax.swing.JTabbedPane;
import javax.swing.JTree;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.mock.javax.swing.filechooser.MockFileSystemView;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.pie.PieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 1, 2, 25, true, false, true, false, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 25, 3.0, (double) 1, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis0 = new NumberAxis();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D_Double0, point2D_Double0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      ganttRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, valueMarker0, rectangle0);
      // Undeclared exception!
      try { 
        ganttRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: InternalError");
      
      } catch(InternalError e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PeriodAxis periodAxis0 = new PeriodAxis("Not implemented.");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      scatterRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(areaRenderer0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 2, 497, 1426, 15, 15, (-654), true, true, true, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(taskSeriesCollection0, tableOrder0, 1464);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(categoryToPieDataset0);
      PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(221, 221, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis0 = new NumberAxis();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-5);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D_Double0, point2D_Double0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("PRINT");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, numberAxis0, scatterRenderer0);
      ganttRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis0, valueMarker0, rectangle0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, false, 10, 10, 1.0F, 1.0F, plotOrientation0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 1, 2, 25, true, false, true, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis0 = new NumberAxis();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D_Double0, point2D_Double0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ganttRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, valueMarker0, rectangle0);
      ganttRenderer0.getLegendItem(10, 16);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupPaint();
      BarRenderer.getDefaultBarPainter();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 0.0, false, 0.0, defaultCategoryItemRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(8, 21, 0.0, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("/E#-'$!1K:H7hl;LZ=");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.2, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, levelRenderer0.DEFAULT_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      intervalMarker0.setLabel("/E#-'$!1K:H7hl;LZ=");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      defaultCategoryItemRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Double0);
      Layer layer0 = Layer.BACKGROUND;
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      levelRenderer0.equals(bufferedImage0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) minMaxCategoryRenderer0.ZERO, (-1795.3299), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("({0}, {1}) = {2}");
      IntervalMarker intervalMarker0 = new IntervalMarker((-1595.832093), 672.289517066, minMaxCategoryRenderer0.DEFAULT_PAINT, polarPlot0.DEFAULT_OUTLINE_STROKE, polarPlot0.DEFAULT_BACKGROUND_PAINT, polarPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      defaultCategoryItemRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Double0);
      Layer layer0 = Layer.FOREGROUND;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("({0}, {1}) = {2}", true, 2.0);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 0.0, false, 0.0, defaultCategoryItemRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(8, 21, 0.0, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("/E#-'$!1K:H7hl;LZ=");
      IntervalMarker intervalMarker0 = new IntervalMarker((-0.32902806766639814), 0.2, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, levelRenderer0.DEFAULT_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      defaultCategoryItemRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Double0);
      Layer layer0 = Layer.FOREGROUND;
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(false);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 0.0, false, 0.0, defaultCategoryItemRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(8, 21, 0.0, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("/E#-'$!1K:H7hl;LZ=");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.2, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, levelRenderer0.DEFAULT_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      defaultCategoryItemRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Double0);
      Layer layer0 = Layer.FOREGROUND;
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[16][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      stackedBarRenderer3D0.addEntity(standardEntityCollection1, arc2D_Double0, defaultIntervalCategoryDataset0, 0, 5, false);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      minMaxCategoryRenderer1.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      scatterRenderer0.setLegendTextFont(10, combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      scatterRenderer1.getItemLabelGenerator(10, (-918), false);
      float[] floatArray0 = new float[5];
      floatArray0[0] = 3.4028235E38F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (float) 10;
      floatArray0[3] = 1.0F;
      floatArray0[4] = 1.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      BufferedImage bufferedImage0 = new BufferedImage(10, 70, 10);
      // Undeclared exception!
      try { 
        rescaleOp0.filter(bufferedImage0, bufferedImage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of scaling constants does not equal the number of of color or color/alpha  components
         //
         verifyException("java.awt.image.RescaleOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      scatterRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("G");
      statisticalLineAndShapeRenderer1.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      statisticalLineAndShapeRenderer1.equals(statisticalLineAndShapeRenderer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      scatterRenderer0.clone();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 10;
      floatArray0[1] = 1.0F;
      JFreeChart jFreeChart0 = new JFreeChart("", spiderWebPlot0.DEFAULT_LABEL_FONT, spiderWebPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("", spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart1.createBufferedImage((-950), 10, 3, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-950) and height (10) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-1611.0));
      Color color0 = (Color)LineRenderer3D.DEFAULT_WALL_PAINT;
      stackedBarRenderer3D0.setShadowPaint(color0);
      Random.setNextRandom(23);
      CategoryDataset categoryDataset0 = null;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("OU0x*>Z+");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1611.0));
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      stackedBarRenderer3D0.getRangeAxis(categoryPlot0, 10);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GeneralPath generalPath0 = null;
      try {
        generalPath0 = new GeneralPath((-1), 3178);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
         //
         verifyException("java.awt.geom.Path2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[7][4];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = combinedDomainCategoryPlot0.ZERO;
      numberArray1[1] = (Number) 10;
      numberArray1[2] = (Number) 10;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = combinedDomainCategoryPlot0.ZERO;
      numberArray2[1] = (Number) 10;
      numberArray2[2] = (Number) 1.0F;
      numberArray2[3] = (Number) 1.0F;
      numberArray2[4] = (Number) 10;
      numberArray2[5] = (Number) 1.0F;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[3];
      numberArray3[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[1] = (Number) 1.0F;
      double double0 = BarRenderer.DEFAULT_ITEM_MARGIN;
      numberArray3[2] = (Number) 0.2;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[9];
      double double1 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray4[0] = (Number) 0.2;
      numberArray4[1] = (Number) 1.0F;
      numberArray4[2] = (Number) 1.0F;
      numberArray4[3] = (Number) 1.0F;
      numberArray4[4] = (Number) 10;
      Short short0 = new Short((short) (-7));
      numberArray4[5] = (Number) short0;
      numberArray4[6] = (Number) 10;
      numberArray4[7] = (Number) 1.0F;
      numberArray4[8] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[6];
      numberArray5[0] = (Number) short0;
      numberArray5[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray5[2] = (Number) 10;
      numberArray5[3] = (Number) 10;
      numberArray5[4] = combinedDomainCategoryPlot0.ZERO;
      numberArray5[5] = (Number) short0;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[7];
      double double2 = BarRenderer3D.DEFAULT_Y_OFFSET;
      numberArray6[0] = (Number) 8.0;
      numberArray6[1] = combinedDomainCategoryPlot0.ZERO;
      numberArray6[2] = (Number) 1.0F;
      numberArray6[3] = combinedDomainCategoryPlot0.ZERO;
      numberArray6[4] = (Number) 1.0F;
      numberArray6[5] = (Number) 10;
      numberArray6[6] = combinedDomainCategoryPlot0.ZERO;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[7];
      numberArray7[0] = (Number) 10;
      numberArray7[1] = (Number) 1.0F;
      numberArray7[2] = combinedDomainCategoryPlot0.ZERO;
      numberArray7[3] = combinedDomainCategoryPlot0.ZERO;
      numberArray7[4] = (Number) 10;
      numberArray7[5] = (Number) 10;
      numberArray7[6] = (Number) 10;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, defaultCaret0, 0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis1 = new DateAxis(">bT66m,Vi#Qut", zoneInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis1, scatterRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, categoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultBoxAndWhiskerCategoryDataset0, 10, 497, true, (-1.0), (-1946.7074936));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      minMaxCategoryRenderer0.clearSeriesPaints(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      assertFalse(minMaxCategoryRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setCategoryMargin(0.0);
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, scatterRenderer0);
      scatterRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 484, 484, false, 484, 484);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 484, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, scatterRenderer0);
      scatterRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 88, 4, true, 2450.6632595, (-2645.2248));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 88, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, scatterRenderer0);
      scatterRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 500, 500, false, 500, 500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 5, 5);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds(slidingCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      groupedStackedBarRenderer0.setShadowVisible(false);
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      groupedStackedBarRenderer0.setMinimumBarLength(1.0F);
      try { 
        groupedStackedBarRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      groupedStackedBarRenderer0.setShadowXOffset(2.0);
      groupedStackedBarRenderer0.setMinimumBarLength(2.0);
      groupedStackedBarRenderer0.lookupSeriesOutlineStroke(2);
      groupedStackedBarRenderer0.setShadowXOffset(319.31);
      Object object0 = groupedStackedBarRenderer0.clone();
      boolean boolean0 = groupedStackedBarRenderer0.equals(object0);
      assertTrue(boolean0);
      
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getItemMargin();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      scatterRenderer0.setSeriesShapesFilled(2, false);
      statisticalLineAndShapeRenderer0.getSeriesLinesVisible(1);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      groupedStackedBarRenderer0.isDrawBarOutline();
      assertTrue(groupedStackedBarRenderer0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 15, 15, true, 1.0F, 0.5F, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 1732.75805);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      ModuloAxis moduloAxis0 = new ModuloAxis("", logarithmicAxis0.DEFAULT_RANGE);
      IntervalMarker intervalMarker0 = new IntervalMarker((-3218.3067097598077), 2947.0, minMaxCategoryRenderer0.DEFAULT_PAINT);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JPasswordField jPasswordField0 = new JPasswordField(defaultStyledDocument0, "", 10);
      containerOrderFocusTraversalPolicy0.getFirstComponent(jPasswordField0);
      Color color0 = Color.DARK_GRAY;
      EtchedBorder etchedBorder0 = new EtchedBorder(500, color0, color0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) null, (Border) etchedBorder0, 0, 10, 15, 4);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, moduloAxis0, intervalMarker0, rectangle0);
      assertEquals(0.0F, moduloAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      boolean boolean0 = object0.equals(statisticalLineAndShapeRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 3639.9543623648688);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, cyclicNumberAxis0, defaultCategoryItemRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, categoryAxis0.DEFAULT_TICK_MARK_PAINT, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_STROKE);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(935, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(2391);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-3804.8F), 0.0F, 0.0F, 1.0F, 0.0F, 10);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis categoryAxis0 = new CategoryAxis("Mtt,wY5_~T_>eJN#3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2602.0));
      // Undeclared exception!
      try { 
        ganttRenderer0.hitTest(2.5E7, 0.0, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 5, 10, true, categoryItemRendererState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      defaultIntervalCategoryDataset0.indexOf(scatterRenderer0.ZERO);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      categoryAxis3D0.setMinorTickMarkInsideLength((-1));
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DateAxis dateAxis0 = new DateAxis("m]7xwT7wvV", timeZone0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, scatterRenderer1);
      scatterRenderer1.getDomainAxis(categoryPlot0, defaultIntervalCategoryDataset0);
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-3804.8F), 0.0F, 0.0F, 1.0F, 0.0F, 10);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("Mtt,wY5_~T_>eJN#3");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      boolean boolean0 = ganttRenderer0.hitTest(2.0, (double) defaultCategoryItemRenderer0.ZERO, (Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0, 10, 1800, true, categoryItemRendererState0);
      assertEquals(9, defaultCategoryItemRenderer0.getColumnCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0E-8, 0.0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("p'.b/de<HZT;/s;5G?");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-40.31865151891), false, (XYToolTipGenerator) null);
      Shape shape0 = candlestickRenderer0.getItemShape(743, 743, true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, shape0, defaultKeyedValues2DDataset0, 14, 1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 14, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 743, 743, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 743, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, false, 10, 10, 1.0F, 1.0F, plotOrientation0);
      defaultCategoryItemRenderer0.getPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(true);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      defaultCategoryItemRenderer0.setPlot(combinedDomainCategoryPlot0);
      defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, false, 10, 10, 1.0F, 1.0F, plotOrientation0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DateAxis dateAxis0 = new DateAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, dateAxis0, categoryStepRenderer0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CategoryAxis categoryAxis1 = new CategoryAxis("k");
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis1.DEFAULT_AXIS_LINE_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, (CategoryAxis) null, categoryMarker0, defaultCaret0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'columnKey' argument.
         //
         verifyException("org.jfree.data.gantt.TaskSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      defaultCategoryItemRenderer0.setPlot(categoryPlot0);
      CategoryCrosshairState categoryCrosshairState1 = new CategoryCrosshairState();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((double) defaultCategoryItemRenderer0.ZERO, decimalFormat0, 2206);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(defaultCategoryItemRenderer0.ZERO, 10, numberTickUnit0, 530.01, categoryPlot0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
      categoryPlot0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      categoryCrosshairState1.setCrosshairX(10.5169853329);
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      SegmentedTimeline.Segment segmentedTimeline_Segment0 = segmentedTimeline0.getSegment((-43L));
      defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, segmentedTimeline_Segment0, true, (-2208988800000L), 4, 896.4, 86400000L, plotOrientation0);
      double double0 = defaultCategoryItemRenderer0.getItemMargin();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      defaultCategoryItemRenderer0.setPlot(categoryPlot0);
      categoryCrosshairState0.setCrosshairX((double) defaultCategoryItemRenderer0.ZERO);
      defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO, 2262, (double) defaultCategoryItemRenderer0.ZERO, 0.0, plotOrientation0);
      double double0 = defaultCategoryItemRenderer0.getItemMargin();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      numberAxis0.setTickMarkInsideLength(1.0F);
      stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PeriodAxis periodAxis0 = new PeriodAxis("^;6i!K{Y");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(true, periodAxis0.DEFAULT_TICK_LABEL_PAINT, basicStroke0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryStepRenderer0.getRangeAxis(combinedDomainCategoryPlot0, (-1742));
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, (ValueAxis) null, categoryStepRenderer0);
      categoryStepRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((Number) 0.2, (Comparable) stackedBarRenderer3D0.ZERO, (Comparable) 0.2);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(false);
      stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 743, 743, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 743, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      RectangleInsets rectangleInsets0 = thermometerPlot0.getPadding();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangleInsets0.createInsetRectangle(rectangle2D0);
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) 2;
      doubleArray2[3] = (-3189.5395023);
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = 12.0;
      doubleArray2[6] = (-860.4830961915488);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 0;
      doubleArray3[1] = (double) 1;
      doubleArray3[2] = 8.0;
      doubleArray3[3] = (double) 3;
      doubleArray3[4] = 0.2;
      doubleArray3[5] = 3.0;
      doubleArray3[6] = (double) 10;
      doubleArray3[7] = (double) 10;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = (double) 10;
      doubleArray4[1] = (double) 10;
      doubleArray0[3] = doubleArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedBarRenderer3D0.addEntity(standardEntityCollection0, rectangle2D1, defaultIntervalCategoryDataset0, 0, 0, false, 10.0, 0.0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      stackedBarRenderer3D0.lookupLegendTextPaint(0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 743, 743, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 743, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.getLegendShape(2000);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      scatterRenderer0.getLegendItems();
      Range range0 = scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.drawAnnotations((Graphics2D) null, defaultCaret0, categoryAxis3D0, periodAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 15, 15, false, 1.0F, 0.5F, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ValueMarker valueMarker0 = new ValueMarker(0.0, statisticalBarRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_STROKE);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeMarker(graphics2D0, (CategoryPlot) null, valueAxis0, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue(1352.6593215999224, (Comparable) 0, (Comparable) 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, defaultCaret0, defaultKeyedValues2DDataset0, 0, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1149.96873286), 2.0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, (Shape) null, defaultKeyedValues2DDataset0, 325, 65535, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      double[][] doubleArray0 = new double[5][0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 3793.3964932;
      doubleArray1[1] = 2138.8;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = 3793.3964932;
      doubleArray2[1] = 2138.8;
      doubleArray2[2] = 129.73572;
      doubleArray2[3] = 3793.3964932;
      doubleArray2[4] = 2138.8;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = 129.73572;
      doubleArray4[1] = 129.73572;
      doubleArray4[2] = 129.73572;
      doubleArray4[3] = 3793.3964932;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(layeredBarRenderer0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      chartPanel0.getSelectionShape();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, (-5704), 10, false, 2138.8, 2138.8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, logAxis0, ganttRenderer0);
      ganttRenderer0.getRangeAxis(categoryPlot0, 5);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setRenderAsPercentages(false);
      double[][] doubleArray0 = new double[5][3];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[1] = 4.0;
      doubleArray3[2] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[3] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[5] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = 1589.5550067;
      doubleArray4[1] = (double) stackedAreaRenderer0.ZERO;
      doubleArray4[2] = 4.0;
      doubleArray4[3] = (-468.669);
      doubleArray4[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray4[5] = (double) stackedAreaRenderer0.ZERO;
      doubleArray4[6] = 4.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = (-468.669);
      doubleArray5[1] = (-489.33824);
      doubleArray5[2] = (double) stackedAreaRenderer0.ZERO;
      doubleArray5[3] = (-468.669);
      doubleArray5[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals(2058.2240067, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      GanttCategoryDataset ganttCategoryDataset0 = null;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 2, (-1521));
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'plot' argument.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1468.066586, 0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      barRenderer3D0.getRangeAxis(categoryPlot0, (-283));
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo1);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'plot' argument.", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesStroke(10);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 2583.8796268444, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-311.0F), 10.0F, (-3.0F), 0.0F);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      scatterRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawingSupplier();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getObjectIcon();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getFirstBarPaint();
      CategoryAxis categoryAxis0 = new CategoryAxis("zd?NZ6=dB|^0UE");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      double[][] doubleArray0 = new double[9][6];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = 211.0642850805;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 10;
      doubleArray1[5] = (double) 10;
      doubleArray1[6] = (double) 0.0F;
      doubleArray1[7] = (double) 10;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (-2536.598328459);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = 0.05;
      doubleArray4[1] = (-2536.598328459);
      doubleArray4[2] = 0.05;
      doubleArray4[3] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 1.0F;
      doubleArray5[1] = (double) 1;
      doubleArray5[2] = (double) 0;
      doubleArray5[3] = 0.2;
      doubleArray5[4] = (double) 3;
      doubleArray5[5] = 0.2;
      doubleArray5[6] = 211.0642850805;
      doubleArray5[7] = (-648.83);
      doubleArray5[8] = (double) 10;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 0;
      doubleArray6[1] = (double) 0.0F;
      doubleArray6[2] = (double) 3;
      doubleArray6[3] = (double) 2.0F;
      doubleArray6[4] = (double) 2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = (double) levelRenderer0.ZERO;
      doubleArray7[1] = (double) 1;
      doubleArray7[2] = (double) 10;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[2];
      doubleArray8[0] = (double) 1.0F;
      doubleArray8[1] = (double) 500;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[8];
      doubleArray9[0] = 181.092;
      doubleArray9[1] = (double) 0.0F;
      doubleArray9[2] = (double) 10;
      doubleArray9[3] = 0.0;
      doubleArray9[4] = (double) 1.0F;
      doubleArray9[5] = (double) 500;
      doubleArray9[6] = 0.2;
      doubleArray9[7] = (double) 0.0F;
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, valueAxis0, defaultIntervalCategoryDataset0, (-1741), (-978), false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Layer layer0 = Layer.FOREGROUND;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) null, valueAxis0, statisticalLineAndShapeRenderer0);
      statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, 1);
      statisticalLineAndShapeRenderer0.setUseSeriesOffset(true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem(0, 3394);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState1 = new CategoryItemRendererState((PlotRenderingInfo) null);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis0);
      CategoryAxis categoryAxis0 = scatterRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot1, categoryAxis0, numberAxis0, (CategoryDataset) null, 500, (-1), true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[4][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-248.14F), 10, (-248.14F), (-248.14F));
      Rectangle2D.intersect(rectangle2D_Float0, rectangle2D_Float0, rectangle2D_Float0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      scatterRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-248.14F), 10, (-248.14F), (-248.14F));
      rectangle2D_Float0.setFrameFromDiagonal((-2599.39476764), (double) 1.0F, (double) 10, 3.0);
      PeriodAxis periodAxis0 = new PeriodAxis("Oi");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("Oi");
      Layer layer0 = Layer.BACKGROUND;
      minMaxCategoryRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis0, periodAxis0, layer0, plotRenderingInfo0);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      minMaxCategoryRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 10, 10, false, 10, (-3039), false);
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("(=(>Fgm");
      PeriodAxis periodAxis0 = new PeriodAxis("(=(>Fgm");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      minMaxCategoryRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, extendedCategoryAxis0, periodAxis0, layer0, plotRenderingInfo0);
      assertTrue(minMaxCategoryRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[1][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-248.14F), 10, (-248.14F), (-248.14F));
      Rectangle2D.intersect(rectangle2D_Float0, rectangle2D_Float0, rectangle2D_Float0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 500, 500, true, 344.31403, 2.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[1][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-248.14F), 10, (-248.14F), (-248.14F));
      // Undeclared exception!
      try { 
        scatterRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      String string0 = "";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(extendedCategoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(1838, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = (-32);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      Number[][] numberArray0 = new Number[4][4];
      Number[] numberArray1 = new Number[8];
      numberArray1[0] = (Number) 0.2;
      numberArray1[1] = (Number) levelRenderer1.ZERO;
      numberArray1[2] = (Number) levelRenderer1.ZERO;
      numberArray1[3] = (Number) levelRenderer0.ZERO;
      numberArray1[4] = (Number) 0.2;
      numberArray1[5] = (Number) levelRenderer1.ZERO;
      numberArray1[6] = (Number) levelRenderer0.ZERO;
      numberArray1[7] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) levelRenderer0.ZERO;
      numberArray2[1] = (Number) levelRenderer1.ZERO;
      numberArray2[2] = (Number) 0.2;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 0.2;
      numberArray2[5] = (Number) levelRenderer0.ZERO;
      numberArray2[6] = (Number) levelRenderer1.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[3];
      numberArray3[0] = (Number) 0.2;
      numberArray3[1] = (Number) levelRenderer1.ZERO;
      numberArray3[2] = (Number) levelRenderer1.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[8];
      numberArray4[0] = (Number) levelRenderer1.ZERO;
      numberArray4[1] = (Number) 0.2;
      numberArray4[2] = (Number) levelRenderer1.ZERO;
      numberArray4[3] = (Number) levelRenderer1.ZERO;
      numberArray4[4] = (Number) 0.2;
      numberArray4[5] = (Number) levelRenderer1.ZERO;
      numberArray4[6] = (Number) levelRenderer1.ZERO;
      numberArray4[7] = (Number) 0.2;
      numberArray0[3] = numberArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        levelRenderer1.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      standardEntityCollection0.clear();
      float float0 = (-704.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.9F, 10, 1.0F, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = null;
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getItemMiddle(true, 3.0, defaultStatisticalCategoryDataset0, (CategoryAxis) null, rectangle2D_Float0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      intervalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      intervalBarRenderer0.getBaseItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 62, (-1), 2679, 10, 943, 1780, true, true, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      scatterRenderer0.getLegendItem((-1), 9);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, (-1.0), scatterRenderer0.ZERO, 3.0, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, intervalBarRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("c)b", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(287.458F, 2425.6F, 1748.3768F, 1748.3768F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 13);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseOutlinePaint(false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0, 1107.83471, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, (CategoryDataset) null, 10, 873, false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      statisticalBarRenderer0.setLegendShape(0, statisticalBarRenderer0.DEFAULT_SHAPE);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      statisticalBarRenderer1.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, rectangleInsets0, lengthAdjustmentType0, (RectangleAnchor) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      assertNotSame(statisticalLineAndShapeRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 3360.547F, 3360.547F);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1347, 15);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis3D0, (ValueAxis) null, levelRenderer0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle2D_Float0, (-194.1472761336), (Paint) null, levelRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.getLegendTextPaint(10);
      scatterRenderer1.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      BarPainter barPainter0 = layeredBarRenderer0.getBarPainter();
      layeredBarRenderer0.setBarPainter(barPainter0);
      Layer layer0 = Layer.FOREGROUND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      RingPlot ringPlot0 = new RingPlot((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1053, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImage0.releaseWritableTile(212, 10);
      Graphics2D graphics2D0 = bufferedImageRenderingSource1.createGraphics2D();
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      Locale locale0 = Locale.CANADA_FRENCH;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      BasicStroke basicStroke0 = new BasicStroke();
      waterfallBarRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle0, 1.0F, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer0.DEFAULT_STROKE);
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      waterfallBarRenderer1.lookupSeriesStroke(10);
      Color color0 = null;
      try {
        color0 = new Color((-675.07F), 10, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color parameter outside of expected range: Red Green
         //
         verifyException("java.awt.Color", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-248.14F), 10, (-248.14F), 1748.3768F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 7);
      scatterRenderer0.setUseOutlinePaint(false);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      BasicStroke basicStroke0 = new BasicStroke();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer1.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, (ValueAxis) null, rectangle2D_Float0, (-248.14F), combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, basicStroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      BarPainter barPainter0 = layeredBarRenderer0.getBarPainter();
      layeredBarRenderer0.setBarPainter(barPainter0);
      Layer layer0 = Layer.FOREGROUND;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 6, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      TimeZone timeZone0 = TimeZone.getTimeZone("R$erg9");
      Locale locale0 = Locale.CANADA_FRENCH;
      DateAxis dateAxis0 = new DateAxis("R$erg9", timeZone0, locale0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-682));
      float[] floatArray0 = new float[6];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 0;
      floatArray0[2] = 0.0F;
      rectangle0.y = 10;
      floatArray0[5] = (float) 0;
      float[] floatArray1 = new float[6];
      floatArray1[0] = 0.0F;
      floatArray1[3] = (float) 10;
      floatArray1[4] = (float) 10;
      floatArray1[4] = 1047.6521F;
      BasicStroke basicStroke0 = new BasicStroke();
      waterfallBarRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle0, (double) stackedBarRenderer3D0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, basicStroke0);
      waterfallBarRenderer0.lookupSeriesStroke(10);
      Color color0 = new Color(1.0F, 0.0F, 0.0F);
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boxAndWhiskerRenderer0.setAutoPopulateSeriesPaint(true);
      boxAndWhiskerRenderer0.setItemLabelAnchorOffset(0.0);
      Number[][] numberArray0 = new Number[3][7];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[2] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[4] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[5] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[7] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray1[8] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[1] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[4] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[5] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[6] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      numberArray3[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray3[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray3[3] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[4] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[5] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray3[7] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray3[8] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 1353, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      double[][] doubleArray1 = new double[2][9];
      JTree jTree0 = new JTree(doubleArray1);
      jTree0.getClosestPathForLocation(1353, 8);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 1499);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      JEditorPane jEditorPane0 = new JEditorPane();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMarkBias();
      stackedAreaRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, defaultCaret0);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setNegativeArrowVisible(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      scatterRenderer0.setPlot(combinedRangeCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      scatterRenderer0.getDrawingSupplier();
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      double double0 = 35.0;
      BufferedImage bufferedImage0 = new BufferedImage(10, 1353, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      JTree jTree0 = new JTree(doubleArray0);
      TreePath treePath0 = jTree0.getClosestPathForLocation(1353, 8);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-503));
      variableHeightLayoutCache0.getBounds(treePath0, rectangle0);
      CategoryAxis categoryAxis0 = null;
      DateAxis dateAxis0 = new DateAxis("");
      int int0 = 2335;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesShapesFilled(5, false);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator((-2353));
      // Undeclared exception!
      try { 
        scatterRenderer1.setSeriesToolTipGenerator((-2353), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      lineAndShapeRenderer0.getLegendTextPaint((-1));
      statisticalBarRenderer0.getSeriesURLGenerator(11);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = (-45);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      String string0 = "";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(extendedCategoryAxis0.DEFAULT_TICK_LABEL_INSETS);
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem((-45), (-45));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItem(170, 8);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      levelRenderer0.setLegendShape(8, rectangle0);
      levelRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.equals((Object) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 170;
      int int1 = 8;
      levelRenderer0.getLegendItem(170, 8);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      levelRenderer0.setLegendShape(8, rectangle0);
      levelRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      levelRenderer0.removeAnnotations();
      levelRenderer0.setMaximumItemWidth(200000.0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      standardEntityCollection0.clear();
      float float0 = (-704.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.9F, 10, 1.0F, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = null;
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawBackground((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double((double) statisticalBarRenderer1.ZERO, (double) statisticalBarRenderer1.ZERO, 3.0, 0.2);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      statisticalBarRenderer2.setBaseLegendShape(scatterRenderer0.DEFAULT_SHAPE);
      statisticalBarRenderer0.setLegendShape(1, statisticalBarRenderer2.DEFAULT_SHAPE);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryStepRenderer0.createState(plotRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Hs-#+IvqUFU581q");
      MockDate mockDate0 = new MockDate(0, 1012, (-2691), (-2691), 0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Minute minute0 = new Minute(mockDate0, simpleTimeZone0);
      RegularTimePeriod regularTimePeriod0 = minute0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("Hs-#+IvqUFU581q", regularTimePeriod0, minute0);
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, subCategoryAxis0, periodAxis0, defaultIntervalCategoryDataset0, 181, 1, true, categoryItemRendererState0, rectangle0);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition();
      assertTrue(itemLabelPosition1.equals((Object)itemLabelPosition0));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      boolean boolean0 = true;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("@^ ");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, subCategoryAxis0, valueAxis0, (CategoryDataset) null, 1, 10, true, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 10, 171.0F, (-2575.8296F));
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("@^ ");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) statisticalBarRenderer1.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot1.getRangeAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, subCategoryAxis0, valueAxis0, defaultStatisticalCategoryDataset0, 5, (-3157), false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1.0F, 1.0F, (-1010.71F));
      float[][] floatArray0 = new float[2][1];
      float[] floatArray1 = new float[3];
      floatArray1[0] = (float) 10;
      floatArray1[1] = 1047.6521F;
      floatArray1[2] = 1.0F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[6];
      floatArray2[0] = 1.0F;
      floatArray2[1] = 1047.6521F;
      floatArray2[2] = 1.0F;
      floatArray2[3] = 1047.6521F;
      floatArray2[4] = (float) 10;
      floatArray2[5] = 1047.6521F;
      floatArray0[1] = floatArray2;
      PeriodAxis periodAxis0 = new PeriodAxis("Oc.iBWwTjQ2sZk.K@");
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, periodAxis0, periodAxis0);
      BasicStroke basicStroke0 = new BasicStroke();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(fastScatterPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_PAINT);
      waterfallBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, rectangle2D_Float0, (double) stackedAreaRenderer0.ZERO, periodAxis0.DEFAULT_TICK_MARK_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      waterfallBarRenderer0.lookupSeriesStroke(10);
      Color color0 = Color.black;
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-496), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 0.0, true, 0.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DrawingSupplier drawingSupplier0 = scatterRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      ValueMarker valueMarker0 = new ValueMarker(1);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-617.034464), (-156.294063));
      categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition();
      assertTrue(itemLabelPosition1.equals((Object)itemLabelPosition0));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double1 = new Line2D.Double(401.8693361460813, 0.0, 0.0, 0.0);
      Rectangle rectangle1 = line2D_Double0.getBounds();
      statisticalBarRenderer1.setBaseLegendShape(line2D_Double1);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle1);
      statisticalBarRenderer1.setLegendShape(414, statisticalBarRenderer0.DEFAULT_SHAPE);
      statisticalBarRenderer0.setBaseLegendTextFont(statisticalBarRenderer1.DEFAULT_VALUE_LABEL_FONT);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      scatterRenderer0.lookupSeriesShape((-1205));
      stackedAreaRenderer0.equals(scatterRenderer0);
      BarRenderer.setDefaultShadowsVisible(false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.setSeriesURLGenerator((-1417), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      statisticalLineAndShapeRenderer0.equals(layeredBarRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      layeredBarRenderer0.equals(statisticalBarRenderer0);
      int int0 = 1;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-23);
      byteArray0[0] = (byte) (-23);
      boolean boolean0 = false;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1253), 1, byteArray0, 1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 1.0E-8);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("D4b", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getItemMiddle(10, 500, defaultIntervalCategoryDataset0, categoryAxis3D0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double(0.2, 3.0, 1.0F, 3.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double(10, 0.0, (-590.009), 3.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      DecimalFormat decimalFormat0 = new DecimalFormat("Ft>bL?vU44[");
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Unknown layer.", decimalFormat0);
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      statisticalBarRenderer0.setBaseLegendTextFont(statisticalBarRenderer1.DEFAULT_VALUE_LABEL_FONT);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.0);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      scatterRenderer0.clone();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-6667), 10);
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, slidingGanttCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT, moduloAxis0.DEFAULT_AXIS_LINE_STROKE);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 5;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 763.7F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = (float) 500;
      floatArray0[6] = (float) 500;
      floatArray0[7] = 1.0F;
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart1.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      categoryStepRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, moduloAxis0, categoryMarker0, rectangle2D0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(0);
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      statisticalBarRenderer0.clone();
      statisticalBarRenderer0.getSeriesURLGenerator(5);
      lineRenderer3D0.setSeriesURLGenerator(698, (CategoryURLGenerator) null, true);
      boolean boolean0 = lineRenderer3D0.equals(categoryStepRenderer0);
      assertFalse(boolean0);
      
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".CJrNi", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, false, true);
      chartPanel0.getZoomRectangle();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultCategoryDataset0, (-2451), 10);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, subCategoryAxis0, dateAxis0, defaultCategoryItemRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      levelRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, (Rectangle2D) null, categoryPlot0, subCategoryAxis0, dateAxis0, slidingCategoryDataset0, 698, 698, true, 3);
      assertTrue(levelRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1994.0F, (-3140.8F), (-3140.8F), 1994.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest((double) boxAndWhiskerRenderer0.ZERO, 0.05, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultStatisticalCategoryDataset0, 0, (-7), true, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Crosshair crosshair0 = new Crosshair((-477.49071153));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 8, 3769);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingGanttCategoryDataset0, 0, 10, true, 0.0, 3.0, false);
      MockFile mockFile0 = new MockFile("}gI-(m<A=sd'|", "");
      MockFileSystemView.getFileSystemView();
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(mockFile0, fileSystemView0);
      Icon icon0 = mockJFileChooser0.getIcon(mockFile0);
      mockJFileChooser0.enableInputMethods(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.setMaxIcon(icon0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, (-1.0));
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 220, 220, 220, 220, 220, 3, false, false, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1740, 0);
      minMaxCategoryRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingGanttCategoryDataset0, 1740, 0, true, (-2429.53093), 680, true);
      MockFile mockFile0 = new MockFile("Null 'hotspot' argument.", "Null 'alignment' argument.");
      FileSystemView fileSystemView0 = MockFileSystemView.getFileSystemView();
      MockJFileChooser mockJFileChooser0 = new MockJFileChooser(mockFile0, fileSystemView0);
      Icon icon0 = mockJFileChooser0.getIcon(mockFile0);
      minMaxCategoryRenderer0.setMaxIcon(icon0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      int int0 = barRenderer3D0.getColumnCount();
      assertEquals(0, int0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 0.0F, 1994.0F, 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      DateAxis dateAxis0 = new DateAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2332.5F), 392.0F, 4049.0168F, (-1010.71F));
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("@^ ");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, subCategoryAxis0, valueAxis0, defaultStatisticalCategoryDataset0, 0, 0, true, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Crosshair crosshair0 = new Crosshair(0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1971, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      jFreeChart0.setPadding(combinedDomainCategoryPlot0.DEFAULT_INSETS);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Rectangle rectangle0 = new Rectangle();
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 10);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      Crosshair crosshair0 = new Crosshair(478.6618094329368, scatterRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      crosshair0.getLabelAnchor();
      statisticalBarRenderer0.getItemLabelGenerator(10, (-1452), false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertTrue(combinedRangeCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      textBox0.getInteriorGap();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(1890.87840858336, categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer0.getItemLabelGenerator(0, 0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1, 0.0, true);
      Vector<GanttRenderer> vector0 = new Vector<GanttRenderer>();
      CategoryDataset categoryDataset0 = null;
      categoryStepRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      String string0 = "2J";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("2J");
      SpreadsheetDate spreadsheetDate0 = null;
      try {
        spreadsheetDate0 = new SpreadsheetDate(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SpreadsheetDate: Serial must be in range 2 to 2958465.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.9F, 0.0F, (-14.292703F), 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      DateAxis dateAxis0 = new DateAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ValueMarker valueMarker0 = new ValueMarker((-1136.5035278628625), combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, valueMarker0, rectangle2D_Float0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      categoryStepRenderer0.getItemLabelGenerator(0, 2410, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean1 = stackedBarRenderer0.getRenderAsPercentages();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.getInteriorGap();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(500000.0, ganttRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      textBox0.getInteriorGap();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(1890.87840858336, categoryStepRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Graphics2D graphics2D0 = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer0.getItemLabelGenerator(0, 0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = rectangle0.getBounds2D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, 15, 15, 4, 7, 14, true, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), (-808.2861), false);
      Point point0 = new Point(15, 2000);
      Rectangle rectangle0 = new Rectangle(point0);
      Rectangle2D rectangle2D0 = rectangle0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Crosshair crosshair0 = new Crosshair((-477.49071153));
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      PlotOrientation plotOrientation1 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.setFrameFromCenter(8.0, 630.38, (double) 0, 3.0);
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair1 = new Crosshair(2777.2);
      crosshair1.getLabelAnchor();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      statisticalBarRenderer1.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D_Float0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      boolean boolean0 = scatterRenderer0.equals(lengthAdjustmentType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TextBox textBox0 = new TextBox((TextBlock) null);
      textBox0.getInteriorGap();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(1.0E11, categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Crosshair crosshair1 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair1.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(lengthAdjustmentType0, false);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle rectangle1 = new Rectangle(rectangle0);
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle1);
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer0.getItemLabelGenerator((-1452), 71, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertFalse(combinedRangeCategoryPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-503.03265F), 10, 2998.59F, 1.0F);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1763.7834673), "P%nGd#M?5");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalBarRenderer0.ZERO, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, categoryMarker0, rectangle2D_Float0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(4478.820095476478, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      crosshair0.setLabelBackgroundPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      crosshair0.getLabelAnchor();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      scatterRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 2704.3468;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 965.1605208329117;
      doubleArray2[1] = (double) scatterRenderer0.ZERO;
      doubleArray2[2] = 0.2;
      doubleArray2[3] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[4] = (double) 1.0F;
      doubleArray2[5] = (double) scatterRenderer0.ZERO;
      doubleArray2[6] = 4.0;
      doubleArray2[7] = 0.2;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(combinedDomainCategoryPlot1, defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis(",)", zoneInfo0);
      DateTickUnit dateTickUnit0 = dateAxis0.getTickUnit();
      Date date0 = dateTickUnit0.rollDate(dateAxis0.DEFAULT_ANCHOR_DATE, (TimeZone) zoneInfo0);
      Second second0 = new Second(date0, zoneInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, ",)");
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 10, second0, 242.25897907, scatterRenderer0.DEFAULT_PAINT, stroke0);
      Layer layer0 = Layer.BACKGROUND;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Layer layer1 = Layer.FOREGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0F, 0.05, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, (-1825), 3907, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Crosshair crosshair0 = new Crosshair((-477.49071153));
      crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      statisticalBarRenderer1.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      crosshair0.getLabelAnchor();
      statisticalBarRenderer0.getItemLabelGenerator((-1452), 10, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertEquals(0, combinedRangeCategoryPlot0.getCrosshairDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2477.7427F, (-3849.0F), 1400.0245F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      ganttRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      scatterRenderer0.getSeriesToolTipGenerator(5);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0, tableOrder0);
      spiderWebPlot0.getURLGenerator();
      ganttRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) null, false);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, (CategoryAxis) null, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Crosshair crosshair0 = new Crosshair((-477.49071153));
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      textBox0.getInteriorGap();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_TICK_LABEL_INSETS;
      rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      statisticalBarRenderer1.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      crosshair0.getLabelAnchor();
      statisticalBarRenderer1.getItemLabelGenerator(2, 0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      float float0 = (-704.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.9F, 0.0F, 0.0F, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      CategoryAxis categoryAxis0 = null;
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ValueMarker valueMarker0 = new ValueMarker((-1136.5035278628625), combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, (ValueAxis) null, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase((double) stackedBarRenderer3D0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, (-704.0F), 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      CategoryAxis categoryAxis0 = null;
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      float float0 = 1270.9827F;
      CategoryMarker categoryMarker0 = new CategoryMarker(boxAndWhiskerRenderer0.ZERO, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, (CategoryAxis) null, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 10, false, 10, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, (-704.0F), 1715.0F, 10);
      stackedAreaRenderer0.getBaseOutlineStroke();
      BufferedImage bufferedImage0 = new BufferedImage(6, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0, 0.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, rectangle2D_Float0, taskSeriesCollection0, 15, 10, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.9F, 0.0F, 0.0F, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.2, (-704.0F), (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultStatisticalCategoryDataset0, 10, 20, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(1, 1);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.getItemLabelGenerator(1, 1, true);
      Crosshair crosshair0 = new Crosshair(0.0);
      crosshair0.getLabelAnchor();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      TextBox textBox0 = new TextBox((TextBlock) null);
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getItemLabelGenerator(259, 259, false);
      categoryStepRenderer0.getSeriesItemLabelGenerator((-117));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0, false);
      defaultCategoryItemRenderer0.setSeriesShapesFilled(2, false);
      assertFalse(defaultCategoryItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase((double) stackedBarRenderer3D0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, (-704.0F), 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      CategoryAxis categoryAxis0 = null;
      statisticalBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      rectangle2D_Float0.height = 1270.9827F;
      categoryStepRenderer0.createState(plotRenderingInfo0);
      double double0 = 0.0;
      int int0 = 86;
      int int1 = 1;
      // Undeclared exception!
      try { 
        ganttRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 10, false, 10, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, (-704.0F), 1715.0F, 10);
      stackedAreaRenderer0.getBaseOutlineStroke();
      BufferedImage bufferedImage0 = new BufferedImage(6, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0, 0.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Crosshair crosshair0 = new Crosshair(1.0);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, combinedDomainCategoryPlot1.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot1, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2042.834F), 10, 1.0F, 2);
      scatterRenderer0.getBaseOutlineStroke();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0, 1000000.0, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(levelRenderer0, false);
      rendererChangeEvent0.getChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Mr", 2, 3712.894063042);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setItemMargin(0);
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      stackedBarRenderer3D0.clone();
      boolean boolean0 = scatterRenderer0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 10, false, 10, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, (-704.0F), 1715.0F, 10);
      stackedAreaRenderer0.getBaseOutlineStroke();
      BufferedImage bufferedImage0 = new BufferedImage(6, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0, 0.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo1.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        statisticalBarRenderer1.initialise((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot1, taskSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase((double) stackedBarRenderer3D0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      boolean boolean0 = true;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      standardEntityCollection0.clear();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, (-704.0F), 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      statisticalBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(2259.535311, 0.0, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultStatisticalCategoryDataset0, 10, 10, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase((double) stackedBarRenderer3D0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      boolean boolean0 = true;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, (-704.0F), 10);
      Stroke stroke0 = ganttRenderer0.getBaseOutlineStroke();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, 8.0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, stroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)stackedAreaRenderer0.lookupLegendShape((-2942));
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      stackedAreaRenderer1.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      statisticalBarRenderer0.setBase((double) stackedAreaRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle2D_Double0, (-673.8650110294), stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      BarPainter barPainter0 = layeredBarRenderer0.getBarPainter();
      layeredBarRenderer0.setBarPainter(barPainter0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.removeRangeMarker(10, (Marker) categoryMarker0, layer0, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 8, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      TimeZone timeZone0 = TimeZone.getTimeZone("R$erg9");
      Locale locale0 = Locale.CANADA_FRENCH;
      DateAxis dateAxis0 = new DateAxis("R$erg9", timeZone0, locale0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-682));
      float[][] floatArray0 = new float[4][7];
      float[] floatArray1 = new float[2];
      floatArray1[0] = (float) (-682);
      floatArray1[1] = (float) 10;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[6];
      floatArray2[0] = 1.0F;
      floatArray2[1] = (float) 0;
      floatArray2[2] = 0.0F;
      floatArray2[3] = (float) 10;
      floatArray2[4] = 2.0F;
      floatArray2[5] = (float) 0;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[0];
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[6];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (float) 0;
      floatArray4[2] = (float) 500;
      floatArray4[3] = (float) 10;
      floatArray4[4] = (float) 10;
      floatArray4[5] = 1047.6521F;
      floatArray0[3] = floatArray4;
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, dateAxis0, dateAxis0);
      Stroke stroke0 = fastScatterPlot0.getDomainGridlineStroke();
      waterfallBarRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle0, (double) stackedBarRenderer3D0.ZERO, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stroke0);
      waterfallBarRenderer0.lookupSeriesStroke(3);
      Color color0 = (Color)waterfallBarRenderer0.getPositiveBarPaint();
      assertEquals((-4144960), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot1, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-2008.62), false);
      statisticalBarRenderer0.getLegendItemURLGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        NumberFormat.getNumberInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("D:'{b", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.0, true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, (-633.75377361549), false, 10, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 200, 4, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("D:'{b", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      categoryPointerAnnotation0.setBaseRadius((double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getStartPercent();
      int int0 = statisticalBarRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot1.getOrientation();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      scatterRenderer0.getSeriesItemLabelGenerator(0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      LegendItem legendItem0 = statisticalBarRenderer0.getLegendItem(10, (-782));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(465.767298465698, (-993.330366), false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "4{fv";
      stringArray0[1] = "D/$g*pP";
      stringArray0[2] = "";
      stringArray0[3] = "Null 'paint' argument.";
      stringArray0[4] = "IBZlq>f6bpdS,?#>w";
      Number[][] numberArray0 = new Number[4][8];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 3.0;
      numberArray1[1] = (Number) 0.2;
      numberArray1[2] = (Number) 8.0;
      numberArray1[3] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[4];
      numberArray4[0] = (Number) 8.0;
      numberArray4[1] = (Number) 3.0;
      numberArray4[2] = (Number) 0.2;
      numberArray4[3] = (Number) 0.2;
      numberArray0[3] = numberArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      stackedAreaRenderer0.lookupLegendShape((-2942));
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      stackedAreaRenderer1.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      statisticalBarRenderer0.setBase((double) stackedAreaRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      scatterRenderer0.getSeriesShapesFilled(10);
      Layer layer0 = Layer.BACKGROUND;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 0.8, stackedBarRenderer3D0.ZERO, 12.0, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0.getLabelToolTip());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot2.setRangeAxisLocation(axisLocation0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, valueAxis0, areaRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation(")7gWS$qc[!8&CJ-Wt?", true, 0.0, 0.0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawOutlines();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      int int0 = (-3002);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)stackedAreaRenderer0.lookupLegendShape((-3002));
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      statisticalBarRenderer0.setBase((double) stackedAreaRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = null;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawOutlines();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.clearSeriesStrokes(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      int int0 = 9;
      Year year0 = new Year(9);
      year0.previous();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Base tool tip generator not cloneable.";
      stringArray0[1] = "";
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 9999;
      numberArray1[1] = (Number) (-9999);
      numberArray1[2] = (Number) scatterRenderer0.ZERO;
      numberArray1[3] = (Number) scatterRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) (-9999);
      numberArray2[1] = (Number) scatterRenderer0.ZERO;
      numberArray2[2] = (Number) (-9999);
      numberArray2[3] = (Number) (-9999);
      numberArray2[4] = (Number) (-9999);
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[5];
      numberArray4[0] = (Number) scatterRenderer0.ZERO;
      numberArray4[1] = (Number) (-9999);
      numberArray4[2] = (Number) (-9999);
      scatterRenderer0.getPassCount();
      numberArray4[3] = (Number) 1;
      numberArray4[4] = (Number) scatterRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) scatterRenderer0.ZERO;
      numberArray5[1] = (Number) (-9999);
      numberArray5[2] = (Number) scatterRenderer0.ZERO;
      numberArray5[3] = (Number) (-9999);
      numberArray5[4] = (Number) (-9999);
      double double0 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray5[5] = (Number) 8.0;
      numberArray5[6] = (Number) scatterRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawOutlines();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-2191.185742227));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.2, layeredBarRenderer0.ZERO, 72.09134598221847, 0, (-3035.680396588849), 0.0, plotOrientation0);
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      textBox0.getShadowPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, defaultCategoryItemRenderer0.DEFAULT_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      waterfallBarRenderer0.getShadowPaint();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Locale locale0 = Locale.PRC;
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase(0.0);
      assertEquals(4.0, statisticalBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(30.0, 30.0);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D1.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, (-1), 3, false, 0.0, 8.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Locale locale0 = Locale.PRC;
      locale0.clone();
      NumberFormat.getCurrencyInstance(locale0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBase((double) stackedBarRenderer3D0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, (-704.0F), 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getFillBox();
      statisticalBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(50000.0, 0.0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D1.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultStatisticalCategoryDataset0, 3, 10, true, 0.0, 10.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.lookupSeriesPaint(15);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      categoryStepRenderer0.setSeriesItemLabelGenerator(3, categoryItemLabelGenerator0, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(532, false);
      statisticalLineAndShapeRenderer0.getUseFillPaint();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      String string0 = "";
      // Undeclared exception!
      try { 
        NumberFormat.getNumberInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Mr", 10, (-278.607817829322));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, (-145), 9, false, 1.0E-6, (double) areaRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(1, (-1037));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      stackedBarRenderer3D0.getRenderAsPercentages();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(entityCollection0, scatterRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, (-1325), (-1770), true, 938, (double) scatterRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(1, (-1037));
      scatterRenderer0.getBaseURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.getRenderAsPercentages();
      double[][] doubleArray0 = new double[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = new Range(1, 12.0);
      DrawingSupplier drawingSupplier0 = scatterRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Mr", 1.0F, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 938, 938, false, 1.0F, 75.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(boxAndWhiskerRenderer0.DEFAULT_PAINT, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      waterfallBarRenderer0.createState(plotRenderingInfo0);
      waterfallBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("D:'{b", statisticalLineAndShapeRenderer0.ZERO, 237.0, (double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("D:'{b");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      stackedAreaRenderer0.setRenderAsPercentages(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedAreaRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      NumberFormat.getCurrencyInstance(locale0);
      statisticalBarRenderer0.setBase((double) statisticalLineAndShapeRenderer0.ZERO);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getFirstBarPaint();
      waterfallBarRenderer0.getSeriesURLGenerator((-1225));
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(valueAxis0);
      categoryPlot0.setRangePannable(false);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot1.getRangeAxisLocation(27);
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
      statisticalLineAndShapeRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMaximumBarWidth(0.05);
      assertEquals(0.2, boxAndWhiskerRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Mr", false, (-2535.7229256776));
      boolean boolean0 = categoryStepRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      int int0 = categoryStepRenderer0.getRowCount();
      assertEquals(0, int0);
      
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(false);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      defaultCategoryItemRenderer0.getSeriesShapesVisible(0);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(6);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("`oe");
      stackedAreaRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      statisticalBarRenderer0.lookupSeriesStroke(1);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      boolean boolean0 = stackedAreaRenderer0.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      Locale.getISOLanguages();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      statisticalBarRenderer0.setBase(0.0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      ganttRenderer0.setStartPercent((double) statisticalBarRenderer0.ZERO);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("`oe", numberFormat0);
      boolean boolean1 = defaultCategoryItemRenderer0.equals(boxAndWhiskerToolTipGenerator0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      statisticalLineAndShapeRenderer0.getItemLabelGenerator((-898), 260, true);
      scatterRenderer0.getURLGenerator((-2915), 0, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      stackedAreaRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesShapesVisible((-2783), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      scatterRenderer0.getItemLabelGenerator(1, 1, true);
      scatterRenderer0.getURLGenerator(0, 0, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer1.isMeanVisible();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.getItemLabelGenerator(0, 1, false);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(180.0, 12.0);
      barRenderer3D0.getURLGenerator(1, 1, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer1.isMeanVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      scatterRenderer1.getRangeAxis(categoryPlot0, 10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot1.getRangeAxisLocation(10);
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 1.0F, 3895.617730103071, 10, (-221.70979453510395), (-1503.0843197048775), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.getItemLineVisible(10, 69);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 1.0F, 3895.617730103071, 10, (-221.70979453510395), (-1503.0843197048775), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1892.3800158, 1892.3800158);
      barRenderer3D0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      barRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      barRenderer3D0.setDrawBarOutline(true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      stackedBarRenderer3D1.getRenderAsPercentages();
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 8.0;
      doubleArray1[1] = 1892.3800158;
      doubleArray1[2] = (double) defaultCategoryItemRenderer0.ZERO;
      doubleArray1[3] = 0.2;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = (double) stackedBarRenderer3D1.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) statisticalBarRenderer0.ZERO;
      doubleArray1[4] = 3.0;
      doubleArray2[2] = 441.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 12.0;
      doubleArray2[5] = 3.0;
      doubleArray2[6] = 3.0;
      doubleArray2[7] = 8.0;
      doubleArray2[8] = 3.0;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      DrawingSupplier drawingSupplier0 = scatterRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      boolean boolean0 = false;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesToolTipGenerator((-1276), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.getItemLineVisible(10, 69);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 1.0F, 3895.617730103071, 10, (-221.70979453510395), (-1503.0843197048775), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      defaultCategoryItemRenderer0.getSeriesShapesVisible(0);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(6);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      stackedAreaRenderer0.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      NumberFormat.getCurrencyInstance(locale0);
      stackedAreaRenderer0.setSeriesItemLabelGenerator(6, (CategoryItemLabelGenerator) null, true);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.lookupSeriesFillPaint((-1150));
      defaultCategoryItemRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      defaultCategoryItemRenderer0.getBaseToolTipGenerator();
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, true);
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Boolean boolean0 = new Boolean("");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        NumberFormat.getCurrencyInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer1.getSeriesShapesVisible(1);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getSeriesItemLabelGenerator(1);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      Locale locale0 = Locale.PRC;
      NumberFormat.getCurrencyInstance(locale0);
      boxAndWhiskerToolTipGenerator0.clone();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("({0}, {1}) = {2}", 0.2, 0.0, 3.0);
      boolean boolean0 = categoryStepRenderer0.removeAnnotation(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getPositiveItemLabelPositionFallback();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      BarRenderer.getDefaultShadowsVisible();
      defaultCategoryItemRenderer0.getBaseShapesVisible();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(multiplePiePlot0);
      multiplePiePlot0.notifyListeners(plotChangeEvent0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      multiplePiePlot0.setDataset(defaultKeyedValues2DDataset0);
      multiplePiePlot0.getPieChart();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.equals(multiplePiePlot0);
      Locale locale0 = Locale.CHINESE;
      NumberFormat.getCurrencyInstance(locale0);
      defaultCategoryItemRenderer0.clone();
      statisticalBarRenderer0.setErrorIndicatorStroke(intervalBarRenderer0.DEFAULT_STROKE);
      assertFalse(intervalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = 1892.3800158;
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1892.3800158, 1892.3800158);
      barRenderer3D0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      barRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      boolean boolean0 = true;
      barRenderer3D0.setDrawBarOutline(true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setUseFillPaint(false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth(3.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      int int0 = 2;
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = (-443);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(2, 2, intArray0, 2, true, 2, (-443));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      Boolean boolean0 = new Boolean("({0}, {1}) = {2}");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 1953, (-1));
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      scatterRenderer0.getItemShapeFilled(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.getRenderAsPercentages();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      scatterRenderer0.getItemLabelGenerator(1, 1, true);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      stackedBarRenderer3D0.getRenderAsPercentages();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.setSeriesKeys((Comparable[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'seriesKeys' argument.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      statisticalLineAndShapeRenderer0.getPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer1.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.getItemLineVisible(10, 69);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      scatterRenderer0.setUseSeriesOffset(false);
      scatterRenderer0.getUseSeriesOffset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getMaximumBarWidth();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.isMedianVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.hashCode();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(boxAndWhiskerRenderer0.DEFAULT_PAINT, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.getPositiveBarPaint();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.setDatasetIndex(10);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, (Comparable) null, 0.0F, (-3778.69523279301), 10, 10, 270.0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = null;
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) layeredBarRenderer0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) multiTreeUI0;
      JTree jTree0 = new JTree(objectArray0);
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      synthTreeUI0.getEditingPath(jTree0);
      // Undeclared exception!
      try { 
        multiTreeUI0.getPathBounds(jTree0, (TreePath) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("D:'{b", statisticalLineAndShapeRenderer0.ZERO, 237.0, (double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      statisticalLineAndShapeRenderer0.getSeriesShapesVisible(3);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.clone();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JPasswordField jPasswordField0 = new JPasswordField(3);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(10, 3);
      Comparable<LevelRenderer>[] comparableArray0 = (Comparable<LevelRenderer>[]) Array.newInstance(Comparable.class, 7);
      // Undeclared exception!
      try { 
        SerialDate.createInstance((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(0);
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      defaultCategoryItemRenderer0.getUseSeriesOffset();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      // Undeclared exception!
      try { 
        NumberFormat.getCurrencyInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer.setDefaultBarPainter(gradientBarPainter0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setDrawOutlines(true);
      layeredBarRenderer0.setSeriesBarWidth(1, 1671.5);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getSeriesNegativeItemLabelPosition(1);
      layeredBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      layeredBarRenderer0.getIncludeBaseInRange();
      statisticalLineAndShapeRenderer0.getSeriesShapesVisible((-2670));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      statisticalLineAndShapeRenderer0.getPlot();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineRenderer3D0.setSeriesURLGenerator(1492, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      lineRenderer3D0.getLegendShape(66);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer1.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0.getLabelToolTip());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(1, 1);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      stackedBarRenderer3D0.createState(plotRenderingInfo0);
      stackedBarRenderer3D0.getRenderAsPercentages();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(2.0, 1.0F, false);
      double[][] doubleArray0 = new double[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.removeAnnotations();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D1.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 0, (-1890), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      defaultCategoryItemRenderer0.getSeriesShapesVisible(0);
      defaultCategoryItemRenderer0.getItemShapeFilled(0, 0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      scatterRenderer0.setDrawOutlines(true);
      defaultCategoryItemRenderer0.setSeriesShapesFilled(118, (Boolean) null);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.removeAnnotations();
      waterfallBarRenderer0.getNegativeBarPaint();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(statement0).executeQuery(anyString());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      defaultCategoryItemRenderer0.getPassCount();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "$E$+eEkI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.getRenderAsPercentages();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNull(range0);
      
      scatterRenderer0.getDrawingSupplier();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setItemMargin(0.0);
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = new BoxAndWhiskerToolTipGenerator();
      statisticalBarRenderer0.equals(boxAndWhiskerToolTipGenerator1);
      // Undeclared exception!
      try { 
        NumberFormat.getCurrencyInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesShape(1);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineRenderer3D0.setSeriesURLGenerator(1492, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      lineRenderer3D0.equals(boxAndWhiskerRenderer0);
      lineRenderer3D0.getLegendShape(81);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("s!QG[!/", piePlot3D0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      stackedBarRenderer3D0.getRenderAsPercentages();
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.setSeriesKeys((Comparable[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'seriesKeys' argument.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(0);
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      statisticalBarRenderer0.getURLGenerator(899, (-443), true);
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      defaultCategoryItemRenderer0.getUseSeriesOffset();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      // Undeclared exception!
      try { 
        NumberFormat.getCurrencyInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      int int0 = 0;
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(0);
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.getRenderAsPercentages();
      String string0 = "0rvmHp4";
      // Undeclared exception!
      try { 
        NumberFormat.getCurrencyInstance((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = 40;
      int int1 = 4371;
      defaultCategoryItemRenderer0.getToolTipGenerator(40, 4371, false);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.getPositiveItemLabelPositionFallback();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getNegativeBarPaint();
      BarRenderer.getDefaultShadowsVisible();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendTextPaint(4371);
      stackedAreaRenderer0.getPassCount();
      defaultCategoryItemRenderer0.getBaseShapesVisible();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RendererChangeEvent rendererChangeEvent0 = null;
      try {
        rendererChangeEvent0 = new RendererChangeEvent((Object) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setAutoPopulateSeriesStroke(false);
      defaultCategoryItemRenderer0.getSeriesItemLabelGenerator(0);
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setDrawOutlines(false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("u_>W?3Bo:*5bJ6V#");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer1.setSeriesURLGenerator(1303, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      statisticalLineAndShapeRenderer1.getItemLineVisible(3103, 2541);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.getUseSeriesOffset();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      double double0 = intervalBarRenderer0.getMaximumBarWidth();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineRenderer3D0.setSeriesURLGenerator(1492, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      lineRenderer3D0.equals((Object) null);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("s!QG[!/", piePlot3D0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineRenderer3D0.setSeriesURLGenerator(1492, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      lineRenderer3D0.equals(boxAndWhiskerRenderer0);
      lineRenderer3D0.getLegendShape(81);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = new CustomCategoryURLGenerator();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("s!QG[!/", piePlot3D0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1388.945, 1388.945, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getRenderAsPercentages();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncompletePaint(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ganttRenderer0.setStartPercent(1388.945);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getPassCount();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 2962;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(2962, (-7), (byte[]) null, 1, true, (-643));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2.5E-9, 1279.4299819807);
      barRenderer3D0.setShadowVisible(true);
      barRenderer3D0.getLegendItem(681, (-4802));
      barRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      assertTrue(barRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setDrawOutlines(true);
      int int0 = 1;
      layeredBarRenderer0.setSeriesBarWidth(1, 1671.5);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getSeriesNegativeItemLabelPosition(1);
      layeredBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      layeredBarRenderer0.getIncludeBaseInRange();
      statisticalLineAndShapeRenderer0.getSeriesShapesVisible((-2670));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      boolean boolean0 = false;
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      DefaultPieDataset defaultPieDataset1 = new DefaultPieDataset(defaultPieDataset0);
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset1);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.axis.PeriodAxisLabelInfo", piePlot3D0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1706, (-2670), (ChartRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (1706) and height (-2670) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      int int0 = 0;
      String string0 = "ItemLabelGenerator not cloneable.";
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle0.createIntersection(rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        intervalBarRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis3D0, categoryItemRendererState0, 2541, 1303);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 1303
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(557.2013757732, (-2535.904876));
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getPositiveItemLabelPositionFallback();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItem((-1547), (-1547));
      scatterRenderer0.setDefaultEntityRadius((-1547));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getMaximumBarWidth();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = layeredBarRenderer0.getSeriesItemLabelGenerator((-1));
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Color color0 = Color.blue;
      minMaxCategoryRenderer0.setGroupPaint(color0);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
  }
}
