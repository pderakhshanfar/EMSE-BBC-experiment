/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 11:14:39 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.RescaleOp;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.text.AttributedCharacterIterator;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.SimpleTimeZone;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.YIntervalRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.gantt.XYTaskDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, rectangle2D0, defaultKeyedValues2DDataset0, 1340, 1, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1340, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      scatterRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, minMaxCategoryRenderer0.ZERO, minMaxCategoryRenderer0.ZERO, 2.5E8, 4205, 4205, (double) minMaxCategoryRenderer0.ZERO, plotOrientation0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(10, 47);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) rectangle0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 8.0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle0, rectangle2D0, legendTitle0.DEFAULT_PADDING, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(5.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      Rectangle rectangle0 = new Rectangle(point0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle0, categoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      Rectangle rectangle0 = new Rectangle(point0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle0, categoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(8.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Week week0 = new Week();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("Pierre-Marie Le Biot");
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1, 0.0F, (-555.4439F), 0.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      PaintScale paintScale0 = xYBlockRenderer0.getPaintScale();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2458), "]");
      Locale locale0 = Locale.JAPANESE;
      DateAxis dateAxis0 = new DateAxis("({0}, {1}) = {3} - {4}", simpleTimeZone0, locale0);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, dateAxis0);
      double double0 = ganttRenderer0.getItemMiddle(week0, week0, defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, rectangle2D0, paintScaleLegend0.DEFAULT_POSITION);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("jRML[@IyTT", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2372, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(10, 10);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2065.73317), (-2065.73317), 0.0, 5);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("({0}, {1}) = {3} - {4}");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("({0}, {1}) = {3} - {4}");
      Layer layer0 = Layer.FOREGROUND;
      categoryStepRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, logarithmicAxis0, layer0, (PlotRenderingInfo) null);
      assertTrue(subCategoryAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      layeredBarRenderer0.addEntity(standardEntityCollection0, statisticalLineAndShapeRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 0, 0, false, (double) statisticalLineAndShapeRenderer0.ZERO, 0);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 102);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalLineAndShapeRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 0.2, (Comparable) 0.2, (Comparable) stackedBarRenderer3D0.ZERO);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      layeredBarRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 0, 0, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, waterfallBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Rectangle2D rectangle2D0 = colorConvertOp0.getBounds2D(bufferedImage0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getSeriesURLGenerator((-2766));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      int int0 = statisticalLineAndShapeRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = lineAndShapeRenderer0.getRangeAxis(categoryPlot0, 1865);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X:Ww'i");
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, symbolAxis0, scatterRenderer0);
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(categoryPlot0, 10);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) scatterRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      ValueAxis valueAxis1 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 3);
      assertSame(valueAxis0, valueAxis1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      LogAxis logAxis0 = new LogAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, logAxis0, statisticalLineAndShapeRenderer0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, (-736));
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(392.2605746452, (-271.683648));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, barRenderer3D0);
      barRenderer3D0.getRangeAxis(categoryPlot0, 6);
      assertEquals((-391.2605746452), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-516.4367218467), 0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertTrue(valueAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      CategoryPlot categoryPlot1 = statisticalLineAndShapeRenderer0.getPlot();
      assertEquals(1, categoryPlot1.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = waterfallBarRenderer0.getItemLabelGenerator(1420, 1420, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      DrawingSupplier drawingSupplier0 = barRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 3.0, "org.jfree.data.Range");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryAxis categoryAxis0 = waterfallBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, jDBCCategoryDataset0);
      assertTrue(categoryAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = boxAndWhiskerRenderer0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, customCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator1 = (IntervalCategoryToolTipGenerator)scatterRenderer0.getBaseToolTipGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)scatterRenderer0.getBaseItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][4];
      Number[] numberArray1 = new Number[9];
      numberArray1[2] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(275.25036, 3.0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.2, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 1.0F, (Comparable) 1.0F, (Comparable) 1.0F);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(1.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Long long0 = new Long((-1478L));
      defaultKeyedValues2DDataset0.addValue((Number) long0, (Comparable) 0.2, (Comparable) statisticalBarRenderer0.ZERO);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals((-1478.0), range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(15);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("r=T;,n\"");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D rectangle2D0 = waterfallBarRenderer0.createHotSpotBounds(graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 6, 10, true, categoryItemRendererState0, rectangle2D_Float0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesURLGenerator((-808), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesURLGenerator((-4096), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat("n9pTn9d]");
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("n9pTn9d]", decimalFormat0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesToolTipGenerator((-2343), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesToolTipGenerator((-743), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-613), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_PAINT, scatterRenderer0.DEFAULT_PAINT);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesItemLabelGenerator((-2159), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 2007, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(30, 10);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 6, 0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.initialise(graphics2D0, rectangle0, categoryPlot0, slidingCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(4, 4, 4);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[9];
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 0.5F, 10, 10);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 4121, (-3283));
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(10, 2.0F, graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis0, (ValueAxis) null, slidingGanttCategoryDataset0, (-3053), 200, true, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4321, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-2609), 3, 10, 3, (-319), 15, false, true, true, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(10, 0.0F, graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis0, valueAxis0, defaultKeyedValues2DDataset0, 10, (-11), false, categoryStepRenderer_State0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.4, 0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getRangeAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis(";");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
      try { 
        layeredBarRenderer0.getItemMiddle(0.0F, 1.0F, defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-919), 79);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getItemMiddle(0.0F, 0.0F, slidingGanttCategoryDataset0, (CategoryAxis) null, rectangle2D_Float0, rectangleEdge0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Comparable<AttributedCharacterIterator.Attribute>[] comparableArray0 = (Comparable<AttributedCharacterIterator.Attribute>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[8][3];
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
      try { 
        barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Number[][] numberArray0 = new Number[9][0];
      Number[] numberArray1 = new Number[9];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "");
      ValueMarker valueMarker0 = new ValueMarker((double) waterfallBarRenderer0.ZERO, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      DateAxis dateAxis0 = new DateAxis("d\")zdlum&htJrZR?vD", zoneInfo0, locale0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1033.75F, 0.0F, (-573.0F), 1033.75F, 0.0F, 1140);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, dateAxis0, rectangle2D0, 0.0, dateAxis0.DEFAULT_AXIS_LINE_PAINT, dateAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel(graphics2D0, plotOrientation0, taskSeriesCollection0, 451, 4, true, 166.6, 1.0F, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 451, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawBackground((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.event.TitleChangeListener", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(10, 8);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawAnnotations(graphics2D0, rectangle0, categoryAxis0, cyclicNumberAxis0, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis("c8xCU@##F^");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 2.0F, 2143.0F, (-1884.42F));
      // Undeclared exception!
      try { 
        ganttRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis0, symbolAxis0, defaultCategoryDataset0, 2, 0, true, (CategoryItemRendererState) null, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(78, 9, 9);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      IntervalMarker intervalMarker0 = new IntervalMarker(135.0, 0.05);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 0, 0, false, 1.0E-5, 1026.92028075939);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[2][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 10, (-1), true, 2215.18928054089, (double) statisticalLineAndShapeRenderer0.ZERO);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, boxAndWhiskerRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-1), 5, true, 3256.0510188314, 2924.1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity((EntityCollection) null, statisticalLineAndShapeRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, (-804), 2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-1), 0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Base tool tipgenerator not cloneable.", stackedAreaRenderer0.ZERO, 0.0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("D0}t4", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) null, categoryStepRenderer0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, categoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultCategoryDataset0, 0, 10, false, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, (double) lineAndShapeRenderer0.ZERO, lineAndShapeRenderer0.ZERO, 0.0, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      lineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertEquals(2, lineAndShapeRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertTrue(stackedBarRenderer0.getIncludeBaseInRange());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getURLGenerator(10, 10, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(1545, (CategoryToolTipGenerator) null, true);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = layeredBarRenderer0.getToolTipGenerator(10, 7, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("SeriesChangeType.CHANGE_KEY", dateFormat0);
      scatterRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getSeriesToolTipGenerator(584);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 1868);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(dateAxis0.DEFAULT_TICK_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, dateAxis0.DEFAULT_TICK_MARK_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("{P:`DdTXuPm9 b{,0");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      boolean boolean0 = waterfallBarRenderer0.hitTest(0.0, 3268.0351039, graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis3D0, dateAxis0, defaultKeyedValues2DDataset0, (-1330), 5, false, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 0.5F, 10, 10);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(1.0F, 4.0, graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, (CategoryDataset) null, 9, 1739, false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 0.5F, 10, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = categoryAxis0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Float0, false, false);
      // Undeclared exception!
      try { 
        lineRenderer3D0.createHotSpotBounds(graphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis0, (ValueAxis) null, defaultKeyedValues2DDataset0, 2, (-2855), true, categoryStepRenderer_State0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      layeredBarRenderer0.setSeriesURLGenerator(1025, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, jDBCCategoryDataset0, 1025, 3, true, (double) stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1025, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3.0);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", numberFormat0);
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      layeredBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 10, 500, true, 0.05, 500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, slidingGanttCategoryDataset0, 2377, 2377, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      scatterRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        scatterRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ValueAxis valueAxis0 = defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertNull(valueAxis0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      LineAndShapeRenderer lineAndShapeRenderer1 = (LineAndShapeRenderer)lineAndShapeRenderer0.clone();
      assertTrue(lineAndShapeRenderer1.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO, stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("|~Yo\"`p");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, numberAxis3D0, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("BJtkM<", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(500, 500, (ChartRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("8W.|jS", ringPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500, 10, chartRenderingInfo0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(xYTaskDataset0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      // Undeclared exception!
      try { 
        ganttRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, (-885), 3, true, (-1633.73), 3.0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      scatterRenderer0.setPlot(combinedDomainCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, true, 10, 10, 10, 10, 10, plotOrientation0);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.2, 0.2, 2423.47039166, 298, (double) statisticalBarRenderer0.ZERO, 0.8, plotOrientation0);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.0F, false, (double) scatterRenderer0.ZERO, 1114, 10, 0.0F, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, true, 10, 10, 10, 10, 10, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      DrawingSupplier drawingSupplier0 = statisticalLineAndShapeRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("}(lwO}@6npDS'?^AB;");
      lineRenderer3D1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Null 'paint' argument.");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(36, 36);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(3, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO, 3.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 2.0F, 0.0, rectangleAnchor0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      Rectangle rectangle0 = new Rectangle(point0);
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 8.0);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(12.0, 10, 0, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, 1.0F, false);
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 1.0F);
      intervalMarker0.setLabel("org.jfree.chart.ui.Contributor");
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(2.0F, logAxis0.getTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(12.0, 10, 0, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, 1.0F, false);
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 1.0F);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(4050, 15);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 1.0F, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle0);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("jRML[@IyTT", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2372, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(10, 10);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.5E10, 47, lineRenderer3D0.DEFAULT_WALL_PAINT);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle0);
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)stackedAreaRenderer0.lookupSeriesShape(6);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("m#Pc9^+6c8~DBSPa");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(timeTableXYDataset0, logarithmicAxis0, defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4425, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, logarithmicAxis0, (Marker) null, rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO, 3.0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(0.2, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      valueMarker0.setLabel("9L,g&DXEj<n)H");
      categoryPlot0.addRangeMarker((Marker) valueMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("vm s$wR{##?p!5/yF", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(0.2, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryPlot0.addRangeMarker((Marker) valueMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(321, 500);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("K/1A");
      Second second0 = new Second();
      PeriodAxis periodAxis0 = new PeriodAxis("K/1A", second0, second0);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, periodAxis0, statisticalLineAndShapeRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(0.0, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE, periodAxis0.DEFAULT_TICK_MARK_PAINT, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D_Double0, point2D_Double0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      statisticalLineAndShapeRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, periodAxis0, valueMarker0, rectangle2D0);
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(5.0E7, 10, 1133.6036924657913, 0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 10.0, false);
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2399.16), 1133.6036924657913);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(1.0E-100, logAxis0.getSmallestValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis0, statisticalLineAndShapeRenderer0);
      statisticalLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertEquals(0.0F, categoryAxis3D0.getMaximumCategoryLabelWidthRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      NumberAxis numberAxis0 = new NumberAxis();
      defaultKeyedValues2DDataset0.addValue((Number) 1.0E-8, (Comparable) 0.05, (Comparable) true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis0, statisticalLineAndShapeRenderer0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.KOREAN;
      DateAxis dateAxis0 = new DateAxis("d\")zdlum&htJrZR?vD", zoneInfo0, locale0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1.0F, 1, 1.0F, 2527.6143F, 1.0F, 2.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, dateAxis0, rectangle2D0, 500, thermometerPlot0.DEFAULT_OUTLINE_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 1.0F, 1.0F, 10);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, 10, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      YIntervalRenderer yIntervalRenderer0 = new YIntervalRenderer();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(integer0, "h[FLmr%<BT\"", (String) null);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, yIntervalRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("2jEh@f#", yIntervalRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(19, 28);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(yIntervalRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle0, (-1575.959333807556), xYPlot0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, fastScatterPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, (-1083.2), (Paint) null, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      lineRenderer3D0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 1.0F, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(12.0, LineRenderer3D.DEFAULT_X_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO, (Comparable) statisticalLineAndShapeRenderer0.ZERO);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-516.4367218467), 0.0F);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("4?Cot_of2%q`");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      assertEquals(0.0, categoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D(".b/jmL|8w");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      YIntervalRenderer yIntervalRenderer0 = new YIntervalRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, numberAxis3D0, numberAxis3D0, yIntervalRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 500, 3303);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, slidingGanttCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((-4622.0), (Comparable) false, (Comparable) 0.5F);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(4050, 15);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      lineRenderer3D0.initialise(graphics2D0, rectangle0, combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      assertEquals(1, lineRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2016.967485), (-2016.967485));
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = barRenderer3D0.getLegendItemLabelGenerator();
      barRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(4.0, barRenderer3D0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO, stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getURLGenerator(1, 1, true);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer1.equals(scatterRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("@", dateFormat0);
      waterfallBarRenderer0.setSeriesToolTipGenerator(1154, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(24, (CategoryItemLabelGenerator) null, false);
      assertEquals(0, stackedAreaRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("8W.|jS", ringPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500, 10, chartRenderingInfo0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(xYTaskDataset0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      ganttRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, (-885), 3, true, (-1633.73), 3.0, true);
      assertTrue(ganttRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      waterfallBarRenderer0.setSeriesItemLabelGenerator(2, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = waterfallBarRenderer0.getItemLabelGenerator(2, 87, true);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2651.0), (-2651.0));
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0);
      assertEquals(0, scatterRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(10, 47);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("a`B!/]Rd3sx ,<xN-G");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "");
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotShape(graphics2D0, rectangle0, combinedDomainCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 488, (-1933), false, categoryStepRenderer_State0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator1 = (StandardCategoryToolTipGenerator)minMaxCategoryRenderer0.getToolTipGenerator(10, 10, false);
      assertEquals("", standardCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = waterfallBarRenderer0.getSeriesItemLabelGenerator(4);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.removeAnnotations();
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawOutline((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("&C]`9VYh");
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      PaintScale paintScale0 = xYShapeRenderer0.getPaintScale();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2011.697006968));
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, cyclicNumberAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend0.getBounds();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle((Comparable) null, (Comparable) null, (CategoryDataset) null, categoryAxis3D0, rectangle2D0, paintScaleLegend0.DEFAULT_POSITION);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      int int0 = waterfallBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      Rectangle2D rectangle2D0 = thermometerPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'annotation' argument.");
      double[][] doubleArray0 = new double[4][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0, 1, 1, true, categoryStepRenderer_State0, rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: 1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertEquals(1, scatterRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, 2207.738488, statisticalLineAndShapeRenderer0.ZERO, 2207.738488, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_STROKE);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }
}
