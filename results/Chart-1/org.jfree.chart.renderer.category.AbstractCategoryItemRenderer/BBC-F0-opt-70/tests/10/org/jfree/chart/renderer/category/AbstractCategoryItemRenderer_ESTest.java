/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 14:29:07 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.Box;
import javax.swing.border.BevelBorder;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      boolean boolean0 = stackedBarRenderer3D0.hitTest(0.2, 10, (Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, 15, 10, false, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Locale locale0 = Locale.PRC;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("d3't'Ru#b0Deli[CF", numberFormat0);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        barRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, (-376), (-376), true, 4.0, 45.0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, minMaxCategoryRenderer0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(500, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0F, (-1326.5), 10, 494.845129);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Point2D.Double point2D_Double0 = (Point2D.Double)layeredBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D0, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(10.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 500, 0.0F);
      JFreeChart jFreeChart0 = new JFreeChart("ROpfedSE", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, logAxis0, logAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Point2D point2D0 = defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, fastScatterPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)defaultCategoryItemRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(507.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 1.0F, (-2330.212F), 0.0F);
      JFreeChart jFreeChart0 = new JFreeChart("ROpfedSE", categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2477, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("Not implemented.", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, multiplePiePlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(14, 71, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 0.0F, 2.5E-4, 2.0E8);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(10, 71);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)barRenderer3D0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, rectangle2D_Float0, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-4.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2777, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = logAxis0.DEFAULT_TICK_LABEL_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2.0F, 15);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      barRenderer3D0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0, 0.6428571428571429, ringPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.2, 3.0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Layer layer0 = Layer.BACKGROUND;
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = boxAndWhiskerRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      scatterRenderer0.setPlot(combinedRangeCategoryPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      assertEquals(0.0, rectangle2D0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 3822, (double) 0.5F, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      Layer layer0 = Layer.BACKGROUND;
      categoryStepRenderer0.drawAnnotations(graphics2D0, rectangle2D0, categoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double[][] doubleArray0 = new double[11][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle rectangle0 = new Rectangle((-1909), (-1909), (-1909), (-1909));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(11, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, levelRenderer0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryPlot categoryPlot1 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, logAxis0, levelRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", logAxis0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 14, chartRenderingInfo0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Rectangle rectangle0 = new Rectangle(30, (-2470), (-4758), 30);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise(graphics2D0, rectangle0, categoryPlot1, taskSeriesCollection0, plotRenderingInfo0);
      assertEquals((-4770.0), categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator(1);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(206, (CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getSeriesURLGenerator(206);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, valueAxis0, stackedBarRenderer3D0);
      ValueAxis valueAxis1 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, 191);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Number[][] numberArray0 = new Number[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("OHLCDataItem.compareTo().");
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("OHLCDataItem.compareTo().", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, symbolAxis0, stackedAreaRenderer0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 22);
      assertEquals(1.5, valueAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 500);
      assertTrue(valueAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      scatterRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertEquals(1, categoryPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      int int0 = layeredBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getItemLabelGenerator((-849), 3, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DrawingSupplier drawingSupplier0 = lineRenderer3D0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      DrawingSupplier drawingSupplier0 = defaultCategoryItemRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = stackedBarRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 3.0;
      doubleArray1[1] = 0.05;
      doubleArray1[2] = (double) 2903;
      doubleArray1[3] = 3.0;
      doubleArray1[4] = (double) 2.0F;
      doubleArray1[5] = (double) 2903;
      doubleArray1[6] = (double) 9;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.05, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double[][] doubleArray0 = new double[1][3];
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = 3.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(1.5, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      double[][] doubleArray0 = new double[2][7];
      double[] doubleArray1 = new double[8];
      doubleArray1[4] = (-2027.857988);
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals((-1013.928994), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 5);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[7][5];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-3167.2353744981);
      doubleArray0[5] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals((-3167.2353744981), range0.getLowerBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D rectangle2D0 = stackedBarRenderer3D0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, 0, 0, true, categoryItemRendererState0, (Rectangle2D) null);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 1, 0.0F, 0, 1, (-7.0), plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-1928), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("v^Q3L.t+GF0;", numberFormat0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesToolTipGenerator((-291), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesItemLabelGenerator((-1762), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.2);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-2328), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.hitTest(15, 10, (Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, symbolAxis0, defaultBoxAndWhiskerCategoryDataset0, 1505, 18, false, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, (double) categoryStepRenderer0.ZERO, 1.0F, 1.0F);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("c'D~-|");
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.hitTest(0.0F, 0.0, (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultMultiValueCategoryDataset0, 10, 1, false, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2673), (String) null);
      double[][] doubleArray0 = new double[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.hitTest(367.9348, 2395.09, (Graphics2D) null, rectangle2D_Double0, categoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 3, 0, true, categoryStepRenderer_State0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (double) scatterRenderer0.ZERO, false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getRangeAxis((CategoryPlot) null, (-1302));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, boxAndWhiskerRenderer0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getLegendItem(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      MockDate mockDate0 = new MockDate(25, 25, 1, (-1), (-1342), (-1342));
      Week week0 = new Week(mockDate0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("b.e+2");
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle(week0, week0, (CategoryDataset) null, subCategoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[9][6];
      double[] doubleArray1 = new double[7];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 21, 21);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      double[][] doubleArray0 = new double[8][4];
      double[] doubleArray1 = new double[7];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) stackedAreaRenderer0.ZERO, 1.0F, 2.0F, 0.05);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, rectangle2D_Double0, 0.2, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawOutline((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, logAxis0, logAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("]]wI7Fj'", numberFormat0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, jDBCCategoryDataset0, 500, (-1247), true, 0.0, 0.0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, logAxis0, logAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("]]wI7Fj'", numberFormat0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, jDBCCategoryDataset0, (-1), (-1247), true, 0.0, 0.0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis0, categoryMarker0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 0.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", thermometerPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 3, 1223.1314011713534, (double) 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Color color0 = Color.orange;
      BevelBorder bevelBorder0 = new BevelBorder(1, color0, color0);
      Component component0 = Box.createVerticalGlue();
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle(component0, 0, 10, (-1), 0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle0.createIntersection(rectangle2D_Float0);
      // Undeclared exception!
      try { 
        barRenderer3D0.drawDomainLine(graphics2D0, (CategoryPlot) null, rectangle2D0, 2, thermometerPlot0.DEFAULT_BACKGROUND_PAINT, thermometerPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15, (double) 0.5F, 90.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-381.9082F), 1.0F, (-381.9082F), 15);
      Rectangle2D rectangle2D0 = piePlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Float0);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawAnnotations(graphics2D0, rectangle2D_Double0, categoryAxis0, logAxis0, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      double[][] doubleArray0 = new double[11][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 1.0F, false);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("");
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis0, defaultIntervalCategoryDataset0, 4, 10, true, (CategoryItemRendererState) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, defaultBoxAndWhiskerCategoryDataset0, 1, (-1302), false, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("c'D~-|");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, (-125.97));
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, numberAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double[][] doubleArray0 = new double[12][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, boxAndWhiskerRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-841), (-1), false, (double) boxAndWhiskerRenderer0.ZERO, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, (-1), 1759, true, 0.05, 0.2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 9, 637, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Al3GS<OuPME?Qvlk--", 3.0, 3.0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.chart.plot.DialShape", "l$HcMbxK6", 1.5);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      assertTrue(stackedAreaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("eK;_T", "Ol{8k$&fIEM~4N`*!z)", "eK;_T");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesURLGenerator(39, (CategoryURLGenerator) null, true);
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = lineRenderer3D0.getURLGenerator(1, 1, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getToolTipGenerator(33, 181, true);
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      levelRenderer0.setSeriesToolTipGenerator(212, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertEquals(1, levelRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getToolTipGenerator(33, 181, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      assertFalse(boxAndWhiskerRenderer0.isMeanVisible());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(15, (CategoryItemLabelGenerator) null, true);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.2);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getSeriesToolTipGenerator(0);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-416.5708315703752), "");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 10, 1799, true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1799, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      JFreeChart jFreeChart0 = new JFreeChart("3ZXPGg9i}kS*],qz", combinedRangeCategoryPlot0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 420, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds(graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, (ValueAxis) null, defaultKeyedValues2DDataset0, 420, 1678, true, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1678, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "eK;_T", "Ol{8k$&fIEM~4N`*!z)");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Shape shape0 = levelRenderer0.getItemShape((-1788), 14, false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, shape0, defaultKeyedValues2DDataset0, (-1788), 8, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      Shape shape0 = multiplePiePlot0.getLegendItemShape();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, shape0, jDBCCategoryDataset0, 33, (-346), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 33, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      scatterRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 15, 10, true, 15, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      double[][] doubleArray0 = new double[12][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 10, 768, true, 1.0E9, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 3449, (-395), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, levelRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItemCollection legendItemCollection0 = levelRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1453.49939248, (-2027.857988), true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0F, 30.0, false);
      NumberAxis numberAxis1 = (NumberAxis)stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertEquals(2.0, stackedAreaRenderer1.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertFalse(stackedAreaRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, levelRenderer0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'plot' argument.", 1.0F, 1.0);
      Layer layer0 = Layer.BACKGROUND;
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      JFreeChart jFreeChart0 = new JFreeChart(".M", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(500, 500, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("rR=)_", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 4.0, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, 11, 10, true, 0.05, 4.0, false);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      categoryStepRenderer0.updateCrosshairValues((CategoryCrosshairState) null, false, 10, 450.263811385, 0, 0.0, 10, plotOrientation0);
      assertEquals(5, CategoryStepRenderer.STAGGER_WIDTH);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.updateCrosshairValues((CategoryCrosshairState) null, minMaxCategoryRenderer0.ZERO, minMaxCategoryRenderer0.ZERO, 2786.3167117, 3057, (-26), (-962.9976), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("}&0(|<:[)f-", 3.0, 3.0, 0.2);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      boolean boolean0 = barRenderer3D0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", stackedBarRenderer3D0.ZERO, 8.0);
      Layer layer0 = Layer.BACKGROUND;
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = barRenderer3D0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(12.0, 8.0);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      boolean boolean0 = barRenderer3D0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      assertTrue(stackedAreaRenderer1.equals((Object)stackedAreaRenderer0));
      
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset", numberFormat0);
      stackedAreaRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      boolean boolean0 = barRenderer3D0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean0 = barRenderer3D0.equals(stackedBarRenderer3D0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(10, 216);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      Rectangle2D rectangle2D1 = colorConvertOp0.getBounds2D(bufferedImage0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D0, rectangle2D1, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Double0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("ROpfedSE", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 15, categoryAxis3D0.DEFAULT_TICK_MARK_PAINT, lineRenderer3D0.DEFAULT_STROKE, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, 0.5F);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      LogAxis logAxis1 = new LogAxis();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1.0F);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, logAxis1, intervalMarker0, rectangle2D0);
      assertTrue(logAxis1.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 500, 0.0F);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, logAxis0, logAxis0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 2418.456276103447, fastScatterPlot0.DEFAULT_BACKGROUND_PAINT);
      defaultCategoryItemRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Float0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("k(", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)line2D_Double0.getBounds2D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1.0F);
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("rR=)_", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 4.0, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, valueAxis0.DEFAULT_AXIS_LINE_STROKE, 0.3F);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      barRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, valueAxis0, categoryMarker0, rectangle2D0);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("c'D~-|");
      ValueMarker valueMarker0 = new ValueMarker((-3827.523804), combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      scatterRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, valueMarker0, (Rectangle2D) null);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 3822, (double) 0.5F, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 2.0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      LogAxis logAxis0 = new LogAxis();
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      Quarter quarter0 = new Quarter(mockDate0);
      CategoryMarker categoryMarker0 = new CategoryMarker(quarter0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, numberAxis3D0, layeredBarRenderer0);
      layeredBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertEquals(0.0F, categoryAxis3D0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      double[][] doubleArray0 = new double[11][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logAxis0, levelRenderer0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(15, (-1.0F), 1989.1594F, 2.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Paint paint0 = categoryPlot0.getRangeMinorGridlinePaint();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      levelRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, logAxis0, rectangle2D0, (-1465.532019552241), paint0, stroke0);
      assertTrue(logAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("u(:.FnYVqo7q", categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(201, 272, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0, (-4180.6360855983), defaultCategoryItemRenderer0.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, defaultCategoryItemRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2265.1238F, 2.0F, 0.0F, (-513.0F));
      JFreeChart jFreeChart0 = new JFreeChart("ROpfedSE", defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1696, 18, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS.createAdjustedRectangle(rectangle2D_Float0, lengthAdjustmentType0, lengthAdjustmentType0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) defaultCategoryItemRenderer0.ZERO, 0);
      // Undeclared exception!
      try { 
        barRenderer3D0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D0, (-513.0F), (Paint) null, categoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      minMaxCategoryRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, minMaxCategoryRenderer0);
      assertTrue(categoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) null, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 16);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle((-1), 10, 16, (-2377));
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.initialise(graphics2D0, rectangle0, combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, boxAndWhiskerRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = groupedStackedBarRenderer0.initialise(graphics2D0, rectangle2D_Float0, categoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2923.0F), (-3084.7144F), (-2923.0F), 2.0F);
      JFreeChart jFreeChart0 = new JFreeChart("I#", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D_Float0, categoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, levelRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 0.2);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertTrue(levelRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
      try { 
        barRenderer3D0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setSeriesURLGenerator(390, (CategoryURLGenerator) null, false);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      levelRenderer0.setSeriesToolTipGenerator(74, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      assertTrue(levelRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0, 0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      barRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertEquals(0.0, barRenderer3D0.getBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotShape((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, 7, 24, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("m=4{K&\r.(+>##2FZ", dateFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = stackedAreaRenderer0.clone();
      assertNotSame(stackedAreaRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      int int0 = stackedBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setSeriesToolTipGenerator(9, (CategoryToolTipGenerator) null);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getSeriesItemLabelGenerator(2981);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.removeAnnotations();
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("F$Foa5)Kw");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        stackedAreaRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, logAxis0, boxAndWhiskerRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      boxAndWhiskerRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle2D_Float0);
      assertEquals(0, categoryPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getItemMiddle(1.0F, 0.05, jDBCCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      double[][] doubleArray0 = new double[15][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, logAxis0, levelRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("u(:.FnYVqo7q", logAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(445, 1564, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = minMaxCategoryRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Locale locale0 = Locale.GERMANY;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("V6*TKZJY", numberFormat0);
      ganttRenderer0.setSeriesItemLabelGenerator(23, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getItemLabelGenerator(23, 23, true);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }
}
