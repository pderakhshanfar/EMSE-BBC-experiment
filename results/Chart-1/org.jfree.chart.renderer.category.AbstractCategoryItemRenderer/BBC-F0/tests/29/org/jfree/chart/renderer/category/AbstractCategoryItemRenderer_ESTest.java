/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 16 20:26:52 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.SystemColor;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.text.AttributedCharacterIterator;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Locale;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JToolTip;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Position;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.event.DatasetChangeInfo;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.TableOrder;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.event.DatasetChangeEvent;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Year;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      chartPanel0.getChartRenderingInfo();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel(graphics2D0, plotOrientation0, jDBCCategoryDataset0, 200, 2481, true, 1.0F, 2578.888655124, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 200, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StyleContext.getDefaultStyleContext();
      Color color0 = Color.BLUE;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 1.0F);
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      bufferedImage0.getGraphics();
      // Undeclared exception!
      try { 
        layeredBarRenderer1.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-589.0), (-1720.13967));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        scatterRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-488.85565), 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        scatterRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("w9z2Mt<", numberFormat0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(intervalCategoryToolTipGenerator0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 65535, 65535, 65535, 8, (-1035), (-1035), true, true, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(455.26779563, 3643.7979390226, "w9z2Mt<");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, categoryPlot0, categoryAxis0, cyclicNumberAxis0, (CategoryDataset) null, 10, (-135), false, categoryItemRendererState0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer1 = (StatisticalBarRenderer)statisticalBarRenderer0.clone();
      statisticalBarRenderer0.equals(statisticalBarRenderer1);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      BasicStroke basicStroke0 = new BasicStroke();
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      scatterRenderer1.getRangeAxis(combinedRangeCategoryPlot0, 0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.equals(graphics2D0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer1.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      statisticalBarRenderer1.getErrorIndicatorStroke();
      statisticalBarRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Double0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 0.0, "PRINT", 0.5F, statisticalBarRenderer0.DEFAULT_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      CategoryLineAnnotation categoryLineAnnotation1 = new CategoryLineAnnotation(0.0, 680, true, 0.0, scatterRenderer0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation1, layer0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      chartPanel0.getChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.5F, "PROPERTIES");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot1);
      minMaxCategoryRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot1, rectangle2D_Double0, (-3565.79), categoryAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot1.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(768, 300);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.getPlotInfo();
      ganttRenderer0.createState(plotRenderingInfo0);
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.catgory.AbstrctCategoryItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      ganttRenderer0.getDrawingSupplier();
      SubCategoryAxis subCategoryAxis1 = new SubCategoryAxis("Null 'annotation' argument.");
      ganttRenderer0.calculateSeriesWidth(0.025, subCategoryAxis1, 1123, 10);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("lC:bEo", piePlot3D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2463, (-699), 10, 15, 0, 0, true, false, false, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(554.09157056, 1083.8, "Va8Qv5 y");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("PROPERTIES");
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultBoxAndWhiskerCategoryDataset0, 0, (-1065), false, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Color color0 = Color.BLUE;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0, layeredBarRenderer0.DEFAULT_PAINT);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      scatterRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, numberAxis3D0, layer1, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) scatterRenderer0.ZERO, 0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      categoryAxis0.setTickLabelPaint(minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(8, 2);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(14, byteArray0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, (RenderingHints) null);
      Rectangle2D rectangle2D0 = lookupOp0.getBounds2D(bufferedImage0);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      minMaxCategoryRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D0, 10, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, basicStroke0);
      minMaxCategoryRenderer0.getLegendItem((byte)2, (byte)2);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.getPlotInfo();
      ganttRenderer0.createState(plotRenderingInfo0);
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.catgory.AbstrctCategoryItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      ganttRenderer0.setStartPercent(0.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(9, 500);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      chartPanel0.getGraphicsConfiguration();
      Frame frame0 = null;
      try {
        frame0 = new Frame((GraphicsConfiguration) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      double double1 = (-1.0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0, (-1.0), 0.0, (double) minMaxCategoryRenderer0.ZERO);
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      int int0 = 16;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 16, 16);
      TableOrder tableOrder1 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingCategoryDataset0, tableOrder1);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      int int1 = (-2743);
      int int2 = (-428);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, 16, (-428), false, 10, (-2743), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.setRenderAsPercentages(false);
      stackedBarRenderer0.getToolTipGenerator(14, 5, false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getSeriesBarWidth(2334);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(false);
      scatterRenderer0.getUseOutlinePaint();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      ValueAxis valueAxis1 = stackedBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      int int0 = (-2743);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, (-2743), (-2743), true, 0.0, 0.0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 500);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.05, "");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.createState(plotRenderingInfo0);
      layeredBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis3D0, defaultMultiValueCategoryDataset0, 3, 152, true, categoryItemRendererState0, (Rectangle2D) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      GrayPaintScale grayPaintScale0 = null;
      try {
        grayPaintScale0 = new GrayPaintScale(1.0E-9, 0.0, (-1238));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires lowerBound < upperBound.
         //
         verifyException("org.jfree.chart.renderer.GrayPaintScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Color color0 = Color.BLUE;
      IntervalMarker intervalMarker0 = new IntervalMarker((double) layeredBarRenderer0.ZERO, 10, color0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
      assertFalse(numberAxis3D0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(9, (-50));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, (-2743), (-2743), true, 0.0, 0.0, true);
      minMaxCategoryRenderer0.getLegendItem((-2743), (-2743));
      CategoryAxis categoryAxis0 = new CategoryAxis("ItemLabelGenerator not cloneable.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-719.5), (-2743), "");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo((ChartRenderingInfo) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      scatterRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, taskSeriesCollection0, plotRenderingInfo1);
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D rectangle2D0 = null;
      Graphics2D graphics2D0 = null;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 0.0, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.5F, "PROPERTIES");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, cyclicNumberAxis0, defaultMultiValueCategoryDataset0, 0, 300, true, categoryItemRendererState0, rectangle2D0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 300, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, (-2743), (-2743), true, 0.0, 0.0, true);
      minMaxCategoryRenderer0.getLegendItem((-2743), (-2743));
      CategoryAxis categoryAxis0 = new CategoryAxis("ItemLabelGenerator not cloneable.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-719.5), (-2743), "");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, categoryPlot0, categoryAxis0, cyclicNumberAxis0, defaultCategoryDataset0, 68, 785, false, categoryStepRenderer_State0, rectangle2D0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 785, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3120), 2.5);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, cyclicNumberAxis0, scatterRenderer0);
      categoryAxis0.setTickLabelPaint(categoryPlot0.DEFAULT_BACKGROUND_PAINT);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.2, ganttRenderer0.ZERO, 2.5E-5, (-3120), 2.5E-4, 0.2, plotOrientation0);
      assertEquals(3, scatterRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      TextBlock textBlock0 = new TextBlock();
      HorizontalAlignment horizontalAlignment0 = textBlock0.getLineAlignment();
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      TextTitle textTitle0 = new TextTitle("ZOOM_IN_RANGE", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedRangeCategoryPlot0.DEFAULT_INSETS);
      jFreeChart0.removeSubtitle(textTitle0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      scatterRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      scatterRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      plotRenderingInfo0.setDataArea(rectangle2D0);
      scatterRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      CategoryAxis categoryAxis0 = new CategoryAxis("PROPERTIES");
      LogAxis logAxis0 = new LogAxis();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawAnnotations(graphics2D0, rectangle2D0, categoryAxis0, logAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, (double) defaultPolarItemRenderer0.ZERO, thermometerPlot0.DEFAULT_BACKGROUND_PAINT, defaultPolarItemRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(10, (-4531));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      categoryLineAnnotation0.removeChangeListener((AnnotationChangeListener) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      ganttRenderer0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-3185), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(0.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createUnion(rectangle2D0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, rectangle2D1, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Graphics2D graphics2D0 = null;
      JInternalFrame jInternalFrame0 = new JInternalFrame("Null 'stroke' argument.");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleInsets rectangleInsets0 = categoryPlot0.getAxisOffset();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D rectangle2D0 = null;
      Graphics2D graphics2D0 = null;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, (-1078), (-1522));
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, (-3170), 60);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) slidingCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("mgV('#jLyip>j");
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, thermometerPlot0.DEFAULT_LEGEND_ITEM_BOX, jDBCCategoryDataset0, 0, (-1), false, (-2735.88328080646), 1256.0936);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 15, 10, 15, 15, 10, false, true, true, true, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage1 = jFreeChart0.createBufferedImage(200, 768);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage1);
      bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(12.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer1.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Unknown layer.", (Font) null, piePlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 6, 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(0.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource1.createGraphics2D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("RJeS[#+iOE9*IY", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, fastScatterPlot0, false);
      JFreeChart jFreeChart1 = new JFreeChart("", fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, 4, (-753), (-9999), 500, 1896, 10, false, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(629, 1896, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CategoryLineAnnotation> vector0 = new Vector<CategoryLineAnnotation>();
      JList<CategoryLineAnnotation> jList0 = new JList<CategoryLineAnnotation>(vector0);
      jList0.getCellBounds(768, 533);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawDomainLine(graphics2D0, (CategoryPlot) null, (Rectangle2D) null, (-753), scatterRenderer0.DEFAULT_PAINT, ganttRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = (-75);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getToolTipGenerator();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-75), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.getLegendItems();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("[g", scatterRenderer0.ZERO, (double) scatterRenderer1.ZERO, (double) scatterRenderer0.ZERO);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("[g");
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      rectangle2D_Double1.getBounds();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      scatterRenderer0.removeAnnotation(categoryPointerAnnotation0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesShapesVisible(0, false);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      scatterRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      scatterRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      CategoryAxis categoryAxis0 = new CategoryAxis("PROPERTIES");
      LogAxis logAxis0 = new LogAxis();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawAnnotations(graphics2D0, rectangle2D0, categoryAxis0, logAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("8%T+", 0.2, 0.2, 3.0);
      waterfallBarRenderer0.setShadowYOffset(0.0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      categoryPointerAnnotation0.setText("8%T+");
      waterfallBarRenderer0.equals(categoryPointerAnnotation0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.getUseSeriesOffset();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-2263), (-2263));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = basicTreeUI0.new NodeDimensionsHandler();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = null;
      try {
        intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("8%T+", (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      scatterRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ZOOM_RESET_DOMAIN";
      stringArray0[1] = "COPY";
      stringArray0[2] = "ZOOM_IN_BOTH";
      stringArray0[3] = "ZOOM_RESET_BOTH";
      stringArray0[4] = "ZOOM_IN_RANGE";
      stringArray0[5] = "SAVE";
      SymbolAxis symbolAxis0 = new SymbolAxis("ZOOM_IN_DOMAIN", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, symbolAxis0, scatterRenderer0);
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      // Undeclared exception!
      try { 
        scatterRenderer0.createHotSpotShape(graphics2D0, rectangle2D0, categoryPlot0, categoryAxis3D0, moduloAxis0, defaultMultiValueCategoryDataset0, 15, 9, false, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      Year year0 = new Year(478);
      RegularTimePeriod regularTimePeriod0 = year0.next();
      CategoryAxis categoryAxis0 = new CategoryAxis(":g)[r1),tzk");
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        ganttRenderer0.getItemMiddle(regularTimePeriod0, regularTimePeriod0, (CategoryDataset) null, categoryAxis0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-X!D>", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      minMaxCategoryRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-XG2!D>", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = new Size2D();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.0F, (-10.0), rectangleAnchor1);
      Point2D.Double point2D_Double1 = (Point2D.Double)minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-6.0), point2D_Double1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(0, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      crosshair0.getLabelAnchor();
      Point2D.Double point2D_Double0 = new Point2D.Double(10, 2);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argument.", dateFormat0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator("mOC4as[XR4{?", dateFormat0);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator1);
      Number[][] numberArray0 = new Number[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1133, 2365, false, 0, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      ganttRenderer0.createState(plotRenderingInfo0);
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Crosshair crosshair0 = new Crosshair(0.6428571428571429);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 304, 3, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Float point2D_Float0 = new Point2D.Float(0, 304);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-X!D>", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)minMaxCategoryRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, jDBCCategoryDataset0, 500, (-2746), true, 0.0F, 0.0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(266, (-602));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer0.createState(plotRenderingInfo0);
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      categoryItemRendererState0.getCrosshairState();
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((-125.9706658875025), (double) scatterRenderer0.ZERO, true, true);
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, simpleHistogramBin0, ganttRenderer0.ZERO, (-125.9706658875025), 3, 0.2, (-2415.2769), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      ganttRenderer0.createState(plotRenderingInfo0);
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      CategoryPlot categoryPlot1 = ganttRenderer0.getPlot();
      assertTrue(categoryPlot1.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("[g", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Graphics2D graphics2D0 = null;
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = 9;
      int int1 = (-595);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 84, 394, 4, 4, 81, 4, true, true, true, true, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 4, 200, true, 14, 3.0, true);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(300, 84);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1024, "Null 'percentFormatter' argument.");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, levelRenderer0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, defaultCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      categoryLineAnnotation0.setPaint(ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 1.0F, (Comparable) null, 1.0, 5, 2937.59232, 0.0, plotOrientation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-X!D>", font0, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argudent.", dateFormat0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, logarithmicAxis0, scatterRenderer0);
      CategoryAxis categoryAxis1 = scatterRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis1);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(0.0, (-75.5442322281), graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, logarithmicAxis0, taskSeriesCollection0, 2624, 1, true, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("[g", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 5.0, 0.0, 5.0, 953, 2937.59232, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'item' argudent.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, false);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(1, 1379, 1, chartRenderingInfo1);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource1.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(0.0F);
      crosshair0.getLabelAnchor();
      LegendTitle legendTitle0 = new LegendTitle(thermometerPlot0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("TextAnchor.BOTTOM_CENTER", dateFormat0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-3164), 4);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getItemMiddle(0, 0.0F, slidingGanttCategoryDataset0, categoryAxis3D0, rectangle2D0, legendTitle0.DEFAULT_POSITION);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      chartPanel0.getChartRenderingInfo();
      defaultMultiValueCategoryDataset0.addChangeListener(combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis categoryAxis0 = null;
      double double0 = 14.0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(14.0, "");
      int int0 = (-857);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(0.0, 1.0E8, graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, defaultMultiValueCategoryDataset0, 15, (-857), false, categoryStepRenderer_State0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$s");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator(165, 907, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 394, 394, 1515, 86, 1515, 84, true, true, false, false, true, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      scatterRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, 10, 14, false, (-72.63646), 3665.405522961535, false);
      JFreeChart jFreeChart0 = new JFreeChart("YZO K'C ~3-AlOKI", combinedRangeCategoryPlot0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 420);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.data.time.SimpleTimePeriod", (Range) null);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(907, (-529.700005997206), graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis3D0, moduloAxis0, defaultKeyedValues2DDataset0, 1, 10, false, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) ganttRenderer0.ZERO, "J#");
      Rectangle2D rectangle2D0 = null;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("J#");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, layeredBarRenderer1);
      layeredBarRenderer0.getRangeAxis(categoryPlot0, 10);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Object[] objectArray0 = new Object[8];
      Object object0 = ganttRenderer0.clone();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) statisticalBarRenderer0;
      objectArray0[2] = (Object) cyclicNumberAxis0;
      objectArray0[3] = (Object) layeredBarRenderer0;
      objectArray0[4] = (Object) layeredBarRenderer1;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) layeredBarRenderer0;
      objectArray0[7] = (Object) combinedRangeCategoryPlot0;
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(styleContext_SmallAttributeSet0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      defaultStyledDocument0.getBackground(styleContext_NamedStyle0);
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(4.0, 0.0, color0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("4X$s", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      defaultMultiValueCategoryDataset0.addChangeListener(combinedRangeCategoryPlot0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      scatterRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      categoryStepRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = scatterRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-X!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argument.", dateFormat0);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)minMaxCategoryRenderer0.getItemLabelGenerator(3, 120, false);
      assertEquals("Null 'item' argument.", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesShape(5);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 5, 81, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|-X!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argument.", dateFormat0);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(3524, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(7, 3);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 2, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      RoundRectangle2D.Float roundRectangle2D_Float1 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float1.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(1.0F, 1.0F, 0.0F, (double) minMaxCategoryRenderer0.ZERO, (-1429.0), (-224.8001490382));
      Rectangle2D rectangle2D1 = roundRectangle2D_Double0.getBounds2D();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D1, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = null;
      try {
        intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator((String) null, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'labelFormat' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("K*f?%V/S\"%,pAG", scatterRenderer0.ZERO, (-3586.7761015831), (double) scatterRenderer0.ZERO);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(5.0, (-4067.004573), 3.0, 2285.27, categoryPointerAnnotation0.DEFAULT_PAINT, scatterRenderer0.DEFAULT_STROKE);
      categoryLineAnnotation0.setStroke(scatterRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      standardCategorySeriesLabelGenerator0.clone();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemURLGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DrawingSupplier drawingSupplier0 = scatterRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      ganttRenderer0.createState(plotRenderingInfo0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Graphics2D graphics2D0 = null;
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 1459;
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(1459, (-1219), false);
      ValueMarker valueMarker0 = null;
      try {
        valueMarker0 = new ValueMarker(1.0E-8, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE, paint0, defaultPolarItemRenderer0.DEFAULT_STROKE, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1706.96), "=aB=p)\" 8s");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      scatterRenderer0.getRangeAxis(categoryPlot0, 10);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      scatterRenderer1.setUseFillPaint(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(false);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("=aB=p)\" 8s");
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, subCategoryAxis0, categoryMarker0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) ganttRenderer0.ZERO, "J#");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      layeredBarRenderer1.getRangeAxis(combinedRangeCategoryPlot0, 5382);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(styleContext_SmallAttributeSet0);
      Crosshair crosshair0 = new Crosshair(0.0);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.2);
      LegendTitle legendTitle0 = new LegendTitle(statisticalBarRenderer0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("G);=y!XrrZG");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      layeredBarRenderer0.getRangeAxis(categoryPlot0, 63);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, (ValueAxis) null, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(954.0, "J#");
      Graphics2D graphics2D0 = null;
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.getRangeAxis((CategoryPlot) null, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$s");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ganttRenderer0.getItemLabelGenerator(5, 13, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator(165, 907, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("YZO K'C ~3-AlOKI", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 420);
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.data.time.SimpleTimePeriod", (Range) null);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(907, (-547.0), graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis3D0, moduloAxis0, defaultKeyedValues2DDataset0, 1, 10, false, categoryStepRenderer_State0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      scatterRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      scatterRenderer0.getLegendItemURLGenerator();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        ganttRenderer0.getDomainAxis(combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", (Font) null, combinedDomainXYPlot0, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 2529, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2, (-996.218F), 15, 92.19F);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RectangleInsets rectangleInsets0 = new RectangleInsets(2, 1.0F, 428.2939290582761, 2);
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator("org.jfree.chart.axis.CategoryLabelPositions", dateFormat0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.getRenderAsPercentages();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(213L);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours((-1));
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = new Locale("cTca'K,5N6-b\r'D)t", "V@QPq", ";|!D>");
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, regularTimePeriod0, fixedMillisecond0, timeZone0, locale0);
      ValueMarker valueMarker0 = new ValueMarker(2.0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, ganttRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawRangeMarker(graphics2D0, (CategoryPlot) null, periodAxis0, valueMarker0, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (214.0) <= upper (213.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getLegendItems();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, 25.5, 3.0, 0.2, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) ganttRenderer0.ZERO, "J#");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
      ValueAxis valueAxis0 = layeredBarRenderer1.getRangeAxis(combinedRangeCategoryPlot0, 5382);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(styleContext_SmallAttributeSet0);
      Color color0 = defaultStyledDocument0.getBackground(simpleAttributeSet0);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) layeredBarRenderer1.ZERO, 1.7976931348623157E308, color0);
      // Undeclared exception!
      try { 
        layeredBarRenderer1.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "J#");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      SystemColor systemColor0 = SystemColor.control;
      IntervalMarker intervalMarker0 = new IntervalMarker(500, (double) statisticalBarRenderer0.ZERO, systemColor0);
      layeredBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, (Rectangle2D) null);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 1, 0.0F, 15);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator("mOC4as[XR4{?", dateFormat0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.getRenderAsPercentages();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getErrorIndicatorStroke();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      boolean boolean1 = statisticalLineAndShapeRenderer0.getBaseLinesVisible();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      customXYToolTipGenerator0.clone();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      LegendTitle legendTitle0 = new LegendTitle(barRenderer0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("$+?");
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$s");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int int0 = 883;
      int int1 = 13;
      ganttRenderer0.getItemLabelGenerator(883, 13, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator(165, 907, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(883, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("YZO K'C ~3-AlOKI", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(0, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argument.", dateFormat0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator("mOC4as[XR4{?", dateFormat0);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator1);
      assertFalse(minMaxCategoryRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$s");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO, "J#");
      statisticalBarRenderer0.clearSeriesStrokes(true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, (Marker) null, (Rectangle2D) null);
      layeredBarRenderer0.getShadowPaint();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ThreadContext");
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getItemMiddle(true, 3.0, defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-796), (-896));
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, (-896), 244, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("4X$s");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ganttRenderer0.getItemLabelGenerator(883, 13, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator(165, 907, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(883, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JFreeChart jFreeChart0 = new JFreeChart("YZO K'C ~3-AlOKI", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      scatterRenderer0.setUseOutlinePaint(true);
      ganttRenderer0.getIncompletePaint();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getItemLabelGenerator(883, 13, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.lookupSeriesStroke(1);
      scatterRenderer0.createState((PlotRenderingInfo) null);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("w", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, 1);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      scatterRenderer0.setDrawOutlines(false);
      scatterRenderer0.getBaseShapesFilled();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getPreviousHeight(jDBCCategoryDataset0, 1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(743.682875680692, 1.0, false);
      String string0 = "";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, (double) stackedBarRenderer3D0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("", "", " pv&@:]^oTI", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getIncompletePaint();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1.3879598332286947), true, customXYToolTipGenerator0);
      candlestickRenderer0.getSeriesVisible(582);
      scatterRenderer0.setSeriesShapesFilled(582, (Boolean) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      customXYToolTipGenerator0.clone();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.getBounds2D();
      ValueMarker valueMarker0 = new ValueMarker(45.934);
      LegendTitle legendTitle0 = new LegendTitle(candlestickRenderer0);
      Range range0 = new Range((double) candlestickRenderer0.ZERO, 2.0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-5873.271754689458), range0, lengthConstraintType0, (double) lineRenderer3D0.ZERO, range0, lengthConstraintType0);
      Size2D size2D0 = legendTitle0.arrange((Graphics2D) null, rectangleConstraint0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 582, 0.0, rectangleAnchor0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      layeredBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, valueMarker0, rectangle2D0);
      assertEquals(4.0, layeredBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(3.0);
      candlestickRenderer0.getSeriesVisible(582);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      customXYToolTipGenerator0.clone();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("x:^7,g_~ciVp");
      NumberAxis numberAxis0 = new NumberAxis("x:^7,g_~ciVp");
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, numberAxis0, layeredBarRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      lineRenderer3D0.setBaseShapesFilled(true);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer0.getItemLabelGenerator(582, 626, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getIncompletePaint();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1.0), true, customXYToolTipGenerator0);
      candlestickRenderer0.getSeriesVisible(582);
      scatterRenderer0.setSeriesShapesFilled(582, (Boolean) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      customXYToolTipGenerator0.clone();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String string0 = "";
      NumberAxis numberAxis0 = new NumberAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, numberAxis0, scatterRenderer0);
      lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      lineRenderer3D0.setBaseShapesFilled(true);
      scatterRenderer0.setSeriesShapesFilled(10, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues((CategoryDataset) null, 1, 582);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.StackedAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItem(934, 868);
      Comparable<StackedBarRenderer> comparable0 = null;
      GanttCategoryDataset ganttCategoryDataset0 = null;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 934, 868);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getDomainAxis((CategoryPlot) null, slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat.getInstance();
      String string0 = "mOC4as[XR4{?";
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair((-1.0));
      Crosshair crosshair1 = new Crosshair();
      crosshair1.getLabelAnchor();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LhA", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4313, 4313, 10, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      crosshair0.getLabelAnchor();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("LhA", dateFormat0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(5, (-2246), false);
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      categoryStepRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      statisticalBarRenderer0.getItemMargin();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 3;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, (-2246), 3, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getBaseToolTipGenerator();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Month month0 = null;
      try {
        month0 = new Month((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      categoryStepRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      Range range0 = scatterRenderer1.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendTextFont(1340);
      ganttRenderer0.setBaseLegendTextFont((Font) null);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(2786, 2786, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'overlay' argument.", 0.2, 0.2);
      ganttRenderer0.removeAnnotation((CategoryAnnotation) null);
      GanttRenderer ganttRenderer2 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer2.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalBarRenderer0.clone();
      DateFormat dateFormat0 = DateFormat.getDateInstance(1);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 1, (-441), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 1, (-441), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("v\"MhW{yV/j#p_v", lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      chartPanel0.getSelectionShape();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-319), 1);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity((EntityCollection) null, defaultCategoryItemRenderer0.DEFAULT_SHAPE, slidingGanttCategoryDataset0, 0, 680, false, 3568.574908, 2786);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      int int0 = 3524;
      HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, IntervalCategoryToolTipGenerator>();
      Font font0 = new Font(hashMap0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";|!D>", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Crosshair crosshair0 = new Crosshair(1.0F);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'item' argument.", dateFormat0);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(3524, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator("mOC4as[XR4{?", dateFormat0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((double[][]) null, (double[][]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getToolTipGenerator(4, 1394, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getEndType();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.5, 758.0, true);
      stackedBarRenderer3D0.getShadowXOffset();
      stackedAreaRenderer0.getLegendItemToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      statisticalBarRenderer0.equals(defaultCategoryItemRenderer0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, false, false);
      chartPanel0.getBounds();
      int int0 = 0;
      Graphics2D graphics2D0 = null;
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(".png", "", "c!n", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = categoryStepRenderer0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, 0.0, 0.0, 0.0, ((AbstractRenderer) object0).DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      categoryLineAnnotation0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      boolean boolean0 = ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
      
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean1 = groupedStackedBarRenderer0.getRenderAsPercentages();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = TextAnnotation.DEFAULT_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("3.e4%MyoVmx|2", font0, multiplePiePlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1549, (-1136.3), 3.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getBaseURLGenerator();
      defaultCategoryItemRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      JFreeChart jFreeChart1 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, true, true, true);
      chartPanel0.getSelectionShape();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 200, 500);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        ganttRenderer1.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-1567), 680, true, 0.05, 3683.01453);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      BarRenderer.setDefaultShadowsVisible(true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      intervalBarRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      intervalBarRenderer0.findRangeBounds((CategoryDataset) null, false);
      GradientPaintTransformer gradientPaintTransformer0 = intervalBarRenderer0.getGradientPaintTransformer();
      intervalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.equals(intervalBarRenderer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getErrorIndicatorStroke();
      intervalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      statisticalBarRenderer0.equals(layeredBarRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryDataset categoryDataset0 = null;
      ChartEntity chartEntity0 = new ChartEntity(defaultCategoryItemRenderer0.DEFAULT_SHAPE);
      standardEntityCollection0.add(chartEntity0);
      standardEntityCollection0.getEntity((double) minMaxCategoryRenderer0.ZERO, (-2456.69075));
      Boolean boolean0 = Boolean.TRUE;
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1120, boolean0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, rectangle2D0, (CategoryDataset) null, 999, 3149, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Base tool tip generator not cloneable.");
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryStepRenderer0.setPlot(categoryPlot0);
      try { 
        categoryStepRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      categoryStepRenderer0.clone();
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      scatterRenderer0.findRangeBounds(defaultCategoryDataset0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setMinimumBarLength(2300.7589106);
      statisticalBarRenderer0.getMaximumBarWidth();
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("(CCX", dateFormat0);
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendTextFont(1340);
      ganttRenderer0.setBaseLegendTextFont((Font) null);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      PeriodAxis periodAxis0 = new PeriodAxis("'(I9w-%v%DrxruM1FQR");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, true);
      chartPanel0.getSelectionShape();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 475);
      // Undeclared exception!
      try { 
        ganttRenderer0.addEntity((EntityCollection) null, (Shape) null, slidingGanttCategoryDataset0, 500, 1024, true, 3237.508034010291, (-1717.071654175));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = TextAnnotation.DEFAULT_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      scatterRenderer0.getDrawingSupplier();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.setSeriesURLGenerator(240, (CategoryURLGenerator) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      scatterRenderer2.getLegendItemLabelGenerator();
      int int0 = 0;
      String string0 = "WMAP_Plot";
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("WMAP_Plot", numberFormat0);
      layeredBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(240, 3.0, false);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(10, 1, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      defaultCategoryItemRenderer0.getURLGenerator(1, 539, false);
      LegendTitle legendTitle0 = new LegendTitle(defaultCategoryItemRenderer0);
      Range range0 = new Range(0.0, 2419.0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-495.44895397489), range0, lengthConstraintType0, 2799.832, range0, lengthConstraintType0);
      Size2D size2D0 = legendTitle0.arrange((Graphics2D) null, rectangleConstraint0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 539, rectangleAnchor0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3548.127673494439), "GO_]w`)9r^|~qgS");
      layeredBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, (Marker) null, rectangle2D0);
      Color color0 = (Color)layeredBarRenderer0.getShadowPaint();
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItems();
      barRenderer0.getLegendItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      scatterRenderer0.getDrawingSupplier();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesURLGenerator(274, (CategoryURLGenerator) null, true);
      defaultCategoryItemRenderer0.setBaseShapesFilled(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      assertFalse(ganttRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      statisticalLineAndShapeRenderer0.getColumnCount();
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0, statisticalLineAndShapeRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, (-1901), 121, 1, (-183), 1, true, true, false, false, true, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      statisticalLineAndShapeRenderer0.getColumnCount();
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0, statisticalLineAndShapeRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      int int0 = 121;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, (-1901), 121, 1, (-183), 1, true, true, false, false, true, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      LegendItemCollection legendItemCollection0 = ganttRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      minMaxCategoryRenderer0.equals(scatterRenderer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryDataset categoryDataset0 = null;
      ChartEntity chartEntity0 = new ChartEntity(statisticalLineAndShapeRenderer0.DEFAULT_SHAPE);
      standardEntityCollection0.add(chartEntity0);
      minMaxCategoryRenderer0.setItemLabelAnchorOffset((double) scatterRenderer0.ZERO);
      scatterRenderer0.getSeriesVisible(1120);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer1.setSeriesLinesVisible(0, (Boolean) null);
      int int0 = (-3336);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer1.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 46, (-3336), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      boolean boolean0 = ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
      
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      scatterRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      int int0 = scatterRenderer0.getRowCount();
      assertEquals(0, int0);
      
      ganttRenderer0.getNegativeItemLabelPositionFallback();
      assertEquals(0, ganttRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainGridlinePaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = intervalBarRenderer0.getLegendItemLabelGenerator();
      statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      statisticalBarRenderer0.getItemLabelGenerator(2786, 2786, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DateFormat dateFormat0 = DateFormat.getInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("mOC4as[XR4{?", dateFormat0);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((String) null, (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      categoryStepRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      categoryStepRenderer0.getPassCount();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      minMaxCategoryRenderer0.getSeriesURLGenerator(5);
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getURLGenerator(0, 3253, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-897), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      scatterRenderer0.getUseFillPaint();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      scatterRenderer0.getDrawingSupplier();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      scatterRenderer1.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        scatterRenderer1.getLegendItem(10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(325, (-3259), true);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.setSeriesURLGenerator(325, (CategoryURLGenerator) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setMinIcon((Icon) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'icon' argument.
         //
         verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(21, 0, false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      scatterRenderer2.setSeriesURLGenerator(1664, (CategoryURLGenerator) null);
      ScatterRenderer scatterRenderer3 = new ScatterRenderer();
      scatterRenderer3.getLegendItemLabelGenerator();
      NumberFormat.getInstance();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer1.getSeriesToolTipGenerator(1);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      lineAndShapeRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart(")=2", spiderWebPlot0);
      lineAndShapeRenderer0.getDrawingSupplier();
      spiderWebPlot0.setDrawingSupplier((DrawingSupplier) null);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer1 = new LineAndShapeRenderer(true, true);
      statisticalBarRenderer1.getToolTipGenerator(10, 767, true);
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      statisticalBarRenderer2.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) null, true);
      assertTrue(statisticalBarRenderer2.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItems();
      statisticalBarRenderer0.getLegendItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getBaseURLGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer1.setBaseURLGenerator((CategoryURLGenerator) null);
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getURLGenerator((-481), (-1555), false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setSeriesURLGenerator(1327, (CategoryURLGenerator) null);
      scatterRenderer0.getLegendItemLabelGenerator();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("Q", numberFormat0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (-310.208685), false);
      statisticalBarRenderer2.getSeriesToolTipGenerator((-1555));
      stackedBarRenderer3D0.setSeriesToolTipGenerator(1664, (CategoryToolTipGenerator) null);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      categoryStepRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      int int0 = categoryStepRenderer0.getPassCount();
      assertEquals(1, int0);
      
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Paint paint1 = extendedCategoryAxis0.getSubLabelPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, paint0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, paint1);
      waterfallBarRenderer0.getNegativeBarPaint();
      waterfallBarRenderer0.getBase();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(5, 0, true);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertEquals(1, minMaxCategoryRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator((-3259), (-3259), true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-3259), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      lineAndShapeRenderer0.equals(ganttRenderer0);
      ganttRenderer0.setIncompletePaint(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertTrue(lineAndShapeRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator1 = new StandardCategoryURLGenerator("");
      defaultCategoryItemRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", numberFormat0, numberFormat0);
      ganttRenderer0.setSeriesItemLabelGenerator(1519, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      ganttRenderer0.setCompletePaint(minMaxCategoryRenderer0.DEFAULT_PAINT);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      lineAndShapeRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      lineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getURLGenerator((-481), (-1627), false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setSeriesURLGenerator(1664, (CategoryURLGenerator) customCategoryURLGenerator0);
      scatterRenderer0.getLegendItemLabelGenerator();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("{0}", numberFormat0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-481), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator((-3259), (-3259), true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-3259), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(85.34049889322733, 85.34049889322733);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle rectangle0 = new Rectangle(76, 76);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 76, (-2575));
      boolean boolean0 = true;
      stackedBarRenderer3D0.getURLGenerator(1519, 76, true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("baseTimeline is not aligned");
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesURLGenerator((-1255), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getSeriesItemLabelGenerator(1);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      minMaxCategoryRenderer0.hashCode();
      minMaxCategoryRenderer0.setDrawLines(false);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendItemURLGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      categoryStepRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      int int0 = categoryStepRenderer0.getPassCount();
      assertEquals(1, int0);
      
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainGridlinePaint();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("heQ[/z!SZkGf#");
      extendedCategoryAxis0.getSubLabelPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      waterfallBarRenderer0.getNegativeBarPaint();
      waterfallBarRenderer0.getBase();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      minMaxCategoryRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      extendedCategoryAxis0.setMinorTickMarkInsideLength(10);
      statisticalBarRenderer1.getItemLabelGenerator((-2085), 60, true);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawOutlines();
      assertEquals(1, scatterRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = TextAnnotation.DEFAULT_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1549, (-1136.3), 3.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      Range range0 = new Range((double) layeredBarRenderer0.ZERO, 2419.0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType0, (-495.44895397489), range0, lengthConstraintType0);
      jFreeChart0.clearSubtitles();
      Size2D size2D0 = legendTitle0.arrange(graphics2D0, rectangleConstraint0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setSeriesURLGenerator(15, (CategoryURLGenerator) customCategoryURLGenerator0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(size2D0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      SystemColor systemColor0 = SystemColor.activeCaption;
      ganttRenderer0.setIncompletePaint(systemColor0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getBaseLinesVisible();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      lineRenderer3D0.getURLGenerator(1519, 0, true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      defaultCategoryItemRenderer0.setSeriesURLGenerator(96, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      defaultCategoryItemRenderer0.setBaseShapesFilled(true);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.setCompletePaint(minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertTrue(ganttRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.hashCode();
      int int0 = 1;
      lineRenderer3D0.getItemShapeFilled(1, 1);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int1 = 2970;
      scatterRenderer0.setSeriesShapesFilled(2970, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      String string0 = "";
      Comparable<StandardCategorySeriesLabelGenerator>[] comparableArray0 = (Comparable<StandardCategorySeriesLabelGenerator>[]) Array.newInstance(Comparable.class, 9);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      int int2 = (-4006);
      // Undeclared exception!
      try { 
        yIntervalSeriesCollection0.getSeries((-4006));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.YIntervalSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItems();
      barRenderer0.getLegendItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'plot' argument.", spiderWebPlot0);
      scatterRenderer0.getDrawingSupplier();
      spiderWebPlot0.setDrawingSupplier((DrawingSupplier) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.getToolTipGenerator(3, 10, false);
      statisticalBarRenderer0.setSeriesToolTipGenerator(15, (CategoryToolTipGenerator) null, false);
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) null, true);
      DatasetChangeInfo datasetChangeInfo0 = new DatasetChangeInfo();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent("Null 'plot' argument.", (Dataset) null, datasetChangeInfo0);
      spiderWebPlot0.datasetChanged(datasetChangeEvent0);
      statisticalBarRenderer0.getErrorIndicatorStroke();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem(3, 10);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = TextAnnotation.DEFAULT_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("3.e4%MyoVmx|2", font0, multiplePiePlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1549, (-1136.3), 3.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = null;
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      Range range0 = new Range((double) layeredBarRenderer0.ZERO, 2419.0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType0, (-495.44895397489), range0, lengthConstraintType0);
      Size2D size2D0 = legendTitle0.arrange(graphics2D0, rectangleConstraint0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.5, 1.0F, rectangleAnchor0);
      layeredBarRenderer0.getItemLabelGenerator((-958), 200, false);
      // Undeclared exception!
      try { 
        rectangle2D0.add((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = (-2157);
      CategoryPlot categoryPlot0 = null;
      // Undeclared exception!
      try { 
        scatterRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getLegendItemURLGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      categoryStepRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      int int0 = categoryStepRenderer0.getPassCount();
      assertEquals(1, int0);
      
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Paint paint1 = extendedCategoryAxis0.getSubLabelPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, paint0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, paint1);
      waterfallBarRenderer0.getNegativeBarPaint();
      waterfallBarRenderer0.getBase();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(5, 0, true);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertEquals(1, minMaxCategoryRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(90.0, 90.0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle rectangle0 = new Rectangle(81, 81);
      int int0 = (-2575);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 81, (-2575));
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, rectangle0, slidingGanttCategoryDataset0, 81, 75, false, 0.0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "mN,(T8");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getOrientation();
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon((int[]) null, (int[]) null, 1394);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      areaRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      areaRenderer0.clone();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 0;
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      areaRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.setErrorIndicatorPaint(areaRenderer0.DEFAULT_OUTLINE_PAINT);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      JToolTip jToolTip0 = new JToolTip();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(jToolTip0);
      JTree jTree0 = new JTree(defaultMutableTreeNode0, true);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) areaRenderer0;
      objectArray0[1] = (Object) standardCategoryItemLabelGenerator0;
      objectArray0[2] = (Object) statisticalBarRenderer1;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) lineRenderer3D0;
      objectArray0[5] = (Object) areaRenderer0;
      objectArray0[6] = (Object) lineRenderer3D0;
      objectArray0[7] = (Object) null;
      objectArray0[8] = (Object) defaultMutableTreeNode0;
      TreePath treePath0 = null;
      try {
        treePath0 = new TreePath(objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path elements must be non-null
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4.0, (-549.2447), true);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      stackedBarRenderer3D0.setRenderAsPercentages(true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)69;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, 768);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals((Object) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryDataset categoryDataset0 = null;
      ChartEntity chartEntity0 = new ChartEntity(minMaxCategoryRenderer0.DEFAULT_SHAPE);
      standardEntityCollection0.add(chartEntity0);
      int int0 = 1120;
      minMaxCategoryRenderer0.setItemLabelAnchorOffset(1120);
      statisticalLineAndShapeRenderer0.getSeriesVisible(1120);
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(0, (Boolean) null);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 1120, 1120, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      SystemColor systemColor0 = SystemColor.activeCaption;
      ganttRenderer0.setIncompletePaint(systemColor0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(ganttRenderer0.ZERO, 3.0, 3.0, (double) ganttRenderer0.ZERO, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_STROKE);
      ganttRenderer0.removeAnnotation(categoryLineAnnotation0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getBaseLinesVisible();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Font font0 = TextAnnotation.DEFAULT_FONT;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("3.e4%MyoVmx|2", font0, multiplePiePlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1549, (-1136.3), 3.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeCategoryPlot0);
      Range range0 = new Range((double) layeredBarRenderer0.ZERO, 2419.0);
      LengthConstraintType lengthConstraintType0 = LengthConstraintType.FIXED;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(0.0, range0, lengthConstraintType0, (-495.44895397489), range0, lengthConstraintType0);
      Size2D size2D0 = legendTitle0.arrange(graphics2D0, rectangleConstraint0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.5, 1.0F, rectangleAnchor0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, (ValueAxis) null, valueMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = (-2157);
      int int1 = 0;
      int int2 = 3;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      Hashtable<CategoryTextAnnotation, LayeredBarRenderer> hashtable0 = new Hashtable<CategoryTextAnnotation, LayeredBarRenderer>(0, 2.0F);
      JTree jTree0 = new JTree(hashtable0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) extendedCategoryAxis0;
      objectArray0[1] = (Object) defaultCategoryItemRenderer0;
      objectArray0[2] = (Object) scatterRenderer0;
      Object object0 = defaultCategoryItemRenderer0.clone();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) hashtable0;
      JTree jTree1 = new JTree(objectArray0);
      Position.Bias position_Bias0 = Position.Bias.Backward;
      // Undeclared exception!
      try { 
        jTree1.getNextMatch("", (-2157), position_Bias0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getLegendItemURLGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      categoryStepRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      categoryStepRenderer0.getPassCount();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.setUseOutlinePaint(false);
      assertFalse(lineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      layeredBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      layeredBarRenderer0.getSeriesBarWidth(0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'area' argument.", spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 994, 1913, 243, 15, 15, true, false, true, true, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.clearSeriesStrokes(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator((-3259), (-770), true);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-770), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItems();
      barRenderer0.getLegendItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      CategoryDataset categoryDataset0 = null;
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'plot' argument.", spiderWebPlot0);
      scatterRenderer0.getDrawingSupplier();
      spiderWebPlot0.setDrawingSupplier((DrawingSupplier) null);
      boolean boolean0 = true;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 0, 0, 0, 95, (-1), true, false, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      barRenderer0.createState(plotRenderingInfo0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.getBaseLinesVisible();
      DefaultStyledDocument defaultStyledDocument0 = null;
      try {
        defaultStyledDocument0 = new DefaultStyledDocument((StyleContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.AbstractDocument$AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      BasicStroke basicStroke0 = (BasicStroke)statisticalBarRenderer0.getErrorIndicatorStroke();
      assertEquals(0, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      String string0 = "Unknown layer.";
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Unknown layer.", dateFormat0);
      intervalBarRenderer0.equals(standardCategoryToolTipGenerator0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      int int0 = 2864;
      int int1 = (-2278);
      DefaultShadowGenerator defaultShadowGenerator0 = null;
      try {
        defaultShadowGenerator0 = new DefaultShadowGenerator(2864, (Color) null, 2864, (-2278), 1012.839990092556);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'color' argument.
         //
         verifyException("org.jfree.chart.util.DefaultShadowGenerator", e);
      }
  }
}
