/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 14:27:37 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.border.SoftBevelBorder;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, (-1), (-1), true, (-2939.397987), (-1), false);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      boxAndWhiskerRenderer0.setPlot(combinedRangeCategoryPlot0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 1.0F, 1774.6757077, 10, 10, (-467.99), plotOrientation0);
      assertEquals(0, categoryCrosshairState0.getRangeAxisIndex());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, 5, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(3, 1023.9787F, 0.0F, 773.451F);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)scatterRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(1440.763, 2.0F, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Float0, categoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(3.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 16);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, (-1971.82891), jFreeChart0.DEFAULT_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_STROKE);
      assertEquals(0, stackedAreaRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("77K[(#sS=oLO-XvA&", 1.0F, 100.0);
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      barRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      assertTrue(barRenderer0.getIncludeBaseInRange());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((double) levelRenderer0.ZERO);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle rectangle0 = new Rectangle();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      double double0 = levelRenderer0.getItemMiddle(numberTickUnit0, numberTickUnit0, defaultCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle rectangle0 = new Rectangle();
      double[][] doubleArray0 = new double[8][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedAreaRenderer0.addEntity(standardEntityCollection0, rectangle0, defaultIntervalCategoryDataset0, 0, 0, true, 0.0, (-535.5005394172));
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      double[][] doubleArray0 = new double[9][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      barRenderer0.addEntity(standardEntityCollection0, rectangle2D0, defaultIntervalCategoryDataset0, 1, 0, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("({0}, {1}) = {2}", 12.0, 1534.663691);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertEquals(1, scatterRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getSeriesItemLabelGenerator(10);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, (-2622));
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      numberAxis3D0.setMinorTickMarkOutsideLength(0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(0.0, valueAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setUpperBound((-1345.8));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(1.0E-8, valueAxis0.getAutoRangeMinimumSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.setPlot(combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue(1944.45555, false);
      CategoryPlot categoryPlot0 = boxAndWhiskerRenderer0.getPlot();
      assertSame(categoryPlot0, combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.setPlot(combinedRangeCategoryPlot0);
      CategoryPlot categoryPlot0 = boxAndWhiskerRenderer0.getPlot();
      assertFalse(categoryPlot0.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DrawingSupplier drawingSupplier0 = defaultCategoryItemRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = boxAndWhiskerRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = (StandardCategoryItemLabelGenerator)scatterRenderer0.getBaseItemLabelGenerator();
      assertEquals("{2}", standardCategoryItemLabelGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      double[][] doubleArray0 = new double[5][7];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertNotNull(range0);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) 2;
      numberArray1[1] = (Number) 3;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(3.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Qu9s p/SHmk";
      stringArray0[1] = "Qu9s p/SHmk";
      stringArray0[2] = "Qu9s p/SHmk";
      stringArray0[3] = "Qu9s p/SHmk";
      Number[][] numberArray0 = new Number[4][8];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      boolean boolean0 = boxAndWhiskerRenderer0.equals(standardCategoryToolTipGenerator0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2326.736, 0.0, (-55.163458), (-211.52444));
      double[][] doubleArray0 = new double[8][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = stackedBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, dateAxis0, defaultIntervalCategoryDataset0, (-1656), 10, false, categoryItemRendererState0, rectangle2D_Double0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = (DefaultCategoryItemRenderer)defaultCategoryItemRenderer0.clone();
      assertTrue(defaultCategoryItemRenderer1.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesURLGenerator((-2730), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesURLGenerator((-2730), (CategoryURLGenerator) customCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
      try { 
        barRenderer0.setSeriesToolTipGenerator((-1031), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-580), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((-651), (CategoryItemLabelGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) stackedAreaRenderer0.ZERO, 4);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("bp/b$s3q");
      NumberAxis numberAxis0 = new NumberAxis("bp/b$s3q");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, (-1), Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, (-43), 451.5069F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(0.2, 1.0F, (Graphics2D) null, rectangle2D0, (CategoryPlot) null, categoryAxis0, numberAxis0, (CategoryDataset) null, 6, (-1), true, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis("XmJN8u4");
      NumberAxis numberAxis0 = new NumberAxis("XmJN8u4");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(1499.32137335685, (-30.0), (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis0, numberAxis0, defaultMultiValueCategoryDataset0, 59, 10, true, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis("XmJN8u4");
      NumberAxis numberAxis0 = new NumberAxis("XmJN8u4");
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest((double) ganttRenderer0.ZERO, 3.0, (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis0, numberAxis0, defaultKeyedValues2DDataset0, 14, (-1), false, categoryItemRendererState0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1807.7F, 733.5F, 1832.5F, 10.0F, Float.NEGATIVE_INFINITY, 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LogAxis logAxis0 = new LogAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(boxAndWhiskerRenderer0.ZERO, boxAndWhiskerRenderer0.ZERO, (CategoryDataset) null, (CategoryAxis) null, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.4028234663852886E38, 3.0, false);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getDomainAxis((CategoryPlot) null, defaultStatisticalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[6][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        barRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      String[] stringArray0 = new String[3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][3];
      Number[] numberArray1 = new Number[6];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 1855, 1855);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds(slidingCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[6][3];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("<+]");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      DateAxis dateAxis0 = new DateAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 10);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle0);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1245.98);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 0.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("1a7~%D8+h9GzvUFa+", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, (-1), 10, 8, false, true, true, true, true, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 2.0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(";#Qk=M2#");
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, logarithmicAxis0.DEFAULT_AXIS_LABEL_FONT, polarPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1), 15, 3, 3, 13, true, false, false, true, false, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(7, (-3367));
      // Undeclared exception!
      try { 
        scatterRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ZOOM_RESET_DOMAIN");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryDataset) null, 5, 0, true, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      double[][] doubleArray0 = new double[5][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("SpoXaOcLixuj4aE@@Y");
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", range0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createHotSpotBounds(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis0, moduloAxis0, defaultIntervalCategoryDataset0, 500, 50, false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("$zP0v;<tmjlYL];\"F!", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("$zP0v;<tmjlYL];\"F!");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LabelBlock labelBlock0 = new LabelBlock("ZOOM_RESET_BOTH");
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(8.0, 3037.509702170491, categoryAxis0.DEFAULT_TICK_MARK_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[2][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-1507), (-1507), false, 235.2938973499975, 3881.525988);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      GeneralPath generalPath0 = new GeneralPath();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, generalPath0, defaultBoxAndWhiskerCategoryDataset0, (-1111), 1400, true, 45.0, 45.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, polarPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 5, 3, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.09000100708224579, 0.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(entityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultStatisticalCategoryDataset0, (-1), (-1), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(false, 1.0F, 10, 0.05, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        barRenderer3D0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertFalse(scatterRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesURLGenerator(2177, (CategoryURLGenerator) null, true);
      assertFalse(lineRenderer3D0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getURLGenerator((-2744), (-2744), true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      stackedBarRenderer3D0.setSeriesToolTipGenerator(2833, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertEquals(2.0, stackedBarRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = barRenderer0.getToolTipGenerator(147, 14, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertFalse(defaultCategoryItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getSeriesToolTipGenerator((-3732));
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = ganttRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      double[][] doubleArray0 = new double[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = stackedBarRenderer3D0.hitTest(0.0F, 2201.746695812846, graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, subCategoryAxis0, symbolAxis0, defaultIntervalCategoryDataset0, 2843, 10, false, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("4<@&!ngt&:P");
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, (CategoryAxis) null, periodAxis0, defaultCategoryDataset0, (-1699), (-1699), true, (CategoryItemRendererState) null, (Rectangle2D) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1), 8, 15, (-1), 15, false, true, false, true, true, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 896);
      DateAxis dateAxis0 = new DateAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 1, 15, false, (CategoryItemRendererState) null, rectangle2D0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      stackedAreaRenderer0.setPlot(combinedRangeCategoryPlot0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedAreaRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) standardCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, (CategoryDataset) null, 10, 2450, false, (-371), (-371));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.StandardCategoryURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, arc2D_Double0, defaultBoxAndWhiskerCategoryDataset0, 13, 1392, true, 496.012163, 0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 13, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 10, 2108, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultCategoryDataset0, 1, 10, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Default Group");
      LogAxis logAxis0 = new LogAxis("Default Group");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, logAxis0, scatterRenderer0);
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      combinedDomainCategoryPlot0.setRangeAxis(3, (ValueAxis) logAxis0);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, 3);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("K|");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("RQ D(D:R", "RQ D(D:R", (double) stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("RQ D(D:R");
      LogAxis logAxis0 = new LogAxis("MWzi");
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, logAxis0, layer0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer0 = Layer.FOREGROUND;
      minMaxCategoryRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, (CategoryAxis) null, numberAxis0, layer0, (PlotRenderingInfo) null);
      assertEquals("Layer.FOREGROUND", layer0.toString());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      boxAndWhiskerRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 1, 2, false, 0.0, 861.1313, false);
      assertEquals(1.0, boxAndWhiskerRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 1.0F, 1.0F, (-1751), 4, 0.0, (-1680.73), plotOrientation0);
      assertEquals(0, lineRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, boxAndWhiskerRenderer0.ZERO, 10, (-1955), (-1955), (-1955), (double) boxAndWhiskerRenderer0.ZERO, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, scatterRenderer0.ZERO, 1.0F, 10, 21, 10, 1.0F, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.setPlot(combinedRangeCategoryPlot0);
      DrawingSupplier drawingSupplier0 = boxAndWhiskerRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      SystemColor systemColor0 = SystemColor.controlText;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, (double) boxAndWhiskerRenderer1.ZERO, boxAndWhiskerRenderer1.ZERO, (-2349.2262), systemColor0, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      assertTrue(boxAndWhiskerRenderer1.equals((Object)boxAndWhiskerRenderer0));
      
      Layer layer0 = Layer.FOREGROUND;
      boxAndWhiskerRenderer1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = boxAndWhiskerRenderer1.equals(boxAndWhiskerRenderer0);
      assertFalse(boxAndWhiskerRenderer1.equals((Object)boxAndWhiskerRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer1.equals((Object)boxAndWhiskerRenderer0));
      
      Locale locale0 = Locale.CHINESE;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("s$.?1", decimalFormatSymbols0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("s$.?1", decimalFormat0);
      boxAndWhiskerRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      boolean boolean0 = boxAndWhiskerRenderer1.equals(boxAndWhiskerRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer1.equals(scatterRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      boolean boolean0 = levelRenderer0.equals(levelRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      minMaxCategoryRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(675, 675);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Color color0 = Color.ORANGE;
      LineBorder lineBorder0 = new LineBorder(color0, 2622);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) chartPanel0, (Border) lineBorder0, 36, (-1), 37, 420);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D_Float0, rectangle0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Point2D.Double point2D_Double0 = (Point2D.Double)boxAndWhiskerRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, rectangle2D_Double0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("{2}", 0.0F, 0.350826736636206);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(2712.325417, 1311.757763876, categoryTextAnnotation0.DEFAULT_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DateAxis dateAxis0 = new DateAxis("qf}<kue");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 12.0);
      GeneralPath generalPath0 = new GeneralPath(scatterRenderer0.DEFAULT_SHAPE);
      intervalMarker0.setLabel("qf}<kue");
      Rectangle rectangle0 = generalPath0.getBounds();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertEquals(1.0, dateAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DateAxis dateAxis0 = new DateAxis("qf}<kue");
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-8, 12.0);
      GeneralPath generalPath0 = new GeneralPath(scatterRenderer0.DEFAULT_SHAPE);
      Rectangle rectangle0 = generalPath0.getBounds();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertEquals(0.2, scatterRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 1.0F, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, defaultCaret0);
      assertEquals(0.0, numberAxis3D0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("36v-@{vMCB|");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      DateAxis dateAxis0 = new DateAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-878.6653493), 0.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle0);
      scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D0);
      assertFalse(combinedDomainCategoryPlot0.isRangeZeroBaselineVisible());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, valueAxis0, categoryMarker0, rectangle2D0);
      assertFalse(combinedDomainCategoryPlot0.isDomainPannable());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Rectangle rectangle0 = new Rectangle();
      ValueMarker valueMarker0 = new ValueMarker(0, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      valueMarker0.setLabel("Null 'paint' argument.");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, rectangle0);
      assertTrue(rectangle0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      PeriodAxis periodAxis0 = new PeriodAxis(";#Qk=M2#");
      ValueMarker valueMarker0 = new ValueMarker(0.05, categoryAxis0.DEFAULT_TICK_MARK_PAINT, periodAxis0.DEFAULT_TICK_MARK_STROKE);
      scatterRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, periodAxis0, valueMarker0, (Rectangle2D) null);
      assertFalse(periodAxis0.isMinorTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("qf}<kue");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createUnion(rectangle0);
      ValueMarker valueMarker0 = new ValueMarker(0.2, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, subCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D0);
      assertNull(numberAxis3D0.getLabelToolTip());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DateAxis dateAxis0 = new DateAxis("qf}<kue");
      IntervalMarker intervalMarker0 = new IntervalMarker((-1562.055), 0.2);
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle rectangle0 = generalPath0.getBounds();
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertTrue(dateAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0E-4, 0);
      minMaxCategoryRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 1.0F, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE);
      assertTrue(combinedRangeCategoryPlot0.canSelectByPoint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(";#Qk=M2#");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, logarithmicAxis0.DEFAULT_AXIS_LABEL_FONT, polarPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, (-1), 15, 3, 3, 13, true, false, false, true, false, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(7, (-3367));
      scatterRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, logarithmicAxis0, rectangle2D0, 10, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_STROKE);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, (Rectangle2D) null, 0.0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 16);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 0.0F, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      assertFalse(scatterRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 2241.20112288492, 10, 2241.20112288492);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0, 10, (Paint) null, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, 1.0, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double[][] doubleArray0 = new double[43][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      double[][] doubleArray0 = new double[1][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart("1a7~%D8+h9GzvUFa+", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, (-1), 10, 8, false, true, true, true, true, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(10, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[0][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      double[][] doubleArray0 = new double[8][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("$zP0v;<tmnlYL];\"F!", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
      try { 
        barRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemLabelGenerator();
      statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      assertFalse(lineAndShapeRenderer0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesURLGenerator(4, (CategoryURLGenerator) null, false);
      assertEquals(0, lineRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(400.2, 1898.742);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", "Zoom_In", "({0}, {1}) = {2}");
      stackedBarRenderer3D0.setSeriesURLGenerator(2, (CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getURLGenerator(2, (-3926), true);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      stackedBarRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      assertEquals(1.0, stackedBarRenderer3D0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getItemLabelGenerator(10, 10, false);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator(2856, (CategoryItemLabelGenerator) null, false);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator((-3502), (-3502), false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      boxAndWhiskerRenderer0.setSeriesItemLabelGenerator(46, categoryItemLabelGenerator0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 46, 46, false, (double) boxAndWhiskerRenderer0.ZERO, 46, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getSeriesURLGenerator((-722));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      Rectangle rectangle0 = new Rectangle(100, 100, 10, 100);
      Rectangle2D rectangle2D0 = rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle0, false, false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultKeyedValues2DDataset0, 500, (-1969), true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      int int0 = waterfallBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(2064, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("org.jfree.chart.entity.PieSectionEntity", numberFormat0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)scatterRenderer0.getToolTipGenerator(1521, 935, false);
      assertEquals("org.jfree.chart.entity.PieSectionEntity", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("rWTg?AMCs.H+CI<", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 5);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(21);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) null, (-316), 1140, 3583, 11);
      stackedAreaRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle0);
      assertTrue(combinedRangeCategoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, color0, color0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = waterfallBarRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.removeAnnotations();
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      stackedAreaRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, (CategoryDataset) null, (-319), (-319), true, (-319), (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, 5, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(19, 19);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      stackedAreaRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle0);
      assertFalse(combinedRangeCategoryPlot0.isRangeMinorGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(300, 1);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Vector<DefaultCategoryItemRenderer> vector0 = new Vector<DefaultCategoryItemRenderer>();
      Stack<GanttRenderer> stack0 = new Stack<GanttRenderer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, stack0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jTable0, (Border) null, 1316, 1316, 4, 0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleEdge rectangleEdge0 = categoryPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getItemMiddle(lineAndShapeRenderer0.ZERO, 0.2, jDBCCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int0 = stackedBarRenderer3D0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("qD~q%U9uAp>^KG<");
      categoryStepRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategoryStepRenderer categoryStepRenderer1 = (CategoryStepRenderer)categoryStepRenderer0.clone();
      assertFalse(categoryStepRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("3%hU&nn|EiGX\f.");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, logAxis0, boxAndWhiskerRenderer0);
      boxAndWhiskerRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(0.00794328234724282, logAxis0.getLowerBound(), 0.01);
      assertEquals(1.258925411794167, logAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }
}
