* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-50
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting Client-0
* Connecting to master process on port 3824
* Analyzing classpath: 
  - subjects/buggy-versions/Chart-1/build
  - subjects/buggy-versions/Chart-1/lib/servlet.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2320
* Using seed 3274313566
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 786 / 2320
[MASTER] 14:16:30.901 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
[MASTER] 14:17:00.008 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 14:17:50.741 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 14:18:54.640 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 607s and 1004 generations, 602951 statements, best individual has fitness: 833.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 519
* Number of covered goals: 391
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 274
* Number of covered goals: 196
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 783
* Number of covered goals: 488
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 340
* Number of covered goals: 144
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 97%
* Total number of goals: 65
* Number of covered goals: 63
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 274
* Number of covered goals: 196
* Generated 170 tests with total length 1057
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 14:28:06.078 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:08.881 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:10.848 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:12.783 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:14.882 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:16.653 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:18.811 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:20.869 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:21.870 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:24.016 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:25.266 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:26.318 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:28.288 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:30.253 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:31.547 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:33.185 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:35.731 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:37.162 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:39.017 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:28:41.175 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to results/Chart-1/org.jfree.chart.renderer.category.AbstractCategoryItemRenderer/BBC-F0-opt-50/tests/9
* Done!

* Computation finished
