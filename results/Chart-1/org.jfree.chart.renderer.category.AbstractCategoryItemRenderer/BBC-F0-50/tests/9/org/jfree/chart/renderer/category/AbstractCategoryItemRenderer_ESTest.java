/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 29 15:32:08 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.event.WindowStateListener;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.sql.Connection;
import java.sql.Statement;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.EventListener;
import java.util.Locale;
import java.util.Stack;
import java.util.TimeZone;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.border.AbstractBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.Element;
import javax.swing.text.GapContent;
import javax.swing.text.JTextComponent;
import javax.swing.text.PlainDocument;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeListener;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(0.5F, jFreeChart0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_STROKE);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 1.0F, 10);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      waterfallBarRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      waterfallBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, cyclicNumberAxis0, valueMarker0, rectangle2D_Float0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setSeriesBarWidth(2149, 2149);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[1][7];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[1] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      boxAndWhiskerRenderer0.setArtifactPaint(layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.hasListener(defaultIntervalCategoryDataset0);
      waterfallBarRenderer0.setFirstBarPaint(layeredBarRenderer0.DEFAULT_OUTLINE_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getSeriesShapesFilled(2149);
      Locale locale0 = new Locale("", "");
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale.setDefault(locale_Category0, locale1);
      scatterRenderer0.equals(locale0);
      scatterRenderer0.getLegendItemURLGenerator();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.getColumnCount();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".g]!:j>Vh25pDZ\"");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.equals(object0);
      defaultStatisticalCategoryDataset0.add(0.05, (double) statisticalLineAndShapeRenderer0.ZERO, (Comparable) false, (Comparable) 1.0F);
      statisticalLineAndShapeRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-1396), 244);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      GeneralPath generalPath0 = new GeneralPath(rectangle2D_Float0);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createUnion(rectangle2D0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.getItemMiddle((Comparable) null, (Comparable) null, slidingGanttCategoryDataset0, categoryAxis0, rectangle2D1, (RectangleEdge) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(slidingGanttCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2546, 2546);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (double) waterfallBarRenderer0.ZERO, "Z|L\"9Poy_s=<Nk]");
      IntervalMarker intervalMarker0 = new IntervalMarker((-643.22), 585.1697031468922);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Z|L\"9Poy_s=<Nk]");
      statisticalLineAndShapeRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getErrorIndicatorPaint();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = new BufferedImage(15, 15, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.5F, 200000.0, (String) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1.0F);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getErrorIndicatorPaint();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      double[][] doubleArray0 = new double[6][2];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 5;
      doubleArray1[1] = (double) Integer.MAX_VALUE;
      doubleArray1[2] = (double) Integer.MAX_VALUE;
      doubleArray1[3] = (double) Integer.MAX_VALUE;
      doubleArray1[4] = (double) 5;
      doubleArray1[5] = (double) 5;
      doubleArray1[6] = (double) categoryStepRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = 1.0;
      doubleArray2[1] = (double) 5;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) categoryStepRenderer0.ZERO;
      doubleArray3[1] = 1.0;
      doubleArray3[2] = 1.0;
      doubleArray3[3] = (double) 5;
      doubleArray3[4] = (double) 5;
      doubleArray3[5] = (double) 5;
      doubleArray3[6] = (double) 5;
      doubleArray3[7] = (double) Integer.MAX_VALUE;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) Integer.MAX_VALUE;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = 1.0;
      doubleArray5[1] = (-1.0);
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (double) categoryStepRenderer0.ZERO;
      doubleArray6[1] = (double) Integer.MAX_VALUE;
      doubleArray6[2] = (double) categoryStepRenderer0.ZERO;
      doubleArray6[3] = (double) 5;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesItemLabelGenerator(Integer.MAX_VALUE, categoryItemLabelGenerator0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      multiplePiePlot0.addChangeListener(combinedDomainCategoryPlot0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2750.2777, 0.0, "Z|L\"9Poy_s=<Nk]");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 2.0F);
      statisticalLineAndShapeRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getErrorIndicatorPaint();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      multiplePiePlot0.addChangeListener(combinedDomainCategoryPlot0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainCategoryPlot0.removeChangeListener(jFreeChart0);
      valueMarker0.setLabel("zMf1(\"T}2)r&");
      NumberAxis numberAxis0 = new NumberAxis();
      waterfallBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, valueMarker0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JPanel jPanel0 = new JPanel();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = new Rectangle(10, 1, (-1308), 1);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis3D0, defaultStatisticalCategoryDataset0, 3, 128, true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 128, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 964);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ZOOM_RESET_RANGE");
      Layer layer0 = Layer.BACKGROUND;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("ZOOM_IN_DOMAIN", "ZOOM_RESET_BOTH", 2.0F, 10);
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Paint paint0 = chartPanel0.getSelectionOutlinePaint();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 964, paint0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      intervalMarker0.setLabel("ZOOM_DOMAIN_BOTH");
      TimeZone timeZone0 = TimeZone.getTimeZone("ZOOM_RANGE_BOTH");
      DateAxis dateAxis0 = new DateAxis("SAVE", timeZone0);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Float0);
      stackedBarRenderer3D0.getRenderAsPercentages();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      JPanel jPanel0 = new JPanel();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      categoryItemRendererState0.getCrosshairState();
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, false, true, 1.0F, 1, 1.0F, 1.0F, plotOrientation1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 1024);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      categoryMarker0.setLabel("ZOOM_OUT_BOTH");
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, 15, 420, 3.0);
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      statisticalLineAndShapeRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) 0.0F;
      doubleArray0[2] = 0.2;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      JPanel jPanel0 = new JPanel(false);
      JScrollPane jScrollPane0 = new JScrollPane(jPanel0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.GERMAN;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 382, 1);
      groupedStackedBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, categoryAxis3D0, dateAxis0, slidingGanttCategoryDataset0, (-312), (-3), true, categoryStepRenderer_State0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[1] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[2] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[3] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[4] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[5] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray1[6] = 1.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("E");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(219.21793852, "E");
      scatterRenderer0.getPlot();
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(3072.49447093776, (-0.5761399964032449), (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, (-1), 5, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      JPanel jPanel0 = new JPanel(true);
      JScrollPane jScrollPane0 = new JScrollPane(jPanel0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer(true);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, numberAxis3D0.DEFAULT_RANGE);
      // Undeclared exception!
      try { 
        categoryStepRenderer1.createHotSpotBounds((Graphics2D) null, rectangle0, (CategoryPlot) null, (CategoryAxis) null, moduloAxis0, (CategoryDataset) null, (-1), 5, true, categoryStepRenderer_State0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zV7Q}N(.Z@Vs");
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseFillPaint();
      Number[][] numberArray0 = new Number[2][0];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray1[1] = (Number) scatterRenderer0.ZERO;
      numberArray1[2] = (Number) scatterRenderer0.ZERO;
      numberArray1[3] = (Number) 3.0;
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray1[4] = (Number) 12.0;
      numberArray1[5] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray1[6] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      jFreeChart0.setBackgroundPaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(768, (double) statisticalLineAndShapeRenderer0.ZERO, 1472.0, (-3400.5));
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, (CategoryAxis) null, categoryMarker0, rectangle2D_Double0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer1.createState((PlotRenderingInfo) null);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.hitTest(644.1, (-1108.39372), graphics2D0, rectangle2D_Double0, categoryPlot0, categoryAxis3D0, numberAxis3D0, defaultStatisticalCategoryDataset0, 1024, 24, true, categoryItemRendererState0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 24, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      JPanel jPanel0 = new JPanel(false);
      JScrollPane jScrollPane0 = new JScrollPane(jPanel0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = numberAxis3D0.DEFAULT_TICK_LABEL_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultStatisticalCategoryDataset0, 1, (-804), true, categoryStepRenderer_State0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = new JFreeChart("{2}", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartPanel0.getTopLevelAncestor();
      EmptyBorder emptyBorder0 = new EmptyBorder(3, (-4231), 1, (-4231));
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) null, (Border) emptyBorder0, 6, 10, 1, 9);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(1678.718, 15, graphics2D0, rectangle0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, (CategoryDataset) null, 1, (-6), false, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      statisticalLineAndShapeRenderer0.getLegendShape(10);
      Graphics2D graphics2D0 = null;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      JPanel jPanel0 = new JPanel(true);
      JScrollPane jScrollPane0 = new JScrollPane(jPanel0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, categoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultStatisticalCategoryDataset0, 910, 2349, true, categoryItemRendererState0, rectangle0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2349, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      defaultStatisticalCategoryDataset0.add((Number) 1.0F, (Number) 10, (Comparable) groupedStackedBarRenderer0.ZERO, (Comparable) 2.0F);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setRenderAsPercentages(true);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Number[][] numberArray0 = new Number[3][5];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[2] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[3] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[4] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[1] = (Number) minMaxCategoryRenderer0.ZERO;
      Double double0 = new Double(1558.6121859281);
      numberArray2[2] = (Number) double0;
      numberArray2[3] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[4] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray3[1] = (Number) double0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      minMaxCategoryRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      minMaxCategoryRenderer0.getLegendItem((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      groupedStackedBarRenderer0.clone();
      statisticalLineAndShapeRenderer0.clone();
      waterfallBarRenderer0.getBaseURLGenerator();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "({0}, {1}) = {3} - {4}";
      stringArray0[1] = "({0}, {1}) = {3} - {4}";
      stringArray0[2] = "({0}, {1}) = {2}";
      stringArray0[3] = "({0}, {1}) = {2}";
      stringArray0[4] = "({0}, {1}) = {2}";
      stringArray0[5] = "1}_sg'+";
      stringArray0[6] = "({0}, {1}) = {3} - {4}";
      stringArray0[7] = "Null 'stroke' argument.";
      stringArray0[8] = "({0}, {1}) = {2}";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'stroke' argument.", stringArray0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("({0}, {1}) = {2}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, extendedCategoryAxis0, symbolAxis0, statisticalLineAndShapeRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 10, (-302.51), (double) 1.0F, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) statisticalLineAndShapeRenderer0.ZERO, 10);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(barRenderer3D0);
      rendererChangeEvent0.getChart();
      multiplePiePlot0.addChangeListener((PlotChangeListener) null);
      ValueMarker valueMarker0 = new ValueMarker(0.5F, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, symbolAxis0.DEFAULT_AXIS_LINE_STROKE);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      waterfallBarRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, symbolAxis0, valueMarker0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer1.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      BufferedImage bufferedImage0 = new BufferedImage(768, 1024, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ZOOM_IN_DOMAIN");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      jFreeChart0.setBackgroundPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryAxis3D0.setUpperMargin(0.5F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer1.findRangeBounds(defaultStatisticalCategoryDataset0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.setMinimumBarLength((-2267.24663185));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'min' >= 0.0
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("7N+2d%2u@k2y^}", "x)C5=A", "x)C5=A");
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      try { 
        statisticalLineAndShapeRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "({0}, {1}) = {3} - {4}";
      stringArray0[1] = "({0}, {1}) = {3} - {4}";
      stringArray0[2] = "({0}, {1}) = {3} - {4}";
      stringArray0[3] = "{2}";
      stringArray0[4] = "({0}, {1}) = {3} - {4}";
      stringArray0[5] = "Color";
      stringArray0[6] = "{2}";
      stringArray0[7] = "{2}";
      stringArray0[8] = "({0}, {1}) = {3} - {4}";
      SymbolAxis symbolAxis0 = new SymbolAxis("{2}", stringArray0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("I,G:&qHDne6V:'_Yj+");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, symbolAxis0, statisticalLineAndShapeRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 5, (double) 5, (double) 500, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      multiplePiePlot0.addChangeListener(jFreeChart0);
      ValueMarker valueMarker0 = new ValueMarker(0.0, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      waterfallBarRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, symbolAxis0, valueMarker0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      Paint paint0 = categoryAxis3D0.getTickLabelPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "|Gc6C~2}SX_u)Po<|*";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[8] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis3D0, symbolAxis0, waterfallBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(9, 1, (-325.229014), 2200.0637, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ValueMarker valueMarker0 = new ValueMarker(843.131415, jFreeChart0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      waterfallBarRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, symbolAxis0, valueMarker0, (Rectangle2D) null);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LegendItem legendItem0 = new LegendItem("uC");
      legendItem0.getLabelFont();
      JFreeChart jFreeChart0 = new JFreeChart("uC", (Font) null, thermometerPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultStatisticalCategoryDataset0, 4466, (-5366), false, (-5366), (-341.78383820809), false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4466, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2);
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'formatter' argument.");
      Layer layer0 = Layer.BACKGROUND;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 0.05, 1.0E-8, 15);
      Layer layer1 = Layer.FOREGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, false, false);
      Color color0 = (Color)AbstractRenderer.DEFAULT_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(3066.846061515152, 0.0, groupedStackedBarRenderer1.DEFAULT_PAINT);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, (CategoryPlot) null, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.equals("PROPERTIES");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[9][9];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) lineRenderer3D0.ZERO;
      doubleArray2[1] = 8.0;
      doubleArray2[2] = 8.0;
      doubleArray2[3] = (double) 10;
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = (double) 10;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) 10;
      doubleArray3[1] = 8.0;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray3[4] = 923.011212645;
      doubleArray3[5] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray3[6] = (double) 10;
      doubleArray3[7] = (double) 10;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = (double) 10;
      doubleArray4[1] = 0.0;
      doubleArray4[2] = (double) 1.0F;
      doubleArray4[3] = 923.011212645;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = 12.0;
      doubleArray5[1] = (double) 1.0F;
      doubleArray5[2] = (double) 1.0F;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = (-1993.9972847);
      doubleArray5[5] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray5[6] = 8.0;
      doubleArray5[7] = (double) 10;
      doubleArray5[8] = 3991.7282865567;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = (double) 1.0F;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray7[2] = 12.0;
      doubleArray7[3] = (-2503.598027405446);
      doubleArray7[4] = (-2647.0);
      doubleArray7[5] = 12.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[1];
      doubleArray8[0] = 3991.7282865567;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[6];
      doubleArray9[0] = (-2647.0);
      doubleArray9[1] = (double) 10;
      doubleArray9[2] = (double) lineRenderer3D0.ZERO;
      doubleArray9[3] = (double) statisticalLineAndShapeRenderer0.ZERO;
      doubleArray9[4] = (double) 10;
      doubleArray9[5] = (-1.0);
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, (-2136), 6, false, 0.0, (-194.4));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, true, false, 500, 10, 1.0E-7, 10, plotOrientation0);
      statisticalLineAndShapeRenderer0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("l(=h#n3U2M", font0, thermometerPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(42, 3, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultStatisticalCategoryDataset0, (-1055), (-4537), true, 10, 0.0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, (-47), (-1571));
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, (-174), (-47), true, 0.0, 310.78712238);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      PlotOrientation plotOrientation1 = PlotOrientation.VERTICAL;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(10);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT.getStringBounds("w>", fontRenderContext0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      PlotOrientation plotOrientation2 = thermometerPlot0.getOrientation();
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0, 1.0F, 1.0F, 10, (-514.845288223089), 0.5F, plotOrientation2);
      stackedBarRenderer3D0.getItemLabelGenerator(1, 0, true);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesOutlineStroke(9);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 5, 1350);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 3, 3, false, 1350, 357.079583556);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupSeriesOutlineStroke(9);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 9, 9);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, (Shape) null, slidingCategoryDataset0, 9, 3, true, 3, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 500);
      JFreeChart jFreeChart1 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("P");
      Layer layer0 = Layer.BACKGROUND;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("R.", "SAVE", 680, 0.0F);
      Layer layer1 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer1);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      IntervalMarker intervalMarker0 = new IntervalMarker((-180.0), 0.2, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, (CategoryDataset) null, (-4682), 10, true, (-4682), 1.0F, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, (-1), 1, false, 2, (-1), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Graphics2D graphics2D0 = null;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      CategoryDataset categoryDataset0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, 0, 0, true, (-1933.0), 3, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getRenderAsPercentages();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1.0F, 15, 10, 1.0F, 1.0F, 10);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      DateAxis dateAxis0 = new DateAxis();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        ganttRenderer0.createHotSpotShape(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, (CategoryAxis) null, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 15, 10, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.clone();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-4710.353295205858), (double) statisticalLineAndShapeRenderer0.ZERO);
      stackedBarRenderer3D0.getPositiveItemLabelPositionFallback();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {3} - {4}", combinedDomainCategoryPlot0);
      jFreeChart0.getCategoryPlot();
      GapContent gapContent0 = new GapContent();
      PlainDocument plainDocument0 = new PlainDocument(gapContent0);
      AbstractDocument.LeafElement abstractDocument_LeafElement0 = plainDocument0.new LeafElement((Element) null, (AttributeSet) null, 10, 794);
      JTree jTree0 = new JTree(abstractDocument_LeafElement0, true);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathForRow(10);
      jTree0.getPathBounds((TreePath) null);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.04, "({0}, {1}) = {2}");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultStatisticalCategoryDataset0, 621, 10, false, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 621, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("G#|Zv!CW");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("m)", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1051, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, categoryMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ParsePosition parsePosition0 = new ParsePosition((-1754));
      decimalFormat0.parseObject("", parsePosition0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("&(\"*:'", decimalFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalLineAndShapeRenderer0.clone();
      statisticalLineAndShapeRenderer0.getToolTipGenerator(3, (-1754), false);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      statisticalLineAndShapeRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", decimalFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalLineAndShapeRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("PH2|R[o[QGyng2&-K@", decimalFormat0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getCrosshairState();
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 3.0, statisticalBarRenderer0.ZERO, 1007, 1007, 788.349, (-0.7853981633974483), plotOrientation0);
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection1, statisticalBarRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 654, 6, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 654, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      defaultCategoryDataset0.getColumnCount();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, dateAxis0, minMaxCategoryRenderer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(0, 84);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 84, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0, (-2644.4), (Paint) null, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'hotspot' argument.", decimalFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getCrosshairState();
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, "Null 'hotspot' argument.", "Null 'hotspot' argument.", 1208.1551467215522, 1007, 1208.1551467215522, 1208.1551467215522, plotOrientation0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, defaultStatisticalCategoryDataset0, 0, 0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 500);
      JFreeChart jFreeChart1 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart1.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      jFreeChart0.setBackgroundPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryAxis3D0.setUpperMargin(0.5F);
      CategoryMarker categoryMarker1 = new CategoryMarker(0.05, jFreeChart0.DEFAULT_BACKGROUND_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      categoryPlot0.getOrientation();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      lineRenderer3D0.setUseFillPaint(true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D0, categoryPlot0, categoryAxis3D0, numberAxis3D0, defaultStatisticalCategoryDataset0, 300, 1, true, (-2636));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 300, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(true);
      minMaxCategoryRenderer0.getLegendItem(3196, 3196);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", groupedStackedBarRenderer0.ZERO, 3.0, 3196);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      boxAndWhiskerRenderer0.setSeriesItemLabelGenerator(25, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      boxAndWhiskerRenderer0.getSeriesItemLabelGenerator((-3059));
      boxAndWhiskerRenderer0.getBaseItemLabelGenerator();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-2493), (-3481), (-863), (-2493), 5, 25, true, false, true, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = (-413);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-413), 10);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, (CategoryAxis) null, numberAxis3D0, minMaxCategoryRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(3, (-4236));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 500);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart2.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      jFreeChart0.setBackgroundPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryAxis3D0.setUpperMargin(0.5F);
      CategoryMarker categoryMarker1 = new CategoryMarker(0.05, jFreeChart1.DEFAULT_BACKGROUND_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      statisticalLineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 1.0E-8, 10, 1024, 680, 0.0, 0.0, plotOrientation0);
      assertEquals(441.21, numberAxis3D0.getUpperBound(), 0.01);
      
      groupedStackedBarRenderer0.getRowCount();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      assertEquals(0, groupedStackedBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 10, (-873), false, 1818.18054, 3.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      minMaxCategoryRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Float0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      assertEquals(0, categoryStepRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1695.2446632988624), 10);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.05, 695.857485);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      scatterRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, rectangle0, (-2884.791376602628), cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItem(0, 0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("KRk_[ F I%hl,`lq");
      double[][] doubleArray0 = new double[8][0];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-2884.791376602628);
      doubleArray1[2] = (-376.2);
      doubleArray1[3] = 0.05;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 12.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = 1.0E-8;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 3.0;
      doubleArray2[4] = 3.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 12.0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray3[3] = 338.56716803;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray4[1] = 0.05;
      doubleArray4[2] = (double) 696;
      doubleArray4[3] = (double) 0;
      doubleArray4[4] = 8.0;
      doubleArray4[5] = (-376.2);
      doubleArray4[6] = 3.0;
      doubleArray4[7] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = (double) 10;
      doubleArray5[1] = (double) 1.0F;
      doubleArray5[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray5[3] = 3.0;
      doubleArray5[4] = (-1695.2446632988624);
      doubleArray5[5] = 0.05;
      doubleArray5[6] = (double) statisticalBarRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (double) 696;
      doubleArray6[1] = 12.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[9];
      doubleArray7[0] = 0.05;
      doubleArray7[1] = 0.0;
      doubleArray7[2] = (-1695.2446632988624);
      doubleArray7[3] = (double) 0;
      doubleArray7[4] = (double) 1;
      doubleArray7[5] = 12.0;
      doubleArray7[6] = (double) scatterRenderer0.ZERO;
      doubleArray7[7] = (-2884.791376602628);
      doubleArray7[8] = (double) stackedBarRenderer3D1.ZERO;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[1];
      doubleArray8[0] = 8.0;
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.hitTest(0.0, 0, (Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 65535, 10, true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator((-97));
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((-97), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      Graphics2D graphics2D0 = null;
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      CategoryAxis categoryAxis0 = null;
      ValueAxis valueAxis0 = null;
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-2227.0239));
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, (CategoryAxis) null, (ValueAxis) null, barRenderer3D0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.StackedBarRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, false, 1.0E-8, 0.0, 3, 3.0, 10, plotOrientation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot1 = statisticalLineAndShapeRenderer0.getPlot();
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      Graphics2D graphics2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("]`F");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, (CategoryAxis) null, logarithmicAxis0, defaultCategoryDataset0, (-1845), 10, true, categoryStepRenderer_State0, rectangle2D_Float0);
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, logarithmicAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot1.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, (-2241.13F), 0.0F, 10);
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D0, point2D0);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      statisticalLineAndShapeRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Float0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      groupedStackedBarRenderer0.getPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getErrorIndicatorStroke();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      statisticalBarRenderer0.getPlot();
      barRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, (ValueAxis) null, (Marker) null, rectangle2D_Float0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1938.95846052, (-1.0));
      JFreeChart jFreeChart0 = new JFreeChart("The renderer has changed and I don't know what to do!", combinedDomainCategoryPlot0);
      jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot1.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, combinedDomainXYPlot1.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      assertEquals(0, minMaxCategoryRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleInsets rectangleInsets0 = new RectangleInsets((-554.31802369), 10, 548.5, (double) groupedStackedBarRenderer0.ZERO);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleInsets rectangleInsets0 = new RectangleInsets((double) groupedStackedBarRenderer0.ZERO, 3.0, (-1630.3466482), 0.2);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      stackedBarRenderer3D0.equals(defaultCategoryItemRenderer0);
      defaultCategoryItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      stackedBarRenderer3D0.getRenderAsPercentages();
      defaultCategoryItemRenderer0.getLegendItemURLGenerator();
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      stackedBarRenderer3D0.equals(barPainter0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      waterfallBarRenderer0.getPositiveBarPaint();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-2715), (-2715), 2087, 1, (-948), (-2864), true, true, true, false, false, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PeriodAxis periodAxis0 = new PeriodAxis("Nusl 'listeve' argumenk.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      BevelBorder bevelBorder0 = new BevelBorder((-725));
      JTextField jTextField0 = new JTextField("Nusl 'listeve' argumenk.");
      JPasswordField jPasswordField0 = new JPasswordField("Nusl 'listeve' argumenk.");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds((-2168));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      JFreeChart jFreeChart0 = new JFreeChart("Nusl 'listeve' argumenk.", combinedRangeCategoryPlot0);
      jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, periodAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getSeriesItemLabelGenerator((-304));
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(1269, 1269, 6.0F);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((-1), (-304));
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("D/}i590", waferMapPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, (-1247), 1269, (-1), (-1), 15, true, true, false, true, true, false, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, 0, 2453, true, (-87.0272315350913), (-87.0272315350913), false);
      assertTrue(stackedBarRenderer3D0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, true, true, true);
      Rectangle rectangle0 = chartPanel0.getBounds();
      GeneralPath generalPath0 = new GeneralPath(rectangle0);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      groupedStackedBarRenderer0.setAutoPopulateSeriesFillPaint(true);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      groupedStackedBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker("ZOOM_IN_DOMAIN", combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      categoryPlot0.addDomainMarker(0, categoryMarker0, layer0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'description' argument.", 10, 0.0, 10);
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      assertEquals(5.0, categoryPointerAnnotation0.getArrowLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.0F, groupedStackedBarRenderer0.ZERO, 0.05, 500, 0.0F, 1.0F, plotOrientation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(10);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getItemMiddle(false, 10, defaultStatisticalCategoryDataset0, (CategoryAxis) null, (Rectangle2D) null, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 500);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart2.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      jFreeChart0.setBackgroundPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryAxis3D0.setUpperMargin(1.25);
      CategoryMarker categoryMarker1 = new CategoryMarker(0.05, jFreeChart1.DEFAULT_BACKGROUND_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      groupedStackedBarRenderer0.setMaximumBarWidth(680);
      minMaxCategoryRenderer0.getGroupStroke();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      statisticalLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D_Double0, categoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      assertEquals(441.21, numberAxis3D0.getUpperBound(), 0.01);
      assertEquals(1, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) groupedStackedBarRenderer0.ZERO, (double) groupedStackedBarRenderer0.ZERO);
      GeneralPath generalPath0 = new GeneralPath(groupedStackedBarRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      boolean boolean0 = true;
      groupedStackedBarRenderer0.setAutoPopulateSeriesFillPaint(true);
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(0.2, (-3094.122286));
      stackedBarRenderer3D1.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleInsets rectangleInsets0 = new RectangleInsets((double) scatterRenderer0.ZERO, (-1188.765), (-1918.319392336), 521.4201758064098);
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.BOTTOM;
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, rectangleInsets0, lengthAdjustmentType1, rectangleAnchor0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      stackedBarRenderer3D1.setIncludeBaseInRange(false);
      assertFalse(stackedBarRenderer3D1.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      GeneralPath generalPath0 = new GeneralPath(groupedStackedBarRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D0, (CategoryAxis) null, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleInsets rectangleInsets0 = new RectangleInsets((double) groupedStackedBarRenderer0.ZERO, 3.0, (-1630.3466482), (-3.0F));
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.BOTTOM;
      groupedStackedBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, rectangleInsets0, lengthAdjustmentType1, rectangleAnchor1);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-3.0F), 2.0F, 2.0F, 1.0F);
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Point2D point2D0 = minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float1, rectangle2D_Float0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      subCategoryAxis0.setLowerMargin((-172.95498));
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot1.findSubplot(plotRenderingInfo0, point2D0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, rectangle2D_Float0, (-1666.244043), categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-23);
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.lookupSeriesFillPaint(606);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      layeredBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      layeredBarRenderer0.setShadowVisible(true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      int int0 = 40;
      statisticalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setMinimumBarLength(3129.64910292);
      Object object0 = ganttRenderer0.clone();
      ganttRenderer0.equals(object0);
      ganttRenderer0.getColumnCount();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.getSeriesBarWidth(0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1.0), 0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("%n75V;QRg;B~", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(0, 10, 3129.64910292, (-2732.0), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean0 = false;
      Number[][] numberArray0 = new Number[3][5];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[1] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[2] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[3] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[4] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[1] = (Number) minMaxCategoryRenderer0.ZERO;
      Double double0 = new Double(1558.6121859281);
      numberArray2[2] = (Number) double0;
      numberArray2[3] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray2[4] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray3[1] = (Number) double0;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-3267.0), (double) groupedStackedBarRenderer0.ZERO, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(500, 500, 1.0F, 10);
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Point2D point2D0 = groupedStackedBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      scatterRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, dateAxis0, rectangle2D_Float1, 500.0F, stackedBarRenderer3D0.DEFAULT_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      assertEquals(3, minMaxCategoryRenderer0.getDefaultEntityRadius());
      
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(2, 2, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) scatterRenderer0.ZERO, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      multiplePiePlot0.setNoDataMessage("");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.getBounds2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryDataset categoryDataset0 = null;
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainCrosshairStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, stroke0, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, combinedDomainCategoryPlot0, categoryAxis0, categoryMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      multiplePiePlot0.setNoDataMessage("Not implemented.");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      rectangle2D_Float0.x = (float) 10;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, numberAxis0, rectangle2D0, 1.0E-8, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 300, 7.2E7, (double) 10, chartRenderingInfo0);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart2.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 420, (Number) 0.2, (Comparable) 0.2, (Comparable) groupedStackedBarRenderer0.ZERO);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      jFreeChart0.setBackgroundPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryAxis3D0.setUpperMargin(1.25);
      CategoryMarker categoryMarker1 = new CategoryMarker(0.05, jFreeChart1.DEFAULT_BACKGROUND_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getPassCount();
      statisticalLineAndShapeRenderer0.equals(ellipse2D_Double0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, numberAxis0.DEFAULT_TICK_MARK_PAINT, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      assertEquals(210.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      assertTrue(object0.equals((Object)statisticalLineAndShapeRenderer0));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.updateCrosshairY((double) scatterRenderer0.ZERO, (-2318));
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, 0.2, 1.0, (-81), (double) statisticalBarRenderer0.ZERO, 2.0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        ganttRenderer1.updateCrosshairValues(categoryCrosshairState0, ganttRenderer0.ZERO, ganttRenderer0.ZERO, 3.0, (-2448), (-2448), (-2448), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("Jzg,+CjxEAP@ge_6K8M");
      categoryPlot0.clearRangeMarkers(2);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(67);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator(716);
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      statisticalLineAndShapeRenderer0.lookupSeriesPaint(515);
      statisticalLineAndShapeRenderer0.getSeriesVisible(4);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(515, (Boolean) null);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 4;
      intArray0[1] = 4;
      intArray0[2] = 515;
      intArray0[3] = 716;
      intArray0[4] = 515;
      intArray0[5] = 716;
      intArray0[6] = 4;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.createStackedValueList(defaultBoxAndWhiskerCategoryDataset0, statisticalLineAndShapeRenderer0.ZERO, intArray0, (double) statisticalBarRenderer1.ZERO, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v#", 0.2, (double) groupedStackedBarRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getRangeAxis((CategoryPlot) null, (-2038));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMeanVisible();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) scatterRenderer0.ZERO, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      multiplePiePlot0.setNoDataMessage("");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      scatterRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle2D0, (-2259.0), boxAndWhiskerRenderer0.DEFAULT_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      scatterRenderer0.setUseFillPaint(true);
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer0.setFirstBarPaint(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMeanVisible();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) scatterRenderer0.ZERO, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      multiplePiePlot0.setNoDataMessage("");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      scatterRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, rectangle2D0, 0.05, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      scatterRenderer0.setUseFillPaint(true);
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, scatterRenderer0.DEFAULT_PAINT, color0);
      waterfallBarRenderer0.setFirstBarPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      assertTrue(scatterRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(272, 500);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(4140, 1963);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      statisticalLineAndShapeRenderer0.lookupSeriesShape(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      combinedDomainXYPlot0.setBackgroundImage((Image) null);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 300, 7.2E7, (double) 10, chartRenderingInfo0);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainXYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart(multiplePiePlot0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryMarker categoryMarker0 = new CategoryMarker(statisticalLineAndShapeRenderer0.ZERO, jFreeChart2.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 15, (Number) 1024, (Comparable) 0.05, (Comparable) "ZOOM_RANGE_BOTH");
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      jFreeChart0.setBackgroundPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      categoryAxis3D0.setUpperMargin(1.0F);
      CategoryMarker categoryMarker1 = new CategoryMarker(500, jFreeChart0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.initialise(graphics2D0, rectangle2D_Double0, categoryPlot0, defaultStatisticalCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ValueAxis valueAxis0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, (ValueAxis) null, lineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader0.getHeaderRect(15);
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-3497.67990187), 15);
      bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      MultiListUI multiListUI0 = new MultiListUI();
      Stack<DefaultCategoryItemRenderer> stack0 = new Stack<DefaultCategoryItemRenderer>();
      JList<LineAndShapeRenderer> jList0 = new JList<LineAndShapeRenderer>(stack0);
      // Undeclared exception!
      try { 
        multiListUI0.getCellBounds(jList0, 1414, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v#", 0.2, (double) groupedStackedBarRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      groupedStackedBarRenderer0.getShadowYOffset();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("v#", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 60, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      DefaultFormatter defaultFormatter0 = new DefaultFormatter();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) defaultFormatter0);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jFormattedTextField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds((-1), 10);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.drawBackground(graphics2D0, (CategoryPlot) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, numberAxis3D0.DEFAULT_TICK_UNIT, false, (-455.92837136906), 10, 0.05, 0.0, plotOrientation0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(500, 10, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getLegendItems();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BevelBorder bevelBorder0 = new BevelBorder(57, color0, color0, color0, color0);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jPasswordField0, (-939), 84, 4564, (-106));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Color color1 = Color.YELLOW;
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, (-939), color1, basicStroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1860.1, 1860.1, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImage0.createGraphics();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader0.getHeaderRect(10);
      Layer layer1 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(0, 1.0F);
      bufferedImageRenderingSource0.createGraphics2D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getToolTipGenerator(0, 932, false);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-270), (CategoryToolTipGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      lineRenderer3D1.setPlot(combinedRangeCategoryPlot0);
      Locale locale0 = Locale.KOREA;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Base tool tip generator not cloneable.", numberFormat0);
      lineRenderer3D0.setSeriesItemLabelGenerator(102, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      lineRenderer3D0.getSeriesItemLabelGenerator((-2047));
      lineRenderer3D1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      // Undeclared exception!
      try { 
        lineRenderer3D1.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)minMaxCategoryRenderer0.lookupSeriesShape(206);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(206, 1);
      minMaxCategoryRenderer0.getMaxIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!kRV+r;jnV");
      Layer layer0 = Layer.FOREGROUND;
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      double double0 = stackedBarRenderer3D0.getXOffset();
      assertEquals(12.0, double0, 0.01);
      
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Number[][] numberArray0 = new Number[5][4];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[0];
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[8];
      numberArray3[0] = (Number) 0.2;
      numberArray3[1] = (Number) minMaxCategoryRenderer1.ZERO;
      numberArray3[2] = (Number) 0.2;
      Integer integer1 = (Integer)Plot.ZERO;
      numberArray3[3] = (Number) integer1;
      numberArray3[4] = (Number) groupedStackedBarRenderer0.ZERO;
      groupedStackedBarRenderer0.getColumnCount();
      numberArray3[5] = (Number) 0;
      numberArray3[6] = (Number) 0.05;
      Float float0 = new Float(2840.5F);
      numberArray3[7] = (Number) float0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) 12.0;
      numberArray5[1] = (Number) 0.2;
      numberArray5[2] = (Number) 0.2;
      numberArray5[3] = (Number) 10;
      numberArray5[4] = (Number) float0;
      numberArray5[5] = (Number) 6.0;
      numberArray5[6] = (Number) minMaxCategoryRenderer1.ZERO;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-1822);
      statisticalBarRenderer0.getItemLabelGenerator((-791), (-1822), false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorStroke(groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(640.91683);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "org.jfree.chart.entity.PlotEntity";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.entity.PlotEntity", stringArray0);
      NumberAxis3D numberAxis3D1 = new NumberAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D1);
      numberAxis3D1.setAxisLineVisible(false);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 1);
      assertEquals(0.0F, valueAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      areaRenderer0.setEndType(areaRendererEndType0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getEndPercent();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[2][7];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) ganttRenderer0.ZERO;
      numberArray1[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray1[2] = (Number) 3.0;
      numberArray1[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 0.2;
      numberArray2[1] = (Number) areaRenderer0.ZERO;
      numberArray2[2] = (Number) ganttRenderer0.ZERO;
      numberArray2[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[4] = (Number) areaRenderer0.ZERO;
      numberArray2[5] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.getItemMiddle(0.2, 0.2, defaultIntervalCategoryDataset0, categoryAxis3D0, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v ", 0.2, 3.0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, groupedStackedBarRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-2323), (-1104), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v#", 0.2, 3.0);
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.removeAnnotation(categoryTextAnnotation0);
      scatterRenderer0.getUseSeriesOffset();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      scatterRenderer0.getBaseItemLabelGenerator();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = groupedStackedBarRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesVisibleInLegend(120);
      lineRenderer3D0.setSeriesShapesVisible(120, (Boolean) null);
      lineRenderer3D0.setAutoPopulateSeriesFillPaint(true);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      lineRenderer3D0.setXOffset(0.0);
      int int0 = 1738;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItem(1738, 10);
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      lineRenderer3D0.getSeriesItemLabelGenerator(1738);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)minMaxCategoryRenderer0.lookupSeriesShape(206);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(206, 1);
      minMaxCategoryRenderer0.getMaxIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setIncludeBaseInRange(false);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!kRV+r;jnV");
      Layer layer0 = Layer.FOREGROUND;
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, (ValueAxis) null, layer0, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getXOffset();
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boxAndWhiskerRenderer0.setDefaultEntityRadius(1);
      boolean boolean0 = boxAndWhiskerRenderer0.isMeanVisible();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      groupedStackedBarRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-194);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-194), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-111.839729331));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 0.05);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, (CategoryAxis) null, cyclicNumberAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      multiplePiePlot0.setNoDataMessage("");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.getBounds2D();
      scatterRenderer0.setUseFillPaint(false);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) lineAndShapeRenderer0.ZERO;
      doubleArray1[1] = 267.0941970286;
      doubleArray1[2] = (double) 0.5F;
      doubleArray1[3] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, rectangle2D_Float0, defaultIntervalCategoryDataset0, 10, 1637, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.clone();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1200.99, 50.0);
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset1 = new JDBCCategoryDataset(connection1);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, (Shape) null, jDBCCategoryDataset1, 3, 3, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, taskSeriesCollection0, (-1538), 3, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setMinimumBarLength((double) statisticalBarRenderer0.ZERO);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.removeAnnotation(categoryTextAnnotation0);
      scatterRenderer0.getUseSeriesOffset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      ganttRenderer0.getCompletePaint();
      Color color0 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, color0, ganttRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      Layer layer2 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer2 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      spiderWebPlot0.getToolTipGenerator();
      groupedStackedBarRenderer2.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null);
      groupedStackedBarRenderer2.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer2);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, spiderWebPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultKeyedValues2DDataset0, 10, 1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      groupedStackedBarRenderer0.setLegendShape(10, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, chartRenderingInfo0);
      JFreeChart jFreeChart1 = new JFreeChart(categoryPlot0);
      jFreeChart1.getTitle();
      JFreeChart jFreeChart2 = new JFreeChart(combinedDomainXYPlot0);
      jFreeChart2.setTitle((TextTitle) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      defaultStatisticalCategoryDataset0.add((Number) 0.0F, (Number) 2.0F, (Comparable) false, (Comparable) "");
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      categoryAxis3D0.setUpperMargin((-149.465282));
      ellipse2D_Double0.getBounds2D();
      CategoryMarker categoryMarker1 = new CategoryMarker("ZOOM_IN_RANGE", categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker1, rectangle2D_Double0);
      assertEquals((-2.2), numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(2.2, numberAxis3D0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", (double) groupedStackedBarRenderer0.ZERO);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1.0), (double) groupedStackedBarRenderer0.ZERO);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = new Range(0.0, 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!kRV+r;jnV");
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2306.75645), 8.0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      Layer layer1 = Layer.BACKGROUND;
      stackedBarRenderer3D0.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, (ValueAxis) null, layer1, (PlotRenderingInfo) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle0, categoryPlot0, jDBCCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesVisibleInLegend(120);
      lineRenderer3D0.setSeriesShapesVisible(120, (Boolean) null);
      lineRenderer3D0.setAutoPopulateSeriesFillPaint(true);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      lineRenderer3D0.setXOffset(0.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      String string0 = "h=k2#aj4>";
      JFreeChart jFreeChart0 = new JFreeChart("h=k2#aj4>", combinedRangeCategoryPlot0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D rectangle2D0 = null;
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
      statisticalBarRenderer0.getSeriesURLGenerator(2741);
      layeredBarRenderer0.lookupSeriesStroke(2741);
      layeredBarRenderer0.setSeriesURLGenerator(2741, (CategoryURLGenerator) null, false);
      layeredBarRenderer0.setItemMargin(4377.6);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("-~MVAN1.SWGJ3fv{");
      levelRenderer0.calculateSeriesWidth(200.0, extendedCategoryAxis0, 2741, 3);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, (CategoryDataset) null, 3, (-1), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-984), 1049, false);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(94, (CategoryItemLabelGenerator) null, false);
      CategoryDataset categoryDataset0 = null;
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesVisible(1049, true);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      double double0 = BarRenderer3D.DEFAULT_Y_OFFSET;
      boolean boolean0 = false;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues((CategoryDataset) null, 94, (-984));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.StackedAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      groupedStackedBarRenderer0.setLegendShape(10, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, chartRenderingInfo0);
      JFreeChart jFreeChart1 = new JFreeChart(categoryPlot0);
      jFreeChart1.getTitle();
      JFreeChart jFreeChart2 = new JFreeChart(combinedDomainXYPlot0);
      jFreeChart2.setTitle((TextTitle) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      categoryAxis3D0.setUpperMargin((-149.465282));
      ellipse2D_Double0.getBounds2D();
      CategoryMarker categoryMarker1 = new CategoryMarker("ZOOM_IN_RANGE", categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalLineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker1, rectangle2D_Double0);
      assertEquals(0.0F, categoryAxis3D0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = true;
      statisticalBarRenderer0.getItemLabelGenerator(94, 1049, true);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(94, (CategoryItemLabelGenerator) null, true);
      CategoryDataset categoryDataset0 = null;
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesVisible(0, true);
      lineRenderer3D0.getXOffset();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      int int0 = 0;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues((CategoryDataset) null, 94, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.StackedAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v#", 0.2, 3.0);
      Layer layer0 = Layer.FOREGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getCrosshairState();
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, groupedStackedBarRenderer0.ZERO, 0.0, (double) groupedStackedBarRenderer1.ZERO, 151, (double) groupedStackedBarRenderer1.ZERO, 151, plotOrientation0);
      assertFalse(groupedStackedBarRenderer0.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setMaximumBarWidth((-1.0));
      stackedBarRenderer0.getPositiveItemLabelPositionFallback();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      lineAndShapeRenderer0.setUseSeriesOffset(false);
      stackedBarRenderer0.setIncludeBaseInRange(true);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, compassPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 1, 10, 15, 1, 10, true, true, true, true, false, true, true);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1024);
      CategoryMarker categoryMarker0 = new CategoryMarker(300);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(categoryMarker0);
      compassPlot0.markerChanged(markerChangeEvent0);
      stackedBarRenderer0.setLegendShape(0, compassPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(300, 1066, chartRenderingInfo0);
      jFreeChart0.getTitle();
      jFreeChart0.setTitle((TextTitle) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("yov&h-]e>59UZ-W");
      CategoryMarker categoryMarker1 = new CategoryMarker("ZOOM_RANGE_BOTH", jFreeChart0.DEFAULT_BACKGROUND_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), "ZOOM_IN_DOMAIN");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", (double) groupedStackedBarRenderer0.ZERO);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1.0), (double) groupedStackedBarRenderer0.ZERO);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = new Range(0.0, 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("!kRV+r;jnV");
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2306.75645), 8.0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1);
      Layer layer1 = Layer.BACKGROUND;
      stackedBarRenderer3D0.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, (ValueAxis) null, layer1, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getXOffset();
      stackedBarRenderer3D0.setMaximumBarWidth(1748.075198056783);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      Layer layer0 = Layer.FOREGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1860.1, 1860.1, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(0);
      Layer layer1 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("/.J7U0uHM`hKxbE]Z-");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-167.1));
      stackedBarRenderer3D1.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, cyclicNumberAxis0, layer1, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getXOffset();
      stackedBarRenderer3D1.setMaximumBarWidth(2.0F);
      assertEquals(12.0, BarRenderer3D.DEFAULT_X_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      stackedBarRenderer0.hashCode();
      int int0 = 0;
      int int1 = (-50);
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.setSeriesURLGenerator((-50), (XYURLGenerator) customXYURLGenerator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        areaRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, 1.0, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.clone();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) areaRenderer0.ZERO, 1.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'listener' argument.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      BevelBorder bevelBorder0 = new BevelBorder((-2170));
      JTextField jTextField0 = new JTextField("Null 'listener' argument.");
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jTextField0, 15, (-279), 10, 0);
      areaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle0, (-1677.1849488757648), jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      int int0 = (-3289);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo((-3289));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      Layer layer1 = Layer.BACKGROUND;
      SystemColor systemColor0 = SystemColor.scrollbar;
      BevelBorder bevelBorder0 = new BevelBorder(0, systemColor0, systemColor0, systemColor0, systemColor0);
      bevelBorder0.getInteriorRectangle((Component) jTableHeader0, 212, 212, 15, 43);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      areaRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 1.0F, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MockDate mockDate0 = new MockDate(43);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer2 = Layer.BACKGROUND;
      assertSame(layer2, layer1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultShadowsVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D((String) null);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(192);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, numberAxis3D0.DEFAULT_TICK_UNIT, true, 20.0, 3, (-928.27537145614), 1.0E-8, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = Color.orange;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1737.943758495527), (double) groupedStackedBarRenderer0.ZERO, false);
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, categoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultStatisticalCategoryDataset0, 10, 10, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      int int0 = 1739;
      lineRenderer3D0.getSeriesItemLabelGenerator(59);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = false;
      statisticalBarRenderer0.getItemLabelGenerator(1600, 59, false);
      JList<ValueMarker> jList0 = new JList<ValueMarker>();
      int int1 = 0;
      jList0.getCellBounds(0, 1739);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, taskSeriesCollection0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setMaximumBarWidth((-1.0));
      stackedBarRenderer0.getPositiveItemLabelPositionFallback();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      lineAndShapeRenderer0.setUseSeriesOffset(false);
      stackedBarRenderer0.setIncludeBaseInRange(true);
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, compassPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 1, 10, 15, 1, 10, true, true, true, true, false, true, true);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(fixedMillisecond0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(categoryMarker0);
      compassPlot0.markerChanged(markerChangeEvent0);
      stackedBarRenderer0.setLegendShape(1066, lineAndShapeRenderer0.DEFAULT_SHAPE);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.getTitle();
      jFreeChart0.setTitle((TextTitle) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ZOOM_IN_RANGE");
      CategoryMarker categoryMarker1 = new CategoryMarker(10, compassPlot0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer0.DEFAULT_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.drawDomainMarker(graphics2D0, (CategoryPlot) null, categoryAxis3D0, categoryMarker1, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.createState((PlotRenderingInfo) null);
      lineAndShapeRenderer0.getURLGenerator(1, 1, false);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      lineAndShapeRenderer0.setAutoPopulateSeriesStroke(false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      statisticalBarRenderer1.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertTrue(statisticalBarRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      lineRenderer3D0.getSeriesItemLabelGenerator(38);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      lineRenderer3D0.setAutoPopulateSeriesFillPaint(false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getURLGenerator(0, (-1533), false);
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      statisticalBarRenderer0.getItemLabelGenerator(1600, 38, false);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      lineRenderer3D0.getLegendItems();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = (-174);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setLegendTextFont((-174), defaultCategoryItemRenderer0.DEFAULT_VALUE_LABEL_FONT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.getDomainAxis(categoryPlot0, defaultStatisticalCategoryDataset0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot1, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2709.02986), "ItemLabelGenerator not cloneable.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getOrientation();
      Polygon polygon0 = new Polygon();
      polygon0.getBounds();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, defaultKeyedValues2DDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Range range0 = lineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("v ", 0.2, 3.0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, groupedStackedBarRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-2323), (-1104), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem((-1), (-1));
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      assertNotNull(icon0);
      
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("7<", "7<", 0.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer2.lookupSeriesShape(4323);
      minMaxCategoryRenderer2.getLegendItem(1, 4323);
      minMaxCategoryRenderer2.getMaxIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      double double0 = stackedBarRenderer3D0.getXOffset();
      assertEquals(12.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.createState((PlotRenderingInfo) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      lineAndShapeRenderer0.setAutoPopulateSeriesStroke(false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      statisticalBarRenderer1.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertFalse(statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Shape shape0 = minMaxCategoryRenderer0.lookupSeriesShape(206);
      int int0 = 1;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(206, 1);
      minMaxCategoryRenderer0.getMaxIcon();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, shape0, defaultBoxAndWhiskerCategoryDataset0, 206, 1, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 206, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 1618, 1457);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(slidingGanttCategoryDataset0, tableOrder0);
      spiderWebPlot0.getBaseSeriesPaint();
      lineAndShapeRenderer0.setBaseLegendTextPaint((Paint) null);
      lineAndShapeRenderer0.getSeriesShapesFilled((-18));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.lookupSeriesOutlinePaint(26);
      scatterRenderer0.setUseSeriesOffset(false);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1010.234792, 5.0E7);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      barRenderer3D0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity((EntityCollection) null, barRenderer3D0.DEFAULT_SHAPE, jDBCCategoryDataset0, 2961, 27, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2961, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      categoryTextAnnotation0.setRotationAngle(707.2057612934);
      Layer layer0 = Layer.BACKGROUND;
      categoryTextAnnotation0.setValue(5.0E7);
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setMinimumBarLength(2194.74);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      scatterRenderer0.getUseSeriesOffset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      int int0 = scatterRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      minMaxCategoryRenderer0.getLegendItem((-1), (-1));
      minMaxCategoryRenderer0.getMaxIcon();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BarRenderer.setDefaultShadowsVisible(false);
      double double0 = ganttRenderer0.getMinimumBarLength();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getNegativeItemLabelPositionFallback();
      groupedStackedBarRenderer1.getBaseURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(638, (CategoryURLGenerator) null, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      Color color1 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer2 = new GroupedStackedBarRenderer();
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer3 = new GroupedStackedBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      assertNotNull(icon0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem((-1), (-1));
      minMaxCategoryRenderer0.getMaxIcon();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("kW", dateFormat0);
      statisticalBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", lineRenderer3D0.ZERO, (-4.0));
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      lineRenderer3D0.getSeriesItemLabelGenerator(38);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(1600, 38, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseSeriesOffset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getMaxIcon();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("XJCCg{ss-00]TIZ2", stackedBarRenderer3D0.ZERO, 4.0, 3.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("XJCCg{ss-00]TIZ2");
      stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      groupedStackedBarRenderer0.getBaseURLGenerator();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer1.setSeriesURLGenerator((-1077), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'outlineStroke' argument.", "", 1.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getSeriesItemLabelGenerator(0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      lineRenderer3D0.getLegendItems();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Mw1js{", lineRenderer3D0.ZERO, 1309.5531195348362);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      int int0 = 870;
      lineRenderer3D0.getSeriesItemLabelGenerator(870);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int1 = 3388;
      stackedBarRenderer3D0.getItemLabelGenerator((-232), 3388, false);
      boolean boolean0 = false;
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      lineRenderer3D0.getLegendItems();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(870);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Paint paint0 = fastScatterPlot0.getDomainGridlinePaint();
      ganttRenderer0.setCompletePaint(paint0);
      ganttRenderer0.getShadowXOffset();
      ganttRenderer0.getSeriesURLGenerator((-2748));
      int int0 = 1;
      String string0 = "";
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (-2748);
      doubleArray0[1] = (double) 10;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      fastScatterPlot0.setDomainPannable(true);
      stringArray0[2] = "";
      stringArray0[3] = "";
      ChoiceFormat choiceFormat0 = null;
      try {
        choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array and limit arrays must be of the same length.
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setAutoPopulateSeriesFillPaint(true);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      int int0 = 1738;
      lineRenderer3D0.getPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, 0.0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      Color color0 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      spiderWebPlot0.setAxisLabelGap(0.0);
      spiderWebPlot0.getToolTipGenerator();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer1.setSeriesToolTipGenerator((-3561), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, 0.0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      Color color0 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(scatterRenderer0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      int int0 = 1;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getBounds();
      CategoryPlot categoryPlot0 = null;
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      defaultBoxAndWhiskerCategoryDataset0.clear();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle0, (CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(0, false);
      statisticalBarRenderer0.setShadowXOffset(992.8298985874443);
      XYSeries xYSeries0 = new XYSeries(0.05, true, true);
      XYSeries xYSeries1 = xYSeries0.createCopy(10, (-1436));
      XYDataItem xYDataItem0 = new XYDataItem((Number) 1.0F, (Number) 500);
      xYSeries1.addOrUpdate(xYDataItem0);
      CategoryTextAnnotation categoryTextAnnotation0 = null;
      try {
        categoryTextAnnotation0 = new CategoryTextAnnotation("-MD#m>IO", (Comparable) null, 2.5E7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'category' argument.
         //
         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, 0.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      lineRenderer3D0.getLegendItems();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "");
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      String string0 = "org.jfree.data.xy.DefaultHighLowDataset";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.xy.DefaultHighLowDataset");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      lineRenderer3D0.setPlot(categoryPlot0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(0.0, (-910.91077));
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", multiplePiePlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      Color color0 = Color.MAGENTA;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator(10, color0, 0.0F, (-1783), 0.0F);
      // Undeclared exception!
      try { 
        defaultShadowGenerator0.createDropShadow((BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.DefaultShadowGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      scatterRenderer0.setDefaultEntityRadius(0);
      scatterRenderer0.getUseOutlinePaint();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getNegativeItemLabelPositionFallback();
      groupedStackedBarRenderer0.getBaseURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getUseSeriesOffset();
      BarRenderer.getDefaultShadowsVisible();
      float[][] floatArray0 = new float[2][0];
      float[] floatArray1 = new float[9];
      floatArray1[0] = 0.0F;
      floatArray1[1] = (float) 0;
      floatArray1[2] = (float) 0;
      floatArray1[3] = (float) 0;
      floatArray1[4] = (float) 0;
      floatArray1[5] = (float) 0;
      floatArray1[6] = (float) 0;
      floatArray1[7] = (float) 0;
      floatArray1[8] = (float) 0;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[8];
      floatArray2[0] = (-1.0F);
      floatArray2[1] = (float) 0;
      floatArray2[2] = 0.0F;
      floatArray2[3] = 0.0F;
      floatArray2[4] = 0.0F;
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertTrue(valueAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("XJCCg{ss-00]TZ2", stackedBarRenderer3D0.ZERO, 4.0, 3.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryPointerAnnotation0.setCategoryAnchor(categoryAnchor0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.equals(stackedBarRenderer3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getEntityCollection();
      Byte byte0 = new Byte((byte)11);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Float float0 = new Float((float) (byte)11);
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      int[] intArray0 = new int[4];
      intArray0[0] = 5;
      intArray0[1] = (int) (byte)11;
      intArray0[2] = (int) (byte)22;
      intArray0[3] = 5;
      categoryStepRenderer_State0.setVisibleSeriesArray(intArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(entityCollection0, categoryStepRenderer_State0.line, defaultStatisticalCategoryDataset0, (byte)11, (byte)22, false, 56.03, 8.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 11, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, 0.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      lineRenderer3D0.getSeriesItemLabelGenerator(1738);
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      lineRenderer3D0.getLegendItems();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(1186);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      scatterRenderer0.setDefaultEntityRadius(0);
      scatterRenderer0.getUseOutlinePaint();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.getNegativeItemLabelPositionFallback();
      groupedStackedBarRenderer0.getBaseURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getUseSeriesOffset();
      BarRenderer.getDefaultShadowsVisible();
      Graphics2D graphics2D0 = null;
      float[][] floatArray0 = new float[2][0];
      float[] floatArray1 = new float[9];
      floatArray1[0] = 0.0F;
      floatArray1[1] = (float) 0;
      floatArray1[2] = (float) 0;
      floatArray1[3] = (float) 0;
      floatArray1[4] = (float) 0;
      floatArray1[5] = (float) 0;
      floatArray1[6] = (float) 0;
      floatArray1[7] = (float) 0;
      floatArray1[8] = (float) 0;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[8];
      floatArray2[0] = (-1.0F);
      floatArray2[1] = (float) 0;
      floatArray2[2] = 0.0F;
      floatArray2[3] = 0.0F;
      floatArray2[4] = 0.0F;
      floatArray2[5] = (float) 0;
      floatArray2[6] = 0.0F;
      floatArray2[7] = (float) 0;
      floatArray0[1] = floatArray2;
      LogAxis logAxis0 = new LogAxis();
      FastScatterPlot fastScatterPlot0 = null;
      try {
        fastScatterPlot0 = new FastScatterPlot(floatArray0, logAxis0, logAxis0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.jfree.chart.plot.FastScatterPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int0 = 0;
      stackedBarRenderer3D0.setShadowVisible(true);
      stackedBarRenderer3D0.getLegendShape(0);
      stackedBarRenderer3D0.setAutoPopulateSeriesStroke(true);
      int int1 = (-701);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-701), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setMinimumBarLength(2194.74);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.removeAnnotation(categoryTextAnnotation0);
      scatterRenderer0.getUseSeriesOffset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      ganttRenderer0.getCompletePaint();
      Color color0 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, color0, ganttRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      Layer layer2 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer2 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      spiderWebPlot0.getToolTipGenerator();
      groupedStackedBarRenderer2.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null);
      groupedStackedBarRenderer2.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer2);
      assertFalse(groupedStackedBarRenderer2.equals((Object)groupedStackedBarRenderer1));
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot1, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SystemColor systemColor0 = SystemColor.text;
      minMaxCategoryRenderer0.setGroupPaint(systemColor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("m:JM4[F^");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      AffineTransform affineTransform0 = new AffineTransform();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("!kRV+r;jnV");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset((-5.0));
      String[] stringArray0 = new String[6];
      lineRenderer3D0.setAutoPopulateSeriesOutlinePaint(false);
      lineRenderer3D0.equals(statisticalBarRenderer0);
      stringArray0[0] = "";
      stringArray0[1] = "org.jfree.chart.entity.PlotEntity";
      stringArray0[2] = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      stringArray0[3] = "";
      stringArray0[4] = "!kRV+r;jnV";
      stringArray0[5] = "+1(# T`aW.FTK|i3*";
      SymbolAxis symbolAxis0 = new SymbolAxis("+1(# T`aW.FTK|i3*", stringArray0);
      NumberAxis3D numberAxis3D1 = new NumberAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D1);
      statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getRangeAxis((CategoryPlot) null, (-2803));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getSeriesURLGenerator((-1));
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator((-1));
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorStroke(groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(640.91683);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", true, 2341.0753109);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      defaultStatisticalCategoryDataset0.add((Number) 1.0F, (Number) 10, (Comparable) groupedStackedBarRenderer0.ZERO, (Comparable) 2.0F);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(color0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("m:JM4[F^");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      AffineTransform affineTransform0 = new AffineTransform();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer1.clone();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getSeriesToolTipGenerator(5);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("d^/[g%lis;lc5k3", categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, 0.0);
      Locale locale0 = JComponent.getDefaultLocale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("Nktdu{g]#G1Ei~zQq", numberFormat0, numberFormat0, numberFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, false, standardXYZToolTipGenerator0);
      candlestickRenderer0.getSeriesURLGenerator((-9999));
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(standardXYZToolTipGenerator0, (XYURLGenerator) null);
      categoryPointerAnnotation0.removeChangeListener(stackedXYAreaRenderer2_0);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      scatterRenderer0.getBaseShapesFilled();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(983, true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setIncludeBaseInRange(false);
      assertEquals(1, layeredBarRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setIncludeBaseInRange(true);
      waterfallBarRenderer0.getBaseToolTipGenerator();
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setEndPercent((-225.7795795029657));
      LegendItem legendItem0 = waterfallBarRenderer0.getLegendItem(11, 3774);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("XJCCg{ss-00]TIZ2", stackedBarRenderer3D0.ZERO, 4.0, 3.0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryPointerAnnotation0.setCategoryAnchor(categoryAnchor0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.equals(stackedBarRenderer3D0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      Byte byte0 = new Byte((byte)11);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Float float0 = new Float((float) (byte)11);
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(entityCollection0, categoryStepRenderer_State0.line, defaultStatisticalCategoryDataset0, (byte)22, (byte)22, true, 2531.6845038035563, 5.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 22, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis numberAxis0 = new NumberAxis();
      String string0 = "gVMwBFgBV+eDFO";
      numberAxis0.setLabelURL("gVMwBFgBV+eDFO");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-614), 0, 10, 0, 6104, (-614), true, false, true, false, true, true);
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      groupedStackedBarRenderer0.getPlot();
      int int0 = 193;
      int int1 = (-535);
      boolean boolean0 = false;
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = null;
      try {
        standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("gVMwBFgBV+eDFO", (DateFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      groupedStackedBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot1, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorStroke(groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(640.91683);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "org.jfree.chart.entity.PlotEntity";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.entity.PlotEntity", stringArray0);
      NumberAxis3D numberAxis3D1 = new NumberAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D1);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 1);
      assertEquals(0.0F, valueAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      stackedAreaRenderer0.equals(defaultCategoryItemRenderer0);
      int int0 = 0;
      stackedAreaRenderer0.getBaseURLGenerator();
      stackedAreaRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer1 = new DefaultCategoryItemRenderer();
      int int1 = (-4732);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer1.setSeriesShapesVisible((-4732), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot1, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      String string0 = "";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, 0.0);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      lineRenderer3D0.getLegendItems();
      int int0 = 1186;
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(1186);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("j/b.g,#<]+2Q\":L= ", statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, 3.0);
      TextAnchor textAnchor0 = categoryPointerAnnotation0.getRotationAnchor();
      categoryPointerAnnotation0.setTextAnchor(textAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      statisticalBarRenderer0.setMinimumBarLength((double) scatterRenderer0.ZERO);
      scatterRenderer0.removeAnnotation(categoryPointerAnnotation0);
      scatterRenderer0.getUseSeriesOffset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      statisticalBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT, scatterRenderer0.DEFAULT_PAINT);
      Number[][] numberArray0 = new Number[6][6];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) 3.0;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 3.0;
      numberArray1[3] = (Number) 3.0;
      numberArray1[4] = (Number) 0.2;
      double double0 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray1[5] = (Number) 8.0;
      numberArray1[6] = (Number) waterfallBarRenderer0.ZERO;
      numberArray1[7] = (Number) 3.0;
      numberArray1[8] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      Integer integer0 = new Integer(3);
      numberArray2[0] = (Number) integer0;
      numberArray2[1] = (Number) 0.0F;
      numberArray2[2] = (Number) 0.0F;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 0.05;
      numberArray2[5] = (Number) scatterRenderer0.ZERO;
      numberArray2[6] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[6];
      numberArray3[0] = combinedDomainCategoryPlot0.ZERO;
      numberArray3[1] = (Number) waterfallBarRenderer0.ZERO;
      numberArray3[2] = (Number) 10;
      numberArray3[3] = (Number) 3.0;
      numberArray3[4] = (Number) 3.0;
      numberArray3[5] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) 3.0;
      numberArray4[1] = (Number) 0.0F;
      numberArray4[2] = (Number) statisticalBarRenderer0.ZERO;
      numberArray4[3] = (Number) 10;
      numberArray4[4] = (Number) 0.2;
      numberArray4[5] = (Number) 0.2;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[6];
      numberArray5[0] = (Number) 0.2;
      numberArray5[1] = (Number) 0.2;
      numberArray5[2] = (Number) 0.2;
      numberArray5[3] = (Number) 0.2;
      numberArray5[4] = (Number) integer0;
      numberArray5[5] = (Number) 0.2;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[2];
      numberArray6[0] = (Number) 0.0;
      numberArray6[1] = (Number) 2.0F;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SystemColor systemColor0 = SystemColor.text;
      minMaxCategoryRenderer0.setGroupPaint(systemColor0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("m:JM4[F^");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("m:JM4[F^", ringPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.getCategoryPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.RingPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("j/b.g,#<]+2Q\":L= ", statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, 3.0);
      TextAnchor textAnchor0 = categoryPointerAnnotation0.getRotationAnchor();
      categoryPointerAnnotation0.setTextAnchor(textAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      statisticalBarRenderer0.getSeriesURLGenerator(30);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      String string0 = "!kRV+r;jnV";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("!kRV+r;jnV", "!kRV+r;jnV", 238.01008452);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      String string1 = null;
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultStatisticalCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0, tableOrder0);
      spiderWebPlot0.getToolTipGenerator();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      groupedStackedBarRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImage0.createGraphics();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      Layer layer1 = Layer.BACKGROUND;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, 1.0F);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("/.J7U0uHM`hKxbE]Z-");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      stackedBarRenderer3D0.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, cyclicNumberAxis0, layer1, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.setMaximumBarWidth(2.0F);
      stackedBarRenderer3D0.createState((PlotRenderingInfo) null);
      int int0 = stackedBarRenderer3D0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.clearSeriesPaints(false);
      statisticalBarRenderer0.getRowCount();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      boolean boolean0 = false;
      lineAndShapeRenderer0.setUseFillPaint(false);
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.remove(windowStateListener1, windowStateListener1);
      defaultIntervalCategoryDataset0.hasListener((EventListener) null);
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      defaultIntervalCategoryDataset0.hasListener(jDBCXYDataset0);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.getStartValue((Comparable) 3.0, (Comparable) 3.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown 'series' key.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
      try { 
        barRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-2300), 10);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, slidingGanttCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int0 = 0;
      stackedBarRenderer3D0.setShadowVisible(true);
      stackedBarRenderer3D0.getLegendShape(0);
      stackedBarRenderer3D0.setAutoPopulateSeriesStroke(true);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-701), (CategoryToolTipGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TRUNCATE;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.removeAnnotations();
      boxAndWhiskerRenderer0.getMaximumBarWidth();
      lineRenderer3D0.setSeriesLinesVisible(0, false);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.getRenderAsPercentages();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(4213.3659011912, 3039.13832698284);
      barRenderer3D0.getYOffset();
      stackedBarRenderer0.getBaseURLGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(0, 1885, 2984, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2984
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.lookupSeriesOutlineStroke(0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("XJCCg{ss-00]TIZ2", 5, (-2686.05313), (-2686.05313));
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryPointerAnnotation0.setCategoryAnchor(categoryAnchor0);
      categoryStepRenderer0.equals(categoryPointerAnnotation0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      Number[][] numberArray0 = new Number[7][3];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[1];
      numberArray2[0] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      Byte byte0 = new Byte((byte)22);
      numberArray3[0] = (Number) byte0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) byte0;
      numberArray4[1] = (Number) 5;
      numberArray4[2] = (Number) byte0;
      numberArray4[3] = (Number) 0.0;
      numberArray4[4] = (Number) byte0;
      numberArray4[5] = (Number) 3.0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[2];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      numberArray5[0] = (Number) integer0;
      numberArray5[1] = (Number) 0.0;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[5];
      numberArray6[0] = (Number) 3.0;
      numberArray6[1] = (Number) integer0;
      numberArray6[2] = (Number) 10.0;
      numberArray6[3] = (Number) byte0;
      numberArray6[4] = (Number) 3.0;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[9];
      numberArray7[0] = (Number) 30.0;
      numberArray7[1] = (Number) 5.0;
      numberArray7[2] = (Number) 30.0;
      numberArray7[3] = (Number) byte0;
      numberArray7[4] = (Number) byte0;
      Float float0 = new Float(1.0F);
      numberArray7[5] = (Number) float0;
      numberArray7[6] = (Number) 3.0;
      numberArray7[7] = (Number) 3.0;
      numberArray7[8] = (Number) 5;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addEntity(entityCollection0, categoryStepRenderer_State0.line, defaultIntervalCategoryDataset0, 0, 0, false, 978.92, 1.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0, tableOrder0);
      spiderWebPlot0.zoom(0.0);
      spiderWebPlot0.getSeriesOutlineStroke();
      statisticalBarRenderer0.setErrorIndicatorStroke((Stroke) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset(0.1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.jfree.chart.entity.PlotEntity";
      stringArray0[1] = "org.jfree.chart.entity.PlotEntity";
      stringArray0[2] = "org.jfree.chart.entity.PlotEntity";
      stringArray0[3] = "org.jfree.chart.entity.PlotEntity";
      stringArray0[4] = "org.jfree.chart.entity.PlotEntity";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.entity.PlotEntity", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 1);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ValueAxis valueAxis0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ganttRenderer0.setPlot(combinedRangeCategoryPlot0);
      ganttRenderer0.getIncompletePaint();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = (-1710);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 10, (byte[]) null, byteArray0, (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = null;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, numberAxis3D0, statisticalLineAndShapeRenderer0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot1, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BarRenderer.getDefaultBarPainter();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setShadowVisible(true);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'style' argument.", stackedBarRenderer3D0.ZERO, (double) stackedBarRenderer3D0.ZERO, 12.0);
      TextAnchor textAnchor0 = categoryPointerAnnotation0.getRotationAnchor();
      categoryPointerAnnotation0.setTextAnchor(textAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      statisticalBarRenderer0.setMinimumBarLength(1.0E-4);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.removeAnnotation(categoryPointerAnnotation0);
      scatterRenderer0.getUseSeriesOffset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.setPlot(combinedDomainCategoryPlot0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getCompletePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPointerAnnotation0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      double double0 = LineRenderer3D.DEFAULT_Y_OFFSET;
      Integer integer0 = new Integer(2642);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ObjectList objectList0 = new ObjectList();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(objectList0);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.GENERAL;
      rendererChangeEvent0.setType(chartChangeEventType0);
      minMaxCategoryRenderer0.notifyListeners(rendererChangeEvent0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getMaxIcon();
      statisticalBarRenderer1.getLegendItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      int int0 = stackedAreaRenderer0.getPassCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.createState((PlotRenderingInfo) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setDrawBarOutline(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", 0.2, (double) lineAndShapeRenderer0.ZERO);
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesShapesFilled((-1436), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = 1477.0;
      Graphics2D graphics2D0 = null;
      Line2D.Double line2D_Double0 = new Line2D.Double(1477.0, 0.0, 0.0, 0.0);
      line2D_Double0.getBounds();
      CategoryAxis categoryAxis0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
