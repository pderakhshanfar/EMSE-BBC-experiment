/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 29 15:32:18 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.io.IOException;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import java.util.EventListener;
import java.util.Hashtable;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.DebugGraphics;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformType;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.event.DatasetChangeListener;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Month;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimeSeriesTableModel;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("C%o<n", stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      categoryTextAnnotation0.setRotationAnchor((TextAnchor) null);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setCompletePaint(stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.data.general.DatasetUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedAreaRenderer0.DEFAULT_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = new Range(0.0F, 2377.685317862);
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, moduloAxis0, waterfallBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 1.0F, 2.0F, 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, categoryPlot0, defaultStatisticalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Baetooxtipgenerator not cloneable.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      double[][] doubleArray0 = new double[1][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.5F, "gQO1,");
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 500, 0, true, categoryStepRenderer_State0, rectangle2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)1;
      areaRenderer0.lookupSeriesPaint((byte)37);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      areaRenderer0.getEndType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.isDrawLines();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[1][7];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) areaRenderer0.ZERO;
      numberArray1[1] = (Number) areaRenderer0.ZERO;
      numberArray1[2] = (Number) (byte)1;
      numberArray1[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[4] = (Number) (byte)10;
      numberArray1[5] = (Number) (byte)10;
      numberArray1[6] = (Number) areaRenderer0.ZERO;
      numberArray1[7] = (Number) minMaxCategoryRenderer0.ZERO;
      numberArray1[8] = (Number) (byte)10;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      boxAndWhiskerRenderer0.getLegendItems();
      LegendItem legendItem0 = boxAndWhiskerRenderer0.getLegendItem(426, 426);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesPaint(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Baetooxtipgenerator not cloneable.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      jFreeChart0.createBufferedImage(15, 10, chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      chartRenderingInfo0.getPlotInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, rectangle2D_Double0, defaultIntervalCategoryDataset0, 15, 15, false, 0.0, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(459.2023185631);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.renderer.xy.HighLowRenderer");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, stackedAreaRenderer0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.xy.HighLowRenderer", categoryAxis3D0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("S)IqA(#");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.getRowCount();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, 0, 892);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, line2D_Double0, defaultStatisticalCategoryDataset0, 3, 0, false, 1.0, (-657.6692121077));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = new JFreeChart("S)IqA(#", categoryAxis3D0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("S)IqA(#");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.getRowCount();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 15, 15);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, categoryPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 10, 10, true, 10, 553.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.StandardCategoryURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10, 1.0F, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo1);
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer0.createState(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("qz&z0");
      ModuloAxis moduloAxis0 = new ModuloAxis("qz&z0", (Range) null);
      ganttRenderer0.hitTest(1.0F, 10.0F, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, extendedCategoryAxis0, moduloAxis0, defaultKeyedValues2DDataset0, 10, 10, true, categoryItemRendererState0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      double double0 = ganttRenderer0.getItemMiddle(10.0F, true, defaultKeyedValues2DDataset0, extendedCategoryAxis0, rectangle2D_Float0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("C%o<n", stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ValueAxis valueAxis0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, (ValueAxis) null, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      JFreeChart jFreeChart1 = new JFreeChart("C%o<n", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      int int0 = 13;
      int int1 = 24;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, 13, 13, 24, 15, 1700, 5, false, false, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1800, 2009, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0F, 500);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) stackedAreaRenderer0.ZERO, 6);
      intervalMarker0.setLabel("^");
      intervalMarker0.setEndValue(1.0E-8);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      stackedBarRenderer3D0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 6, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      stackedBarRenderer3D0.setDrawBarOutline(false);
      assertEquals(4.0, stackedBarRenderer3D0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 6);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedAreaRenderer0.DEFAULT_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = new Range(0.0F, 2377.685317862);
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, moduloAxis0, waterfallBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 57, 10, 2154, 57, 15, 6, false, true, false, true, false, true, false);
      Point point0 = chartPanel0.getLocation();
      Line2D.Float line2D_Float0 = new Line2D.Float(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      waterfallBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D0);
      assertEquals(0, categoryPlot0.getCrosshairDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((Number) 3.0, (Comparable) 3.0, (Comparable) statisticalBarRenderer0.ZERO);
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      lineAndShapeRenderer0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("w^|yVcKjaL8cU9sX>", lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1, 15, 10, 10, 305, 1, true, false, true, true, false, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.getRowCount();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 500, 500);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Shape shape0 = stackedAreaRenderer0.lookupLegendShape(500);
      double[][] doubleArray0 = new double[3][4];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) stackedAreaRenderer0.ZERO;
      doubleArray1[1] = 0.2;
      doubleArray1[2] = (-1.0);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (-1.0);
      doubleArray3[1] = (double) 2.0F;
      doubleArray3[2] = (double) 2.0F;
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) stackedAreaRenderer0.ZERO;
      doubleArray3[5] = (double) 0;
      doubleArray3[6] = (double) 2.0F;
      doubleArray3[7] = 0.0;
      doubleArray3[8] = 2.5;
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      stackedAreaRenderer0.addEntity(standardEntityCollection0, shape0, defaultIntervalCategoryDataset0, 0, 0, true, 0.0, 2500000.0);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Graphics2D graphics2D0 = null;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("&ZSRQV/99*U;pE![");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      LogAxis logAxis0 = new LogAxis();
      Marker marker0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(Double.NaN, (-30.0), 10, 3.0);
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, (Rectangle2D) null, logAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, 5, 17);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, (Shape) null, slidingCategoryDataset0, 17, 17, false, 0.0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getItemMargin();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setYOffset((-276.896151134874));
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.setAutoPopulateSeriesPaint(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemLabelGenerator();
      areaRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      areaRenderer0.equals("");
      System.setCurrentTimeMillis(0L);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-1350.0));
      CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = areaRenderer0.getLegendItemToolTipGenerator();
      stackedBarRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator1);
      TimeSeriesTableModel timeSeriesTableModel0 = new TimeSeriesTableModel();
      stackedBarRenderer3D0.equals(timeSeriesTableModel0);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(stackedBarRenderer3D0.DEFAULT_WALL_PAINT);
      stackedBarRenderer3D0.getMinimumBarLength();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getRenderAsPercentages();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      int int0 = 0;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1511, 0, byteArray0, 13, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      MockDate mockDate0 = new MockDate(10, 10, 10);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-771), "");
      Locale locale0 = Locale.CANADA_FRENCH;
      Year year0 = new Year(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("", year0, year0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 4, 4, 13, 10, 500, 10, false, true, true, false, false, false);
      chartPanel0.getZoomRectangle();
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, periodAxis0, valueMarker0, (Rectangle2D) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer1.setMaximumBarWidth(1589.398720690999);
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(38, 15);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getIntegerInstance();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      decimalFormat0.setDecimalFormatSymbols(decimalFormatSymbols0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("({0}, {1}) = {2}", decimalFormat0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator((-2301));
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      scatterRenderer0.clone();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)scatterRenderer0.getBaseItemLabelGenerator();
      assertSame(intervalCategoryItemLabelGenerator1, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.lookupSeriesShape(427);
      Plot plot0 = combinedRangeCategoryPlot0.getRootPlot();
      JFreeChart jFreeChart0 = new JFreeChart("q)mz1,N", plot0);
      jFreeChart0.getCategoryPlot();
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem(10, (-1596));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      minMaxCategoryRenderer0.lookupSeriesShape(427);
      Plot plot0 = combinedRangeCategoryPlot0.getRootPlot();
      JFreeChart jFreeChart0 = new JFreeChart("q)mz1,N", plot0);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      minMaxCategoryRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getLegendItem((-806), (-806));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.lookupLegendTextPaint(2517);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      Object object0 = scatterRenderer0.clone();
      boolean boolean0 = scatterRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "({0}, {1}) = {2}");
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, 1.0E-8, 0.05, 1.0E-8);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 1600;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Basetool tip generator not cloneable.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Basetool tip generator not cloneable.", false, 10, (double) minMaxCategoryRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryItemRendererState categoryItemRendererState0 = lineRenderer3D0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("aMhXVNq!Ly8@WFw3Wc");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, valueAxis0, defaultIntervalCategoryDataset0, 10, 10, true, 211);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null &p%it'Erguent", "Null &p%it'Erguent", (double) stackedAreaRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null &p%it'Erguent");
      levelRenderer0.calculateSeriesWidth(0.0, subCategoryAxis0, (-1755), 65535);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double((-3559.11095), 0.0, 845.48796, (-388.032467));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Yx4-k'[`Cv{>k;EJ5");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      ganttRenderer0.hitTest(0.0, 0.0, (Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, subCategoryAxis0, logarithmicAxis0, defaultCategoryDataset0, 500, 1, true, categoryItemRendererState0);
      ganttRenderer0.setEndPercent((-831.9086564));
      assertEquals(0.0, ganttRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Base tool tip generator not cloneable.", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      stackedAreaRenderer0.drawBackground(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Double0);
      LegendItemCollection legendItemCollection0 = stackedAreaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      String string0 = "Null 'generator' argument.";
      AffineTransform affineTransform0 = new AffineTransform(0.05, 10, (double) stackedAreaRenderer0.ZERO, 1.0E-8, 2.0F, 0.05);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 0.0F, 2.0F, 500);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, (CategoryDataset) null, 3, (-704), false, categoryItemRendererState0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = 1;
      String string0 = "";
      Locale locale0 = new Locale("?T'^zQ/-Q_omW", "");
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("?T'^zQ/-Q_omW", numberFormat0);
      layeredBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boxAndWhiskerRenderer0.isMedianVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      stackedBarRenderer3D0.setBaseLegendShape(boxAndWhiskerRenderer0.DEFAULT_SHAPE);
      layeredBarRenderer0.equals(stackedBarRenderer3D0);
      stackedBarRenderer3D0.getPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Locale locale0 = new Locale("?T'^zQ/-Q_omW", "");
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("?T'^zQ/-Q_omW", numberFormat0);
      layeredBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boxAndWhiskerRenderer0.isMedianVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      BarRenderer.setDefaultBarPainter(gradientBarPainter0);
      stackedBarRenderer3D0.setBaseLegendShape(boxAndWhiskerRenderer0.DEFAULT_SHAPE);
      layeredBarRenderer0.equals(stackedBarRenderer3D0);
      stackedBarRenderer3D0.getPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.lookupSeriesOutlinePaint(500);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0F, 0.05, (Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D1, numberAxis3D0, defaultStatisticalCategoryDataset0, 3, (-3612), true, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Comparable<IntervalCategoryItemLabelGenerator>[] comparableArray0 = (Comparable<IntervalCategoryItemLabelGenerator>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, (ValueAxis) null, stackedAreaRenderer0);
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ")hQ^{[Anlk,30r+";
      stringArray0[1] = "77)~'<z@*0'BQ";
      stringArray0[2] = "The 'data' array must contain six arrays with equal length.";
      stringArray0[3] = "oFedacJ+v)dc(U0+";
      stringArray0[4] = "oFedacJ+v)dc(U0+";
      stringArray0[5] = "";
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0, 2235.474, graphics2D0, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, (ValueAxis) null, defaultIntervalCategoryDataset1, 10, 10, false, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.lookupSeriesOutlinePaint(500);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedAreaRenderer0);
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0, 0.0F, (Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, numberAxis3D0, defaultStatisticalCategoryDataset0, 4285, 4285, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4285, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-2944), "Null 'generator' argument.");
      DateAxis dateAxis0 = new DateAxis("", simpleTimeZone0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.hitTest(0.0, 0.0, (Graphics2D) null, rectangle0, (CategoryPlot) null, (CategoryAxis) null, dateAxis0, jDBCCategoryDataset0, 0, 7, false, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 7, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, (ValueAxis) null, stackedAreaRenderer0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 932.8856863, 4159.670180497564, 0.0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.BACKGROUND;
      stackedAreaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, (CategoryAxis) null, valueAxis0, layer1, plotRenderingInfo0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-506), 420);
      Range range0 = stackedAreaRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      double double0 = 1332.703884032951;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1332.703884032951, 0.05);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT.getStringBounds("Null 'generator' argument.", 10, 10, fontRenderContext0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawBackground((Graphics2D) null, categoryPlot0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'data' argument.");
      stackedAreaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getRangeAxis(categoryPlot0, 266);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 1, 3, 2, 1, 0, plotOrientation0);
      assertTrue(stackedAreaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1, 3, 2.0F, 0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, (CategoryAxis) null, valueAxis0, layer0, plotRenderingInfo0);
      Number[][] numberArray0 = new Number[9][2];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) 3;
      numberArray1[1] = (Number) stackedAreaRenderer0.ZERO;
      numberArray1[2] = (Number) 2.0F;
      numberArray1[3] = (Number) 0;
      numberArray1[4] = (Number) 1;
      numberArray1[5] = (Number) 0;
      numberArray1[6] = (Number) 2.0F;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[2];
      numberArray2[0] = (Number) 2.0F;
      numberArray2[1] = (Number) 500;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) 2.0F;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[9];
      numberArray4[0] = (Number) 3.0;
      numberArray4[1] = thermometerPlot0.ZERO;
      numberArray4[2] = (Number) 1.0F;
      numberArray4[3] = (Number) 2;
      numberArray4[4] = (Number) 0.05;
      double double0 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray4[5] = (Number) 8.0;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      numberArray4[6] = (Number) integer0;
      numberArray4[7] = thermometerPlot0.ZERO;
      numberArray4[8] = (Number) 2.0F;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      numberArray5[0] = (Number) integer1;
      numberArray5[1] = (Number) 0.05;
      numberArray5[2] = (Number) 0;
      numberArray5[3] = (Number) 2;
      numberArray5[4] = (Number) 3;
      numberArray5[5] = (Number) 2.0F;
      numberArray5[6] = (Number) 0.0;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[9];
      numberArray6[0] = (Number) integer0;
      numberArray6[1] = (Number) 1;
      Integer integer2 = new Integer((-1338));
      numberArray6[2] = (Number) integer2;
      numberArray6[3] = (Number) 1.0;
      numberArray6[4] = (Number) 3.0;
      numberArray6[5] = (Number) 10;
      numberArray6[6] = (Number) 0.05;
      numberArray6[7] = (Number) 0.05;
      numberArray6[8] = (Number) 0;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[1];
      numberArray7[0] = (Number) 0;
      numberArray0[6] = numberArray7;
      Number[] numberArray8 = new Number[4];
      numberArray8[0] = (Number) 0;
      double double1 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray8[1] = (Number) 12.0;
      numberArray8[2] = (Number) 0.05;
      double double2 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray8[3] = (Number) 12.0;
      numberArray0[7] = numberArray8;
      Number[] numberArray9 = new Number[0];
      numberArray0[8] = numberArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, thermometerPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 3, (-1980), false, 3, 200.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1980
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(6, 6, 6);
      bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      categoryStepRenderer0.createState(plotRenderingInfo0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double double0 = layeredBarRenderer0.getSeriesBarWidth(6);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      scatterRenderer0.clone();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, (-2282), (-2282));
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|`.?k3^%}NBb", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 45, (-3194));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("b'Y=C-H+gA{");
      ValueAxis valueAxis0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis3D0, (ValueAxis) null, minMaxCategoryRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryPlot categoryPlot1 = minMaxCategoryRenderer0.getPlot();
      categoryPlot1.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      double double0 = (-1520.686855883502);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      // Undeclared exception!
      try { 
        timePeriodValues0.getTimePeriod(937);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 937, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 1.0F, true, 1.0F, categoryAxis0.DEFAULT_TICK_MARK_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItem(1135, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      stackedAreaRenderer1.getLegendItems();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getLegendItem(0, (-4484));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      intervalCategoryItemLabelGenerator0.clone();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      scatterRenderer0.clone();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      assertTrue(scatterRenderer1.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.event.OverlayChangeEvent", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      int int0 = 4;
      int int1 = (-3990);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = null;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.initialise(graphics2D0, rectangle0, combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(4.0F, 5115.97F, 815.0F, 4.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      chartPanel0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, multiplePiePlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, valueAxis0, stackedAreaRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getRangeAxis(categoryPlot0, 1);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 1.0E-8, 0.0F, 2, 10, 0.05, 0.0, plotOrientation0);
      assertEquals(3, stackedAreaRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-2219), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), 2);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(defaultCaret0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LabelBlock labelBlock0 = new LabelBlock("", numberAxis3D0.DEFAULT_AXIS_LABEL_FONT, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D_Float0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertEquals(1, waterfallBarRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'data' argument.");
      stackedAreaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3956.81), 1.0F, "Null 'data' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getRangeAxis(categoryPlot0, 271);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 1, 3, 2, 1, 0, plotOrientation0);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setSeriesURLGenerator((-2839), (CategoryURLGenerator) customCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), 2);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, numberAxis3D0.DEFAULT_TICK_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setRenderAsPercentages(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainLine(graphics2D0, (CategoryPlot) null, rectangle2D_Float0, 607.0, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SystemColor systemColor0 = SystemColor.inactiveCaptionBorder;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 0.0F);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncompletePaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      double[][] doubleArray0 = new double[7][3];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray1[1] = (-1865.2);
      doubleArray1[2] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[1] = (-1865.2);
      doubleArray2[2] = (-1865.2);
      doubleArray2[3] = 0.0;
      doubleArray2[4] = (-1865.2);
      doubleArray2[5] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray3[2] = (-4251.465);
      doubleArray3[3] = (-1865.2);
      doubleArray3[4] = (-1865.2);
      doubleArray3[5] = (-1865.2);
      doubleArray3[6] = 0.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (-2906.76);
      doubleArray4[1] = (-4251.465);
      doubleArray4[2] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray4[3] = (-4251.465);
      doubleArray4[4] = (-1865.2);
      doubleArray4[5] = (-4251.465);
      doubleArray4[6] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = (-4251.465);
      doubleArray5[1] = (-1865.2);
      doubleArray5[2] = 0.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = 0.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[9];
      doubleArray7[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray7[1] = (-4251.465);
      doubleArray7[2] = (-2906.76);
      doubleArray7[3] = (-2906.76);
      doubleArray7[4] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray7[5] = (-2906.76);
      doubleArray7[6] = 0.0;
      doubleArray7[7] = 0.0;
      doubleArray7[8] = 0.0;
      doubleArray0[6] = doubleArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'data' argument.");
      stackedAreaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0, "Null 'data' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getRangeAxis(categoryPlot0, 271);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), 2);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(500, 2);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, multiplePiePlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = Color.orange;
      ganttRenderer0.setIncompletePaint(color0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setPositiveBarPaint(multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer2.getLegendItem((-3642), 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot1.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      chartPanel0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, multiplePiePlot1.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, valueAxis0, stackedAreaRenderer0);
      stackedAreaRenderer0.getDomainAxis(categoryPlot0, defaultCategoryDataset0);
      stackedAreaRenderer0.getLegendItems();
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        defaultIntervalCategoryDataset0.getSeriesKey(3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such series : 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), 2);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Aa/E'");
      stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D_Float0, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(2, 500);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        stackedAreaRenderer1.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, (RectangleInsets) null, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendShape(2714);
      barRenderer0.setAutoPopulateSeriesPaint(false);
      boolean boolean0 = true;
      barRenderer0.setAutoPopulateSeriesPaint(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator((-3559), (-3559), true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      Layer layer0 = Layer.FOREGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, ((AbstractRenderer) object0).DEFAULT_SHAPE, (CategoryDataset) null, 2714, 2814, false, 1527.6, 2814);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'data' argument.");
      stackedAreaRenderer0.setDataBoundsIncludesVisibleSeriesOnly(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3956.80523), "Null 'data' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 271);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(valueAxis0);
      thermometerPlot0.axisChanged(axisChangeEvent0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, 0, 1, 3, 2, 1, 0, plotOrientation0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      assertFalse(scatterRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";CaUh&4|.?k3}NBb");
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3}NBb", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      jFreeChart0.createBufferedImage(10, 10);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      double[][] doubleArray0 = new double[3][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      plotRenderingInfo0.setDataArea(rectangle2D0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultIntervalCategoryDataset0, (-6), (-6), true, 15, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(379.6105F, (-3.5169654F), 625.1866F, 1338.64F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SystemColor systemColor0 = SystemColor.info;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, (Paint) null, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      Layer layer0 = Layer.FOREGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(";E~p(d");
      stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D_Float0, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 1.0F, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE, systemColor0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, numberAxis3D0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, numberAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stackedBarRenderer3D0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, (-3.5169654F), stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesShapesFilled((-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, (-3.5169654F));
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 10;
      bufferedImage0.setRGB(10, 10, 10, (-1444), intArray0, 10, 10);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(2312.5091, (-3.5169654F), false);
      stackedBarRenderer3D1.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 1.0E7, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis3D0, defaultCategoryDataset0, 1767, 1767, true, categoryItemRendererState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) groupedStackedBarRenderer0.ZERO, 3.0);
      Graphics2D graphics2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.0, (-4627.591743), rectangleAnchor0);
      Rectangle2D rectangle2D1 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0);
      // Undeclared exception!
      try { 
        barRenderer3D0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D1, (-2489.7401085473984), groupedStackedBarRenderer0.DEFAULT_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = 2;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";E~p(d");
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(";E~p(d");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesItemLabelPaint((-373));
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 0.0F, (Paint) null, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) stackedAreaRenderer0.ZERO);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, 1.0E-8, 0.05, 1.0E-8);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getSectionPaint(3.0, false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Double0, 10, (Paint) null, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Hour hour0 = new Hour();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.2, 0.0F, 0.0F, 0.5235987755982988);
      Rectangle2D rectangle2D0 = rectangleInsets0.createInsetRectangle((Rectangle2D) rectangle2D_Float0);
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getItemMiddle(hour0, hour0, (CategoryDataset) null, categoryAxis0, rectangle2D1, rectangleEdge1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float((-3.5169654F), 2176.549F, (-3530.6118F), 0.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke(10, (-2253), true);
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.0F, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0);
      numberAxis3D0.setFixedAutoRange(264.921);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0, 378.88);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 0.0, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stroke0);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      numberAxis3D0.setFixedAutoRange((-126.5849F));
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 882.981398446964);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, (-3.5169654F), stackedAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("({0}, {1}) = {2}", numberFormat0, numberFormat0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-61);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getItemLabelGenerator((-94), 86, false);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3^%}NBb", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 1541, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      chartRenderingInfo0.getChartArea();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle rectangle0 = generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8, 0.2);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("lB[6uCB", minMaxCategoryRenderer0.ZERO, 0.0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      scatterRenderer0.equals(stackedAreaRenderer1);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      assertTrue(minMaxCategoryRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3^%}NBb", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 1541, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8, 0.2);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";E~p(d");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D_Double0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      minMaxCategoryRenderer1.getLegendItem(10, 15);
      CategoryMarker categoryMarker0 = new CategoryMarker(1541.0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawDomainMarker(graphics2D0, combinedDomainCategoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2944, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 1667.3075F, 2944, 0.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, (-1547.41464), numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.NEGATIVE_INFINITY, 618.968851252562);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator2 = new IntervalCategoryItemLabelGenerator();
      assertTrue(intervalCategoryItemLabelGenerator2.equals((Object)intervalCategoryItemLabelGenerator0));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = 1593;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 2365);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawOutline((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2237, 2237, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("BS(q");
      ValueAxis valueAxis0 = null;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultIntervalCategoryDataset0, 15, 26, false, categoryStepRenderer_State0, defaultCaret0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals(numberAxis3D0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 882.981398446964);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getEntityCollection();
      int int0 = 6;
      JTable jTable0 = new JTable(2948, 2);
      Rectangle rectangle0 = jTable0.getCellRect((-201), 0, true);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("({0}, {1}) = {3} - {4}");
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds(graphics2D0, rectangle0, combinedRangeCategoryPlot0, subCategoryAxis0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, (-201), (-2819), false, categoryStepRenderer_State0, rectangle2D_Float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, (-126.5849F), (-3.5169654F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D_Float0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals(numberAxis3D0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 882.981398446964);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Float0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(entityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultBoxAndWhiskerCategoryDataset0, 6, 1451, true, 8.0, (-3353.7));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3^%}NBb", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 1541, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8, 0.2);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      waterfallBarRenderer0.setMinimumBarLength(0.0);
      assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(86, 1593);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3^%}NBb", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 1541, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource1.createGraphics2D();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2398.2864, 1541.0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedDomainCategoryPlot1, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 2858, 65535, true, categoryStepRenderer_State0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65535
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = 1593;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Locale locale0 = Locale.KOREA;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 3);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, extendedCategoryAxis0, dateAxis0, slidingGanttCategoryDataset0, 1784, 10, true, categoryStepRenderer_State0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      NumberFormat.getCurrencyInstance();
      stackedAreaRenderer0.setAutoPopulateSeriesShape(false);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Tomer Peretz", stackedAreaRenderer0.ZERO, (double) stackedAreaRenderer0.ZERO);
      stackedAreaRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stackedAreaRenderer0.getToolTipGenerator(1, 1, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.getSeriesLinesVisible(1);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(1, (Boolean) null);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      String string0 = "4";
      CategoryAxis categoryAxis0 = new CategoryAxis("4");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, categoryStepRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 1558.288061, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE, 1);
      stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis3D0, intervalMarker0, defaultCaret0);
      RoundRectangle2D.Float roundRectangle2D_Float1 = new RoundRectangle2D.Float();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";CaUh&4|.?k3^%}NBb", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 1541, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BufferedImageRenderingSource bufferedImageRenderingSource1 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D(";CaUh&4|.?k3^%}NBb");
      IntervalMarker intervalMarker0 = new IntervalMarker(235.8, 0.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      minMaxCategoryRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot1, numberAxis3D0, intervalMarker0, rectangle2D0);
      assertTrue(combinedDomainCategoryPlot1.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesToolTipGenerator(2);
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) null, true);
      MeterPlot meterPlot0 = new MeterPlot((ValueDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart(meterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(874, 1532, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[1][5];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = (double) 1.0F;
      doubleArray1[2] = (double) 0.5F;
      doubleArray1[3] = 3.0;
      doubleArray1[4] = (double) 1.0F;
      doubleArray1[5] = (double) 10.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("({0}, {1}) = {2}", numberFormat0, numberFormat0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultCategoryDataset0, (byte)124, (-439));
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, (byte)3, 3, false, (byte)3, 0.0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator(",b{duxl?,Z }5^, ", numberFormat0, numberFormat0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      scatterRenderer0.clone();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("({0}, {1}) = {3} - {4}", numberFormat0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-76);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-78);
      byteArray0[6] = (byte) (-52);
      byteArray0[7] = (byte)124;
      byteArray0[8] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 10, 277, true, (-1.0), (double) stackedAreaRenderer0.ZERO, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, 0.0F, (-1.0F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      categoryStepRenderer_State0.getEntityCollection();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'dateFormatter' argument.");
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawAnnotations(graphics2D0, rectangle2D0, categoryAxis0, numberAxis3D0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      ScatterRenderer scatterRenderer2 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator1 = (StandardCategoryToolTipGenerator)scatterRenderer1.getBaseToolTipGenerator();
      assertNotSame(standardCategoryToolTipGenerator1, standardCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getPassCount();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Base item URL generator not cloneable.");
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getDrawOutlines();
      defaultCategoryItemRenderer0.equals(scatterRenderer0);
      defaultCategoryItemRenderer0.setDrawOutlines(false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) groupedStackedBarRenderer0.ZERO, (-2470.1272036671203), 1.0F, (double) scatterRenderer0.ZERO);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Double0, combinedDomainCategoryPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot1.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 4, 1, 1, 95, 1, false, false, false, false, true, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      stackedAreaRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 1, (-9999), false, 26, 1.0F, true);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      assertEquals("EXPAND", lengthAdjustmentType0.toString());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1.0F, 0, 2, 10, 2, 0);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      boolean boolean0 = stackedAreaRenderer0.equals(lengthAdjustmentType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("({0}, {1}) = {2}", numberFormat0, numberFormat0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      scatterRenderer0.clone();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) stackedAreaRenderer1.ZERO);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 15, 10, 95, 15, 4, false, false, false, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      stackedAreaRenderer1.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 26, 95, true, 0.0, 225.0, true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation1 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedAreaRenderer1.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation1, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-4.0), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?s6O");
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer2 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer2.getLegendShape(1);
      minMaxCategoryRenderer0.equals(minMaxCategoryRenderer2);
      boolean boolean0 = true;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      minMaxCategoryRenderer0.getURLGenerator(4, 1, false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("?s6O", stackedAreaRenderer0.ZERO, 1);
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      minMaxCategoryRenderer1.getLegendItem(1, 1);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4, (double) minMaxCategoryRenderer1.ZERO, false);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("U`p.~N-Fb)cpW^", (Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clearSeriesPaints(true);
      lineRenderer3D0.setBaseLinesVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      scatterRenderer0.setSeriesItemLabelGenerator(3, categoryItemLabelGenerator0, false);
      // Undeclared exception!
      try { 
        scatterRenderer0.setItemMargin(1261.05661208231);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?s6O");
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getLegendShape(1);
      minMaxCategoryRenderer0.equals(minMaxCategoryRenderer1);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      minMaxCategoryRenderer0.getURLGenerator(4, 1, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      scatterRenderer0.getSeriesToolTipGenerator((-154));
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      scatterRenderer0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getItemMargin();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent((double) scatterRenderer0.ZERO);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.05, true);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(plotOrientation0);
      rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      Number[][] numberArray0 = new Number[3][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("6#KUwL~.C[f{", dateFormat0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      scatterRenderer0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, (-1927.803F), 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      stackedAreaRenderer1.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      stackedAreaRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Null 'hotspot' argument.", numberFormat0);
      statisticalLineAndShapeRenderer0.equals(intervalCategoryItemLabelGenerator0);
      CategoryAxis categoryAxis0 = new CategoryAxis("({0}, {1}) = {3} - {4}");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = null;
      try {
        standardGradientPaintTransformer0 = new StandardGradientPaintTransformer((GradientPaintTransformType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'type' argument.
         //
         verifyException("org.jfree.chart.util.StandardGradientPaintTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis("Ggd;`");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      LogAxis logAxis0 = new LogAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, logAxis0, stackedAreaRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(10, 0.0F, 2, 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis3D0, categoryMarker0, rectangle2D0);
      roundRectangle2D_Float0.getBounds2D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getShadowYOffset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.getDrawOutlines();
      DrawingSupplier drawingSupplier0 = stackedAreaRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(946.3428752228111);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis("Ggd;`");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, categoryStepRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, stackedAreaRenderer0.DEFAULT_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((-2674.39465), 0.0, (-2146.95544299954), 0.0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1404.83918154), 1558.288061, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE, 1);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis3D0, intervalMarker0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      scatterRenderer0.clone();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double double0 = waterfallBarRenderer0.getBase();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, (-1915.25F), 0.0F, 2);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart("KFSMJ.{L>'Oa", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.initialise(graphics2D0, rectangle2D0, categoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis("Ggd;`");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, stackedAreaRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, categoryAxis0.DEFAULT_TICK_LABEL_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(1024.0, 0.05, 3, 3);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      stackedAreaRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, numberAxis3D0, categoryMarker0, rectangle2D0);
      Rectangle2D rectangle2D1 = roundRectangle2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D1, rectangle2D1, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double double0 = waterfallBarRenderer0.getShadowYOffset();
      assertEquals(4.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      Number[] numberArray0 = new Number[1];
      numberArray0[0] = (Number) bigInteger0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.data.time.SpreadsheetDate", (byte)15, (double) stackedAreaRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) bigInteger0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-8, (byte)15, (-2799.45304205661), 1662.37137661);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(true);
      StackedAreaRenderer stackedAreaRenderer2 = new StackedAreaRenderer();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("K~'9/v#!D:#I{8");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, numberAxis3D0, numberAxis3D0, standardXYItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("K~'9/v#!D:#I{8", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 94);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.BOTTOM_LEFT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedAreaRenderer2.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, rectangle0, xYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor1);
      assertEquals(8.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "@g";
      Number[][] numberArray0 = new Number[4][4];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 12.0;
      numberArray1[1] = (Number) lineRenderer3D0.ZERO;
      numberArray1[2] = (Number) lineRenderer3D0.ZERO;
      numberArray1[3] = (Number) 8.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      BigInteger bigInteger0 = BigInteger.ONE;
      numberArray2[0] = (Number) bigInteger0;
      numberArray2[1] = (Number) 8.0;
      numberArray2[2] = (Number) lineRenderer3D0.ZERO;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray2[3] = (Number) integer0;
      numberArray2[4] = (Number) 8.0;
      numberArray2[5] = (Number) lineRenderer3D0.ZERO;
      numberArray2[6] = (Number) lineRenderer3D0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[2];
      numberArray3[0] = (Number) integer0;
      numberArray3[1] = (Number) 12.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[8];
      numberArray4[0] = (Number) 8.0;
      numberArray4[1] = (Number) 12.0;
      numberArray4[2] = (Number) bigInteger0;
      numberArray4[3] = (Number) 12.0;
      numberArray4[4] = (Number) 12.0;
      numberArray4[5] = (Number) bigInteger0;
      numberArray4[6] = (Number) 8.0;
      numberArray4[7] = (Number) bigInteger0;
      numberArray0[3] = numberArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, (Number[][]) null);
      // Undeclared exception!
      try { 
        lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'dividerStroke' argument.", 1, 2, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      stackedAreaRenderer0.getLegendItems();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, (-340.285364), 0.0, 1);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle0, rectangle2D_Double0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      statisticalBarRenderer0.getPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise(graphics2D0, rectangle0, (CategoryPlot) null, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, 2000, 1, 120, true, true, true, true, true, false, false);
      chartPanel0.getOrientation();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis categoryAxis0 = null;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 420, 1, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle2D_Double0, categoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'dividerStroke' argument.", 1, 2, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      stackedAreaRenderer0.getLegendItems();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, (-340.285364), 0.0, 1);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)stackedAreaRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle0, rectangle2D_Double0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-343.285364), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(3, (-391.0754F), 0.0F, 2);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      defaultBoxAndWhiskerCategoryDataset0.getRowIndex(true);
      SystemColor systemColor0 = SystemColor.info;
      BufferedImage bufferedImage1 = new BufferedImage(3, 3, 2);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage1);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Time", 0.0F, 147.591, 0.0);
      Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D0, (-16.630508F), paint0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)15;
      byte[] byteArray1 = new byte[6];
      BigInteger bigInteger0 = new BigInteger(byteArray1);
      ValueAxis valueAxis0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      defaultBoxAndWhiskerCategoryDataset0.getRowIndex(10);
      SystemColor systemColor0 = SystemColor.info;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 10, 10, 1.0F);
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, (ValueAxis) null, rectangle2D_Float0, 10, (Paint) null, basicStroke0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 2, 0.0F, (-1.0F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      defaultBoxAndWhiskerCategoryDataset0.getRowIndex(true);
      SystemColor systemColor0 = SystemColor.info;
      stackedAreaRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, numberAxis3D0, rectangle2D0, 0.05, systemColor0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      int int0 = 2;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      bufferedImage0.createGraphics();
      float float0 = 167.3185F;
      Polygon polygon0 = new Polygon();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 2, 2);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity((EntityCollection) null, polygon0, slidingGanttCategoryDataset0, 2, 2, true, (-602.0), 1163.507357549959);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      lineRenderer3D0.getItemLineVisible(0, 3);
      ScatterRenderer scatterRenderer2 = (ScatterRenderer)scatterRenderer1.clone();
      assertFalse(scatterRenderer2.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = false;
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalBarRenderer0.ZERO, 0.2, scatterRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO, statisticalBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity((EntityCollection) null, scatterRenderer1.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 1922, 3464, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1922, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItemURLGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      stackedAreaRenderer0.getLegendItems();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-6), (-6), true);
      double double0 = statisticalBarRenderer0.getMaximumBarWidth();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      int int0 = 293;
      Instant instant0 = MockInstant.ofEpochSecond(6L, 6L);
      Date.from(instant0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      CategoryDataset categoryDataset0 = null;
      scatterRenderer0.findRangeBounds((CategoryDataset) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("java.util.RandomAccess");
      Year year0 = new Year();
      Month month0 = null;
      try {
        month0 = new Month(293, year0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Month outside valid range.
         //
         verifyException("org.jfree.data.time.Month", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(2, 167.3185F, 0.0F, (-1.0F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.initialise(graphics2D0, rectangle2D0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Number[][] numberArray0 = new Number[4][0];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) statisticalBarRenderer0.ZERO;
      numberArray1[1] = (Number) statisticalBarRenderer0.ZERO;
      BigInteger bigInteger0 = BigInteger.TEN;
      numberArray1[2] = (Number) bigInteger0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[2];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[3];
      numberArray3[0] = (Number) bigInteger0;
      numberArray3[1] = (Number) 3.0;
      double double0 = LineRenderer3D.DEFAULT_X_OFFSET;
      numberArray3[2] = (Number) 12.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[7];
      numberArray4[0] = (Number) bigInteger0;
      numberArray4[1] = (Number) bigInteger0;
      numberArray4[2] = (Number) 3.0;
      numberArray4[3] = (Number) bigInteger0;
      double double1 = LineRenderer3D.DEFAULT_Y_OFFSET;
      numberArray4[4] = (Number) 8.0;
      numberArray4[5] = (Number) 0.2;
      BigInteger bigInteger1 = BigInteger.TEN;
      bigInteger0.gcd(bigInteger1);
      numberArray4[6] = (Number) statisticalBarRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      lineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 1, 5487, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("David Li");
      extendedCategoryAxis0.getTickLabelPaint((Comparable) lineRenderer3D0.ZERO);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      stackedAreaRenderer0.setPlot(categoryPlot0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        extendedCategoryAxis0.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) null, true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(0, layer0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("w+<7m9lZu8C&$Pa");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer1.setMaximumBarWidth((double) ganttRenderer0.ZERO);
      assertEquals(0.35, ganttRenderer0.getStartPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis("E2Bv7OC-2H3+~5");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 86);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0, decimalFormat0);
      boxAndWhiskerRenderer1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boxAndWhiskerRenderer1.setMaximumBarWidth(0.0);
      assertTrue(boxAndWhiskerRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, 0.0, lineAndShapeRenderer0.ZERO, (double) lineAndShapeRenderer0.ZERO, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_STROKE);
      lineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      lineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      lineAndShapeRenderer0.getDrawOutlines();
      lineAndShapeRenderer0.getDrawOutlines();
      BarRenderer.getDefaultShadowsVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      assertTrue(defaultCategoryDataset1.equals((Object)defaultCategoryDataset0));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, 0.2, ((AbstractRenderer) object0).ZERO, (double) statisticalBarRenderer0.ZERO, ((AbstractRenderer) object0).DEFAULT_VALUE_LABEL_PAINT, ((AbstractRenderer) object0).DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Comparable<CustomCategoryURLGenerator>[] comparableArray0 = (Comparable<CustomCategoryURLGenerator>[]) Array.newInstance(Comparable.class, 1);
      XYDataItem xYDataItem0 = new XYDataItem((Number) ((AbstractRenderer) object0).ZERO, (Number) 1.0F);
      comparableArray0[0] = (Comparable<CustomCategoryURLGenerator>) xYDataItem0;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 335, 320, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      int int0 = waterfallBarRenderer0.getRowCount();
      assertEquals(0, int0);
      
      waterfallBarRenderer0.getBaseURLGenerator();
      assertEquals(0, waterfallBarRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.hashCode();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.removeAnnotations();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      levelRenderer0.getMaximumItemWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("VM8*Kqtjf9", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      double double0 = statisticalBarRenderer0.getBase();
      lineRenderer3D0.getDrawingSupplier();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double double1 = scatterRenderer0.getItemMargin();
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GeneralPath generalPath0 = new GeneralPath(ganttRenderer0.DEFAULT_SHAPE);
      GeneralPath generalPath1 = new GeneralPath();
      Rectangle rectangle0 = generalPath1.getBounds();
      ganttRenderer0.getPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("ey(AECu");
      NumberAxis numberAxis0 = new NumberAxis("ey(AECu");
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      statisticalBarRenderer0.hasListener((EventListener) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("David Li");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, 0.0, lineAndShapeRenderer0.ZERO, (-2123.1197), lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      lineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      lineAndShapeRenderer0.getDrawOutlines();
      lineAndShapeRenderer0.getDrawOutlines();
      BarRenderer.getDefaultShadowsVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      DefaultCategoryDataset defaultCategoryDataset1 = new DefaultCategoryDataset();
      assertTrue(defaultCategoryDataset1.equals((Object)defaultCategoryDataset0));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineAndShapeRenderer0.getDrawOutlines();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(categoryPlot0, 10);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ModuloAxis moduloAxis0 = new ModuloAxis("[", valueAxis0.DEFAULT_RANGE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 10, 3.0, 0.5F, 0, (double) lineAndShapeRenderer0.ZERO, 0.0, plotOrientation0);
      stackedAreaRenderer0.getPassCount();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, moduloAxis0.DEFAULT_AXIS_LINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItems();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.getEndType();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (double) stackedAreaRenderer0.ZERO);
      stackedBarRenderer3D0.getRenderAsPercentages();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getSeriesItemLabelGenerator((-1));
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineAndShapeRenderer0.getDrawOutlines();
      lineAndShapeRenderer0.getDrawOutlines();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, (-2825.325896375682), ((AbstractRenderer) object0).ZERO, 0.0, scatterRenderer0.DEFAULT_OUTLINE_PAINT, stroke0);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultCategoryDataset0, 10, (-255), true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      statisticalLineAndShapeRenderer0.getDrawOutlines();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, statisticalLineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      categoryLineAnnotation0.setValue1(0.0);
      categoryLineAnnotation0.addChangeListener(fastScatterPlot0);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 10, 10, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(0, (-6), false);
      statisticalBarRenderer0.getSeriesToolTipGenerator(0);
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      scatterRenderer0.getItemMargin();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.isMedianVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncludeBaseInRange(false);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(false, false);
      ganttRenderer1.equals(statisticalLineAndShapeRenderer1);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(860, true);
      statisticalLineAndShapeRenderer0.getItemShapeVisible(1, 1);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1617), 3.0, true);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendShape(2714);
      boolean boolean0 = true;
      barRenderer0.setAutoPopulateSeriesPaint(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator((-3559), (-3559), true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getLegendItems();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setShadowXOffset((double) boxAndWhiskerRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2772.0, "ItemLabelGenerator not cloneable.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ganttRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ganttRenderer0.equals(intervalCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(10, 0, false);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-652), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesPaint(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      double double0 = scatterRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineAndShapeRenderer0.getDrawOutlines();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boxAndWhiskerRenderer0.getRangeAxis(categoryPlot0, 10);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      boxAndWhiskerRenderer0.setMaximumBarWidth(1.0F);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      int int0 = (-857);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-194), 3, 10, (-857), 10, 0, false, true, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      standardEntityCollection0.getEntities();
      standardEntityCollection0.getEntities();
      lineAndShapeRenderer0.getSeriesCreateEntities((-1637));
      lineAndShapeRenderer0.setSeriesShapesFilled(0, (Boolean) null);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultCategoryDataset0, (-329), 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", 0L, 4.0);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Date.from(instant0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      stackedAreaRenderer0.getPassCount();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double double0 = scatterRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint((-685));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GeneralPath generalPath0 = new GeneralPath(ganttRenderer0.DEFAULT_SHAPE);
      GeneralPath generalPath1 = new GeneralPath();
      generalPath1.getBounds();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ganttRenderer0.getPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("ey(AECu");
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, (-2000.108058474607), 0, (-2000.108058474607), boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Rectangle rectangle0 = new Rectangle(0, 0);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, rectangle2D0, defaultCategoryDataset0, (-255), 1, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineAndShapeRenderer0.getDrawOutlines();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.ZERO, (double) ((AbstractRenderer) object0).ZERO, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-255), (-255), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GeneralPath generalPath0 = new GeneralPath(ganttRenderer0.DEFAULT_SHAPE);
      GeneralPath generalPath1 = new GeneralPath();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation(".(dJdR", statisticalBarRenderer0.ZERO, 0.025, 2.0);
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      boxAndWhiskerRenderer0.getURLGenerator((-2754), 69, true);
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      ganttRenderer0.setBase((double) statisticalBarRenderer0.ZERO);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.removeRow(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendItems();
      MockInstant.now();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(0, (-6), false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(377, (CategoryItemLabelGenerator) null);
      scatterRenderer0.getItemMargin();
      statisticalBarRenderer0.getShadowPaint();
      statisticalBarRenderer0.getItemMargin();
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getSeriesURLGenerator((-353));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      int int0 = waterfallBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setAutoPopulateSeriesStroke(false);
      scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      lineAndShapeRenderer0.getDrawOutlines();
      double double0 = 0.0;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-255), (-255), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      boolean boolean0 = true;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-1144);
      lineAndShapeRenderer0.lookupLegendShape((-1144));
      lineAndShapeRenderer0.getPassCount();
      lineAndShapeRenderer0.hashCode();
      lineAndShapeRenderer0.lookupSeriesOutlineStroke(2);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesURLGenerator((-275));
      lineAndShapeRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = null;
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      GeneralPath generalPath0 = new GeneralPath(ganttRenderer0.DEFAULT_SHAPE);
      GeneralPath generalPath1 = new GeneralPath();
      generalPath1.getBounds();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ganttRenderer0.getPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("ey(AECu");
      NumberAxis numberAxis0 = new NumberAxis("");
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Number[][] numberArray0 = new Number[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      defaultIntervalCategoryDataset0.addChangeListener((DatasetChangeListener) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendItems();
      MockInstant.ofEpochSecond((-2163L), 748L);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedAreaRenderer0.setSeriesToolTipGenerator(1844, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      assertEquals("AreaRendererEndType.TAPER", areaRendererEndType0.toString());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2000.0, 2000.0, true);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      stackedBarRenderer3D0.setBarPainter(gradientBarPainter0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(true);
      scatterRenderer0.clone();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Year year0 = new Year();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, stackedBarRenderer3D0.ZERO, year0, (-22.5459266698), 9999, 0.2, (-1328.06515607), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.lookupSeriesOutlineStroke(312);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator((-2754), 312, true);
      lineAndShapeRenderer0.setSeriesToolTipGenerator(312, (CategoryToolTipGenerator) null);
      lineAndShapeRenderer0.getURLGenerator((-2938), (-2754), false);
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      statisticalBarRenderer0.setBase(0.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = statisticalBarRenderer1.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesPaint(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-3559);
      statisticalBarRenderer0.getURLGenerator((-3559), (-3559), false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getToolTipGenerator((-3559), (-3559), false);
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      lineRenderer3D1.setBaseLegendTextFont(barRenderer0.DEFAULT_VALUE_LABEL_FONT);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1, (double) candlestickRenderer0.ZERO);
      barRenderer3D0.getShadowXOffset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.hashCode();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RingPlot ringPlot0 = new RingPlot();
      statisticalLineAndShapeRenderer0.getItemShapeVisible(0, 10);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(775.82, (-3.0), false);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2000.0, 2000.0, true);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      stackedBarRenderer3D0.setBarPainter(gradientBarPainter0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(true);
      scatterRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null, true);
      scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesShapesFilled((-1617), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendItems();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset((double) stackedAreaRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4470.61060663387, "ERROR : Relative To String");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ganttRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      ganttRenderer0.equals(standardCategorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-2308), 1, true);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-1886), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      // Undeclared exception!
      try { 
        areaRenderer0.setSeriesToolTipGenerator((-3648), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = 0;
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      CategoryPlot categoryPlot0 = null;
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getItemLabelGenerator((-325), (-325), false);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      MockDate mockDate0 = new MockDate();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncludeBaseInRange(false);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ganttRenderer1.equals(layeredBarRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      scatterRenderer0.clone();
      ganttRenderer1.setDrawBarOutline(true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      lineAndShapeRenderer0.setSeriesShapesFilled(55, false);
      lineAndShapeRenderer0.getItemShapeVisible(55, (-1299));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getMaximumBarWidth();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getItemLabelGenerator((-325), (-325), false);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.get2DigitYearStart();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncludeBaseInRange(false);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ganttRenderer1.equals(layeredBarRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(55, false);
      statisticalLineAndShapeRenderer0.getItemShapeVisible(55, (-1299));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = ganttRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.getLegendItemToolTipGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues(defaultStatisticalCategoryDataset0, 1338, 1338);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(860, (-6), true);
      scatterRenderer0.setSeriesItemLabelGenerator(860, (CategoryItemLabelGenerator) null);
      scatterRenderer0.getItemMargin();
      stackedBarRenderer3D0.setShadowYOffset((double) stackedAreaRenderer0.ZERO);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = ganttRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.getItemLabelGenerator((-325), (-325), false);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.get2DigitYearStart();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncludeBaseInRange(false);
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ganttRenderer1.equals(layeredBarRenderer0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      lineAndShapeRenderer0.setSeriesShapesFilled(55, false);
      lineAndShapeRenderer0.getItemShapeVisible(55, (-1299));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getLegendItems();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      Date date0 = Date.from(instant0);
      Year year0 = new Year(date0);
      Week week0 = new Week(312, year0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      String string0 = "Null 'orientation' argument.";
      Locale locale0 = Locale.TAIWAN;
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      year0.getFirstMillisecond(calendar0);
      // Undeclared exception!
      try { 
        DateFormat.getDateTimeInstance(1, 312);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal time style 312
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      boolean boolean0 = false;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      Date date0 = Date.from(instant0);
      Year year0 = new Year(date0);
      Week week0 = new Week(312, year0);
      year0.getMiddleMillisecond();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, week0, year0, 594.76386862529, 312, 0L, 2.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      int int0 = (-325);
      barRenderer3D0.getItemLabelGenerator((-325), (-325), false);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.get2DigitYearStart();
      int int1 = 225;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone((-325), (String) null, (-325), 2, 0, 2, (-414), 225, 0, 225, 0, (-414), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D1.setShadowXOffset(0.2);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      StackedBarRenderer3D stackedBarRenderer3D2 = new StackedBarRenderer3D(true);
      ganttRenderer0.equals(stackedBarRenderer3D2);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-6), (-1), true);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-6), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesURLGenerator(1054, (CategoryURLGenerator) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesShapesFilled((-1617), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(0);
      statisticalLineAndShapeRenderer0.getPassCount();
      statisticalLineAndShapeRenderer0.hashCode();
      statisticalLineAndShapeRenderer0.lookupSeriesOutlineStroke(0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getToolTipGenerator((-2754), 0, false);
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(2, (CategoryToolTipGenerator) null);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      lineRenderer3D0.setBaseLegendTextFont(font0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.6428571428571429, (double) statisticalBarRenderer0.ZERO);
      barRenderer3D0.getShadowXOffset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-1144);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Shape shape0 = statisticalLineAndShapeRenderer0.lookupLegendShape((-1144));
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D((double) lineAndShapeRenderer0.ZERO, 1.0E9, false);
      stackedBarRenderer3D1.setShadowXOffset((-661.23));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      GeneralPath generalPath0 = new GeneralPath(shape0);
      Rectangle rectangle0 = generalPath0.getBounds();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer1.getPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("pL*Kbg^ENg:4");
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      Number[][] numberArray0 = new Number[3][0];
      Number[] numberArray1 = new Number[8];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray1[1] = (Number) 0.2;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      numberArray1[2] = (Number) integer1;
      numberArray1[3] = (Number) 500;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) 3.0;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray1[6] = (Number) 0.2;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      numberArray1[7] = (Number) integer2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[2];
      numberArray2[0] = (Number) stackedBarRenderer3D1.ZERO;
      numberArray2[1] = (Number) 0.0F;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      boolean boolean0 = true;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, (CategoryPlot) null, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-144), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(860, (-6), true);
      scatterRenderer0.setSeriesItemLabelGenerator(860, (CategoryItemLabelGenerator) null);
      scatterRenderer0.getItemMargin();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 860, (-6));
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ax");
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      int int0 = (-911);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge((-911));
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getItemMiddle(6.0, scatterRenderer0.ZERO, slidingGanttCategoryDataset0, extendedCategoryAxis0, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      int int0 = 860;
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        ganttRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      stackedAreaRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, true);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      assertEquals("AreaRendererEndType.TAPER", areaRendererEndType0.toString());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesPaint(false);
      barRenderer0.setBase((-2141.4612175));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      assertNull(range0);
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Y");
      barRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 15, 5, 10, (-3243), false, false, true, false, false, false);
      ColorModel colorModel0 = chartPanel0.getColorModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 10;
      WritableRaster writableRaster0 = Raster.createBandedRaster(1, 200, 776, 10, intArray0, intArray0, (Point) null);
      Hashtable<IntervalMarker, String> hashtable0 = new Hashtable<IntervalMarker, String>();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(colorModel0, writableRaster0, true, hashtable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Raster ShortBandedRaster: width = 200 height = 776 #numBands 1 #dataElements 1 is incompatible with ColorModel DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=ff000000
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      minMaxCategoryRenderer0.setAutoPopulateSeriesStroke(true);
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TAPER;
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesPaint(false);
      barRenderer0.setBase((-2141.4612175));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0);
      statisticalBarRenderer0.getBaseItemLabelGenerator();
      LegendItem legendItem0 = barRenderer0.getLegendItem(3, 3);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2000.0, 2000.0, true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(1396, 832, true);
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      ganttRenderer0.setIncludeBaseInRange(false);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      lineAndShapeRenderer0.setSeriesShapesFilled(1396, true);
      lineAndShapeRenderer0.getItemShapeVisible((-1), (-1299));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.hashCode();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      levelRenderer0.getMaximumItemWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("VM8*Kqtjf9", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      String string0 = "OK}??.##MY";
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) levelRenderer0.ZERO;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      doubleArray0[3] = (double) 1.0F;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[5] = 0.4;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OK}??.##MY";
      stringArray0[1] = "OK}??.##MY";
      ChoiceFormat choiceFormat0 = null;
      try {
        choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array and limit arrays must be of the same length.
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      intervalBarRenderer0.hasListener(spiderWebPlot0);
      stackedAreaRenderer0.equals(intervalBarRenderer0);
      stackedAreaRenderer0.getItemLabelGenerator(0, (-2248), true);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setAutoPopulateSeriesShape(false);
      lineAndShapeRenderer0.getBaseShapesFilled();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      String string0 = "Z$.P<";
      try { 
        ICC_Profile.getInstance("Z$.P<");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot open file Z$.P<
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(1, true);
      statisticalLineAndShapeRenderer0.hashCode();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      levelRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      levelRenderer0.getMaximumItemWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("VM8*Kqtjf9", (Font) null, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues(defaultStatisticalCategoryDataset0, 1338, 1338);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      boolean boolean0 = true;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-1144);
      lineAndShapeRenderer0.lookupLegendShape((-1144));
      lineAndShapeRenderer0.getPassCount();
      lineAndShapeRenderer0.hashCode();
      lineAndShapeRenderer0.lookupSeriesOutlineStroke(2);
      CategoryToolTipGenerator categoryToolTipGenerator0 = null;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      lineAndShapeRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = 0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      statisticalBarRenderer0.getLegendItemURLGenerator();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      areaRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      AreaRendererEndType areaRendererEndType0 = areaRenderer0.getEndType();
      assertEquals("AreaRendererEndType.TAPER", areaRendererEndType0.toString());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.lookupLegendShape(860);
      stackedAreaRenderer0.equals(statisticalLineAndShapeRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setShadowXOffset(860);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      ganttRenderer0.equals(standardCategoryURLGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator(860, (-6), true);
      scatterRenderer0.setSeriesItemLabelGenerator(860, (CategoryItemLabelGenerator) null);
      double double0 = scatterRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2000.0, 2000.0, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getURLGenerator(1396, 832, true);
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      ganttRenderer0.setIncludeBaseInRange(false);
      ganttRenderer0.equals(stackedBarRenderer3D0);
      scatterRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesShapesFilled((-1617), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      customCategoryURLGenerator0.clone();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      standardCategorySeriesLabelGenerator0.clone();
      stackedAreaRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      AreaRendererEndType areaRendererEndType0 = AreaRendererEndType.TRUNCATE;
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getArtifactPaint();
      stackedAreaRenderer0.getColumnCount();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.hashCode();
      lineRenderer3D0.setXOffset((-328.7186775));
      lineRenderer3D0.getPassCount();
      lineRenderer3D0.getDrawOutlines();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("{0}", boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        debugGraphics0.getClipBounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(5.0E-5);
      xYBoxAndWhiskerRenderer0.getArtifactPaint();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      barRenderer0.setMaximumBarWidth(0.0);
      barRenderer0.getIncludeBaseInRange();
      Number[][] numberArray0 = new Number[1][1];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, jDBCCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.hashCode();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      levelRenderer0.getMaximumItemWidth();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      String string0 = "VM8*Kqtjf9";
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("VM8*Kqtjf9", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getRangeAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      boolean boolean0 = true;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-1144);
      lineAndShapeRenderer0.lookupLegendShape((-1144));
      lineAndShapeRenderer0.getPassCount();
      lineAndShapeRenderer0.hashCode();
      lineAndShapeRenderer0.lookupSeriesOutlineStroke(2);
      CategoryToolTipGenerator categoryToolTipGenerator0 = null;
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = 0;
      boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getRangeAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      String string0 = "35vb-K.u\\;\"]";
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseURLGenerator();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      boxAndWhiskerRenderer0.setArtifactPaint(color0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("35vb-K.u;\"]", "35vb-K.u;\"]", (-1.0), (double) boxAndWhiskerRenderer0.ZERO);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      int int0 = 0;
      int int1 = (-5084);
      int int2 = 0;
      BigInteger bigInteger0 = BigInteger.ZERO;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, (-5084), (int[]) null, (-5084), 766, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }
}
