/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 29 15:32:04 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.NumberFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JViewport;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.DateRange;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, defaultCaret0, rectangle0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-4.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(728.5840866800892, 10, 250000.0, (-1902.1136));
      LogAxis logAxis0 = new LogAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3.0), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle0, meterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("##k>j-}lF", 3.0, 0.2);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      boolean boolean0 = stackedBarRenderer3D0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(4438, 4438, 4);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      waterfallBarRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle2D0);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(742.9521055, 10, 250000.0, (-1902.1136));
      LogAxis logAxis0 = new LogAxis();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.data.time.DateRange");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Layer layer0 = Layer.BACKGROUND;
      statisticalBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, extendedCategoryAxis0, logAxis0, layer0, plotRenderingInfo0);
      assertTrue(statisticalBarRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_PAINT);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null, 10, renderingHints0);
      Rectangle2D rectangle2D0 = convolveOp0.getBounds2D(bufferedImage0);
      levelRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0, 12.0, waterfallBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      assertFalse(combinedDomainCategoryPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double[][] doubleArray0 = new double[6][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.addEntity(standardEntityCollection0, rectangle2D_Double0, defaultIntervalCategoryDataset0, 4, 4, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, numberAxis3D0, lineRenderer3D0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Mark Watson");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2);
      cyclicNumberAxis0.setNegativeArrowVisible(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      lineRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertEquals((-0.2), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("Base item URL generator not cloneable.", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      SymbolAxis symbolAxis1 = (SymbolAxis)lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 3637);
      assertTrue(symbolAxis1.isGridBandsVisible());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      ValueAxis valueAxis1 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 725);
      assertSame(valueAxis1, valueAxis0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LogAxis logAxis0 = new LogAxis("({0}, {1}) = {3} - {4}");
      logAxis0.setTickMarkOutsideLength(0.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 18);
      assertEquals(0.0, valueAxis0.getLabelAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Properties...");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertEquals(1.0, valueAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      statisticalBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      assertTrue(categoryPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Mark Watson");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      LegendItem legendItem0 = lineRenderer3D0.getLegendItem(0, 0);
      assertEquals(0, legendItem0.getDatasetIndex());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getItemLabelGenerator(3, (-4709), true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getItemLabelGenerator(41, (-1), true);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(4340.83340558468, 4340.83340558468, true);
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, logAxis0, ganttRenderer0);
      DrawingSupplier drawingSupplier0 = ganttRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryAxis categoryAxis0 = lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, dateAxis0, statisticalBarRenderer0);
      CategoryAxis categoryAxis1 = statisticalBarRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator1 = (IntervalCategoryToolTipGenerator)scatterRenderer0.getBaseToolTipGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)scatterRenderer0.getBaseItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((double) 1.0F, (double) 10, (Comparable) true, (Comparable) true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      assertNotNull(range0);
      assertEquals((-9.0), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double[][] doubleArray0 = new double[6][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(1672.0, (double) 10, (Comparable) true, (Comparable) 1.0F);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Double double0 = AbstractRenderer.ZERO;
      jDBCCategoryDataset0.addValue((Number) double0, (Comparable) double0, (Comparable) double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Double double0 = new Double((-2410.354337555));
      jDBCCategoryDataset0.addValue((Number) double0, (Comparable) double0, (Comparable) double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0, boxAndWhiskerRenderer0.DEFAULT_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE);
      boolean boolean0 = boxAndWhiskerRenderer0.equals(valueMarker0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState((PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart("/", categoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("0rbqt,d!Iq\"n^ICo**a");
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = statisticalBarRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis3D0, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, (-1563), (-1509), true, categoryStepRenderer_State0, rectangle2D0);
      assertNull(rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertTrue(boxAndWhiskerRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-1273), (CategoryURLGenerator) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator((-1624), (CategoryToolTipGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MeterPlot meterPlot0 = new MeterPlot();
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("uGP}:;6F/", numberFormat0, numberFormat0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-2112), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-2270), (CategoryItemLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1261.48), (double) groupedStackedBarRenderer0.ZERO, 3.0, 1);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("T/eU_\"Y5P 3KM6q~Sw[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("T/eU_\"Y5P 3KM6q~Sw[", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (-693.22227167286), 0.2, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DateAxis dateAxis0 = new DateAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(0.05, 1.0E-8, graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, defaultKeyedValues2DDataset0, 92, 500, true, (CategoryItemRendererState) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double[][] doubleArray0 = new double[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-3141.29), 0.0, 0.0, 8.0);
      LogAxis logAxis0 = new LogAxis();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.data.time.DateRange");
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest(1707.7288044236, 0.05, (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, extendedCategoryAxis0, logAxis0, defaultIntervalCategoryDataset0, 7, 10, false, (CategoryItemRendererState) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getRangeAxis((CategoryPlot) null, 270);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("cvR32G[IztY");
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("QbD]0m~LFF|", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, subCategoryAxis0, symbolAxis0, levelRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(0, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(valueAxis0.DEFAULT_AXIS_LINE_PAINT, valueAxis0.DEFAULT_AXIS_LABEL_PAINT, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_WALL_PAINT);
      String[] stringArray0 = new String[0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(0.05, 2.0, 0.18, 2352.910476478, 4.0, 2097.9556184);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      RectangleEdge rectangleEdge0 = Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getItemMiddle(lineRenderer3D0.ZERO, true, defaultIntervalCategoryDataset0, (CategoryAxis) null, rectangle2D0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.getDomainAxis((CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add(12.0, (-77.27164), (Comparable) 8.0, (Comparable) lineRenderer3D0.ZERO);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (89.27164) <= upper (-65.27164).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[6][5];
      Number[] numberArray1 = new Number[8];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      String[] stringArray0 = new String[7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Week week0 = new Week();
      PeriodAxis periodAxis0 = new PeriodAxis(")", week0, week0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, defaultCaret0, 1, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-3141.29), 0.0, 0.0, 8.0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.data.time.DateRange");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawBackground((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-274), (-274), (-274), 1145);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("ymRw;('", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1966, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawAnnotations(graphics2D0, rectangle0, categoryAxis3D0, logAxis0, (Layer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double[][] doubleArray0 = new double[6][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("96UoM_b;");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'annotation' argument.", dateRange0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, categoryPlot0, extendedCategoryAxis0, moduloAxis0, defaultIntervalCategoryDataset0, 10, 10, false, categoryItemRendererState0, rectangle2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1800, 182);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart("{bTO6(Q+d7 =6SyQ.X", compassPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(11, 1015, 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      // Undeclared exception!
      try { 
        intervalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D0, rectangle2D0, compassPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, (-834), 3418, false, (-2863.0), (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity((EntityCollection) null, defaultCategoryItemRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-3042), (-3042), false, (double) defaultCategoryItemRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity((EntityCollection) null, statisticalLineAndShapeRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 0, (-2673), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity((EntityCollection) null, statisticalBarRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 0, (-2673), true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity((EntityCollection) null, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultCategoryDataset0, (-819), 2110, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("-]5.Vm7/L/G", 10, 2045.779);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, defaultCategoryDataset0, 10, 10, true, categoryItemRendererState0, (Rectangle2D) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 3.0, lineRenderer3D0.ZERO, 12.0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertTrue(lineRenderer3D0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getURLGenerator(10, 10, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertEquals(0, levelRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Hari");
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Hari", choiceFormat0);
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(1244, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getToolTipGenerator(10, 10, false);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      levelRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)levelRenderer0.getToolTipGenerator(10, 10, true);
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(221, (CategoryItemLabelGenerator) null, true);
      assertFalse(scatterRenderer0.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getSeriesToolTipGenerator((-1));
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(742.9521055, 10, 250000.0, (-1902.1136));
      LogAxis logAxis0 = new LogAxis();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.data.time.DateRange");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        levelRenderer0.hitTest((double) statisticalBarRenderer0.ZERO, (-1902.1136), (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, extendedCategoryAxis0, logAxis0, (CategoryDataset) null, 500, 7, false, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DateAxis dateAxis0 = new DateAxis("");
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, (-3293.6704F), (-3051.0F));
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Oj)YBM");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis3D0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, (-1563), (-265), true, categoryItemRendererState0, rectangle2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      statisticalBarRenderer0.setPlot(combinedDomainCategoryPlot0);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      statisticalBarRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 10, 553, false, 10, 1.0F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultCategoryDataset0, (-401), 10, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
      try { 
        scatterRenderer0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Mark Watson");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, lineRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      jFreeChart0.createBufferedImage(1750, 10);
      assertEquals(0.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals((-0.2), cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Mark Watson");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-824.346893967), 12.0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, statisticalBarRenderer0);
      lineRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertEquals(5.0E-9, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals((-5.0E-9), cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = (NumberAxis)lineRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertTrue(numberAxis0.getAutoRangeIncludesZero());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      Object object0 = scatterRenderer0.clone();
      assertNotSame(scatterRenderer0, object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      JFreeChart jFreeChart0 = new JFreeChart("{2}", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 179, 128, 3227, 9, (-2), 2840, true, true, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, 1587, 9, true, 249.12436302832057, 10, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(piePlot3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      statisticalLineAndShapeRenderer0.drawItemLabel(graphics2D0, (PlotOrientation) null, defaultBoxAndWhiskerCategoryDataset0, 143, 3505, true, 0.0, 2817.6946957, false);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 3, 0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, numberAxis3D0, ganttRenderer0);
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(2);
      ganttRenderer0.updateCrosshairValues(categoryCrosshairState0, spreadsheetDate0, true, 1.25, 1, 3, 270.0, plotOrientation0);
      assertEquals(0, ganttRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, numberAxis3D0, ganttRenderer0);
      categoryPlot0.setRangeCrosshairLockedOnData(false);
      ganttRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.0F, false, 10, 10, 1.0F, 2.0F, plotOrientation0);
      assertTrue(ganttRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ganttRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.0F, 10, 2.0F, 500, 10, 1.0F, plotOrientation0);
      assertTrue(ganttRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 5, 5, 1.0F, 38, 4.0, 0.0, (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
      try { 
        ganttRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.0F, false, 10, 10, 1.0F, 2.0F, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, 3.0, groupedStackedBarRenderer0.ZERO, 3.0, groupedStackedBarRenderer1.DEFAULT_PAINT, groupedStackedBarRenderer1.DEFAULT_STROKE);
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      
      groupedStackedBarRenderer1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", groupedStackedBarRenderer0.ZERO, 0.2);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) customCategoryURLGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      groupedStackedBarRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem((-1431), 2624);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 531.0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 883, 1965);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, cyclicNumberAxis0, levelRenderer0);
      // Undeclared exception!
      try { 
        levelRenderer0.getLegendItem(10, 1189);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleInsets rectangleInsets0 = Title.DEFAULT_PADDING;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleAnchor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = new Rectangle(1, 1, 1, (-1775));
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        lineRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      BufferedImage bufferedImage0 = new BufferedImage(3, 500, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1241);
      scatterRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, valueAxis0, intervalMarker0, rectangle0);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.0);
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.block.LabelBlock", stringArray0);
      BufferedImage bufferedImage0 = new BufferedImage(3, 500, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(1241);
      scatterRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, symbolAxis0, intervalMarker0, rectangle0);
      assertTrue(scatterRenderer0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Properties...");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 1.0E-8);
      String[] stringArray0 = new String[7];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      scatterRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, symbolAxis0, intervalMarker0, (Rectangle2D) null);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-15.831), 728.5840866800892);
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("NGz7,N_", stringArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, symbolAxis0, intervalMarker0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(728.5840866800892, 10, 250000.0, (-1902.1136));
      LogAxis logAxis0 = new LogAxis();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      // Undeclared exception!
      try { 
        scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DateAxis dateAxis0 = new DateAxis();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      scatterRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, dateAxis0, valueMarker0, (Rectangle2D) null);
      assertEquals(0.2, scatterRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      LogAxis logAxis0 = new LogAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, logAxis0, categoryMarker0, rectangle2D_Double0);
      assertEquals(2, lineRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'rowKeys' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, lineRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      lineRenderer3D0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertEquals(2.0, logarithmicAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, logarithmicAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LinkedList<CustomCategoryURLGenerator> linkedList0 = new LinkedList<CustomCategoryURLGenerator>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) linkedList0, (Comparable) "({0}, {1}) = {3} - {4}", (Comparable) "({0}, {1}) = {3} - {4}");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("W");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, lineRenderer3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker("({0}, {1}) = {3} - {4}");
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, defaultCaret0, 1.0F, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      LogAxis logAxis0 = new LogAxis();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("o<4`CbT=KEn2}&Ag");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      statisticalBarRenderer0.drawRangeLine((Graphics2D) null, categoryPlot0, logAxis0, rectangle2D_Double0, 10, lineRenderer3D0.DEFAULT_PAINT, extendedCategoryAxis0.DEFAULT_TICK_MARK_STROKE);
      assertTrue(lineRenderer3D0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle2D_Float0, 1430.337, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, scatterRenderer0.DEFAULT_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null, 0.0, (Paint) null, highLowRenderer0.DEFAULT_OUTLINE_STROKE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Point point0 = new Point();
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        levelRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0, 0, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      lineRenderer3D0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = lineRenderer3D0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(Double.NaN, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 4, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, levelRenderer0.getColumnCount());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2.0, 0.0, 2290.401, 1.0F);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle((-4), 8);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      Number[][] numberArray0 = new Number[2][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("({0}, {1}) = {3} - {4}");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'orientation' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, logarithmicAxis0, levelRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      groupedStackedBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertTrue(groupedStackedBarRenderer0.getDefaultShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getURLGenerator(10, 10, true);
      assertSame(categoryURLGenerator0, customCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      assertEquals(0, scatterRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesItemLabelGenerator(718, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertFalse(lineRenderer3D0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 95, 1084, (-423), 528, 10, 1084, true, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        scatterRenderer0.initialise((Graphics2D) null, defaultCaret0, (CategoryPlot) null, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("5hi)@V|UV(KO5O@+G", "/0i;]<Oe]8iLC6M/D?}", "y*17Q$JnLg");
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesURLGenerator((-1), (CategoryURLGenerator) standardCategoryURLGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getSeriesURLGenerator(0);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DateAxis dateAxis0 = new DateAxis("1pP0RV;&iI=KQ");
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 10, 10, true, (CategoryItemRendererState) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertFalse(lineRenderer3D0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = levelRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      groupedStackedBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Properties...");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(2357, 444);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalLineAndShapeRenderer0.getSeriesItemLabelGenerator(2);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = layeredBarRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.removeAnnotations();
      assertEquals(2.0, lineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 10, 601, true, 10, 1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1261.48), (double) groupedStackedBarRenderer0.ZERO, 3.0, 1);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("T/eU_\"Y5P 3KM6q~Sw[");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 500, 3);
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getItemMiddle(0.05, false, slidingGanttCategoryDataset0, extendedCategoryAxis0, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertEquals(0, scatterRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      groupedStackedBarRenderer0.setSeriesItemLabelGenerator(34, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      assertFalse(boolean0);
  }
}
