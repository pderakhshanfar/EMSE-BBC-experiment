* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.csv.CSVParser
* Starting Client-0
* Connecting to master process on port 19296
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-16/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 513
* Using seed 2171369307
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 210 / 513
[MASTER] 22:51:15.509 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 22:51:32.183 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I105 Branch 29 IFNONNULL L603 - true: 21369
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.hasNext()Z: I14 Branch 35 IFNONNULL L540 - true: 13538
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.hasNext()Z: I5 Branch 34 IFEQ L537 - false: 28
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 529: 131
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I48 Branch 12 IFNULL L473 - true: 39
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 530: 131
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I43 Branch 26 TABLESWITCH L588 Case 5 - true: 21241
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I127 Branch 21 IFNE L489 - true: 135
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I39 Branch 11 IFNE L470 - false: 7
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I43 Branch 25 TABLESWITCH L588 Case 4 - true: 21824
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I26 Branch 38 IFNONNULL L555 - false: 9776
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I96 Branch 16 IFLE L487 - false: 3894
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I123 Branch 20 IFEQ L489 - true: 7781
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: Line 549: 455
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.remove()V: root-Branch: 32697
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.remove()V: Line 568: 32697
Number of times BBC is called for org.apache.commons.csv.CSVParser.parse(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;: Line 277: 8
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 610: 6518
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 609: 6518
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I121 Branch 19 IFEQ L489 - false: 3894
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I75 Branch 14 IFNULL L484 - true: 65
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 608: 6518
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I106 Branch 17 IFNULL L488 - true: 180
Number of times BBC is called for org.apache.commons.csv.CSVParser.addRecordValue(Z)V: I30 Branch 4 IFEQ L365 - false: 3095
Number of times BBC is called for org.apache.commons.csv.CSVParser.addRecordValue(Z)V: I12 Branch 1 IFEQ L364 - false: 27
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I123 Branch 20 IFEQ L489 - false: 3894
Number of times BBC is called for org.apache.commons.csv.CSVParser.close()V: I4 Branch 6 IFNULL L380 - true: 11912
Number of times BBC is called for org.apache.commons.csv.CSVParser.addRecordValue(Z)V: I30 Branch 4 IFEQ L365 - true: 43
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I110 Branch 18 IFLE L488 - false: 62
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I35 Branch 39 IFNONNULL L558 - false: 9776
Number of times BBC is called for org.apache.commons.csv.CSVParser.addRecordValue(Z)V: I26 Branch 3 IFLE L365 - false: 43
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I35 Branch 39 IFNONNULL L558 - true: 9776
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I19 Branch 10 IFEQ L465 - false: 106
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I48 Branch 12 IFNULL L473 - false: 7
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I195 Branch 33 IFNONNULL L618 - true: 22366
Number of times BBC is called for org.apache.commons.csv.CSVParser.getHeaderMap()Ljava/util/Map;: I4 Branch 7 IFNONNULL L417 - true: 13
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I105 Branch 29 IFNONNULL L603 - false: 21241
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.hasNext()Z: I25 Branch 36 IFNULL L544 - false: 132
Number of times BBC is called for org.apache.commons.csv.CSVParser.addRecordValue(Z)V: I47 Branch 5 IFLE L369 - false: 78
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I43 Branch 23 TABLESWITCH L588 Case 2 - true: 1714
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I5 Branch 37 IFEQ L549 - true: 455
Number of times BBC is called for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I5 Branch 37 IFEQ L549 - false: 10231
Number of times BBC is called for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I62 Branch 13 IFEQ L477 - false: 46
Number of times BBC is called for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I43 Branch 27 TABLESWITCH L588 Default-Case - true: 22713
Number of times BBC is called in total: 307174
* Search finished after 604s and 346 generations, 123829 statements, best individual has fitness: 100.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 117
* Number of covered goals: 109
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 94
* Number of covered goals: 82
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 25
* Number of covered goals: 25
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 111
* Number of covered goals: 95
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 63
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 94%
* Total number of goals: 17
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 94
* Number of covered goals: 82
* Generated 52 tests with total length 222
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write l_(: 1
         write /experiment/{Yr"5<<Tkr@/'u: 1
         write /experiment/(line /wz,*.)*}@7381@b&8: 1
         and other 13 cases of action/name for this exception class
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'CSVParser_ESTest' to results/Csv-16/org.apache.commons.csv.CSVParser/BBC-F0-50/tests/26
* Done!

* Computation finished
