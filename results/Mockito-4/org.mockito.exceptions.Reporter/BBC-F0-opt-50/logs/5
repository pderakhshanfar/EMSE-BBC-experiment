* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-50
* Going to generate test cases for class: org.mockito.exceptions.Reporter
* Starting Client-0
* Connecting to master process on port 2384
* Analyzing classpath: 
  - subjects/buggy-versions/Mockito-4/build/classes/main
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.exceptions.Reporter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 496
* Using seed 1972500425
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 231 / 496
[MASTER] 07:02:47.657 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C2*
*C2*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C2*
*C2*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
[MASTER] 07:08:42.259 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
*C2*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
[MASTER] 07:09:29.701 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.stubbing.StubbedInvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationImpl due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.invocation.InvocationImpl canUseFunctionalMocks=false, canBeMocked: true
*C2*
*C2*
[MASTER] 07:09:47.251 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
*C1*
[MASTER] 07:10:29.699 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.stubbing.StubbedInvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.SerializableMethod due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 07:10:30.609 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationMatcher due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.SerializableMethod due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.invocation.InvocationImpl canUseFunctionalMocks=false, canBeMocked: true
*C2*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 07:12:19.846 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.InvocationImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.internal.invocation.SerializableMethod due to org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.internal.invocation.InvocationImpl canUseFunctionalMocks=false, canBeMocked: true
* Search finished after 601s and 2596 generations, 392406 statements, best individual has fitness: 229.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 155
* Number of covered goals: 117
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 90
* Number of covered goals: 78
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 81
* Number of covered goals: 81
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 27%
* Total number of goals: 22
* Number of covered goals: 6
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 3
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 1%
* Total number of goals: 68
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 90
* Number of covered goals: 78
* Generated 83 tests with total length 230
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 07:13:24.744 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:26.427 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:27.320 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:28.098 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:29.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:30.086 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:30.685 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:31.458 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:32.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:32.945 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:33.661 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:34.301 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:34.817 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:35.288 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:36.070 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:36.617 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:37.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:37.862 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:39.003 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:39.725 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:40.256 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:40.987 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:41.583 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:42.363 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:13:43.468 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Reporter_ESTest' to results/Mockito-4/org.mockito.exceptions.Reporter/BBC-F0-opt-50/tests/5
* Done!

* Computation finished
