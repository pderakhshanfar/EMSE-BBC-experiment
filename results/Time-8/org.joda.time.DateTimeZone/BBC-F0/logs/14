* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.joda.time.DateTimeZone
* Starting Client-0
* Connecting to master process on port 12433
* Analyzing classpath: 
  - subjects/buggy-versions/Time-8/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.DateTimeZone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1782
* Using seed 2479420739
* Starting evolution
* Initial Number of Goals in DynaMOSA = 566 / 1782
[MASTER] 14:05:00.086 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.PhantomReference<T> : Type points to itself
[MASTER] 14:05:00.087 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.SoftReference<T> : Type points to itself
[MASTER] 14:05:00.088 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.WeakReference<T> : Type points to itself
[MASTER] 14:05:35.976 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 14:07:53.669 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 302s and 332 generations, 102221 statements, best individual has fitness: 434.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 350
* Number of covered goals: 284
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 201
* Number of covered goals: 143
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 861
* Number of covered goals: 655
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 95
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 201
* Number of covered goals: 143
* Generated 90 tests with total length 195
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:11:15.790 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.87185% of time used, but only 37/90 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 14:11:46.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: The datetime zone id 'Etc/UTC' is not recognised
[MASTER] 14:11:46.127 [logback-1] WARN  JUnitAnalyzer - Failing test:
 UTCProvider uTCProvider0 = new UTCProvider();
DateTimeZone.setProvider(uTCProvider0);
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
TimeZone timeZone0 = dateTimeZone0.toTimeZone();
DateTimeZone dateTimeZone1 = DateTimeZone.forTimeZone(timeZone0);
assertEquals("UTC", dateTimeZone1.getID());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'DateTimeZone_ESTest' to results/Time-8/org.joda.time.DateTimeZone/BBC-F0/tests/14
* Done!

* Computation finished
