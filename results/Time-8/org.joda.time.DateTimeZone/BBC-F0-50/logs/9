* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.joda.time.DateTimeZone
* Starting Client-0
* Connecting to master process on port 16044
* Analyzing classpath: 
  - subjects/buggy-versions/Time-8/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.DateTimeZone
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1782
* Using seed 474657646
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 566 / 1782
[MASTER] 08:31:29.833 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.PhantomReference<T> : Type points to itself
[MASTER] 08:31:29.833 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.SoftReference<T> : Type points to itself
[MASTER] 08:31:29.833 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.ref.WeakReference<T> : Type points to itself
[MASTER] 08:33:45.428 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 08:33:57.256 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 08:34:19.312 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 08:37:34.792 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 601s and 1421 generations, 421725 statements, best individual has fitness: 436.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 350
* Number of covered goals: 282
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 201
* Number of covered goals: 144
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 861
* Number of covered goals: 653
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 95
* Number of covered goals: 62
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 72%
* Total number of goals: 201
* Number of covered goals: 144
* Generated 97 tests with total length 196
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 08:42:32.984 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:42:40.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<[]UTC> but was:<[Etc/]UTC>
[MASTER] 08:42:40.115 [logback-1] WARN  JUnitAnalyzer - Failing test:
 UTCProvider uTCProvider0 = new UTCProvider();
DateTimeZone.setProvider(uTCProvider0);
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
assertEquals("UTC", dateTimeZone0.toString());


* Writing tests to file
* Writing JUnit test case 'DateTimeZone_ESTest' to results/Time-8/org.joda.time.DateTimeZone/BBC-F0-50/tests/9
* Done!

* Computation finished
