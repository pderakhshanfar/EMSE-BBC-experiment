* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-80
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Starting Client-0
* Connecting to master process on port 19204
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-20/target/classes
  - subjects/buggy-versions/JxPath-20/src/java
  - subjects/buggy-versions/JxPath-20/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 205
* Using seed 3063302131
* Starting evolution
bbc usage percentage is: 80%
* Initial Number of Goals in DynaMOSA = 59 / 205
[MASTER] 00:15:42.803 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
* Search finished after 604s and 820 generations, 445071 statements, best individual has fitness: 19.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 42
* Number of covered goals: 40
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 39
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 7
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 39
* Number of covered goals: 37
* Generated 15 tests with total length 153
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
[MASTER] 00:25:50.998 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:25:51.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:51.285 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("!c&-HkfPG#");
Step[] stepArray0 = new Step[0];
LocationPath locationPath0 = new LocationPath(false, stepArray0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(locationPath0, locationPath0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer.newNodePointer(qName0, coreOperationGreaterThan0, locale0);

[MASTER] 00:25:51.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:51.604 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("!c&-HkfPG#");
Step[] stepArray0 = new Step[0];
LocationPath locationPath0 = new LocationPath(false, stepArray0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(locationPath0, locationPath0);
Expression[] expressionArray0 = new Expression[1];
expressionArray0[0] = (Expression) locationPath0;
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationGreaterThan0, coreOperationUnion0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer.newNodePointer(qName0, expressionArray0[0], locale0);

[MASTER] 00:25:52.045 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:52.045 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant(3);
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(constant0, constant0);
QName qName0 = new QName("SuB@_S1~Ko>@;8rL]");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer.newNodePointer(qName0, qName0, locale0);

[MASTER] 00:25:52.326 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:52.327 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("", "");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer.newNodePointer(qName0, coreOperationGreaterThan0, locale0);

[MASTER] 00:25:52.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:52.554 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("#=0F{7w_HOx,f-!");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(variableReference0, variableReference0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationLessThanOrEqual0, variableReference0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, locale0, nodePointer0);

[MASTER] 00:25:53.160 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:25:53.160 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer((-338));
Constant constant0 = new Constant(integer0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual((Expression) null, constant0);
QName qName0 = new QName("mlqLS``rEh");
VariableReference variableReference0 = new VariableReference(qName0);
Locale locale0 = Locale.SIMPLIFIED_CHINESE;
NodePointer.newNodePointer(qName0, variableReference0, locale0);

[MASTER] 00:25:53.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:25:53.960 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant(3);
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(constant0, constant0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationNotEqual0, constant0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationSubtract0, constant0);
QName qName0 = new QName("<=", "");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, constant0);
SelfContext selfContext0 = new SelfContext(predicateContext0, nodeNameTest0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationLessThanOrEqual0, coreOperationNotEqual0);
Expression[] expressionArray0 = new Expression[5];
expressionArray0[0] = (Expression) constant0;
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
coreOperationLessThan0.args = expressionArray0;
coreOperationLessThan0.computeValue(selfContext0);

[MASTER] 00:25:54.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:25:54.180 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("){|[", "");
Expression[] expressionArray0 = new Expression[7];
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(variableReference0, variableReference0);
expressionArray0[0] = (Expression) coreOperationMultiply0;
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(expressionArray0[0], coreOperationMultiply0);
expressionArray0[1] = (Expression) coreOperationGreaterThan0;
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(variableReference0, expressionArray0[1]);
JXPathContext.newContext((Object) variableReference0);

* Writing tests to file
* Writing JUnit test case 'CoreOperationRelationalExpression_ESTest' to results/JxPath-20/org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression/BBC-F0-opt-80/tests/1
* Done!

* Computation finished
