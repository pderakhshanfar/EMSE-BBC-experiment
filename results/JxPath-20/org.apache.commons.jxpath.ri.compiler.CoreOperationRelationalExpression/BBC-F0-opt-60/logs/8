* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Starting Client-0
* Connecting to master process on port 7410
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-20/target/classes
  - subjects/buggy-versions/JxPath-20/src/java
  - subjects/buggy-versions/JxPath-20/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 205
* Using seed 3475530938
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 59 / 205
[MASTER] 00:27:25.099 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
* Search finished after 601s and 447 generations, 241278 statements, best individual has fitness: 23.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 42
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 39
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 86%
* Total number of goals: 7
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 7
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 39
* Number of covered goals: 36
* Generated 14 tests with total length 150
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 00:37:31.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:37:31.818 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:31.818 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("0YPIGyTZuZb3:}7hhI", "0YPIGyTZuZb3:}7hhI");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContext.newContext((Object) "0YPIGyTZuZb3:}7hhI");

[MASTER] 00:37:32.781 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:32.781 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("0YPIGyTZuZb3:}7hhI", "0YPIGyTZuZb3:}7hhI");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContext.newContext((Object) "0YPIGyTZuZb3:}7hhI");

[MASTER] 00:37:32.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:32.994 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("0YPIGyTZuZb3:}7hhI", "0YPIGyTZuZb3:}7hhI");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContext.newContext((Object) "0YPIGyTZuZb3:}7hhI");

[MASTER] 00:37:33.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:33.634 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("0YPIGyTZuZb3:}7hhI", "0YPIGyTZuZb3:}7hhI");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContext.newContext((Object) "0YPIGyTZuZb3:}7hhI");

[MASTER] 00:37:33.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:33.852 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("0YPIGyTZuZb3:}7hhI", "0YPIGyTZuZb3:}7hhI");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContext.newContext((Object) "0YPIGyTZuZb3:}7hhI");

[MASTER] 00:37:35.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:37:35.007 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationOr0);
CoreOperationMod coreOperationMod0 = new CoreOperationMod(coreOperationNegate0, expressionArray0[0]);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(coreOperationMod0, coreOperationUnion0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationDivide0, coreOperationOr0);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("translate");
AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, processingInstructionTest0);
SelfContext selfContext0 = new SelfContext(attributeContext0, processingInstructionTest0);
PredicateContext predicateContext0 = new PredicateContext(selfContext0, expressionArray0[1]);
NamespaceContext namespaceContext0 = new NamespaceContext(predicateContext0, processingInstructionTest0);
coreOperationGreaterThan0.computeValue(namespaceContext0);

[MASTER] 00:37:35.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ClassCastException
[MASTER] 00:37:35.238 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("K.=im", "K.=im");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(variableReference0, variableReference0);
CoreOperationMod coreOperationMod0 = new CoreOperationMod(coreOperationGreaterThanOrEqual0, variableReference0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationMod0, variableReference0);
JXPathContext.newContext((Object) coreOperationGreaterThanOrEqual0);

* Writing tests to file
* Writing JUnit test case 'CoreOperationRelationalExpression_ESTest' to results/JxPath-20/org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression/BBC-F0-opt-60/tests/8
* Done!

* Computation finished
