* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Starting Client-0
* Connecting to master process on port 13775
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-20/target/classes
  - subjects/buggy-versions/JxPath-20/src/java
  - subjects/buggy-versions/JxPath-20/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 205
* Using seed 2807305520
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 59 / 205
[MASTER] 00:24:02.684 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
* Search finished after 604s and 1075 generations, 590789 statements, best individual has fitness: 20.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 42
* Number of covered goals: 40
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 39
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 88%
* Total number of goals: 8
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 72
* Number of covered goals: 71
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 7
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 39
* Number of covered goals: 37
* Generated 16 tests with total length 146
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 00:34:12.216 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:12.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:12.223 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("A@&", "A@&");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, variableReference0, (Pointer) null);

[MASTER] 00:34:12.566 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:12.833 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:13.093 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:13.093 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:13.094 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("A@&", "A@&");
VariableReference variableReference0 = new VariableReference(qName0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, variableReference0, (Pointer) null);

[MASTER] 00:34:13.321 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:13.322 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:13.322 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("");
VariableReference variableReference0 = new VariableReference(qName0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, "", (Pointer) null);

[MASTER] 00:34:13.601 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:13.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:13.602 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("");
VariableReference variableReference0 = new VariableReference(qName0);
Long long0 = new Long(0L);
Constant constant0 = new Constant(long0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, (Pointer) null);

[MASTER] 00:34:13.887 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:14.213 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:14.551 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:14.552 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:14.552 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("&", "&");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, "$&:&", (Pointer) null);

[MASTER] 00:34:14.803 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:15.046 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:15.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:15.504 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:15.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:15.504 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("A@&", "A@&");
VariableReference variableReference0 = new VariableReference(qName0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, variableReference0, (Pointer) null);

[MASTER] 00:34:15.705 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:16.043 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:16.062 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:34:16.065 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[9];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(2089443549, expressionArray0);
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationUnion0, coreFunction0);
CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreOperationNotEqual0, coreFunction0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(expressionArray0[0], coreOperationMultiply0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationMultiply0, coreOperationLessThanOrEqual0);
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreFunction0, coreOperationSubtract0);
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationAdd0, coreOperationEqual0);
CoreOperationMod coreOperationMod0 = new CoreOperationMod(coreOperationMultiply0, coreOperationMultiply0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(nameAttributeTest0, coreOperationMod0);
coreOperationGreaterThanOrEqual0.computeValue((EvalContext) null);

[MASTER] 00:34:16.294 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:16.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:34:16.295 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName(":Y-5$/+b");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(variableReference0, variableReference0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, ":Y-5$/+b", (Pointer) null);

[MASTER] 00:34:16.561 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:34:16.869 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CoreOperationRelationalExpression_ESTest' to results/JxPath-20/org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression/BBC-F0-opt-20/tests/5
* Done!

* Computation finished
