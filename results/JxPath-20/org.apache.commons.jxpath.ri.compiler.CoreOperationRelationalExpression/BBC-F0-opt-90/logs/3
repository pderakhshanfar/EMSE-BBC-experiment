* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-90
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Starting Client-0
* Connecting to master process on port 11802
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-20/target/classes
  - subjects/buggy-versions/JxPath-20/src/java
  - subjects/buggy-versions/JxPath-20/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 205
* Using seed 2800197875
* Starting evolution
bbc usage percentage is: 90%
* Initial Number of Goals in DynaMOSA = 59 / 205
[MASTER] 00:22:55.336 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C2*
*C2*
* Search finished after 603s and 607 generations, 311313 statements, best individual has fitness: 56.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 42
* Number of covered goals: 33
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 39
* Number of covered goals: 30
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 88%
* Total number of goals: 8
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 72
* Number of covered goals: 63
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 7
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 39
* Number of covered goals: 30
* Generated 17 tests with total length 119
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 00:33:12.099 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:12.410 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:12.645 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:12.860 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:12.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:33:12.863 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("XSP~xS=va/RG1o");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(variableReference0, variableReference0);
Locale locale0 = Locale.UK;
NodePointer.newNodePointer(qName0, "<=", locale0);

[MASTER] 00:33:13.092 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:13.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:13.531 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:13.718 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:13.903 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:14.156 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:14.371 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:14.564 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:14.819 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:15.088 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:15.532 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:15.787 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:16.013 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:16.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:33:16.015 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[0];
CoreFunction coreFunction0 = new CoreFunction(3095, expressionArray0);
CoreOperationMod coreOperationMod0 = new CoreOperationMod(coreFunction0, coreFunction0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreFunction0, coreOperationMod0);
QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(extensionFunction0, coreOperationLessThanOrEqual0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, coreOperationLessThanOrEqual0, (Pointer) null);

[MASTER] 00:33:16.361 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:33:16.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CoreOperationRelationalExpression_ESTest' to results/JxPath-20/org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression/BBC-F0-opt-90/tests/3
* Done!

* Computation finished
