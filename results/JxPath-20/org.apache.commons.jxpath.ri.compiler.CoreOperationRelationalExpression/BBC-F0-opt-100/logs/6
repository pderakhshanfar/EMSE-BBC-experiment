* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-100
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Starting Client-0
* Connecting to master process on port 11917
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-20/target/classes
  - subjects/buggy-versions/JxPath-20/src/java
  - subjects/buggy-versions/JxPath-20/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-20/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-20/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 205
* Using seed 1558668540
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 59 / 205
[MASTER] 00:26:17.926 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
* Search finished after 602s and 530 generations, 303136 statements, best individual has fitness: 22.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 42
* Number of covered goals: 39
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 39
* Number of covered goals: 36
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 72
* Number of covered goals: 70
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 7
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 39
* Number of covered goals: 36
* Generated 14 tests with total length 108
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 00:36:23.157 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:36:23.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:36:23.713 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("");
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(constant0, constant0);
Expression[] expressionArray0 = new Expression[2];
expressionArray0[0] = (Expression) coreOperationLessThan0;
expressionArray0[1] = (Expression) constant0;
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
QName qName0 = new QName("org.jdom.ProcessQngInstruction", "org.jdom.ProcessQngInstruction");
CoreOperationLessThan coreOperationLessThan1 = new CoreOperationLessThan(coreOperationUnion0, coreOperationLessThan0);
NodePointer.newNodePointer(qName0, coreOperationUnion0, (Locale) null);

[MASTER] 00:36:23.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:36:23.968 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("Di3");
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(constant0, constant0);
QName qName0 = new QName("Di3", "Di3");
NodePointer.newNodePointer(qName0, coreOperationLessThan0, (Locale) null);

[MASTER] 00:36:24.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:36:24.199 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("Di3");
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(constant0, constant0);
QName qName0 = new QName("Di3", "Di3");
NodePointer.newNodePointer(qName0, coreOperationLessThan0, (Locale) null);

[MASTER] 00:36:24.416 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:36:24.417 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("");
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(constant0, constant0);
Expression[] expressionArray0 = new Expression[2];
expressionArray0[0] = (Expression) coreOperationLessThan0;
expressionArray0[1] = (Expression) constant0;
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
CoreOperationLessThan coreOperationLessThan1 = new CoreOperationLessThan(coreOperationUnion0, coreOperationUnion0);
QName qName0 = new QName("org.jdom.ProcessQngInstruction", "org.jdom.ProcessQngInstruction");
NodePointer.newNodePointer(qName0, coreOperationUnion0, (Locale) null);

[MASTER] 00:36:24.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:36:24.644 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("mDi3");
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(constant0, constant0);
QName qName0 = new QName("org.jdom.ProcessingInstruction", "org.jdom.ProcessingInstruction");
NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, (Locale) null);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, "", nodePointer0);

[MASTER] 00:36:26.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:36:26.056 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("", "");
Expression[] expressionArray0 = new Expression[3];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
Step[] stepArray0 = new Step[2];
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(539);
LocationPath locationPath0 = new LocationPath(false, stepArray0);
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(expressionArray0[1], locationPath0);
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(extensionFunction0, expressionArray0[2]);
NamespaceContext namespaceContext0 = new NamespaceContext((EvalContext) null, nodeTypeTest0);
SelfContext selfContext0 = new SelfContext(namespaceContext0, nodeTypeTest0);
PredicateContext predicateContext0 = new PredicateContext(selfContext0, nameAttributeTest0);
ChildContext childContext0 = new ChildContext(predicateContext0, nodeTypeTest0, false, true);
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext(childContext0, nodeTypeTest0, false);
coreOperationLessThanOrEqual0.computeValue(precedingOrFollowingContext0);

* Writing tests to file
* Writing JUnit test case 'CoreOperationRelationalExpression_ESTest' to results/JxPath-20/org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression/BBC-F0-opt-100/tests/6
* Done!

* Computation finished
