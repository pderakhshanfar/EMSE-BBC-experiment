* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 5167
* Analyzing classpath: 
  - subjects/buggy-versions/Time-1/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 252
* Using seed 711846995
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 137 / 252
[MASTER] 08:42:10.096 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 08:42:58.550 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 601s and 6086 generations, 1579733 statements, best individual has fitness: 107.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 43
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 31
* Number of covered goals: 28
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 64
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Generated 49 tests with total length 180
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
[MASTER] 08:51:48.384 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:51:59.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:51:59.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.add((-1L), 51);

[MASTER] 08:51:59.585 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:51:59.585 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.add(1616L, 1616L);

[MASTER] 08:51:59.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:51:59.991 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
JulianChronology julianChronology0 = JulianChronology.getInstance();
UnsupportedDurationField unsupportedDurationField1 = (UnsupportedDurationField)durationFieldType0.getField(julianChronology0);
unsupportedDurationField1.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 08:52:00.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:52:00.927 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
((UnsupportedDurationField) durationField0).equals(durationFieldType0);

[MASTER] 08:52:01.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:01.304 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getDifference(1L, 2274L);

[MASTER] 08:52:01.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:01.682 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getDifferenceAsLong(0L, 0L);

[MASTER] 08:52:02.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:02.042 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(iSOChronology0);
durationField0.getMillis((-1641));

[MASTER] 08:52:02.396 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:02.397 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis(4483, (long) 4483);

[MASTER] 08:52:02.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:02.762 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis(2865L);

[MASTER] 08:52:03.136 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:03.136 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis(0L, 0L);

[MASTER] 08:52:03.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:03.512 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getName();

[MASTER] 08:52:03.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:03.867 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getUnitMillis();

[MASTER] 08:52:04.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:04.269 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValue(2865L);

[MASTER] 08:52:04.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:04.750 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValue(1931L, (-1043L));

[MASTER] 08:52:05.148 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:05.148 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValueAsLong(2887L);

[MASTER] 08:52:05.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:05.507 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValueAsLong((-291L), 1791L);

[MASTER] 08:52:06.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:06.208 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.isPrecise();

[MASTER] 08:52:06.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:06.593 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.isSupported();

[MASTER] 08:52:06.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:06.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
JulianChronology julianChronology0 = JulianChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-1/org.joda.time.field.UnsupportedDurationField/BBC-F0-opt-30/tests/9
* Done!

* Computation finished
