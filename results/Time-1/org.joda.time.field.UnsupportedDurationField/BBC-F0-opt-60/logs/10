* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 21350
* Analyzing classpath: 
  - subjects/buggy-versions/Time-1/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 252
* Using seed 2436883855
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 137 / 252
[MASTER] 08:43:12.754 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 601s and 5747 generations, 1514794 statements, best individual has fitness: 110.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 43
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 31
* Number of covered goals: 28
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 64
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Generated 51 tests with total length 188
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 08:52:39.944 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:52:51.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:51.003 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.add(113L, 1);

[MASTER] 08:52:51.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:51.411 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.add(1947L, 0L);

[MASTER] 08:52:51.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:52:51.876 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GJChronology gJChronology0 = GJChronology.getInstance();
UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)durationFieldType0.getField(gJChronology0);
unsupportedDurationField0.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 08:52:52.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:52:52.741 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
Object object0 = new Object();
((UnsupportedDurationField) durationField0).equals(object0);

[MASTER] 08:52:53.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:53.499 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifference(1L, 1L);

[MASTER] 08:52:53.890 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:53.891 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.minutes();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifferenceAsLong(0L, 0L);

[MASTER] 08:52:54.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:54.267 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(26);

[MASTER] 08:52:54.676 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:54.677 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(29, (long) 29);

[MASTER] 08:52:55.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:55.067 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(329L);

[MASTER] 08:52:55.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:55.466 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((-1L), 0L);

[MASTER] 08:52:55.877 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:55.877 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getName();

[MASTER] 08:52:56.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:56.355 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getUnitMillis();

[MASTER] 08:52:56.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:56.811 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(ethiopicChronology0);
durationField0.getValue((long) 1);

[MASTER] 08:52:57.214 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:57.214 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValue(912L, 1L);

[MASTER] 08:52:57.591 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:57.592 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong(473L);

[MASTER] 08:52:58.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:58.028 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong(473L, 473L);

[MASTER] 08:52:58.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:58.431 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
GJChronology gJChronology0 = GJChronology.getInstance();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.hashCode();

[MASTER] 08:52:58.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:58.806 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.centuries();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isPrecise();

[MASTER] 08:52:59.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:59.243 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isSupported();

[MASTER] 08:52:59.656 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:52:59.656 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.hours();
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-1/org.joda.time.field.UnsupportedDurationField/BBC-F0-opt-60/tests/10
* Done!

* Computation finished
