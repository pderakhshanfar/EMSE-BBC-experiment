* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-40
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 18952
* Analyzing classpath: 
  - subjects/buggy-versions/Time-1/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 252
* Using seed 3419612523
* Starting evolution
bbc usage percentage is: 40%
* Initial Number of Goals in DynaMOSA = 137 / 252
[MASTER] 08:30:55.223 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 601s and 5759 generations, 1509257 statements, best individual has fitness: 106.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 43
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 31
* Number of covered goals: 28
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 64
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Generated 50 tests with total length 197
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 08:40:23.330 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:40:34.292 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:34.292 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.add(2221L, (-5040L));

[MASTER] 08:40:34.701 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:40:34.702 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
UnsupportedDurationField unsupportedDurationField1 = (UnsupportedDurationField)durationFieldType0.getField(gJChronology0);
unsupportedDurationField1.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 08:40:35.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 08:40:35.466 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
((UnsupportedDurationField) durationField0).equals(buddhistChronology0);

[MASTER] 08:40:35.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:35.896 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifference(1474, 3234);

[MASTER] 08:40:36.310 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:36.310 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getDifferenceAsLong(0L, (-2731L));

[MASTER] 08:40:36.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:36.726 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((-1085));

[MASTER] 08:40:37.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:37.129 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis(3234, 0L);

[MASTER] 08:40:37.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:37.529 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((long) 1);

[MASTER] 08:40:37.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:37.951 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getMillis((-1319L), (-1319L));

[MASTER] 08:40:38.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:38.361 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getName();

[MASTER] 08:40:38.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:38.751 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getUnitMillis();

[MASTER] 08:40:39.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:39.132 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValue((-1319L));

[MASTER] 08:40:39.599 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:39.599 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValue(1L, (long) 1);

[MASTER] 08:40:40.013 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:40.013 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong(991L);

[MASTER] 08:40:40.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:40.403 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.getValueAsLong(0L, 2794L);

[MASTER] 08:40:40.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:40.776 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.hashCode();

[MASTER] 08:40:41.173 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:41.173 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isPrecise();

[MASTER] 08:40:41.536 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:41.536 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.isSupported();

[MASTER] 08:40:41.905 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 08:40:41.905 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1474);
GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(gJChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-1/org.joda.time.field.UnsupportedDurationField/BBC-F0-opt-40/tests/1
* Done!

* Computation finished
