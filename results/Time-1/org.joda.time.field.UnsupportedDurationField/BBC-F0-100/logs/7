* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 19585
* Analyzing classpath: 
  - subjects/buggy-versions/Time-1/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 252
* Using seed 2172775463
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 137 / 252
[MASTER] 03:12:11.065 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 03:14:51.813 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 03:16:01.848 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 03:17:42.307 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 7 IFNONNULL L246 - false: 448005,411342,62234| Number of FF evals: 421056
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getType()Lorg/joda/time/DurationFieldType;: root-Branch: 32,0,0| Number of FF evals: 5709
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: Line 275: 852166,780519,0| Number of FF evals: 421179
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 6 IFNONNULL L245 - false: 448182,412223,62152| Number of FF evals: 421196
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValue(J)I: root-Branch: 110,0,0| Number of FF evals: 11415
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.add(JJ)J: Line 191: 32,0,0| Number of FF evals: 43
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValue(J)I: Line 110: 110,0,0| Number of FF evals: 84
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValue(JJ)I: Line 128: 32,0,0| Number of FF evals: 76
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 7 IFNONNULL L246 - true: 448005,411342,62116| Number of FF evals: 421056
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getValue(JJ)I: root-Branch: 32,0,0| Number of FF evals: 10134
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 6 IFNONNULL L245 - true: 177,0,0| Number of FF evals: 59852
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getType()Lorg/joda/time/DurationFieldType;: Line 79: 32,0,0| Number of FF evals: 38
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPNE L241 - false: 25,0,0| Number of FF evals: 96938
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: I4 Branch 3 IFEQ L227 - true: 12,0,0| Number of FF evals: 4466
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: root-Branch: 852166,780519,0| Number of FF evals: 421179
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 5 IFEQ L243 - false: 177,0,0| Number of FF evals: 60744
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.add(JJ)J: root-Branch: 32,0,0| Number of FF evals: 12966
* Search finished after 601s and 8796 generations, 2702748 statements, best individual has fitness: 105.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 43
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 31
* Number of covered goals: 28
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 64
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Generated 48 tests with total length 170
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 03:18:55.419 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:19:01.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:01.876 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.add((-886L), (-738));

[MASTER] 03:19:02.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:02.120 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.add((-2667L), (-2667L));

[MASTER] 03:19:02.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.ZonedChronology$ZonedDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 03:19:02.373 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
JulianChronology julianChronology0 = JulianChronology.getInstance(dateTimeZone0);
UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)durationFieldType0.getField(julianChronology0);
unsupportedDurationField0.compareTo((DurationField) null);

[MASTER] 03:19:03.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:03.090 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getDifference((-2538L), (-2667L));

[MASTER] 03:19:03.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:03.315 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getDifferenceAsLong(259200000L, 87L);

[MASTER] 03:19:03.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:03.560 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis((-838));

[MASTER] 03:19:03.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:03.810 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis(0, 4130L);

[MASTER] 03:19:04.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:04.053 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis((-2667L));

[MASTER] 03:19:04.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:04.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
JulianChronology julianChronology0 = JulianChronology.getInstance(dateTimeZone0);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getMillis((-886L), (-886L));

[MASTER] 03:19:04.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:04.649 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValue(0L);

[MASTER] 03:19:04.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:04.937 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValue((-2667L), (-2667L));

[MASTER] 03:19:05.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:05.192 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValueAsLong(3471L);

[MASTER] 03:19:05.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:05.454 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.getValueAsLong((-886L), (-886L));

[MASTER] 03:19:05.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:05.962 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.isPrecise();

[MASTER] 03:19:06.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:06.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.isSupported();

[MASTER] 03:19:06.496 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:06.497 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.days();
JulianChronology julianChronology0 = JulianChronology.getInstance((DateTimeZone) null);
DurationField durationField0 = durationFieldType0.getField(julianChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-1/org.joda.time.field.UnsupportedDurationField/BBC-F0-100/tests/7
* Done!

* Computation finished
