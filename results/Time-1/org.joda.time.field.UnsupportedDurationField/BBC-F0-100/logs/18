* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.joda.time.field.UnsupportedDurationField
* Starting Client-0
* Connecting to master process on port 8184
* Analyzing classpath: 
  - subjects/buggy-versions/Time-1/target/classes
  - defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.UnsupportedDurationField
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 252
* Using seed 2479245543
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 137 / 252
[MASTER] 03:12:28.869 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: Line 241: 311,0,0| Number of FF evals: 212
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.hashCode()I: Line 259: 122,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 7 IFNONNULL L246 - false: 411133,376077,77653| Number of FF evals: 365641
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: Line 275: 744305,679650,0| Number of FF evals: 368093
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 6 IFNONNULL L245 - false: 413621,380366,80143| Number of FF evals: 367922
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getMillis(I)J: Line 146: 38,0,0| Number of FF evals: 82
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPNE L241 - true: 395,0,0| Number of FF evals: 142930
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I28 Branch 7 IFNONNULL L246 - true: 411133,376077,77359| Number of FF evals: 365641
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getMillis(I)J: root-Branch: 38,0,0| Number of FF evals: 17261
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I23 Branch 6 IFNONNULL L245 - true: 2488,0,0| Number of FF evals: 76813
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 4 IF_ACMPNE L241 - false: 311,0,0| Number of FF evals: 47547
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(JJ)J: root-Branch: 214,0,0| Number of FF evals: 11782
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 5 IFEQ L243 - true: 88,0,0| Number of FF evals: 122952
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.compareTo(Lorg/joda/time/DurationField;)I: I4 Branch 3 IFEQ L227 - true: 18,0,0| Number of FF evals: 3942
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.hashCode()I: root-Branch: 122,0,0| Number of FF evals: 153
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.readResolve()Ljava/lang/Object;: root-Branch: 744305,679650,0| Number of FF evals: 368093
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(JJ)J: Line 209: 214,0,0| Number of FF evals: 152
Number of times BBC is called, activated, and useful for org.joda.time.field.UnsupportedDurationField.equals(Ljava/lang/Object;)Z: I13 Branch 5 IFEQ L243 - false: 2576,0,0| Number of FF evals: 77012
* Search finished after 601s and 7678 generations, 2340214 statements, best individual has fitness: 111.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 43
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 31
* Number of covered goals: 28
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 64
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 22
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 35
* Number of covered goals: 31
* Generated 50 tests with total length 169
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 03:19:49.811 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:19:57.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:57.142 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.add((long) 1, 0);

[MASTER] 03:19:57.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:57.414 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.add(1933L, (long) 1);

[MASTER] 03:19:57.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.LimitChronology$LimitDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 03:19:57.770 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
UnsupportedDurationField unsupportedDurationField1 = (UnsupportedDurationField)durationFieldType0.getField(buddhistChronology0);
unsupportedDurationField1.compareTo((DurationField) unsupportedDurationField0);

[MASTER] 03:19:58.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: org.joda.time.chrono.LimitChronology$LimitDurationField cannot be cast to org.joda.time.field.UnsupportedDurationField
[MASTER] 03:19:58.288 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
((UnsupportedDurationField) durationField0).equals(durationFieldType0);

[MASTER] 03:19:58.849 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:58.850 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getDifference(2059L, 2059L);

[MASTER] 03:19:59.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:59.100 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getDifferenceAsLong(1, 1);

[MASTER] 03:19:59.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:59.345 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis(1);

[MASTER] 03:19:59.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:59.608 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis((-300), (long) 1);

[MASTER] 03:19:59.860 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:19:59.861 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis((long) 1);

[MASTER] 03:20:00.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:00.115 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getMillis((long) 1, (long) 1);

[MASTER] 03:20:00.428 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:00.428 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.months();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getName();

[MASTER] 03:20:00.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:00.697 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getUnitMillis();

[MASTER] 03:20:00.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:00.959 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue((long) 1);

[MASTER] 03:20:01.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:01.231 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValue((long) 1, 240L);

[MASTER] 03:20:01.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:01.499 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValueAsLong(1L);

[MASTER] 03:20:01.781 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:01.782 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.seconds();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.getValueAsLong((long) 1, (long) 1);

[MASTER] 03:20:02.299 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:02.299 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.years();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isPrecise();

[MASTER] 03:20:02.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:02.539 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.isSupported();

[MASTER] 03:20:02.829 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 03:20:02.829 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DurationFieldType durationFieldType0 = DurationFieldType.millis();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DurationField durationField0 = durationFieldType0.getField(buddhistChronology0);
durationField0.toString();

* Writing tests to file
* Writing JUnit test case 'UnsupportedDurationField_ESTest' to results/Time-1/org.joda.time.field.UnsupportedDurationField/BBC-F0-100/tests/18
* Done!

* Computation finished
