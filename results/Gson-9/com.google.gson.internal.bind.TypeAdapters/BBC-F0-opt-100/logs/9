* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-100
* Going to generate test cases for class: com.google.gson.internal.bind.TypeAdapters
* Starting Client-0
* Connecting to master process on port 19597
* Analyzing classpath: 
  - subjects/buggy-versions/Gson-9/target/classes
* Finished analyzing classpath
* Generating tests for class com.google.gson.internal.bind.TypeAdapters
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1481
* Using seed 963635261
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 538 / 1481
[MASTER] 14:49:37.813 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[MASTER] 14:49:39.381 [logback-2] ERROR TestCluster - Failed to check cache for com.google.gson.reflect.TypeToken<T> : Type points to itself
[MASTER] 14:56:19.759 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 606s and 904 generations, 449202 statements, best individual has fitness: 390.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 391
* Number of covered goals: 294
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 284
* Number of covered goals: 178
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100% (no goals)
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 86%
* Total number of goals: 498
* Number of covered goals: 426
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 10
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 71%
* Total number of goals: 7
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 71%
* Total number of goals: 7
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 284
* Number of covered goals: 178
* Generated 81 tests with total length 304
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 43%
* Compiling and checking tests
[MASTER] 15:00:10.742 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:10.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.181 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.366 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.521 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.660 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.795 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:11.947 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.096 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.241 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.384 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.549 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.687 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.822 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:12.958 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.113 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.236 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.471 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.593 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.741 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:13.870 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.023 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.157 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.285 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.405 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.548 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.677 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.791 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:14.934 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:15.074 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:15.187 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:15.309 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:15.456 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 15:00:15.607 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'TypeAdapters_ESTest' to results/Gson-9/com.google.gson.internal.bind.TypeAdapters/BBC-F0-opt-100/tests/9
* Done!

* Computation finished
