* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 10221
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 3742959498
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 601s and 450 generations, 233257 statements, best individual has fitness: 82.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 185
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 787
* Number of covered goals: 759
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 193
* Number of covered goals: 180
* Generated 102 tests with total length 304
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:39:51.725 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.9759166666666667% of time used, but only 15/102 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 20:39:57.889 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:57.957 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.046 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.080 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.112 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.152 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.200 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.233 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.263 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.296 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.367 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.400 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:58.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.669 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.696 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.730 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.849 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.880 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.919 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:39:59.982 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.047 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.081 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.121 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.258 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.298 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.339 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<0> but was:<13>
[MASTER] 20:40:00.343 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertNotNull(byteArray0);
assertEquals(2, byteArray0.length);

Base64 base64_0 = new Base64((-1), byteArray0, true);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);

Object object0 = base64_0.decode((Object) ")0+o\"h");
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object0);
assertNotSame(byteArray0, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);

Object object1 = base64_0.decode(object0);
assertFalse(byteArray0.equals((Object)object0));
assertFalse(object1.equals((Object)object0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object1);
assertNotSame(byteArray0, object1);
assertNotSame(byteArray0, object0);
assertNotSame(object0, object1);
assertNotSame(object1, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);


[MASTER] 20:40:00.377 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.457 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.638 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.702 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.762 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.810 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<0> but was:<13>
[MASTER] 20:40:00.821 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertNotNull(byteArray0);
assertEquals(2, byteArray0.length);

Base64 base64_0 = new Base64((-1), byteArray0, true);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);

Object object0 = base64_0.decode((Object) ")0+o\"h");
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object0);
assertNotSame(byteArray0, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);

Object object1 = base64_0.encode(object0);
assertFalse(byteArray0.equals((Object)object0));
assertFalse(object1.equals((Object)object0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object1);
assertNotSame(byteArray0, object1);
assertNotSame(byteArray0, object0);
assertNotSame(object0, object1);
assertNotSame(object1, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);


[MASTER] 20:40:00.848 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.895 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:00.938 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.015 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.095 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.130 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.173 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.204 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.230 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.286 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.314 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.390 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 20:40:01.391 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertEquals(2, byteArray0.length);
assertEquals(6, byteArray1.length);

Base64 base64_0 = new Base64(52);
assertFalse(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);

base64_0.decode(byteArray1, 0, 1554);
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertFalse(base64_0.isUrlSafe());
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(2, byteArray0.length);
assertEquals(6, byteArray1.length);


[MASTER] 20:40:01.413 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.434 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.458 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.531 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.560 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.620 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.667 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.702 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.779 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.827 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.864 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:01.864 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<0> but was:<13>
[MASTER] 20:40:01.865 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertNotNull(byteArray0);
assertEquals(2, byteArray0.length);

byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertEquals(2, byteArray0.length);
assertEquals(2, byteArray1.length);

Base64 base64_0 = new Base64((-1), byteArray1, true);
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);
assertEquals(2, byteArray1.length);

Object object0 = base64_0.decode((Object) ")0+o\"h");
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object0);
assertNotSame(byteArray0, object0);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertNotSame(byteArray1, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);
assertEquals(2, byteArray1.length);

Object object1 = base64_0.encode(object0);
assertFalse(byteArray0.equals((Object)object0));
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertFalse(byteArray1.equals((Object)object0));
assertFalse(object1.equals((Object)object0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
assertTrue(base64_0.isUrlSafe());
assertNotNull(object1);
assertNotSame(byteArray0, object0);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray0, object1);
assertNotSame(byteArray1, object1);
assertNotSame(byteArray1, byteArray0);
assertNotSame(byteArray1, object0);
assertNotSame(object0, object1);
assertNotSame(object1, object0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(2, byteArray0.length);
assertEquals(2, byteArray1.length);


[MASTER] 20:40:01.892 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.069 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.100 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.254 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.589 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:02.783 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.012 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.044 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.093 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.116 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.138 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.178 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.208 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.236 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.279 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.330 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.374 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.404 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.470 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.529 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.576 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.606 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.631 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:03.655 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.036 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.073 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.093 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.113 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.138 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.189 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.217 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.248 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<0> but was:<13>
[MASTER] 20:40:04.249 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);

byte[] byteArray0 = new byte[6];
byte[] byteArray1 = base64_0.encode(byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)0, (byte)0}, byteArray1);
assertTrue(base64_0.isUrlSafe());
assertNotNull(byteArray1);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(6, byteArray0.length);
assertEquals(10, byteArray1.length);

boolean boolean0 = Base64.isArrayByteBase64(byteArray1);
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)0, (byte)0}, byteArray1);
assertTrue(base64_0.isUrlSafe());
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(boolean0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(6, byteArray0.length);
assertEquals(10, byteArray1.length);


[MASTER] 20:40:04.278 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.310 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.338 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:04.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<0> but was:<13>
[MASTER] 20:40:04.339 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertNotNull(byteArray0);
assertEquals(2, byteArray0.length);

Base64 base64_0 = new Base64(0);
assertFalse(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);

base64_0.decode(byteArray0, 0, 0);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertFalse(base64_0.isUrlSafe());
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(2, byteArray0.length);


[MASTER] 20:40:04.377 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:06.848 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:40:06.848 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test062 -> class java.lang.ArrayIndexOutOfBoundsException: -1
[MASTER] 20:40:06.849 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
//  // Unstable assertion: assertNotNull(byteArray0);
//  // Unstable assertion: assertEquals(2, byteArray0.length);

byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
//  // Unstable assertion: assertFalse(byteArray1.equals((Object)byteArray0));
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
//  // Unstable assertion: assertNotNull(byteArray1);
//  // Unstable assertion: assertNotSame(byteArray0, byteArray1);
//  // Unstable assertion: assertNotSame(byteArray1, byteArray0);
//  // Unstable assertion: assertEquals(2, byteArray0.length);
//  // Unstable assertion: assertEquals(2, byteArray1.length);

Base64 base64_0 = new Base64((-1), byteArray1, true);
//  // Unstable assertion: assertFalse(byteArray0.equals((Object)byteArray1));
//  // Unstable assertion: assertFalse(byteArray1.equals((Object)byteArray0));
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
//  // Unstable assertion: assertTrue(base64_0.isUrlSafe());
//  // Unstable assertion: assertNotNull(base64_0);
//  // Unstable assertion: assertEquals(76, Base64.MIME_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(64, Base64.PEM_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(2, byteArray0.length);
//  // Unstable assertion: assertEquals(2, byteArray1.length);

Object object0 = base64_0.decode((Object) ")0+o\"h");
//  // Unstable assertion: assertFalse(byteArray0.equals((Object)byteArray1));
//  // Unstable assertion: assertFalse(byteArray1.equals((Object)byteArray0));
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
//  // Unstable assertion: assertTrue(base64_0.isUrlSafe());
//  // Unstable assertion: assertNotNull(object0);
//  // Unstable assertion: assertNotSame(byteArray0, object0);
//  // Unstable assertion: assertNotSame(byteArray0, byteArray1);
//  // Unstable assertion: assertNotSame(byteArray1, byteArray0);
//  // Unstable assertion: assertNotSame(byteArray1, object0);
//  // Unstable assertion: assertEquals(76, Base64.MIME_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(64, Base64.PEM_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(2, byteArray0.length);
//  // Unstable assertion: assertEquals(2, byteArray1.length);

Object object1 = base64_0.encode(object0);
//  // Unstable assertion: assertFalse(byteArray0.equals((Object)object0));
//  // Unstable assertion: assertFalse(byteArray0.equals((Object)byteArray1));
//  // Unstable assertion: assertFalse(byteArray1.equals((Object)byteArray0));
//  // Unstable assertion: assertFalse(byteArray1.equals((Object)object0));
//  // Unstable assertion: assertFalse(object1.equals((Object)object0));
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
//  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
//  // Unstable assertion: assertTrue(base64_0.isUrlSafe());
//  // Unstable assertion: assertNotNull(object1);
//  // Unstable assertion: assertNotSame(byteArray0, object0);
//  // Unstable assertion: assertNotSame(byteArray0, byteArray1);
//  // Unstable assertion: assertNotSame(byteArray0, object1);
//  // Unstable assertion: assertNotSame(byteArray1, object1);
//  // Unstable assertion: assertNotSame(byteArray1, byteArray0);
//  // Unstable assertion: assertNotSame(byteArray1, object0);
//  // Unstable assertion: assertNotSame(object0, object1);
//  // Unstable assertion: assertNotSame(object1, object0);
//  // Unstable assertion: assertEquals(76, Base64.MIME_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(64, Base64.PEM_CHUNK_SIZE);
//  // Unstable assertion: assertEquals(2, byteArray0.length);
//  // Unstable assertion: assertEquals(2, byteArray1.length);


[MASTER] 20:40:09.561 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0-opt-10/tests/1
* Done!

* Computation finished
