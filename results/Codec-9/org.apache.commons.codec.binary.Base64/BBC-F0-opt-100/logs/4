* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-100
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 5401
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 3585374817
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 604s and 111 generations, 62644 statements, best individual has fitness: 104.0
* Minimizing test suite
[MASTER] 20:48:29.675 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 216
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 193
* Number of covered goals: 183
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 787
* Number of covered goals: 749
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 80
* Number of covered goals: 71
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 193
* Number of covered goals: 169
* Generated 83 tests with total length 1378
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:49:34.580 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
[MASTER] 20:49:55.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:55.870 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.011 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.260 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.388 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.500 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.576 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.684 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.821 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<-80> but was:<13>
[MASTER] 20:49:56.826 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)104;
byte[] byteArray1 = Base64.encodeBase64(byteArray0);
byte[] byteArray2 = Base64.encodeBase64Chunked(byteArray1);
assertArrayEquals(new byte[] {(byte)81, (byte)85, (byte)100, (byte)110, (byte)80, (byte)81, (byte)61, (byte)61, (byte) (-80), (byte)10}, byteArray2);
assertEquals(10, byteArray2.length);

Base64 base64_0 = new Base64(false);
byte[] byteArray3 = new byte[6];
byteArray3[0] = (byte)0;
byteArray3[1] = (byte)104;
byteArray3[2] = (byte)0;
byteArray3[3] = (byte)104;
byteArray3[4] = (byte)0;
byteArray3[5] = (byte)104;
byte[] byteArray4 = base64_0.decode(byteArray3);
assertArrayEquals(new byte[] {(byte) (-122), (byte)24}, byteArray4);

byte[] byteArray5 = Base64.discardWhitespace(byteArray0);
assertEquals(2, byteArray5.length);


[MASTER] 20:49:56.945 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:56.947 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<AAApKco=[?]
> but was:<AAApKco=[]
>
[MASTER] 20:49:56.947 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(false);
byte[] byteArray0 = new byte[8];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
assertEquals(12, byteArray1.length);

byteArray0[0] = (byte) (-5);
byte[] byteArray2 = base64_0.decode("encodeInteger called with null parameter");
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)41;
byteArray0[3] = (byte)0;
byteArray0[4] = (byte) (-123);
byteArray0[5] = (byte) (-87);
byteArray0[6] = (byte) (-1);
byteArray0[7] = (byte)1;
Base64.encodeBase64(byteArray2, true);
assertEquals(27, byteArray2.length);

base64_0.decode(byteArray0, (int) (byte) (-1), (int) (byte) (-5));
Base64.encodeBase64(byteArray0);
boolean boolean0 = base64_0.hasData();
assertFalse(boolean0);

BigInteger bigInteger0 = BigInteger.ONE;
BigInteger bigInteger1 = BigInteger.ONE;
bigInteger1.min(bigInteger0);
bigInteger0.min(bigInteger1);
byte[] byteArray3 = Base64.encodeInteger(bigInteger0);
byte[] byteArray4 = Base64.encodeBase64(byteArray3, false, true);
assertArrayEquals(new byte[] {(byte)81, (byte)86, (byte)69, (byte)57, (byte)80, (byte)81}, byteArray4);
assertEquals(6, byteArray4.length);
assertArrayEquals(new byte[] {(byte)65, (byte)81, (byte)61, (byte)61}, byteArray3);

byte[] byteArray5 = new byte[5];
byteArray5[0] = (byte)0;
byteArray5[1] = (byte)0;
byteArray5[2] = (byte)41;
byteArray5[3] = (byte)41;
byteArray5[4] = (byte) (-54);
String string0 = base64_0.encodeToString(byteArray5);
assertEquals("AAApKco=\uFFFD\n", string0);


[MASTER] 20:49:57.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.200 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.364 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.525 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.752 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.855 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:57.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<ADIAAQbzAA==[?]
> but was:<ADIAAQbzAA==[]
>
[MASTER] 20:49:57.856 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(false);
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)50;
byteArray0[2] = (byte)0;
byteArray0[3] = (byte)1;
byteArray0[4] = (byte)6;
byteArray0[5] = (byte) (-13);
byteArray0[6] = (byte)0;
String string0 = base64_0.encodeToString(byteArray0);
assertEquals("ADIAAQbzAA==\uFFFD\n", string0);

byte[] byteArray1 = Base64.decodeBase64("mEq-_S8)");
assertArrayEquals(new byte[] {(byte) (-104), (byte)74, (byte) (-66), (byte) (-3), (byte)47}, byteArray1);
assertEquals(5, byteArray1.length);

base64_0.isUrlSafe();
byte[] byteArray2 = Base64.encodeBase64((byte[]) null, true);
assertNull(byteArray2);

base64_0.encodeToString((byte[]) null);
base64_0.decode((byte[]) null, 0, 0);
assertFalse(base64_0.isUrlSafe());


[MASTER] 20:49:57.908 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.002 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.080 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.204 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.292 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.384 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.472 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.684 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.791 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.856 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:58.932 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.084 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<-80> but was:<13>
[MASTER] 20:49:59.085 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)0;
byte[] byteArray1 = Base64.encodeBase64(byteArray0);
Base64 base64_0 = new Base64(0);
Base64.decodeInteger(byteArray0);
Base64.encodeBase64URLSafe(byteArray1);
byte[] byteArray2 = base64_0.decode(byteArray1);
byte[] byteArray3 = base64_0.decode(byteArray2);
String string0 = base64_0.encodeToString(byteArray1);
assertEquals("QUE9PQ==", string0);

byte[] byteArray4 = base64_0.decode(byteArray1);
assertArrayEquals(new byte[] {(byte)0}, byteArray4);

base64_0.isUrlSafe();
Base64.encodeBase64((byte[]) null, false, false, 76);
base64_0.encode(byteArray1);
byte[] byteArray5 = Base64.encodeBase64Chunked(byteArray2);
Base64.isArrayByteBase64(byteArray5);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)61, (byte)61, (byte) (-80), (byte)10}, byteArray5);

Base64.encodeBase64(byteArray3, true, true);
assertNotSame(byteArray1, byteArray3);


[MASTER] 20:49:59.128 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.394 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.430 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 20:49:59.432 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)55;
byteArray0[1] = (byte) (-47);
byteArray0[2] = (byte) (-1);
byteArray0[3] = (byte) (-103);
byteArray0[4] = (byte)89;
byteArray0[5] = (byte)0;
Base64.encodeBase64String(byteArray0);
Base64 base64_0 = new Base64();
byte[] byteArray1 = base64_0.decode(byteArray0);
byte[] byteArray2 = Base64.decodeBase64("N9H/mVkAAAAA");
Base64.encodeBase64(byteArray0, true, false, (int) (byte)55);
byte[] byteArray3 = Base64.encodeBase64(byteArray2);
byte[] byteArray4 = new byte[0];
base64_0.encode(byteArray4, 0, 0);
base64_0.readResults(byteArray1, (byte)89, (byte)0);
Base64.encodeBase64(byteArray2, false, false);
base64_0.decode(byteArray2);
String string0 = Base64.encodeBase64URLSafeString(byteArray2);
assertEquals("N9H_mVkAAAAA", string0);

base64_0.encode(byteArray3, (int) (byte) (-1), (int) (byte)89);
byte[] byteArray5 = Base64.encodeBase64Chunked(byteArray1);
assertArrayEquals(new byte[] {(byte)55, (byte)81, (byte)61, (byte)61, (byte)0, (byte)10}, byteArray5);
assertEquals(6, byteArray5.length);


[MASTER] 20:49:59.491 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.703 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.843 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:49:59.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<QUE[A_w]> but was:<QUE[NCg]>
[MASTER] 20:49:59.855 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)0;
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true);
Base64 base64_0 = new Base64((byte)0);
byte[] byteArray2 = base64_0.decode("");
BigInteger bigInteger0 = BigInteger.ONE;
String string0 = Base64.encodeBase64URLSafeString(byteArray1);
assertEquals("QUEA_w", string0);

BigInteger bigInteger1 = BigInteger.TEN;
bigInteger1.doubleValue();
Base64.encodeBase64(byteArray0);
BigInteger bigInteger2 = bigInteger0.mod(bigInteger1);
bigInteger0.or(bigInteger2);
bigInteger0.testBit(5);
byte[] byteArray3 = Base64.encodeInteger(bigInteger0);
byte[] byteArray4 = base64_0.encode(byteArray2);
Base64.encodeBase64(byteArray0, false, false, 2720);
boolean boolean0 = Base64.isBase64(byteArray3);
String string1 = Base64.encodeBase64String(byteArray4);
assertEquals("", string1);

base64_0.encode(byteArray3);
assertArrayEquals(new byte[] {(byte)65, (byte)81, (byte)61, (byte)61}, byteArray3);

boolean boolean1 = base64_0.hasData();
assertFalse(boolean1 == boolean0);

Base64.encodeBase64(byteArray2);
Object object0 = base64_0.decode((Object) "}oXt/[-or Mo_q5");
Object object1 = base64_0.encode(object0);
assertNotSame(object0, object1);


[MASTER] 20:49:59.999 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.087 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.195 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.367 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.483 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.554 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.631 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.715 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.795 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.863 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:00.935 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.077 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.258 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.344 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.447 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.577 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.647 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.819 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.891 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:01.991 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.079 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.139 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.223 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.307 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.399 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.507 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.599 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.687 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.807 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:02.960 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.023 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.154 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.251 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.320 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.479 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.558 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.626 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.694 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:03.779 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:08.853 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:08.853 [logback-2] ERROR JUnitAnalyzer - Issue in scaffolding of the test suite: The thread was not executing unsafe code
Stack trace:
org.evosuite.runtime.sandbox.MSecurityManager.doneWithExecutingUnsafeCodeOnSameThread(MSecurityManager.java:287)
org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingUnsafeCodeOnSameThread(Sandbox.java:164)
org.evosuite.runtime.classhandling.ClassStateSupport.loadClasses(ClassStateSupport.java:171)
org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ClassStateSupport.java:65)
org.apache.commons.codec.binary.Base64_161_tmp__ESTest_scaffolding.initializeClasses(Base64_161_tmp__ESTest_scaffolding.java:68)
org.apache.commons.codec.binary.Base64_161_tmp__ESTest_scaffolding.initEvoSuiteFramework(Base64_161_tmp__ESTest_scaffolding.java:36)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runners.Suite.runChild(Suite.java:128)
org.junit.runners.Suite.runChild(Suite.java:27)
org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
org.junit.runners.ParentRunner.run(ParentRunner.java:413)
org.junit.runner.JUnitCore.run(JUnitCore.java:137)
org.junit.runner.JUnitCore.run(JUnitCore.java:115)
org.junit.runner.JUnitCore.run(JUnitCore.java:105)
org.junit.runner.JUnitCore.run(JUnitCore.java:94)
org.evosuite.junit.JUnitAnalyzer.runJUnitOnCurrentProcess(JUnitAnalyzer.java:306)
org.evosuite.junit.JUnitAnalyzer.runTests(JUnitAnalyzer.java:276)
org.evosuite.junit.JUnitAnalyzer.handleTestsThatAreUnstable(JUnitAnalyzer.java:178)
org.evosuite.TestSuiteGenerator.compileAndCheckTests(TestSuiteGenerator.java:571)
org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:516)
org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:215)
org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$0(ClientNodeImpl.java:150)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)

[MASTER] 20:50:16.882 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:17.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:17.107 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 20:50:17.183 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0-opt-100/tests/4
* Done!

* Computation finished
