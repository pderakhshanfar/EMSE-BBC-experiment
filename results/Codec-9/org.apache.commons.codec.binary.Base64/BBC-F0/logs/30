* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 9209
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 1658371578
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 302s and 111 generations, 69582 statements, best individual has fitness: 86.0
* Minimizing test suite
[MASTER] 03:49:56.720 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 185
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 787
* Number of covered goals: 759
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 80
* Number of covered goals: 71
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 193
* Number of covered goals: 173
* Generated 91 tests with total length 1410
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:50:58.135 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 03:51:33.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 03:51:33.126 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte) (-3);
byte[] byteArray1 = Base64.CHUNK_SEPARATOR;
Base64 base64_0 = new Base64();
Base64.decodeInteger(byteArray1);
base64_0.avail();
Base64.encodeBase64String(byteArray1);
boolean boolean0 = Base64.isBase64(byteArray1);
assertFalse(boolean0);

Base64 base64_1 = new Base64(true);
byte[] byteArray2 = Base64.encodeBase64Chunked(byteArray0);
assertEquals(6, byteArray2.length);
assertArrayEquals(new byte[] {(byte)47, (byte)81, (byte)61, (byte)61, (byte) (-109), (byte)46}, byteArray2);

Base64 base64_2 = new Base64(76, byteArray1);
base64_0.isUrlSafe();
boolean boolean1 = Base64.isBase64((byte) (-3));
assertTrue(boolean1 == boolean0);


[MASTER] 03:51:33.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<-109> but was:<13>
[MASTER] 03:51:33.258 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
boolean boolean0 = Base64.isBase64(byteArray0);
Base64 base64_0 = new Base64(false);
Base64 base64_1 = new Base64(false);
byte[] byteArray1 = base64_1.encode(byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte) (-109), (byte)46}, byteArray1);

Base64 base64_2 = new Base64((-2299), byteArray0);
boolean boolean1 = base64_2.isUrlSafe();
assertFalse(boolean1);

boolean boolean2 = Base64.isBase64((byte)61);
assertFalse(boolean2 == boolean0);

byte[] byteArray2 = Base64.discardWhitespace(byteArray0);
assertEquals(3, byteArray2.length);


[MASTER] 03:51:36.933 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<-84> but was:<13>
[MASTER] 03:51:36.933 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();
byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)9;
byteArray0[1] = (byte)51;
byteArray0[2] = (byte) (-1);
byteArray0[3] = (byte)81;
byteArray0[4] = (byte)20;
byteArray0[5] = (byte)110;
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
assertEquals(10, byteArray1.length);
assertArrayEquals(new byte[] {(byte)67, (byte)84, (byte)80, (byte)47, (byte)85, (byte)82, (byte)82, (byte)117, (byte) (-84), (byte)7}, byteArray1);

boolean boolean0 = Base64.isBase64(byteArray0);
assertFalse(boolean0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0/tests/30
* Done!

* Computation finished
