* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 11947
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 2705258553
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 303s and 111 generations, 61110 statements, best individual has fitness: 105.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 216
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 193
* Number of covered goals: 181
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 787
* Number of covered goals: 747
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 193
* Number of covered goals: 170
* Generated 99 tests with total length 257
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
[MASTER] 03:43:05.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [3]; expected:<0> but was:<13>
[MASTER] 03:43:05.026 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, 77);
assertEquals(5, byteArray1.length);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)0, (byte)10}, byteArray1);


[MASTER] 03:43:07.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 03:43:07.200 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
boolean boolean0 = Base64.isBase64(byteArray0);
assertFalse(boolean0);


[MASTER] 03:43:08.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<26> but was:<24>
[MASTER] 03:43:08.466 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[16];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
byte[] byteArray2 = Base64.discardWhitespace(byteArray1);
assertEquals(26, byteArray2.length);


[MASTER] 03:43:10.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 03:43:10.265 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
BigInteger bigInteger0 = new BigInteger(byteArray0);
byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);
assertEquals(0, byteArray1.length);


[MASTER] 03:43:11.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 03:43:11.349 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
Base64 base64_0 = new Base64((byte)109);
base64_0.decode(byteArray1, 1, 98);
base64_0.decode(byteArray1, 77, 77);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertEquals(6, byteArray1.length);


[MASTER] 03:43:15.097 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 03:43:15.097 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
Base64 base64_0 = new Base64((byte)109);
base64_0.decode(byteArray1, 1, 98);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);

int int0 = base64_0.avail();
assertEquals(1, int0);


[MASTER] 03:43:19.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 03:43:19.229 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
Base64 base64_0 = new Base64();
base64_0.decode(byteArray1, 1, (int) (byte)109);
int int0 = base64_0.readResults(byteArray1, 1, 1);
assertArrayEquals(new byte[] {(byte)65, (byte)0, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertEquals(1, int0);


[MASTER] 03:43:19.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<...RHVnZjbUZUZEhKcGJtY0[FBQT]09> but was:<...RHVnZjbUZUZEhKcGJtY0[5DZz]09>
[MASTER] 03:43:19.697 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, 1967);
byte[] byteArray2 = Base64.encodeBase64(byteArray1);
String string0 = Base64.encodeBase64String(byteArray2);
assertEquals("VUdGeVlXMWxkR1Z5YzNWd2NHeHBaV1IwYjBKaGMyVTJOR1JsWTI5a1pXbHpibTkwWVdKNWRHVnZjbUZUZEhKcGJtY0FBQT09", string0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0/tests/12
* Done!

* Computation finished
