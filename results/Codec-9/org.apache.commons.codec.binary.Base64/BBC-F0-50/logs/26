* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 13948
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 2437842204
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 419 / 1539
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 67 LOOKUPSWITCH L874 Case 9 - true: 358
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I30 Branch 16 IF_ICMPGE L445 - false: 1658
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I180 Branch 44 IFNULL L562 - true: 8384
Number of times BBC is called for org.apache.commons.codec.binary.Base64.resizeBuffer()V: I4 Branch 9 IFNONNULL L383 - true: 7749
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I224 Branch 24 IF_ICMPEQ L472 - true: 397
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I38 Branch 36 IF_ICMPGE L534 - false: 1993
Number of times BBC is called for org.apache.commons.codec.binary.Base64.readResults([BII)I: I36 Branch 11 IF_ICMPLT L411 - true: 16278
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I73 Branch 83 IFNE L981 - true: 4066
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: I3 Branch 84 IFNONNULL L1012 - false: 58
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 49 IF_ICMPEQ L593 - true: 1
Number of times BBC is called for org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: I7 Branch 1 IFNONNULL L333 - false: 145
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 68 LOOKUPSWITCH L874 Case 10 - true: 28
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I189 Branch 45 IF_ICMPGE L562 - false: 2037
Number of times BBC is called for org.apache.commons.codec.binary.Base64.hasData()Z: I4 Branch 7 IFNULL L369 - false: 2
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 58 IFEQ L733 - false: 69
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 73 LOOKUPSWITCH L897 Case 10 - true: 1
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 69 LOOKUPSWITCH L874 Case 13 - true: 28
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 70 LOOKUPSWITCH L874 Case 32 - true: 137
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I50 Branch 82 IFNE L979 - false: 1988
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 72 LOOKUPSWITCH L897 Case 9 - true: 2561
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 87 IFNE L1039 - true: 4433
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I272 Branch 27 IF_ICMPGE L478 - false: 512
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([B)[B: I10 Branch 79 IFNE L948 - false: 7
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 71 LOOKUPSWITCH L874 Default-Case - false: 32
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([B)[B: I7 Branch 78 IFNULL L948 - true: 863
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 6 IF_ACMPNE L360 - false: 59
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I41 Branch 81 IFLE L978 - true: 13064
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I419 Branch 31 IF_ICMPGT L493 - false: 37
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 86 IF_ICMPNE L1031 - true: 8693
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 74 LOOKUPSWITCH L897 Case 13 - true: 1
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 77 IFNE L921 - true: 19
Number of times BBC is called in total: 75658
* Search finished after 606s and 266 generations, 136260 statements, best individual has fitness: 89.0
* Minimizing test suite
[MASTER] 21:16:09.613 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 193
* Number of covered goals: 184
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 787
* Number of covered goals: 759
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 193
* Number of covered goals: 180
* Generated 108 tests with total length 1641
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
[MASTER] 21:17:12.271 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 21:17:44.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<-76> but was:<13>
[MASTER] 21:17:44.685 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)43;
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
assertArrayEquals(new byte[] {(byte)75, (byte)119, (byte)61, (byte)61, (byte) (-76), (byte) (-54)}, byteArray1);

Base64 base64_0 = new Base64(false);
base64_0.readResults(byteArray0, (byte)43, 1739);
byte[] byteArray2 = Base64.encodeBase64(byteArray0, false, false);
assertEquals(4, byteArray2.length);

byte[] byteArray3 = new byte[5];
byteArray3[0] = (byte)43;
byteArray3[1] = (byte)43;
byteArray3[2] = (byte)43;
byteArray3[3] = (byte) (-70);
byteArray3[4] = (byte)43;
BigInteger bigInteger0 = Base64.decodeInteger(byteArray3);
assertEquals((short) (-4162), bigInteger0.shortValue());


[MASTER] 21:17:52.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<31> but was:<13>
[MASTER] 21:17:52.916 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, true, 6);
BigInteger bigInteger0 = BigInteger.TEN;
byte[] byteArray2 = new byte[9];
byteArray2[0] = (byte) (-10);
byteArray2[1] = (byte) (-10);
byteArray2[2] = (byte) (-10);
byteArray2[3] = (byte) (-10);
byteArray2[4] = (byte) (-10);
byteArray2[5] = (byte) (-10);
byteArray2[6] = (byte) (-10);
byteArray2[7] = (byte) (-10);
byteArray2[8] = (byte) (-10);
boolean boolean0 = Base64.isBase64(byteArray2);
assertFalse(boolean0);

Base64 base64_0 = new Base64(false);
byte[] byteArray3 = base64_0.decode(byteArray1);
assertArrayEquals(new byte[] {(byte)31, (byte)62}, byteArray3);
assertEquals(3, byteArray1.length);


[MASTER] 21:17:53.194 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<2> but was:<10>
[MASTER] 21:17:53.194 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
BigInteger bigInteger0 = Base64.decodeInteger(byteArray1);
BigInteger bigInteger1 = bigInteger0.pow(1773);
byte[] byteArray2 = Base64.CHUNK_SEPARATOR;
byte[] byteArray3 = Base64.encodeInteger(bigInteger1);
Base64 base64_0 = new Base64(false);
base64_0.decode(byteArray3, 1773, 4);
assertEquals((byte)2, bigInteger0.byteValue());
assertEquals(4612, byteArray3.length);
assertArrayEquals(new byte[] {(byte)119, (byte)103, (byte)73, (byte)61, (byte) (-62), (byte)2}, byteArray1);


[MASTER] 21:17:54.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<180> but was:<152>
[MASTER] 21:17:54.199 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
BigInteger bigInteger0 = new BigInteger(byteArray0);
BigInteger bigInteger1 = bigInteger0.pow((byte)76);
byte[] byteArray1 = Base64.encodeInteger(bigInteger1);
Base64 base64_0 = new Base64(false);
Base64 base64_1 = new Base64();
BigInteger bigInteger2 = Base64.decodeInteger(byteArray1);
assertTrue(bigInteger2.equals((Object)bigInteger1));
assertEquals(180, byteArray1.length);

byte[] byteArray2 = base64_0.encode(byteArray0);
byte[] byteArray3 = base64_0.decode(byteArray2);
assertArrayEquals(new byte[] {(byte)119, (byte)103, (byte)73, (byte)61, (byte) (-62), (byte)2}, byteArray2);
assertNotSame(byteArray2, byteArray3);


[MASTER] 21:18:09.890 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0-50/tests/26
* Done!

* Computation finished
