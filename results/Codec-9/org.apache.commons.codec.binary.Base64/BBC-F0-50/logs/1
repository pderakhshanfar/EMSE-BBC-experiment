* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 18130
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 1867345384
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 419 / 1539
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 67 LOOKUPSWITCH L874 Case 9 - true: 1384
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I30 Branch 16 IF_ICMPGE L445 - false: 4057
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I180 Branch 44 IFNULL L562 - true: 19493
Number of times BBC is called for org.apache.commons.codec.binary.Base64.resizeBuffer()V: I4 Branch 9 IFNONNULL L383 - true: 24975
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I224 Branch 24 IF_ICMPEQ L472 - true: 276
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I38 Branch 36 IF_ICMPGE L534 - false: 5021
Number of times BBC is called for org.apache.commons.codec.binary.Base64.readResults([BII)I: I36 Branch 11 IF_ICMPLT L411 - true: 28569
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I73 Branch 83 IFNE L981 - true: 16205
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encodeInteger(Ljava/math/BigInteger;)[B: I3 Branch 84 IFNONNULL L1012 - false: 116
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I215 Branch 23 IFLE L472 - true: 3
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 68 LOOKUPSWITCH L874 Case 10 - true: 19
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I189 Branch 45 IF_ICMPGE L562 - false: 4991
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I21 Branch 15 IFNULL L445 - true: 28
Number of times BBC is called for org.apache.commons.codec.binary.Base64.hasData()Z: I4 Branch 7 IFNULL L369 - false: 80
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 73 LOOKUPSWITCH L897 Case 10 - true: 18
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 69 LOOKUPSWITCH L874 Case 13 - true: 4
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 70 LOOKUPSWITCH L874 Case 32 - true: 49
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 72 LOOKUPSWITCH L897 Case 9 - true: 257
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I50 Branch 82 IFNE L979 - false: 5783
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I272 Branch 27 IF_ICMPGE L478 - false: 2145
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 87 IFNE L1039 - true: 8525
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 71 LOOKUPSWITCH L874 Default-Case - false: 18
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([B)[B: I7 Branch 78 IFNULL L948 - true: 30
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 6 IF_ACMPNE L360 - false: 6
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I41 Branch 81 IFLE L978 - true: 33603
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I419 Branch 31 IF_ICMPGT L493 - false: 84
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 74 LOOKUPSWITCH L897 Case 13 - true: 18
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 86 IF_ICMPNE L1031 - true: 23012
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 77 IFNE L921 - true: 14
Number of times BBC is called in total: 178783
* Search finished after 602s and 654 generations, 336188 statements, best individual has fitness: 73.0
* Minimizing test suite
[MASTER] 21:15:01.698 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 186
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 787
* Number of covered goals: 760
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 193
* Number of covered goals: 184
* Generated 93 tests with total length 1459
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:15:43.085 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6677166666666666% of time used, but only 23/93 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 21:16:05.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:05.393 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byte byte0 = (byte) (-117);
byteArray0[0] = (byte) (-117);
byte byte1 = (byte) (-4);
byteArray0[1] = (byte) (-4);
byte byte2 = (byte)61;
byteArray0[2] = (byte)61;
byte byte3 = (byte) (-61);
byteArray0[3] = (byte) (-61);
Base64.decodeInteger(byteArray0);

[MASTER] 21:16:05.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:05.813 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:06.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:06.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)3;
byteArray0[1] = (byte) (-118);
byteArray0[2] = (byte)82;
byteArray0[3] = (byte) (-21);
byteArray0[4] = (byte)0;
byteArray0[5] = (byte) (-41);
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertEquals(6, byteArray1.length);

Base64.decodeBase64(byteArray0);

[MASTER] 21:16:06.172 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:06.172 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte)37;
byteArray0[1] = (byte)125;
byteArray0[2] = (byte)67;
byteArray0[3] = (byte)87;
byteArray0[4] = (byte)51;
byteArray0[5] = (byte)0;
byteArray0[6] = (byte)105;
byteArray0[7] = (byte)75;
Base64.encodeBase64String(byteArray0);

[MASTER] 21:16:06.331 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:06.331 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64((byte)0);
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)0;
byteArray0[3] = (byte)0;
byteArray0[4] = (byte)0;
byteArray0[5] = (byte)0;
byteArray0[6] = (byte)0;
byteArray0[7] = (byte)0;
byteArray0[8] = (byte)0;
Base64.encodeBase64URLSafeString(byteArray0);

[MASTER] 21:16:06.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:06.548 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte byte0 = (byte)0;
byteArray0[0] = (byte)0;
byte byte1 = (byte) (-22);
byteArray0[1] = (byte) (-22);
Base64 base64_0 = new Base64(0, byteArray0);
Base64.encodeBase64(byteArray0);

[MASTER] 21:16:06.726 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:06.726 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:07.049 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:07.049 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BigInteger bigInteger0 = BigInteger.ONE;
byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
Base64 base64_0 = new Base64(0, byteArray0, true);
BigInteger bigInteger1 = BigInteger.TEN;
BigInteger bigInteger2 = bigInteger1.flipBit(64);
bigInteger1.andNot(bigInteger0);
bigInteger0.modInverse(bigInteger2);
base64_0.decode(byteArray0);
assertTrue(base64_0.isUrlSafe());

BigInteger bigInteger3 = bigInteger0.divide(bigInteger1);
base64_0.encode(byteArray0);
bigInteger1.abs();
Base64.isBase64("");
byte[] byteArray1 = Base64.encodeInteger(bigInteger3);
assertEquals(0, byteArray1.length);

Base64.encodeBase64String(byteArray0);

[MASTER] 21:16:08.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:08.109 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)0;
byteArray0[2] = (byte) (-117);
byteArray0[3] = (byte)23;
Base64.decodeBase64(byteArray0);

[MASTER] 21:16:08.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:08.454 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 796;
byte[] byteArray0 = new byte[5];
byte byte0 = (byte) (-22);
byteArray0[0] = (byte) (-22);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)2;
byteArray0[3] = (byte)0;
byte byte1 = (byte)1;
byteArray0[4] = (byte)1;
boolean boolean0 = true;
Base64 base64_0 = new Base64(796, byteArray0, true);
Base64.encodeBase64String(byteArray0);

[MASTER] 21:16:09.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:09.327 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(1);

[MASTER] 21:16:09.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:09.899 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();

[MASTER] 21:16:10.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:10.212 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64((byte) (-30));
Base64 base64_0 = new Base64((-157));

[MASTER] 21:16:10.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:10.357 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64((byte)98);
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)98;
byteArray0[1] = (byte)95;
byteArray0[2] = (byte)98;
byteArray0[3] = (byte)98;
byteArray0[4] = (byte)1;
byteArray0[5] = (byte)0;
byteArray0[6] = (byte)98;
byteArray0[7] = (byte)98;
byteArray0[8] = (byte)98;
Base64.encodeBase64URLSafeString(byteArray0);

[MASTER] 21:16:10.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:10.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64("Parameter supplied to Base64 decode is not a byte[] or a String");
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte) (-77);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte) (-1);
byteArray0[3] = (byte) (-30);
byteArray0[4] = (byte)0;
byteArray0[5] = (byte)0;
byteArray0[6] = (byte)60;
byteArray0[7] = (byte)83;
Base64.encodeBase64URLSafeString(byteArray0);

[MASTER] 21:16:10.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:10.670 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Q,sE6Q&");

[MASTER] 21:16:10.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:10.781 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = null;
Base64.encodeBase64((byte[]) null);
Base64 base64_0 = new Base64();

[MASTER] 21:16:11.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:11.067 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[0];
Base64.decodeBase64(byteArray0);

[MASTER] 21:16:11.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:11.193 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64((-5), (byte[]) null);

[MASTER] 21:16:11.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:11.304 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte) (-125);
byteArray0[1] = (byte) (-1);
byteArray0[2] = (byte)110;
byteArray0[3] = (byte)0;
Base64.encodeBase64(byteArray0, false);

[MASTER] 21:16:11.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:11.744 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)61;
byteArray0[2] = (byte)111;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertNotNull(byteArray1);
assertEquals(3, byteArray0.length);
assertEquals(3, byteArray1.length);
assertFalse(byteArray1.equals((Object)byteArray0));
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray1);

boolean boolean0 = Base64.isBase64(byteArray0);
assertEquals(3, byteArray0.length);
assertFalse(boolean0);
assertFalse(byteArray0.equals((Object)byteArray1));
assertNotSame(byteArray0, byteArray1);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray0);

BigInteger bigInteger0 = BigInteger.TEN;
assertEquals((short)10, bigInteger0.shortValue());
assertEquals((byte)10, bigInteger0.byteValue());
assertNotNull(bigInteger0);

float float0 = bigInteger0.floatValue();
assertEquals((short)10, bigInteger0.shortValue());
assertEquals((byte)10, bigInteger0.byteValue());
assertEquals(10.0F, float0, 0.01F);

Base64.decodeInteger(byteArray0);

[MASTER] 21:16:11.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:11.892 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte)98;
byte byte0 = (byte) (-99);
byteArray0[1] = (byte) (-99);
byteArray0[2] = (byte)12;
byteArray0[3] = (byte)36;
byteArray0[4] = (byte) (-18);
Base64.encodeBase64(byteArray0, false);

[MASTER] 21:16:12.002 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.002 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();

[MASTER] 21:16:12.094 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.095 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[6];
byteArray0[0] = (byte)7;
byteArray0[1] = (byte)95;
byteArray0[2] = (byte)63;
byteArray0[3] = (byte)99;
byteArray0[4] = (byte)1;
byteArray0[5] = (byte)120;
Base64.decodeInteger(byteArray0);

[MASTER] 21:16:12.209 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.210 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)30;
Base64.encodeBase64(byteArray0);

[MASTER] 21:16:12.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.350 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(false);

[MASTER] 21:16:12.410 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.411 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("");

[MASTER] 21:16:12.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.526 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64((-5), (byte[]) null);

[MASTER] 21:16:12.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.672 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:12.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:12.926 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte byte0 = (byte)1;
byte[] byteArray0 = null;
Base64 base64_0 = new Base64(26, (byte[]) null, true);

[MASTER] 21:16:13.063 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.063 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(false);

[MASTER] 21:16:13.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.198 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64((-5), (byte[]) null);

[MASTER] 21:16:13.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.381 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte) (-22);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)2;
byteArray0[3] = (byte)0;
byteArray0[4] = (byte)1;
Base64 base64_0 = new Base64(796, byteArray0, true);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(5, byteArray0.length);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertArrayEquals(new byte[] {(byte) (-22), (byte)0, (byte)2, (byte)0, (byte)1}, byteArray0);

base64_0.encode(byteArray0, (-166), (-125));
assertTrue(base64_0.isUrlSafe());
assertEquals(5, byteArray0.length);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertArrayEquals(new byte[] {(byte) (-22), (byte)0, (byte)2, (byte)0, (byte)1}, byteArray0);

Base64.decodeBase64("");

[MASTER] 21:16:13.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.479 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();

[MASTER] 21:16:13.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.583 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[5];
byteArray0[0] = (byte) (-22);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)2;
byteArray0[3] = (byte)0;
byteArray0[4] = (byte)1;
Base64 base64_0 = new Base64(796, byteArray0, true);
assertTrue(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(5, byteArray0.length);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertArrayEquals(new byte[] {(byte) (-22), (byte)0, (byte)2, (byte)0, (byte)1}, byteArray0);

base64_0.encode(byteArray0, (-166), (-125));
assertTrue(base64_0.isUrlSafe());
assertEquals(5, byteArray0.length);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertArrayEquals(new byte[] {(byte) (-22), (byte)0, (byte)2, (byte)0, (byte)1}, byteArray0);

Base64.decodeBase64("");

[MASTER] 21:16:13.742 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<-116> but was:<13>
[MASTER] 21:16:13.742 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)122;
byteArray0[2] = (byte)98;
byte[] byteArray1 = Base64.CHUNK_SEPARATOR;
assertNotNull(byteArray1);
assertEquals(2, byteArray1.length);
assertFalse(byteArray1.equals((Object)byteArray0));
assertNotSame(byteArray1, byteArray0);
assertArrayEquals(new byte[] {(byte) (-116), (byte)47}, byteArray1);

Base64 base64_0 = new Base64(1439, byteArray1, true);

[MASTER] 21:16:13.831 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:13.831 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:14.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.181 [logback-1] WARN  JUnitAnalyzer - Failing test:
 boolean boolean0 = Base64.isBase64("Parameter supplied to Base64 decode is not a byte[] or a String");
assertFalse(boolean0);

byte[] byteArray0 = new byte[8];
Base64 base64_0 = new Base64((byte)110);

[MASTER] 21:16:14.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.342 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:14.458 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.458 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)61;
byteArray0[2] = (byte)111;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertNotNull(byteArray1);
assertEquals(3, byteArray0.length);
assertEquals(3, byteArray1.length);
assertFalse(byteArray1.equals((Object)byteArray0));
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray0);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray1);

boolean boolean0 = Base64.isBase64(byteArray0);
assertEquals(3, byteArray0.length);
assertFalse(boolean0);
assertFalse(byteArray0.equals((Object)byteArray1));
assertNotSame(byteArray0, byteArray1);
assertArrayEquals(new byte[] {(byte)0, (byte)61, (byte)111}, byteArray0);

BigInteger bigInteger0 = BigInteger.TEN;
assertEquals((byte)10, bigInteger0.byteValue());
assertEquals((short)10, bigInteger0.shortValue());
assertNotNull(bigInteger0);

float float0 = bigInteger0.floatValue();
assertEquals((byte)10, bigInteger0.byteValue());
assertEquals((short)10, bigInteger0.shortValue());
assertEquals(10.0F, float0, 0.01F);

Base64.decodeInteger(byteArray0);

[MASTER] 21:16:14.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.626 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte)61;
boolean boolean0 = Base64.isBase64((byte)61);
assertTrue(boolean0);

Base64 base64_0 = new Base64(true);

[MASTER] 21:16:14.730 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.731 [logback-1] WARN  JUnitAnalyzer - Failing test:
 boolean boolean0 = Base64.isBase64((byte)98);
assertTrue(boolean0);

Base64 base64_0 = new Base64((byte)98, (byte[]) null);

[MASTER] 21:16:14.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.869 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BigInteger bigInteger0 = BigInteger.TEN;
assertEquals((short)10, bigInteger0.shortValue());
assertEquals((byte)10, bigInteger0.byteValue());
assertNotNull(bigInteger0);

Base64 base64_0 = new Base64(false);

[MASTER] 21:16:14.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:14.987 [logback-1] WARN  JUnitAnalyzer - Failing test:
 boolean boolean0 = Base64.isBase64((byte) (-1));
assertFalse(boolean0);

Base64 base64_0 = new Base64(74, (byte[]) null);

[MASTER] 21:16:15.089 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:15.089 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();

[MASTER] 21:16:15.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:15.384 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("&.");

[MASTER] 21:16:15.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:15.671 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte) (-22);
Base64 base64_0 = new Base64(0, byteArray0);
assertFalse(base64_0.isUrlSafe());
assertNotNull(base64_0);
assertEquals(2, byteArray0.length);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertArrayEquals(new byte[] {(byte)0, (byte) (-22)}, byteArray0);

Base64.encodeBase64(byteArray0);

[MASTER] 21:16:15.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:15.813 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)13;
byteArray0[1] = (byte) (-108);
byteArray0[2] = (byte)6;
byteArray0[3] = (byte)16;
boolean boolean0 = Base64.isBase64(byteArray0);
assertEquals(4, byteArray0.length);
assertFalse(boolean0);
assertArrayEquals(new byte[] {(byte)13, (byte) (-108), (byte)6, (byte)16}, byteArray0);

Base64 base64_0 = new Base64(false);

[MASTER] 21:16:15.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:15.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:16.023 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.023 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:16.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.126 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte byte0 = (byte)98;
boolean boolean0 = true;
Base64 base64_0 = new Base64(true);

[MASTER] 21:16:16.258 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.258 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64((-5), (byte[]) null);

[MASTER] 21:16:16.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.482 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = null;
Base64 base64_0 = new Base64((-5), (byte[]) null);

[MASTER] 21:16:16.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.591 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:16.886 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:16.886 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte byte0 = (byte)98;
boolean boolean0 = true;
Base64 base64_0 = new Base64(true);

[MASTER] 21:16:17.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:17.055 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)5;
byteArray0[1] = (byte)124;
byteArray0[2] = (byte) (-70);
Base64.decodeInteger(byteArray0);

[MASTER] 21:16:17.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:17.207 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(0, (byte[]) null);

[MASTER] 21:16:17.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:17.282 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:17.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:17.434 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte byte0 = (byte)1;
byte[] byteArray0 = null;
Base64 base64_0 = new Base64(26, (byte[]) null, true);

[MASTER] 21:16:18.764 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:18.764 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:19.023 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:19.023 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("e^i^Cbr2");

[MASTER] 21:16:19.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:19.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:19.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:19.611 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(true);

[MASTER] 21:16:19.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:19.750 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:19.890 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:19.891 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:20.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:20.042 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BigInteger bigInteger0 = BigInteger.ZERO;
assertEquals((short)0, bigInteger0.shortValue());
assertEquals((byte)0, bigInteger0.byteValue());
assertNotNull(bigInteger0);

byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte)9;
byteArray0[1] = (byte) (-121);
byteArray0[2] = (byte)116;
byteArray0[3] = (byte)25;
byteArray0[4] = (byte)63;
byteArray0[5] = (byte)32;
byteArray0[6] = (byte) (-64);
Base64.encodeBase64(byteArray0, false, false);

[MASTER] 21:16:20.178 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:20.179 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "Parameter supplied to Base64 decode is not a byte[] or a String";
Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:20.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:20.455 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byteArray0[0] = (byte)0;
byteArray0[1] = (byte) (-127);
byteArray0[2] = (byte)33;
byteArray0[3] = (byte)96;
BigInteger bigInteger0 = new BigInteger(byteArray0);
assertEquals((byte)96, bigInteger0.byteValue());
assertEquals((short)8544, bigInteger0.shortValue());
assertNotNull(bigInteger0);
assertEquals(4, byteArray0.length);
assertArrayEquals(new byte[] {(byte)0, (byte) (-127), (byte)33, (byte)96}, byteArray0);

Base64.encodeInteger(bigInteger0);

[MASTER] 21:16:20.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<-116> but was:<13>
[MASTER] 21:16:20.703 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
assertNotNull(byteArray0);
assertEquals(2, byteArray0.length);
assertArrayEquals(new byte[] {(byte) (-116), (byte)47}, byteArray0);

Base64.encodeBase64(byteArray0, true);

[MASTER] 21:16:20.875 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:20.875 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("80m)TQ(*XJH");

[MASTER] 21:16:20.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:20.975 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");

[MASTER] 21:16:21.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:21.177 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byteArray0[0] = (byte)30;
Base64.encodeBase64(byteArray0);

[MASTER] 21:16:21.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:21.342 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[9];
boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
assertEquals(9, byteArray0.length);
assertFalse(boolean0);
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);

Base64 base64_0 = new Base64(false);

[MASTER] 21:16:21.468 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:21.469 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64();

[MASTER] 21:16:21.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:21.582 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
Base64 base64_0 = new Base64(true);

[MASTER] 21:16:21.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:21.815 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte)124;
byteArray0[1] = (byte) (-34);
byteArray0[2] = (byte) (-7);
byteArray0[3] = (byte)102;
byteArray0[4] = (byte)0;
byteArray0[5] = (byte)20;
byteArray0[6] = (byte)12;
byteArray0[7] = (byte) (-29);
Base64.encodeBase64(byteArray0, false);

[MASTER] 21:16:22.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:22.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(483, mockRandom0);
assertEquals((short)15, bigInteger0.shortValue());
assertEquals((byte)15, bigInteger0.byteValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

[MASTER] 21:16:22.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:22.119 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(483, mockRandom0);
assertEquals((byte)15, bigInteger0.byteValue());
assertEquals((short)15, bigInteger0.shortValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

[MASTER] 21:16:29.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:29.294 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(7700, mockRandom0);
assertEquals((byte)0, bigInteger0.byteValue());
assertEquals((short)0, bigInteger0.shortValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

[MASTER] 21:16:29.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:29.482 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(7700, mockRandom0);
assertEquals((byte)0, bigInteger0.byteValue());
assertEquals((short)0, bigInteger0.shortValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

[MASTER] 21:16:29.599 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:29.599 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BigInteger bigInteger0 = BigInteger.ZERO;
assertEquals((short)0, bigInteger0.shortValue());
assertEquals((byte)0, bigInteger0.byteValue());
assertNotNull(bigInteger0);

Base64 base64_0 = new Base64(true);

[MASTER] 21:16:29.680 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:29.681 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(7700, mockRandom0);
assertEquals((short)0, bigInteger0.shortValue());
assertEquals((byte)0, bigInteger0.byteValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing tests to file
[MASTER] 21:16:29.781 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 21:16:29.781 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockRandom mockRandom0 = new MockRandom();
assertNotNull(mockRandom0);

BigInteger bigInteger0 = new BigInteger(7700, mockRandom0);
assertEquals((short)0, bigInteger0.shortValue());
assertEquals((byte)0, bigInteger0.byteValue());
assertNotNull(bigInteger0);

Base64.encodeInteger(bigInteger0);

* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0-50/tests/1
* Done!

* Computation finished
