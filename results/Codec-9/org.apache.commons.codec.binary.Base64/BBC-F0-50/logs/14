* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 6626
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 488501691
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 419 / 1539
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 75 LOOKUPSWITCH L897 Case 32 - true: 26
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 67 LOOKUPSWITCH L874 Case 9 - true: 548
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I30 Branch 16 IF_ICMPGE L445 - false: 693
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I180 Branch 44 IFNULL L562 - true: 3058
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 76 LOOKUPSWITCH L897 Default-Case - false: 12
Number of times BBC is called for org.apache.commons.codec.binary.Base64.resizeBuffer()V: I4 Branch 9 IFNONNULL L383 - true: 9638
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I38 Branch 36 IF_ICMPGE L534 - false: 709
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I224 Branch 24 IF_ICMPEQ L472 - true: 84
Number of times BBC is called for org.apache.commons.codec.binary.Base64.readResults([BII)I: I36 Branch 11 IF_ICMPLT L411 - true: 5896
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I73 Branch 83 IFNE L981 - true: 3336
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 87 IFNE L1039 - false: 122
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isBase64(B)Z: I4 Branch 49 IF_ICMPEQ L593 - true: 6
Number of times BBC is called for org.apache.commons.codec.binary.Base64.<init>(I[BZ)V: I7 Branch 1 IFNONNULL L333 - false: 428
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I215 Branch 23 IFLE L472 - true: 21
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 68 LOOKUPSWITCH L874 Case 10 - true: 54
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I189 Branch 45 IF_ICMPGE L562 - false: 743
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I21 Branch 15 IFNULL L445 - true: 58
Number of times BBC is called for org.apache.commons.codec.binary.Base64.hasData()Z: I4 Branch 7 IFNULL L369 - false: 71
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode([BII)V: I54 Branch 37 IF_ICMPNE L538 - false: 4
Number of times BBC is called for org.apache.commons.codec.binary.Base64.decode(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 58 IFEQ L733 - false: 368
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 73 LOOKUPSWITCH L897 Case 10 - true: 10
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 69 LOOKUPSWITCH L874 Case 13 - true: 54
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 70 LOOKUPSWITCH L874 Case 32 - true: 60
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 72 LOOKUPSWITCH L897 Case 9 - true: 614
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I50 Branch 82 IFNE L979 - false: 1529
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I272 Branch 27 IF_ICMPGE L478 - false: 801
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I56 Branch 87 IFNE L1039 - true: 1769
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I26 Branch 85 IFEQ L1031 - true: 53
Number of times BBC is called for org.apache.commons.codec.binary.Base64.discardWhitespace([B)[B: I24 Branch 71 LOOKUPSWITCH L874 Default-Case - false: 60
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isUrlSafe()Z: I5 Branch 6 IF_ACMPNE L360 - false: 38
Number of times BBC is called for org.apache.commons.codec.binary.Base64.getEncodeLength([BI[B)J: I41 Branch 81 IFLE L978 - true: 6086
Number of times BBC is called for org.apache.commons.codec.binary.Base64.encode([BII)V: I419 Branch 31 IF_ICMPGT L493 - false: 13
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isWhiteSpace(B)Z: I3 Branch 74 LOOKUPSWITCH L897 Case 13 - true: 10
Number of times BBC is called for org.apache.commons.codec.binary.Base64.toIntegerBytes(Ljava/math/BigInteger;)[B: I36 Branch 86 IF_ICMPNE L1031 - true: 3407
Number of times BBC is called for org.apache.commons.codec.binary.Base64.isBase64([B)Z: I20 Branch 55 IFNE L636 - true: 12
Number of times BBC is called in total: 40391
* Search finished after 602s and 139 generations, 75568 statements, best individual has fitness: 90.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 21:15:31.522 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 98%
* Total number of goals: 216
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 193
* Number of covered goals: 184
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 787
* Number of covered goals: 750
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 193
* Number of covered goals: 179
* Generated 110 tests with total length 1711
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:16:33.313 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 21:16:56.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<1> but was:<13>
[MASTER] 21:16:56.871 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(0);
byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte) (-1);
byteArray0[1] = (byte)0;
int int0 = base64_0.readResults(byteArray0, 40, (byte) (-1));
assertEquals(0, int0);

base64_0.avail();
Base64.decodeBase64(">]lLRD<SwV");
byte[] byteArray1 = Base64.decodeBase64("rnGZ~&.Yho");
byte[] byteArray2 = Base64.encodeBase64Chunked(byteArray1);
assertEquals(10, byteArray2.length);
assertArrayEquals(new byte[] {(byte)114, (byte)110, (byte)71, (byte)90, (byte)89, (byte)104, (byte)111, (byte)61, (byte)1, (byte)0}, byteArray2);


[MASTER] 21:16:58.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<1> but was:<13>
[MASTER] 21:16:58.633 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(false);
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-39);
base64_0.decode(byteArray0, (int) (byte) (-39), (int) (byte) (-39));
byteArray0[1] = (byte)0;
byteArray0[2] = (byte)0;
byteArray0[3] = (byte)51;
Base64.decodeBase64(byteArray0);
byteArray0[4] = (byte)0;
String string0 = Base64.encodeBase64String(byteArray0);
assertEquals("2QAAMwAAAA==", string0);

boolean boolean0 = Base64.isBase64(") than the specified maxium size of ");
assertFalse(boolean0);

byteArray0[5] = (byte) (-23);
byteArray0[6] = (byte)23;
base64_0.encode(byteArray0, (int) (byte)23, (int) (byte)0);
Base64.encodeBase64(byteArray0, false, false);
byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
assertArrayEquals(new byte[] {(byte)50, (byte)81, (byte)65, (byte)65, (byte)77, (byte)119, (byte)68, (byte)112, (byte)70, (byte)119}, byteArray1);

byte[] byteArray2 = base64_0.decode("dG$xheO0_b.");
byte[] byteArray3 = base64_0.encode(byteArray2);
assertArrayEquals(new byte[] {(byte)100, (byte)71, (byte)120, (byte)104, (byte)101, (byte)79, (byte)48, (byte)47, (byte)1, (byte)0}, byteArray3);

base64_0.decode(byteArray2);
assertEquals(6, byteArray2.length);
assertArrayEquals(new byte[] {(byte)116, (byte)108, (byte)97, (byte)120, (byte) (-19), (byte)63}, byteArray2);


[MASTER] 21:17:03.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<10> but was:<13>
[MASTER] 21:17:03.463 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64 base64_0 = new Base64(8);
base64_0.decode((Object) "UTF-8");
byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte)5;
byte[] byteArray1 = new byte[5];
byteArray1[0] = (byte)61;
byte[] byteArray2 = new byte[4];
byte[] byteArray3 = Base64.encodeBase64URLSafe(byteArray2);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65}, byteArray3);

byteArray2[0] = (byte)61;
byteArray2[1] = (byte)5;
byteArray2[2] = (byte)5;
byteArray2[3] = (byte)61;
Base64.isBase64(byteArray2);
byte[] byteArray4 = base64_0.encode(byteArray1);
assertArrayEquals(new byte[] {(byte)80, (byte)81, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)61, (byte)10, (byte)21}, byteArray4);

String string0 = Base64.encodeBase64URLSafeString(byteArray1);
assertEquals("PQAAAAA", string0);

Base64.encodeBase64(byteArray0, false, false, 64);
base64_0.decode(byteArray0, (int) (byte)61, 28);
byte[] byteArray5 = Base64.discardWhitespace(byteArray2);
assertArrayEquals(new byte[] {(byte)61, (byte)5, (byte)5, (byte)61}, byteArray5);
assertEquals(4, byteArray5.length);


[MASTER] 21:17:08.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<dT09[  dXV1  PT11  ]> but was:<dT09[
dXV1
PT11
]>
[MASTER] 21:17:08.387 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64((byte)117);
byte[] byteArray0 = new byte[9];
byteArray0[0] = (byte)117;
byteArray0[1] = (byte)61;
byteArray0[2] = (byte)61;
byteArray0[3] = (byte)117;
byteArray0[4] = (byte)117;
byteArray0[5] = (byte)117;
byteArray0[6] = (byte)61;
byteArray0[7] = (byte)61;
byteArray0[8] = (byte)117;
BigInteger bigInteger0 = new BigInteger(byteArray0);
BigInteger bigInteger1 = bigInteger0.abs();
bigInteger1.gcd(bigInteger0);
Base64.decodeBase64("");
Base64 base64_0 = new Base64(5);
byte[] byteArray1 = Base64.decodeBase64("");
Base64.isBase64(byteArray1);
String string0 = base64_0.encodeToString(byteArray0);
assertEquals("dT09\u0000\u0000dXV1\u0000\u0000PT11\u0000\u0000", string0);

boolean boolean0 = Base64.isBase64(byteArray1);
assertTrue(boolean0);

int int0 = base64_0.avail();
assertEquals(0, int0);
assertFalse(base64_0.isUrlSafe());


[MASTER] 21:17:10.410 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:17:10.410 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
assertFalse(boolean0);

byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertNotSame(byteArray1, byteArray0);

byte[] byteArray2 = Base64.encodeBase64((byte[]) null, false);
assertNull(byteArray2);

Base64 base64_0 = new Base64((-1), byteArray1, false);
assertEquals(2, byteArray1.length);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/BBC-F0-50/tests/14
* Done!

* Computation finished
