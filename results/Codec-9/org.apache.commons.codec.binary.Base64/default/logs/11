* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 15513
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 1816925691
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 305s and 65 generations, 41186 statements, best individual has fitness: 113.0
* Minimizing test suite
[MASTER] 03:42:11.381 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 216
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 193
* Number of covered goals: 180
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 787
* Number of covered goals: 746
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 80
* Number of covered goals: 71
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 193
* Number of covered goals: 166
* Generated 143 tests with total length 1479
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:43:13.071 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 42%
* Compiling and checking tests
[MASTER] 03:43:55.521 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 03:43:55.523 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.isBase64((byte)0);
Base64 base64_0 = new Base64(false);
byte[] byteArray0 = new byte[0];
byte[] byteArray1 = Base64.encodeBase64(byteArray0);
byte[] byteArray2 = new byte[3];
byteArray2[0] = (byte)0;
byteArray2[1] = (byte)0;
byteArray2[2] = (byte)0;
byte[] byteArray3 = Base64.encodeBase64(byteArray2, true, true);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)0, (byte)0}, byteArray3);

BigInteger bigInteger0 = BigInteger.ONE;
MockRandom mockRandom0 = new MockRandom();
BigInteger bigInteger1 = new BigInteger(53, 884, mockRandom0);
bigInteger1.modPow(bigInteger0, bigInteger0);
BigInteger bigInteger2 = BigInteger.TEN;
bigInteger2.floatValue();
bigInteger0.add(bigInteger2);
byte[] byteArray4 = Base64.toIntegerBytes(bigInteger1);
Base64.encodeBase64URLSafe(byteArray1);
boolean boolean0 = Base64.isBase64(byteArray4);
assertFalse(boolean0);
assertEquals(7, byteArray4.length);

Base64.isBase64((byte)0);
base64_0.encode(byteArray0);
base64_0.encode((byte[]) null);
assertFalse(base64_0.isUrlSafe());


[MASTER] 03:44:04.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: array lengths differed, expected.length=2 actual.length=0; arrays first differed at element [0]; expected:<67> but was:<end of array>
[MASTER] 03:44:04.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertArrayEquals(new byte[] {(byte)67, (byte)0}, byteArray1);
assertEquals(2, byteArray1.length);
assertNotSame(byteArray1, byteArray0);


[MASTER] 03:44:06.226 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: array lengths differed, expected.length=10 actual.length=8; arrays first differed at element [8]; expected:<0> but was:<end of array>
[MASTER] 03:44:06.227 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-8);
byteArray0[1] = (byte)0;
byteArray0[2] = (byte) (-5);
Base64 base64_0 = new Base64(0, byteArray0);
byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
BigInteger bigInteger0 = BigInteger.ZERO;
byte[] byteArray2 = Base64.encodeInteger(bigInteger0);
int int0 = base64_0.readResults(byteArray2, 8192, (byte)0);
assertEquals(0, int0);

byte[] byteArray3 = Base64.encodeBase64Chunked(byteArray1);
byte[] byteArray4 = Base64.encodeBase64(byteArray3, true, false);
byte[] byteArray5 = Base64.discardWhitespace(byteArray3);
assertArrayEquals(new byte[] {(byte)75, (byte)48, (byte)70, (byte)69, (byte)78, (byte)119, (byte)61, (byte)61, (byte)0, (byte)0}, byteArray5);

byte[] byteArray6 = Base64.toIntegerBytes(bigInteger0);
assertEquals(0, byteArray6.length);

Base64.encodeBase64(byteArray4, true, true);
assertEquals(10, byteArray3.length);
assertArrayEquals(new byte[] {(byte)75, (byte)48, (byte)70, (byte)69, (byte)78, (byte)119, (byte)61, (byte)61, (byte)0, (byte)0}, byteArray3);


[MASTER] 03:44:11.129 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/default/tests/11
* Done!

* Computation finished
