* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 12278
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 62105263
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
* Search finished after 301s and 336 generations, 228335 statements, best individual has fitness: 71.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 186
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 787
* Number of covered goals: 762
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 193
* Number of covered goals: 182
* Generated 107 tests with total length 277
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:39:57.014 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6712166666666667% of time used, but only 50/107 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 03:40:14.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ArrayIndexOutOfBoundsException: -1
[MASTER] 03:40:14.177 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
Base64 base64_0 = new Base64(1181, byteArray1);
base64_0.encode(byteArray0);

[MASTER] 03:40:16.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<34> but was:<13>
[MASTER] 03:40:16.394 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[4];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false);
Base64 base64_0 = new Base64(112, byteArray0, false);
base64_0.decode(byteArray1, (int) (byte)1, 2199);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)61, (byte)61, (byte)34, (byte)0}, byteArray1);


[MASTER] 03:40:19.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<34> but was:<13>
[MASTER] 03:40:19.759 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[0];
Base64 base64_0 = new Base64(5, byteArray0);
assertArrayEquals(new byte[] {}, byteArray0);
assertEquals(76, Base64.MIME_CHUNK_SIZE);
assertEquals(64, Base64.PEM_CHUNK_SIZE);
assertNotNull(base64_0);
assertEquals(0, byteArray0.length);
assertFalse(base64_0.isUrlSafe());

byte[] byteArray1 = Base64.CHUNK_SEPARATOR;
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)34, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertEquals(2, byteArray1.length);

base64_0.encodeToString(byteArray1);

[MASTER] 03:40:21.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<34> but was:<13>
[MASTER] 03:40:21.791 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[5];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)61, (byte)34, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertEquals(5, byteArray0.length);
assertEquals(10, byteArray1.length);


[MASTER] 03:40:22.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<34> but was:<13>
[MASTER] 03:40:22.167 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)34, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertEquals(2, byteArray0.length);
assertEquals(6, byteArray1.length);


[MASTER] 03:40:24.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [7]; expected:<34> but was:<13>
[MASTER] 03:40:24.150 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[5];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, 10);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)34, (byte)0}, byteArray1);
assertNotNull(byteArray1);
assertEquals(5, byteArray0.length);
assertEquals(9, byteArray1.length);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 8
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/default/tests/3
* Done!

* Computation finished
