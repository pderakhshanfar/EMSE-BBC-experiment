* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 19176
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 2765203580
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
[MASTER] 21:11:06.779 [logback-1] WARN  ExecutionTrace - Popping method encode([B)[B because we were looking for encode([BII)V
[MASTER] 21:11:06.780 [logback-1] WARN  ExecutionTrace - Current stack: []
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Popping method encode([B)[B because we were looking for encode([BII)V
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Current stack: [org.apache.commons.codec.binary.Base64:encode([B)[B
Branches:  78 79 31
True Distances:  1.0 0.0 0.0
False Distances:  0.0 1352.0 21.0
, org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
Branches:  62 63 64 65
True Distances:  1.0 0.0 0.0 1.0
False Distances:  0.0 1352.0 2.147483646E9 0.0
, org.apache.commons.codec.binary.Base64:encodeBase64([BZZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
Branches: 
True Distances: 
False Distances: 
, :
Branches: 
True Distances: 
False Distances: 
]
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Popping method encodeBase64([BZZI)[B because we were looking for encode([BII)V
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Current stack: [org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B
Branches:  62 63 64 65 25
True Distances:  1.0 0.0 0.0 1.0 570.0
False Distances:  0.0 1352.0 2.147483646E9 0.0 0.0
, org.apache.commons.codec.binary.Base64:encodeBase64([BZZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
Branches: 
True Distances: 
False Distances: 
, :
Branches: 
True Distances: 
False Distances: 
]
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Popping method encodeBase64([BZZ)[B because we were looking for encode([BII)V
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Current stack: [org.apache.commons.codec.binary.Base64:encodeBase64([BZZ)[B
Branches:  26 27
True Distances:  1.0 0.0
False Distances:  0.0 7117.0
, org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
Branches: 
True Distances: 
False Distances: 
, :
Branches: 
True Distances: 
False Distances: 
]
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Popping method encodeBase64([BZ)[B because we were looking for encode([BII)V
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Current stack: [org.apache.commons.codec.binary.Base64:encodeBase64([BZ)[B
Branches: 
True Distances: 
False Distances: 
, org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
Branches: 
True Distances: 
False Distances: 
, :
Branches: 
True Distances: 
False Distances: 
]
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Popping method encodeBase64Chunked([B)[B because we were looking for encode([BII)V
[MASTER] 21:13:06.763 [logback-1] WARN  ExecutionTrace - Current stack: [org.apache.commons.codec.binary.Base64:encodeBase64Chunked([B)[B
Branches: 
True Distances: 
False Distances: 
, :
Branches: 
True Distances: 
False Distances: 
]
Number of times BBC is called in total: 0
* Search finished after 602s and 402 generations, 213601 statements, best individual has fitness: 78.0
* Minimizing test suite
[MASTER] 21:15:26.043 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 186
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 787
* Number of covered goals: 760
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 193
* Number of covered goals: 181
* Generated 169 tests with total length 1443
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:16:27.402 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 21:17:12.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: array lengths differed, expected.length=2 actual.length=0; arrays first differed at element [0]; expected:<-60> but was:<end of array>
[MASTER] 21:17:12.222 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertArrayEquals(new byte[] {(byte) (-60), (byte)81}, byteArray1);
assertEquals(2, byteArray1.length);
assertNotSame(byteArray1, byteArray0);


[MASTER] 21:17:12.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ArrayIndexOutOfBoundsException: -1
[MASTER] 21:17:12.970 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
Base64 base64_0 = new Base64((-991), byteArray1, true);
base64_0.encode(byteArray0);

[MASTER] 21:17:21.471 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [8]; expected:<1> but was:<13>
[MASTER] 21:17:21.471 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Base64.decodeBase64((String) null);
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-52);
byteArray0[1] = (byte)20;
byteArray0[2] = (byte)32;
byteArray0[0] = (byte) (-101);
byteArray0[0] = (byte) (-122);
byteArray0[5] = (byte) (-24);
byteArray0[6] = (byte) (-1);
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
Base64 base64_0 = new Base64(25);
byte[] byteArray2 = base64_0.encode(byteArray1);
assertEquals(10, byteArray2.length);
assertArrayEquals(new byte[] {(byte)104, (byte)104, (byte)81, (byte)65, (byte)65, (byte)79, (byte)106, (byte)47, (byte)1, (byte)0}, byteArray2);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/default/tests/7
* Done!

* Computation finished
