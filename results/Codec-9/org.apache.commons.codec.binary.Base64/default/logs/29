* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.codec.binary.Base64
* Starting Client-0
* Connecting to master process on port 15201
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.binary.Base64
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1539
* Using seed 2000522970
* Starting evolution
* Initial Number of Goals in DynaMOSA = 419 / 1539
Number of times BBC is called in total: 0
* Search finished after 602s and 403 generations, 202303 statements, best individual has fitness: 76.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 216
* Number of covered goals: 215
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 193
* Number of covered goals: 185
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 24
* Number of covered goals: 24
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 787
* Number of covered goals: 759
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 80
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 193
* Number of covered goals: 183
* Generated 103 tests with total length 305
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:16:52.943 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6788166666666666% of time used, but only 43/103 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 21:17:26.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: array lengths differed, expected.length=1 actual.length=0; arrays first differed at element [0]; expected:<67> but was:<end of array>
[MASTER] 21:17:26.192 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
assertArrayEquals(new byte[] {(byte)67}, byteArray1);
assertEquals(1, byteArray1.length);


[MASTER] 21:17:27.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:17:27.010 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
boolean boolean0 = Base64.isBase64(byteArray0);
assertFalse(boolean0);


[MASTER] 21:17:28.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 21:17:28.428 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true);
Base64 base64_0 = new Base64(true);
base64_0.decode(byteArray1, 1, 11);
assertEquals(6, byteArray1.length);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)61, (byte)61, (byte)0, (byte)0}, byteArray1);


[MASTER] 21:17:40.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 21:17:40.958 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[2];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true);
assertNotNull(byteArray1);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertEquals(2, byteArray0.length);
assertEquals(6, byteArray1.length);

byte[] byteArray2 = Base64.decodeBase64(byteArray1);
assertNotNull(byteArray2);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray0, byteArray2);
assertNotSame(byteArray1, byteArray0);
assertNotSame(byteArray1, byteArray2);
assertNotSame(byteArray2, byteArray1);
assertNotSame(byteArray2, byteArray0);
assertFalse(byteArray0.equals((Object)byteArray1));
assertFalse(byteArray1.equals((Object)byteArray0));
assertFalse(byteArray2.equals((Object)byteArray1));
assertFalse(byteArray2.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);
assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray2);
assertEquals(2, byteArray0.length);
assertEquals(6, byteArray1.length);
assertEquals(2, byteArray2.length);


[MASTER] 21:17:43.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.internal.ArrayComparisonFailure: arrays first differed at element [4]; expected:<0> but was:<13>
[MASTER] 21:17:43.869 [logback-1] WARN  JUnitAnalyzer - Failing test:
 byte[] byteArray0 = new byte[1];
byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false, 6);
assertNotNull(byteArray1);
assertNotSame(byteArray0, byteArray1);
assertNotSame(byteArray1, byteArray0);
assertFalse(byteArray1.equals((Object)byteArray0));
assertArrayEquals(new byte[] {(byte)0}, byteArray0);
assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)61, (byte)61, (byte)0, (byte)0}, byteArray1);
assertEquals(1, byteArray0.length);
assertEquals(6, byteArray1.length);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'Base64_ESTest' to results/Codec-9/org.apache.commons.codec.binary.Base64/default/tests/29
* Done!

* Computation finished
