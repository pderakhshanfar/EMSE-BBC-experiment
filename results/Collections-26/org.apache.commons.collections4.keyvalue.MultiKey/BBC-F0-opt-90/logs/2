* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-90
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 5865
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 2220573993
* Starting evolution
bbc usage percentage is: 90%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 602s and 5407 generations, 3355186 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 21:03:09.553 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 14 tests with total length 286
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
[MASTER] 21:03:29.079 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.commons.collections4.keyvalue.MultiKey;
[MASTER] 21:03:29.084 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "");
multiKey0.toString();
multiKey0.toString();
multiKey0.size();
multiKey0.size();
Object[] objectArray0 = new Object[7];
objectArray0[0] = (Object) multiKey0;
objectArray0[1] = (Object) "MultiKey[, , , ]";
objectArray0[2] = (Object) "";
objectArray0[3] = (Object) "";
objectArray0[4] = (Object) "";
multiKey0.toString();
multiKey0.toString();
objectArray0[5] = (Object) "";
Integer integer0 = new Integer(1193);
Integer integer1 = new Integer(0);
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1);
multiKey0.toString();
Integer integer2 = multiKey1.getKey(2);
multiKey0.toString();
objectArray0[6] = (Object) integer2;
multiKey1.toString();
MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, false);
multiKey2.toString();
multiKey2.toString();
multiKey2.toString();
multiKey2.size();
multiKey0.equals("org.apache.commons.collections4.keyvalue.MultiKey");
MultiKey<MultiKey<Object>> multiKey3 = new MultiKey<MultiKey<Object>>(multiKey2, multiKey2, (MultiKey<Object>) null, multiKey2);
MultiKey<Object>[] multiKeyArray0 = multiKey3.getKeys();
assertNotSame(objectArray0, multiKeyArray0);


[MASTER] 21:03:29.163 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.207 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.252 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.291 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.372 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.401 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.428 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.463 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.524 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.552 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:29.583 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:30.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:30.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:03:30.367 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "", "");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 8);
MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[0] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>((Object) null, (Object) null);
multiKeyArray0[1] = multiKey2;
Object object0 = new Object();
Integer integer0 = new Integer(420);
MultiKey<Object> multiKey3 = new MultiKey<Object>("", (Object) null, object0, integer0);
multiKeyArray0[2] = multiKey3;
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey2, integer0, multiKey1, multiKey3);
multiKeyArray0[3] = multiKey4;
MultiKey<String> multiKey5 = new MultiKey<String>("", "", "");
Object object1 = new Object();
Integer integer1 = new Integer(0);
Integer integer2 = new Integer(1636);
MultiKey<Object> multiKey6 = new MultiKey<Object>((Object) null, multiKey5, object1, integer1, integer2);
multiKeyArray0[4] = multiKey6;
MultiKey<String> multiKey7 = new MultiKey<String>("", "", "");
MultiKey<Object> multiKey8 = new MultiKey<Object>(multiKey6, "", multiKey2, multiKey0, multiKey7);
multiKeyArray0[5] = multiKey8;
Object[] objectArray0 = new Object[6];
objectArray0[0] = (Object) "";
objectArray0[1] = (Object) integer0;
objectArray0[2] = (Object) multiKey4;
objectArray0[3] = (Object) "";
objectArray0[4] = (Object) multiKey8;
objectArray0[5] = (Object) multiKey8;
MultiKey<Object> multiKey9 = new MultiKey<Object>(objectArray0, false);
multiKeyArray0[6] = multiKey9;
MultiKey<Object> multiKey10 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[7] = multiKey10;
MultiKey<MultiKey<Object>> multiKey11 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
Object object2 = multiKey11.getKey(0);
Object object3 = new Object();
MultiKey<Object> multiKey12 = new MultiKey<Object>(object2, multiKey11, object3);
multiKey12.toString();

[MASTER] 21:03:30.483 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:30.561 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-90/tests/2
* Done!

* Computation finished
