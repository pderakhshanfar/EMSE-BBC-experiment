/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 21:03:20 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", (String) null, (String) null, "");
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object) null, multiKey0, "", (Object) null);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey1, (Object) null, (Object) null);
      Object object0 = multiKey2.getKey(0);
      multiKey1.equals(object0);
      // Undeclared exception!
      try { 
        multiKey2.getKey(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, object0, "");
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.getKeys();
      multiKey0.toString();
      multiKey0.toString();
      multiKey1.toString();
      multiKey0.size();
      multiKey1.getKeys();
      // Undeclared exception!
      try { 
        multiKey1.getKey((-306));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -306
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "Ew-am(D/7");
      Integer integer0 = new Integer((-476));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>((Integer) null, integer0);
      Integer integer1 = multiKey1.getKey(0);
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(5);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer0, integer0, integer1, (Object) null);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKey0, multiKey0, multiKey0);
      multiKey1.toString();
      Integer integer2 = new Integer(2878);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer1, integer0, integer2);
      multiKey1.toString();
      multiKey2.toString();
      Integer integer3 = new Integer(2878);
      boolean boolean0 = multiKey1.equals(integer3);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      String string0 = multiKey1.toString();
      assertEquals("MultiKey[MultiKey[0, 0, 0, 5, null], MultiKey[0, 0, 0, 5, null], MultiKey[0, 0, 0, 5, null]]", string0);
      
      stringArray0[1] = "";
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0, false);
      MultiKey<String> multiKey4 = new MultiKey<String>(stringArray0, false);
      MultiKey<Object> multiKey5 = new MultiKey<Object>(stringArray0);
      multiKey4.equals(multiKey5);
      assertFalse(multiKey5.equals((Object)multiKey0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(803);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer0);
      MultiKey<String> multiKey1 = new MultiKey<String>("", "");
      multiKey0.equals(multiKey1);
      MultiKey<String> multiKey2 = new MultiKey<String>((String) null, (String) null, "", "", "");
      // Undeclared exception!
      try { 
        multiKey1.getKey(803);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 803
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "";
      Integer integer0 = new Integer((-1673));
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, object0, object0, object0);
      MultiKey<Object> multiKey1 = null;
      try {
        multiKey1 = new MultiKey<Object>((Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiKey<Integer> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<Integer>((Integer[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1216);
      Integer integer1 = new Integer(1216);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer1, integer0);
      multiKey0.toString();
      multiKey0.toString();
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[1216, 1216, 1216, 1216]", string0);
      
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      multiKey1.size();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "MultiKey[1216, 1216, 1216, 1216]";
      stringArray0[1] = "MultiKey[1216, 1216, 1216, 1216]";
      stringArray0[2] = "MultiKey[1216, 1216, 1216, 1216]";
      stringArray0[3] = "MultiKey[1216, 1216, 1216, 1216]";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, false);
      boolean boolean0 = multiKey2.equals("MultiKey[1216, 1216, 1216, 1216]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.getKey(0);
      Integer integer0 = new Integer(2570);
      Integer integer1 = new Integer((-1));
      Integer integer2 = new Integer((-1));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1, integer2);
      int int0 = multiKey1.size();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("", "", "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.getKeys();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 3);
      multiKeyArray0[0] = multiKey0;
      multiKeyArray0[1] = multiKey0;
      multiKeyArray0[2] = multiKey0;
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKeyArray0, true);
      multiKey1.toString();
      int int0 = 157;
      // Undeclared exception!
      try { 
        multiKey1.getKey(157);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 157
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = new Integer(2);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-2327));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[1]);
      integerArray0[2] = integer2;
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0);
      multiKey1.hashCode();
      multiKey0.hashCode();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integer1, "");
      multiKey2.equals("");
      multiKey2.toString();
      multiKey2.toString();
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 4);
      multiKeyArray0[0] = multiKey0;
      multiKeyArray0[1] = multiKey0;
      multiKeyArray0[2] = multiKey0;
      multiKeyArray0[3] = multiKey0;
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKeyArray0);
      MultiKey<String> multiKey4 = multiKey3.getKey(2);
      assertSame(multiKey4, multiKey0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "G#[sjv|#]$2";
      stringArray0[1] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[2] = "MultiKey";
      stringArray0[3] = "}Cn0'2,<4_c";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.hashCode();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1, integer1, integer0);
      multiKey1.toString();
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey1.getKey((-2398));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2398
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "@Fw:\":5UZOmu(=0UUJ/";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "@Fw:\":5UZOmu(=0UUJ/", "50HyQP<L?3S%(H|2", "", "I,OnHe>mmvI1");
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 4);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "@Fw:\":5UZOmu(=0UUJ/";
      stringArray0[2] = "I,OnHe>mmvI1";
      stringArray0[3] = "@Fw:\":5UZOmu(=0UUJ/";
      stringArray0[4] = "50HyQP<L?3S%(H|2";
      stringArray0[5] = "I,OnHe>mmvI1";
      stringArray0[6] = "@Fw:\":5UZOmu(=0UUJ/";
      stringArray0[7] = "50HyQP<L?3S%(H|2";
      stringArray0[8] = "I,OnHe>mmvI1";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) stringArray0, false);
      MultiKey<String> multiKey3 = new MultiKey<String>("/J1ntM;4+Fa3X3o2[", "/J1ntM;4+Fa3X3o2[", "", "", "SCY5_fhFF");
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, multiKey2, multiKey3, "");
      MultiKey<Object> multiKey5 = new MultiKey<Object>(multiKey4, "50HyQP<L?3S%(H|2");
      multiKeyArray0[0] = multiKey5;
      MultiKey<Object> multiKey6 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
      multiKeyArray0[1] = multiKey6;
      Integer integer0 = new Integer(91);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey7 = new MultiKey<Integer>(integer0, integer0, integer1, integer1, integer2);
      MultiKey<Object> multiKey8 = new MultiKey<Object>((Object) null, multiKey7, "");
      multiKeyArray0[2] = multiKey8;
      MultiKey<Object> multiKey9 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
      multiKeyArray0[3] = multiKey9;
      MultiKey<MultiKey<Object>> multiKey10 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
      // Undeclared exception!
      try { 
        multiKey10.getKey(741);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 741
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object3, (Object) null);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object1, object1, "The array of keys must not be null", (Object) null, multiKey0);
      int int0 = 0;
      Object object4 = multiKey1.getKey(0);
      objectArray0[3] = object4;
      Object object5 = new Object();
      objectArray0[4] = object5;
      Object object6 = new Object();
      objectArray0[5] = object6;
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-4094));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(int0);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer(2);
      integerArray0[7] = integer7;
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integerArray0);
      Integer integer8 = multiKey2.getKey(0);
      objectArray0[6] = (Object) integer8;
      Object object7 = new Object();
      objectArray0[7] = object7;
      MultiKey<Object> multiKey3 = new MultiKey<Object>(objectArray0, false);
      assertFalse(multiKey3.equals((Object)multiKey0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0, (Object) null, (Object) null);
      int int0 = 1944;
      // Undeclared exception!
      try { 
        multiKey0.getKey(1944);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1944
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
