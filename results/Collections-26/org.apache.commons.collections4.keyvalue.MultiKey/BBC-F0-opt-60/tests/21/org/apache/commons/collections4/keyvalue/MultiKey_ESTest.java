/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 17:30:14 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>(",ZgCiGCm4RnG", "@?5v9", "@?5v9");
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, (Object) null);
      multiKey0.toString();
      multiKey1.getKeys();
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1);
      multiKey2.toString();
      multiKey1.toString();
      multiKey2.size();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey1.toString();
      multiKey0.equals(multiKey0);
      multiKey1.toString();
      multiKey0.equals((Object) null);
      multiKey1.size();
      // Undeclared exception!
      try { 
        multiKey0.getKey(1717);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1717
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("[90[;<pMR,y", "MultiKey", "MultiKey", "[90[;<pMR,y", "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0);
      multiKey1.toString();
      multiKey1.getKeys();
      Integer integer0 = new Integer((-1270));
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer((-1270));
      Integer integer3 = new Integer((-1270));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer1, integer2, integer3, integer1);
      MultiKey<Object> multiKey3 = new MultiKey<Object>("MultiKey[[90[;<pMR,y, MultiKey, MultiKey, [90[;<pMR,y, ]", multiKey2);
      multiKey3.toString();
      multiKey2.toString();
      // Undeclared exception!
      try { 
        multiKey3.getKey((-1161));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1161
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "", "");
      Object object0 = new Object();
      Object object1 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object1, "");
      multiKey1.getKey(0);
      Integer integer0 = new Integer(0);
      int int0 = (-66);
      Integer integer1 = new Integer((-66));
      Integer integer2 = new Integer((-130));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer1, integer0, integer0, integer2);
      MultiKey<Object> multiKey3 = null;
      try {
        multiKey3 = new MultiKey<Object>((Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("#G3K\"\"wQ<znR%|QuEs*", "", (String) null, "#G3K\"\"wQ<znR%|QuEs*");
      MultiKey<String> multiKey1 = new MultiKey<String>((String) null, "Ylx/", "Ylx/", "2 TX%(uS5##", (String) null);
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKey1, multiKey1);
      multiKey2.toString();
      int int0 = multiKey2.size();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey3 = new MultiKey<Object>(objectArray0, true);
      int int1 = multiKey3.size();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("tQX6nK`##qG('SKtb#", "");
      MultiKey<String> multiKey1 = new MultiKey<String>("_", ":{&tS?[jl'3u");
      MultiKey<String> multiKey2 = new MultiKey<String>("", "", "?r)XqMrj(*J)u'Fl", "_");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "tQX6nK`##qG('SKtb#";
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0);
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 2);
      MultiKey<String> multiKey4 = new MultiKey<String>("{gR,7hz80`Z", "'+:,k3|", ":{&tS?[jl'3u");
      assertFalse(multiKey4.equals((Object)multiKey3));
      
      multiKeyArray0[0] = multiKey4;
      multiKeyArray0[1] = multiKey0;
      MultiKey<MultiKey<String>> multiKey5 = new MultiKey<MultiKey<String>>(multiKeyArray0);
      MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKeyArray0);
      boolean boolean0 = multiKey5.equals(multiKey6);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "'i$", "V~QS8");
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object) null, (Object) null, "V~QS8", multiKey0);
      multiKey0.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.hashCode();
      multiKey1.toString();
      multiKey0.getKey(0);
      multiKey1.size();
      // Undeclared exception!
      try { 
        multiKey1.getKey(3650);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3650
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0);
      multiKey0.size();
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, multiKey0, object0);
      multiKey1.toString();
      multiKey1.getKeys();
      multiKey1.toString();
      multiKey0.size();
      multiKey1.size();
      multiKey1.toString();
      multiKey1.getKey(0);
      multiKey1.toString();
      MultiKey<MultiKey<Object>> multiKey2 = null;
      try {
        multiKey2 = new MultiKey<MultiKey<Object>>((MultiKey<Object>[]) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("(Ik", "(Ik", "(Ik");
      multiKey0.toString();
      String string0 = multiKey0.getKey(0);
      assertEquals("(Ik", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>(",ZgCiGCm4RnG", "@?5v9", "@?5v9");
      multiKey0.toString();
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, (Object) null);
      multiKey0.toString();
      multiKey1.getKeys();
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1);
      multiKey2.toString();
      multiKey1.toString();
      multiKey2.size();
      MultiKey<String> multiKey3 = new MultiKey<String>("", "(N", "MultiKey[,ZgCiGCm4RnG, @?5v9, @?5v9]");
      multiKey3.toString();
      multiKey3.toString();
      multiKey3.toString();
      multiKey1.toString();
      multiKey0.equals(multiKey3);
      multiKey1.toString();
      multiKey0.equals((Object) null);
      multiKey1.size();
      // Undeclared exception!
      try { 
        multiKey0.getKey(1717);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1717
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(3);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) integer0;
      objectArray0[4] = (Object) integer0;
      objectArray0[5] = (Object) integer0;
      objectArray0[6] = (Object) integer0;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, false);
      Object object0 = multiKey0.getKey(0);
      Object object1 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, object0, object1);
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1);
      multiKey2.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("MultiKey", "MultiKey", "MultiKey", "");
      multiKey0.toString();
      multiKey0.toString();
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer(1097);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-1676));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1676));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-84));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[1]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-288));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(0);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer((-3350));
      integerArray0[7] = integer7;
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, true);
      multiKey1.toString();
      Integer[] integerArray1 = multiKey1.getKeys();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(integerArray1);
      multiKey2.equals(integer5);
      MultiKey<Object> multiKey3 = new MultiKey<Object>(integer7, integerArray0[5], "MultiKey[1097, -1676, -1676, -84, -1676, -288, 0, -3350]", integer3);
      // Undeclared exception!
      try { 
        multiKey3.getKey(4671);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4671
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 1);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "3Is6HwSbjgm";
      stringArray0[1] = "";
      stringArray0[2] = "4$w@iqN#SjR";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKeyArray0[0] = multiKey0;
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKeyArray0, true);
      MultiKey<String>[] multiKeyArray1 = multiKey1.getKeys();
      assertNotSame(multiKeyArray1, multiKeyArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiKey<Integer>[] multiKeyArray0 = (MultiKey<Integer>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<Integer>> multiKey0 = new MultiKey<MultiKey<Integer>>(multiKeyArray0);
      multiKey0.toString();
      Object object0 = new Object();
      Object object1 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, object1);
      int int0 = 5;
      // Undeclared exception!
      try { 
        multiKey1.getKey(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<String> multiKey0 = new MultiKey<String>("V\"li615Y)H?", "EC6),O(Mh", "", "EC6),O(Mh", "V\"li615Y)H?");
      Integer integer1 = new Integer(0);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, "4vJX", multiKey0, integer1, integer1);
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(1412);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey1, integer2, integer3, (Object) null, "EC6),O(Mh");
      assertEquals(5, multiKey2.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>("", object0, "");
      multiKey0.toString();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      multiKey0.toString();
      stringArray0[1] = "MultiKey[, java.lang.Object@2b4fdcf1, ]";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0, false);
      multiKey1.toString();
      multiKey1.toString();
      int int0 = multiKey1.size();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer((-861));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[1]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integerArray0, true);
      multiKey2.toString();
      int int1 = multiKey2.size();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-906));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -906
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
