/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 21:03:53 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>(">VI$}0!BxT", "", "Dm\"e=/j):W", "Dm\"e=/j):W");
      boolean boolean0 = multiKey0.equals(multiKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("8H:M#mCS)v|nD`}Ii", "8H:M#mCS)v|nD`}Ii", "8H:M#mCS)v|nD`}Ii");
      Integer integer0 = new Integer(138);
      Integer integer1 = new Integer(138);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer1);
      multiKey1.toString();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, true);
      int int0 = multiKey2.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-228));
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      multiKey0.getKeys();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer1, integer0);
      multiKey1.toString();
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer((-228));
      Integer integer4 = new Integer(225);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer2, integer3, integer4, integer4);
      multiKey2.size();
      // Undeclared exception!
      try { 
        multiKey1.getKey((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer1);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKey0, multiKey0, (MultiKey<Object>) null, (MultiKey<Object>) null);
      multiKey1.toString();
      MultiKey<Object> multiKey2 = multiKey1.getKey(0);
      Integer integer2 = new Integer((-409));
      Integer integer3 = new Integer(0);
      Integer integer4 = new Integer(3);
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integer2, integer3, integer4);
      String string0 = multiKey3.toString();
      assertEquals("MultiKey[-409, 0, 3]", string0);
      
      multiKey3.equals(multiKey2);
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey4 = new MultiKey<Object>(objectArray0, false);
      boolean boolean0 = multiKey3.equals(multiKey4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null, (Object) null);
      multiKey0.getKey(1);
      objectArray0[0] = null;
      multiKey0.getKey(0);
      objectArray0[1] = null;
      multiKey0.getKey(1);
      objectArray0[2] = null;
      int int0 = (-214);
      Integer integer0 = new Integer((-214));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0);
      Integer integer1 = multiKey1.getKey(0);
      objectArray0[3] = (Object) integer1;
      multiKey0.getKey(0);
      objectArray0[4] = null;
      Object object0 = new Object();
      objectArray0[5] = object0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      MultiKey<String> multiKey2 = new MultiKey<String>("(NPpmxZ+", "(NPpmxZ+");
      // Undeclared exception!
      try { 
        multiKey2.getKey((-1554));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1554
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = null;
      MultiKey<String> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<String>((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null, (Object) null, (Object) null, integer0);
      Integer integer1 = new Integer(0);
      multiKey0.toString();
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer1, integer0, integer1, integer1, integer2);
      multiKey1.getKey(0);
      MultiKey<String> multiKey2 = new MultiKey<String>("T}R~4", "", "T}R~4", "", "");
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey2, multiKey2, multiKey2);
      multiKey2.toString();
      multiKey3.getKeys();
      multiKey0.size();
      multiKey1.toString();
      multiKey2.toString();
      // Undeclared exception!
      try { 
        multiKey1.getKey(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<String> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<String>((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "");
      Integer integer0 = new Integer(3834);
      Integer integer1 = new Integer((-1567));
      Integer integer2 = new Integer((-1567));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1, integer2);
      boolean boolean0 = multiKey1.equals(integer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      multiKey0.toString();
      multiKey0.toString();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        multiKey0.getKey((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer(3213);
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, integer0, integer0);
      multiKey0.toString();
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(3213);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer1, integer2);
      String string0 = multiKey1.toString();
      assertEquals("MultiKey[0, 3213]", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "MultiKey[java.lang.Object@1c5fe9cd, java.lang.Object@1c5fe9cd, 3213, 3213]";
      stringArray0[1] = "MultiKey[0, 3213]";
      stringArray0[2] = "MultiKey[java.lang.Object@1c5fe9cd, java.lang.Object@1c5fe9cd, 3213, 3213]";
      stringArray0[3] = "({At-k:GPj$>";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, true);
      boolean boolean0 = multiKey2.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = object0;
      objectArray0[3] = object0;
      objectArray0[4] = object0;
      objectArray0[5] = object0;
      objectArray0[6] = object0;
      objectArray0[7] = object0;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, false);
      multiKey0.getKey(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer1);
      // Undeclared exception!
      try { 
        multiKey1.getKey((-2712));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2712
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer[] integerArray0 = new Integer[8];
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-1));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-1));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(int0);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer(int0);
      integerArray0[7] = integer7;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0, false);
      multiKey1.hashCode();
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) integerArray0, true);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.hashCode();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-502));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -502
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SvY85*!v&EX1R";
      stringArray0[1] = "a";
      stringArray0[2] = "";
      stringArray0[3] = "aVCA[2?g/6g[h>YNd>";
      stringArray0[4] = "";
      stringArray0[5] = "8Z==FXJgUK5R6L!>";
      stringArray0[6] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      multiKey0.getKey(1);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, "a", object3);
      multiKey1.getKey(1);
      objectArray0[4] = (Object) "a";
      // Undeclared exception!
      try { 
        multiKey0.getKey((-502));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -502
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("s/MHC(w:N'|k`@t", "", "<");
      multiKey0.toString();
      Object object0 = new Object();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("<", "<", multiKey0, object0, object0);
      multiKey1.getKeys();
      int int0 = 1435;
      // Undeclared exception!
      try { 
        multiKey1.getKey(1435);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1435
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
