/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 01:53:29 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("zZJODsd5@]{2;.>", "pK0", "", "", "pK0");
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKeyArray0, true);
      int int0 = multiKey1.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0);
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 5);
      MultiKey<String> multiKey1 = new MultiKey<String>("MultiKey[java.lang.Object@4675f57b, java.lang.Object@4675f57b]", "}]G/j1<<bYA ByVX", "}]G/j1<<bYA ByVX", (String) null, "}]G/j1<<bYA ByVX");
      multiKeyArray0[0] = multiKey1;
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "The array of keys must not be null";
      stringArray0[3] = null;
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "MultiKey[java.lang.Object@4675f57b, java.lang.Object@4675f57b]";
      stringArray0[7] = "}]G/j1<<bYA ByVX";
      stringArray0[8] = "MultiKey[java.lang.Object@4675f57b, java.lang.Object@4675f57b]";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
      multiKeyArray0[1] = multiKey2;
      MultiKey<String> multiKey3 = new MultiKey<String>("", "}]G/j1<<bYA ByVX", "}]G/j1<<bYA ByVX");
      multiKeyArray0[2] = multiKey3;
      MultiKey<String> multiKey4 = new MultiKey<String>("MultiKey[java.lang.Object@4675f57b, java.lang.Object@4675f57b]", "", "", stringArray0[5]);
      multiKeyArray0[3] = multiKey4;
      MultiKey<String> multiKey5 = new MultiKey<String>("", "", stringArray0[5], "", ")f");
      multiKeyArray0[4] = multiKey5;
      MultiKey<MultiKey<String>> multiKey6 = new MultiKey<MultiKey<String>>(multiKeyArray0, false);
      String string0 = multiKey2.getKey(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(4);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer1, integer0);
      Integer integer2 = new Integer(1268);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer2, (Integer) null, integer0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.equals(multiKey1);
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 0);
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKeyArray0);
      multiKey2.toString();
      multiKey2.getKeys();
      MultiKey<MultiKey<Object>> multiKey3 = null;
      try {
        multiKey3 = new MultiKey<MultiKey<Object>>((MultiKey<Object>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-90));
      Integer integer1 = new Integer(1);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer0);
      MultiKey<MultiKey<Integer>> multiKey1 = new MultiKey<MultiKey<Integer>>(multiKey0, multiKey0);
      multiKey1.toString();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]]";
      stringArray0[1] = "MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]]";
      multiKey1.toString();
      stringArray0[2] = "MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]]";
      stringArray0[3] = "MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]]";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey2, multiKey2, multiKey2, multiKey2, multiKey2);
      multiKey3.toString();
      multiKey3.hashCode();
      MultiKey<Object> multiKey4 = new MultiKey<Object>(stringArray0);
      multiKey4.toString();
      multiKey1.toString();
      multiKey4.toString();
      multiKey4.getKeys();
      multiKey2.getKeys();
      multiKey4.toString();
      Integer integer2 = new Integer((-90));
      MultiKey<Integer> multiKey5 = new MultiKey<Integer>(integer0, integer0, integer2);
      multiKey0.equals(multiKey5);
      multiKey2.hashCode();
      multiKey3.size();
      multiKey2.hashCode();
      multiKey4.equals("MultiKey[MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]], MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]], MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]], MultiKey[MultiKey[-90, 1, -90], MultiKey[-90, 1, -90]]]");
      // Undeclared exception!
      try { 
        multiKey2.getKey(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("_47.6dSi'vgN}T_Ey:g", "_47.6dSi'vgN}T_Ey:g", "_47.6dSi'vgN}T_Ey:g", "_47.6dSi'vgN}T_Ey:g");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "_47.6dSi'vgN}T_Ey:g";
      objectArray0[1] = (Object) multiKey0;
      objectArray0[2] = (Object) "_47.6dSi'vgN}T_Ey:g";
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_47.6dSi'vgN}T_Ey:g";
      stringArray0[1] = "_47.6dSi'vgN}T_Ey:g";
      stringArray0[2] = "_47.6dSi'vgN}T_Ey:g";
      stringArray0[3] = "_47.6dSi'vgN}T_Ey:g";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, true);
      Object object0 = new Object();
      MultiKey<String> multiKey3 = new MultiKey<String>("_47.6dSi'vgN}T_Ey:g", "YlQ6W5vjm\"");
      multiKey3.getKey(0);
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey2, object0, "_47.6dSi'vgN}T_Ey:g");
      MultiKey<Object> multiKey5 = new MultiKey<Object>(multiKey0, multiKey1, multiKey4, "_47.6dSi'vgN}T_Ey:g");
      MultiKey<MultiKey<Object>> multiKey6 = new MultiKey<MultiKey<Object>>(multiKey5, multiKey4);
      Object object1 = multiKey6.getKey(0);
      boolean boolean0 = multiKey5.equals(object1);
      assertTrue(boolean0);
      assertFalse(multiKey4.equals((Object)multiKey0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "@zt}t>";
      stringArray0[1] = "X\"rn?WJ;jhLytmY";
      stringArray0[2] = "3$(";
      stringArray0[3] = "";
      stringArray0[4] = "R_CN@C_C}K";
      stringArray0[5] = "KI>bi,oGgmPV&tke|";
      stringArray0[6] = "weBj9HB4PU*'/b";
      stringArray0[7] = "MultiKey";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("R_CN@C_C}K", "", "3$(", "weBj9HB4PU*'/b");
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0);
      multiKey2.toString();
      String string0 = multiKey2.toString();
      assertEquals("MultiKey[MultiKey[@zt}t>, X\"rn?WJ;jhLytmY, 3$(, , R_CN@C_C}K, KI>bi,oGgmPV&tke|, weBj9HB4PU*'/b, MultiKey], MultiKey[@zt}t>, X\"rn?WJ;jhLytmY, 3$(, , R_CN@C_C}K, KI>bi,oGgmPV&tke|, weBj9HB4PU*'/b, MultiKey], MultiKey[@zt}t>, X\"rn?WJ;jhLytmY, 3$(, , R_CN@C_C}K, KI>bi,oGgmPV&tke|, weBj9HB4PU*'/b, MultiKey]]", string0);
      
      multiKey2.hashCode();
      multiKey1.getKey(1);
      Object object0 = new Object();
      multiKey0.equals(object0);
      multiKey0.size();
      multiKey0.equals("");
      multiKey0.size();
      Object object1 = new Object();
      boolean boolean0 = multiKey1.equals(object1);
      assertFalse(boolean0);
      
      Object object2 = multiKey1.getKey(0);
      assertEquals("R_CN@C_C}K", object2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "0TnpZ4ZsUm\\$8";
      MultiKey<String> multiKey0 = new MultiKey<String>("0TnpZ4ZsUm$8", "lJR@k%.dPK@X9ks");
      multiKey0.toString();
      Object[] objectArray0 = new Object[4];
      multiKey0.toString();
      multiKey0.toString();
      objectArray0[0] = (Object) "0TnpZ4ZsUm$8";
      objectArray0[1] = (Object) multiKey0;
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      objectArray0[2] = (Object) "lJR@k%.dPK@X9ks";
      objectArray0[3] = (Object) "0TnpZ4ZsUm$8";
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.size();
      multiKey0.toString();
      multiKey1.size();
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0);
      multiKey2.toString();
      multiKey2.hashCode();
      multiKey0.size();
      MultiKey<MultiKey<Integer>> multiKey3 = null;
      try {
        multiKey3 = new MultiKey<MultiKey<Integer>>((MultiKey<Integer>[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0, object0);
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 9);
      String string0 = "";
      MultiKey<String> multiKey1 = new MultiKey<String>("L/5aa9+H'}R", "", "L/5aa9+H'}R", "", "");
      multiKeyArray0[0] = multiKey1;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
      multiKeyArray0[1] = multiKey2;
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0);
      multiKeyArray0[2] = multiKey3;
      String string1 = "";
      MultiKey<String> multiKey4 = new MultiKey<String>("", "");
      multiKeyArray0[3] = multiKey4;
      MultiKey<String> multiKey5 = new MultiKey<String>("", "");
      multiKeyArray0[4] = multiKey5;
      String[] stringArray1 = null;
      MultiKey<String> multiKey6 = null;
      try {
        multiKey6 = new MultiKey<String>((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((-896));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-896));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(770);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(0);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(0);
      integerArray0[6] = integer6;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      Integer integer7 = multiKey0.getKey(0);
      assertTrue(integer7.equals((Object)integer1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(3748);
      Integer integer1 = new Integer(3748);
      int int0 = 0;
      Integer integer2 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer0, integer2);
      String string0 = "";
      String string1 = "";
      MultiKey<String> multiKey1 = new MultiKey<String>("", "", "", "", "");
      multiKey1.size();
      String string2 = "E`sZ.BKj://8#Ie";
      Integer integer3 = new Integer(3748);
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 5);
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
      multiKeyArray0[0] = multiKey2;
      MultiKey<Object> multiKey3 = new MultiKey<Object>(multiKey2, multiKey0);
      multiKeyArray0[1] = multiKey3;
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey4 = new MultiKey<String>(stringArray0, false);
      int int1 = 0;
      // Undeclared exception!
      try { 
        multiKey4.getKey(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.equals("");
      Object[] objectArray0 = new Object[3];
      multiKey0.toString();
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "MultiKey[, ]";
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      multiKey1.size();
      Integer integer0 = new Integer(1153);
      Integer integer1 = new Integer((-629));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, (Integer) null, integer1);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.size();
      multiKey0.size();
      MultiKey<MultiKey<Object>> multiKey3 = null;
      try {
        multiKey3 = new MultiKey<MultiKey<Object>>((MultiKey<Object>[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = null;
      objectArray0[1] = null;
      objectArray0[2] = (Object) multiKey0;
      objectArray0[3] = null;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = null;
      objectArray0[6] = (Object) integer0;
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, true);
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object) null, (Object) null, (Object) null, multiKey1, object0);
      multiKey2.getKeys();
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        multiKey3.getKey(int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
