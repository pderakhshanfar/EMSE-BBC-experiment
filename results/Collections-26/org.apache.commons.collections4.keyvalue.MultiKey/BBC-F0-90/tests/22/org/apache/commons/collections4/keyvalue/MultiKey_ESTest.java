/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 01:54:14 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("2", "2", "2");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) multiKey0;
      objectArray0[1] = (Object) "2";
      objectArray0[2] = (Object) multiKey0;
      objectArray0[3] = (Object) multiKey0;
      objectArray0[4] = (Object) multiKey0;
      objectArray0[5] = (Object) multiKey0;
      objectArray0[6] = (Object) multiKey0;
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, true);
      multiKey1.size();
      multiKey0.equals(objectArray0[3]);
      // Undeclared exception!
      try { 
        multiKey0.getKey(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ";`1!-}sgIJ";
      stringArray0[1] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[2] = ">EILHHs#Z ZwIYH#";
      stringArray0[3] = "The array of keys must not be null";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.toString();
      String[] stringArray1 = multiKey0.getKeys();
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) stringArray1, false);
      multiKey0.toString();
      multiKey1.toString();
      multiKey1.toString();
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1);
      multiKey2.toString();
      multiKey2.getKeys();
      multiKey1.size();
      multiKey0.toString();
      MultiKey<Object> multiKey3 = new MultiKey<Object>(stringArray1);
      multiKey3.toString();
      multiKey3.toString();
      multiKey1.equals(multiKey3);
      multiKey0.getKeys();
      Integer integer0 = new Integer((-1));
      multiKey0.equals(integer0);
      // Undeclared exception!
      try { 
        multiKey3.getKey((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "");
      multiKey0.toString();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 4);
      MultiKey<Object> multiKey1 = new MultiKey<Object>("MultiKey[, , , ]", "MultiKey[, , , ]", "MultiKey[, , , ]");
      multiKeyArray0[0] = multiKey1;
      MultiKey<String> multiKey2 = new MultiKey<String>("", "", "");
      MultiKey<Object> multiKey3 = new MultiKey<Object>("", "MultiKey[, , , ]");
      String string0 = multiKey1.toString();
      assertEquals("MultiKey[MultiKey[, , , ], MultiKey[, , , ], MultiKey[, , , ]]", string0);
      
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey3, multiKey1);
      multiKeyArray0[1] = multiKey4;
      MultiKey<Object> multiKey5 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
      multiKeyArray0[2] = multiKey5;
      MultiKey<MultiKey<Object>> multiKey6 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      int int0 = 4;
      Integer integer1 = new Integer(4);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      MultiKey<String> multiKey7 = new MultiKey<String>("", "MultiKey[, , , ]", "");
      MultiKey<MultiKey<String>> multiKey8 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey7, multiKey0, multiKey2);
      boolean boolean0 = multiKey5.equals(multiKey6);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 4);
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "");
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
      MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
      MultiKey<MultiKey<Object>> multiKey3 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      int int0 = 4;
      Integer integer1 = new Integer(4);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(int0);
      MultiKey<String> multiKey4 = new MultiKey<String>("", "", "TFO0U`e{2~La", "");
      Object object0 = multiKey2.getKey(1);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("VR6yl!", "VR6yl!", "VR6yl!", "VR6yl!");
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, false);
      multiKey1.size();
      Integer integer0 = new Integer(0);
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer0);
      multiKey2.toString();
      // Undeclared exception!
      try { 
        multiKey2.getKey(1492);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1492
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "AG?m\"UTn");
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, true);
      Object[] objectArray1 = multiKey1.getKeys();
      assertEquals(0, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "OLTpR'/C8d R%1Lc7");
      Object object0 = new Object();
      Object object1 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("", object0, object1, multiKey0);
      boolean boolean0 = multiKey1.equals(multiKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-1311));
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, "dc^0Ly", "dc^0Ly", object0, "dc^0Ly");
      multiKey0.getKeys();
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer((-1311));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer1, integer2, integer1, integer2, integer0);
      multiKey1.size();
      multiKey0.toString();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "dc^0Ly";
      stringArray0[1] = "dc^0Ly";
      stringArray0[2] = "dc^0Ly";
      stringArray0[3] = "dc^0Ly";
      stringArray0[4] = "dc^0Ly";
      stringArray0[5] = "dc^0Ly";
      stringArray0[6] = "dc^0Ly";
      stringArray0[7] = "dc^0Ly";
      boolean boolean0 = true;
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, true);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.getKeys();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-1311));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1311
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>("", "", "", object0, "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      int int0 = multiKey0.size();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiKey<Integer> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<Integer>((Integer[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "j5wMY";
      stringArray0[1] = "p[qGNy}cwr";
      String string0 = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String string1 = "U8l#M";
      stringArray0[4] = "U8l#M";
      boolean boolean0 = false;
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      multiKey0.getKey(4);
      objectArray0[2] = (Object) "U8l#M";
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 6);
      String string2 = "B4d5Yn8oY";
      Object object2 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("B4d5Yn8oY", "U8l#M", "U8l#M", "p[qGNy}cwr", object2);
      multiKeyArray0[0] = multiKey1;
      String string3 = "";
      String string4 = "Q.";
      MultiKey<String> multiKey2 = new MultiKey<String>("", "Q.", "", "j5wMY");
      // Undeclared exception!
      try { 
        multiKey2.getKey(4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 6);
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "ICf+XX`bk5_amU6", "", (String) null);
      multiKeyArray0[0] = multiKey0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = null;
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      multiKeyArray0[1] = multiKey1;
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0[1], "jK8U2v-b", "", stringArray0[1]);
      multiKeyArray0[2] = multiKey2;
      MultiKey<String> multiKey3 = new MultiKey<String>("", stringArray0[1], "zxcv<~fazFeod@kRz)", (String) null, "jK8U2v-b");
      multiKeyArray0[3] = multiKey3;
      MultiKey<String> multiKey4 = new MultiKey<String>(stringArray0);
      multiKeyArray0[4] = multiKey4;
      MultiKey<String> multiKey5 = new MultiKey<String>((String) null, (String) null, stringArray0[0], stringArray0[1], (String) null);
      multiKey2.toString();
      multiKeyArray0[5] = multiKey5;
      multiKey5.toString();
      MultiKey<MultiKey<String>> multiKey6 = new MultiKey<MultiKey<String>>(multiKeyArray0, false);
      multiKey6.toString();
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer((-1));
      MultiKey<Integer> multiKey7 = new MultiKey<Integer>(integer0, integer1, integer0, integer0);
      multiKey7.hashCode();
      MultiKey<Object> multiKey8 = new MultiKey<Object>(multiKeyArray0);
      multiKey8.hashCode();
      // Undeclared exception!
      try { 
        multiKey3.getKey((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Integer[] integerArray0 = new Integer[2];
      int int0 = 1;
      Integer integer0 = new Integer(1);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, false);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, multiKey0);
      MultiKey<MultiKey<Object>> multiKey2 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey1, multiKey1);
      Integer integer2 = new Integer(1);
      boolean boolean0 = multiKey2.equals(integer2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiKey<Object> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<Object>((Object[]) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "L=.tj|H=&CvJl5|Kn";
      stringArray0[2] = "oG@fYC[6YDP^";
      stringArray0[3] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      assertEquals(4, multiKey0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      MultiKey<String> multiKey0 = new MultiKey<String>("MultiKey", "", "MultiKey", "MultiKey");
      int int0 = 3646;
      // Undeclared exception!
      try { 
        multiKey0.getKey(3646);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3646
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(";<$l+\".r:rso_", object0);
      // Undeclared exception!
      try { 
        multiKey0.getKey(3247);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3247
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
