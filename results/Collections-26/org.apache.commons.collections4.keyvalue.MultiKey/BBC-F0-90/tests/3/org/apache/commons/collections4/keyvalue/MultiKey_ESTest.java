/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 01:43:05 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<String> multiKey0 = new MultiKey<String>("=", "X@N?");
      multiKey0.getKey(0);
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      Integer integer0 = new Integer(498);
      multiKey1.toString();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(object0, "=", multiKey1, integer0, (Object) null);
      multiKey1.toString();
      multiKey2.toString();
      Integer[] integerArray0 = new Integer[0];
      multiKey2.toString();
      multiKey1.toString();
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integerArray0);
      multiKey3.toString();
      multiKey3.toString();
      multiKey3.toString();
      multiKey2.toString();
      multiKey2.toString();
      multiKey3.getKeys();
      multiKey3.size();
      // Undeclared exception!
      try { 
        multiKey2.getKey(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("?F9PXG", "");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) multiKey0;
      objectArray0[2] = (Object) "";
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.toString();
      multiKey0.equals(multiKey1);
      multiKey1.toString();
      multiKey1.toString();
      Object object0 = new Object();
      multiKey0.equals(object0);
      multiKey0.equals(objectArray0[1]);
      multiKey1.toString();
      int int0 = 2608;
      // Undeclared exception!
      try { 
        multiKey1.getKey(2608);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2608
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("cKp1$8eIYke", "cKp1$8eIYke", "cKp1$8eIYke");
      boolean boolean0 = multiKey0.equals("cKp1$8eIYke");
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 2);
      MultiKey<String> multiKey1 = new MultiKey<String>("cKp1$8eIYke", "cKp1$8eIYke");
      multiKeyArray0[0] = multiKey1;
      MultiKey<String> multiKey2 = new MultiKey<String>("[d_]O(}gY!8-X<e", "eIfE>s$oJ=", "y L2%F%A0(Z");
      multiKeyArray0[1] = multiKey2;
      MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKeyArray0, true);
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKeyArray0);
      boolean boolean1 = multiKey3.equals(multiKey4);
      assertFalse(boolean1 == boolean0);
      
      multiKey0.getKeys();
      assertFalse(multiKey0.equals((Object)multiKey4));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(3);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) integer0;
      objectArray0[4] = (Object) integer0;
      objectArray0[5] = (Object) integer0;
      objectArray0[6] = (Object) integer0;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, true);
      multiKey0.size();
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) multiKey0;
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray1, true);
      multiKey1.equals(objectArray1[0]);
      MultiKey<String> multiKey2 = new MultiKey<String>("", "", "oz&CJ*0X]xzi<s|i%oW", "");
      // Undeclared exception!
      try { 
        multiKey2.getKey(4418);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4418
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, true);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.getKeys();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "L$fGh H8f_,..$-ox";
      stringArray0[1] = "xL0=3I. ^";
      stringArray0[2] = "";
      stringArray0[3] = ":6$<n)-.aw6";
      stringArray0[4] = "1Y\"4:NW2,";
      stringArray0[5] = "";
      stringArray0[6] = "|98iM!j";
      stringArray0[7] = "& pZM";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0, false);
      multiKey1.toString();
      // Undeclared exception!
      try { 
        multiKey1.getKey((-206));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -206
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("BG6B^JS", "BG6B^JS", "", "BG6B^JS", "'");
      multiKey0.toString();
      MultiKey<Object> multiKey1 = null;
      try {
        multiKey1 = new MultiKey<Object>((Object[]) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer[] integerArray0 = new Integer[4];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(3583);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(1886);
      integerArray0[3] = integer3;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      multiKey0.toString();
      Integer integer4 = new Integer((-60));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>((Integer) int0, integerArray0[3], (Integer) int0, integer4, integer3);
      MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey0, multiKey1, multiKey1);
      multiKey2.toString();
      multiKey1.toString();
      multiKey0.toString();
      String[] stringArray0 = new String[0];
      MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0, true);
      multiKey3.toString();
      String string0 = multiKey3.toString();
      assertEquals("MultiKey[]", string0);
      
      Object object0 = new Object();
      Integer integer5 = new Integer(1);
      MultiKey<Object> multiKey4 = new MultiKey<Object>(object0, "MultiKey[MultiKey[0, 3583, 0, 1886], MultiKey[0, 1886, 0, -60, 1886], MultiKey[0, 1886, 0, -60, 1886]]", int0, int0, integer5);
      multiKey4.toString();
      int int1 = multiKey4.hashCode();
      assertFalse(int1 == int0);
      
      multiKey4.getKeys();
      multiKey4.size();
      multiKey0.getKeys();
      int int2 = multiKey3.hashCode();
      assertTrue(int2 == int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiKey<Object> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<Object>((Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      objectArray0[0] = object0;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>((MultiKey<Object>) null, multiKey0, (MultiKey<Object>) null, (MultiKey<Object>) null, multiKey0);
      multiKey1.getKey(0);
      objectArray0[1] = (Object) null;
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, false);
      assertTrue(multiKey2.equals((Object)multiKey0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) integer0;
      objectArray0[4] = (Object) integer0;
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, multiKey0);
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>((String) null, "tx_o2y?d9x-Y", "tx_o2y?d9x-Y");
      multiKey2.hashCode();
      multiKey0.hashCode();
      Integer integer1 = new Integer(0);
      multiKey0.toString();
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integer0, integer0, integer0, integer1);
      boolean boolean0 = multiKey3.equals(objectArray0[3]);
      assertFalse(boolean0);
      
      String string0 = multiKey2.toString();
      assertEquals("MultiKey[null, tx_o2y?d9x-Y, tx_o2y?d9x-Y]", string0);
      
      multiKey0.getKeys();
      assertFalse(multiKey0.equals((Object)multiKey1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = ".rbLhhGk?z";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "The array of keys must not be null";
      stringArray0[4] = "";
      boolean boolean0 = false;
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
      multiKey0.getKeys();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 7);
      Object object0 = null;
      MultiKey<Object> multiKey1 = new MultiKey<Object>("", "", "", (Object) null);
      int int0 = 0;
      multiKey1.getKey(0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>("", "", "");
      multiKeyArray0[0] = multiKey2;
      Object object1 = new Object();
      MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
      MultiKey<Object> multiKey4 = new MultiKey<Object>((Object) null, object1, multiKey3, "");
      // Undeclared exception!
      try { 
        multiKey4.getKey(1395);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1395
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", ";A/kfli", ";A/kfli");
      Integer integer0 = new Integer(1);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0);
      Integer integer1 = multiKey1.getKey(1);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("org.apache.commons.collections4.keyvalue.MultiKey", "HHU2lexi_Ud-SoZT}~", "C#=)KorwS^u)w\"BPX", "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey(580);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 580
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
