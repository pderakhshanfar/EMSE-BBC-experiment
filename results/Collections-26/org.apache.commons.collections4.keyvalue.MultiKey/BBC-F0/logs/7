* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 3694
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 1277293257
* Starting evolution
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 302s and 1207 generations, 757492 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 04:13:55.336 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 12 tests with total length 271
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 56%
* Compiling and checking tests
[MASTER] 04:14:15.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.commons.collections4.keyvalue.MultiKey;
[MASTER] 04:14:15.640 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("", "", (String) null, "", (String) null);
multiKey0.size();
multiKey0.equals("");
Object[] objectArray0 = new Object[7];
objectArray0[0] = (Object) null;
multiKey0.toString();
objectArray0[1] = (Object) multiKey0;
objectArray0[2] = (Object) multiKey0;
objectArray0[3] = (Object) "";
objectArray0[4] = (Object) multiKey0;
objectArray0[5] = (Object) multiKey0;
objectArray0[6] = (Object) "";
MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
multiKey1.toString();
multiKey1.toString();
multiKey1.equals((Object) null);
multiKey0.size();
MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0);
MultiKey<MultiKey<Object>> multiKey3 = new MultiKey<MultiKey<Object>>(multiKey1, multiKey2, multiKey2, multiKey2, multiKey1);
MultiKey<Object>[] multiKeyArray0 = multiKey3.getKeys();
assertNotSame(objectArray0, multiKeyArray0);


[MASTER] 04:14:18.446 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:14:18.450 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("uP^[J[AtJyrP'[w", "uP^[J[AtJyrP'[w");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 5);
Object[] objectArray0 = new Object[9];
objectArray0[0] = (Object) multiKey0;
objectArray0[1] = (Object) multiKey0;
objectArray0[2] = (Object) multiKey0;
objectArray0[3] = (Object) "uP^[J[AtJyrP'[w";
objectArray0[4] = (Object) multiKey0;
objectArray0[5] = (Object) "uP^[J[AtJyrP'[w";
objectArray0[6] = (Object) "uP^[J[AtJyrP'[w";
objectArray0[7] = (Object) multiKey0;
objectArray0[8] = (Object) "uP^[J[AtJyrP'[w";
MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
String[] stringArray0 = new String[0];
MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
Object object0 = new Object();
MultiKey<Object> multiKey3 = new MultiKey<Object>(objectArray0[0], objectArray0[4], multiKey1, multiKey2, object0);
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, objectArray0[5], multiKey0, multiKey3, objectArray0[7]);
multiKeyArray0[0] = multiKey4;
Integer[] integerArray0 = new Integer[0];
MultiKey<Integer> multiKey5 = new MultiKey<Integer>(integerArray0, false);
MultiKey<Object> multiKey6 = new MultiKey<Object>(objectArray0[0], multiKey3, multiKey5);
multiKeyArray0[1] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>((Object[]) stringArray0, false);
multiKeyArray0[2] = multiKey7;
MultiKey<Object> multiKey8 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[3] = multiKey8;
Integer integer0 = new Integer(2721);
Integer integer1 = new Integer(457);
MultiKey<Object> multiKey9 = new MultiKey<Object>(integer0, integer1, (Object) null, "uP^[J[AtJyrP'[w");
multiKeyArray0[4] = multiKey9;
MultiKey<MultiKey<Object>> multiKey10 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey10.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0/tests/7
* Done!

* Computation finished
