* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 15569
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 309711593
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 603s and 2343 generations, 1433025 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 21:03:31.310 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 15 tests with total length 312
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
[MASTER] 21:03:48.057 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.154 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.202 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.394 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.491 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.550 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.597 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.632 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.690 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.743 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.784 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.858 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:48.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.commons.collections4.keyvalue.MultiKey
[MASTER] 21:03:48.862 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 18);
Object object0 = new Object();
MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, "jMVPc");
multiKeyArray0[0] = multiKey0;
Object[] objectArray0 = new Object[3];
objectArray0[1] = (Object) "jMVPc";
objectArray0[2] = object0;
MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
multiKeyArray0[1] = multiKey1;
Integer integer0 = new Integer(0);
multiKey1.toString();
multiKey0.toString();
MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer0);
MultiKey<Object> multiKey3 = new MultiKey<Object>("MultiKey[java.lang.Object@318985d5, jMVPc]", multiKey1);
MultiKey multiKey4 = (MultiKey)multiKey3.getKey(0);
multiKey0.toString();
MultiKey<Object> multiKey5 = new MultiKey<Object>(object0, multiKey1, object0, multiKey2, multiKey1);
multiKeyArray0[2] = multiKey5;
Object object1 = new Object();
Integer integer1 = new Integer(0);
multiKey1.toString();
MultiKey<String> multiKey6 = new MultiKey<String>(").myPw-,x*U~DT", "jMVPc", "", "MultiKey[java.lang.Object@318985d5, jMVPc]");
MultiKey<Object> multiKey7 = new MultiKey<Object>(multiKey3, object1, multiKey4, multiKey0, multiKey4);
multiKey6.toString();
MultiKey<MultiKey<Object>> multiKey8 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey1.toString();
multiKey0.toString();
multiKey4.getKey(0);

[MASTER] 21:03:49.482 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:49.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:03:49.521 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 6);
Object object0 = new Object();
Object object1 = new Object();
MultiKey<Object> multiKey0 = new MultiKey<Object>("MultiKey", "MultiKey", "MultiKey", object0, object1);
Object object2 = new Object();
MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, multiKey0, object2);
multiKeyArray0[0] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[1] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
int int0 = (-1);
Integer integer0 = new Integer((-1));
Integer integer1 = new Integer((-1));
MultiKey<Integer> multiKey4 = new MultiKey<Integer>(integer1, integer0, integer0);
MultiKey<Object> multiKey5 = new MultiKey<Object>(multiKey3, "MultiKey", "MultiKey", integer0, multiKey4);
multiKeyArray0[2] = multiKey5;
MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKeyArray0);
multiKeyArray0[3] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[4] = multiKey7;
MultiKey<Object> multiKey8 = new MultiKey<Object>(multiKey2, "'Dam]U9>");
MultiKey<Object> multiKey9 = new MultiKey<Object>(multiKey7, "MultiKey", multiKey8);
multiKeyArray0[5] = multiKey9;
MultiKey<MultiKey<Object>> multiKey10 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey7.toString();

[MASTER] 21:03:49.667 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:49.811 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-70/tests/4
* Done!

* Computation finished
