* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 8983
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 3038970920
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 604s and 1821 generations, 1109403 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 21:03:21.899 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 11 tests with total length 200
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
[MASTER] 21:03:35.991 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.046 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.113 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.183 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.258 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.296 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.372 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.436 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.480 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.517 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.957 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:36.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:03:36.999 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("MultiKey", "MultiKey");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 9);
MultiKey<Object> multiKey1 = new MultiKey<Object>("/tE$A", "MultiKey");
multiKeyArray0[0] = multiKey1;
Object object0 = new Object();
MultiKey<Object> multiKey2 = new MultiKey<Object>("", object0, "/tE$A");
multiKeyArray0[1] = multiKey2;
Integer integer0 = new Integer(698);
MultiKey<Object> multiKey3 = new MultiKey<Object>(multiKey2, integer0, "/tE$A", "/tE$A");
multiKeyArray0[2] = multiKey3;
Integer integer1 = new Integer(698);
MultiKey<Integer> multiKey4 = new MultiKey<Integer>(integer0, integer1);
Object object1 = new Object();
MultiKey<Object> multiKey5 = new MultiKey<Object>((Object) null, multiKey2, multiKey4, object1);
multiKeyArray0[3] = multiKey5;
Object[] objectArray0 = new Object[9];
Object object2 = new Object();
objectArray0[0] = object2;
objectArray0[1] = (Object) multiKey1;
objectArray0[2] = (Object) "/tE$A";
objectArray0[3] = (Object) multiKey5;
objectArray0[4] = (Object) multiKey5;
objectArray0[5] = (Object) multiKey3;
objectArray0[6] = object0;
objectArray0[7] = (Object) multiKey0;
objectArray0[8] = (Object) "/tE$A";
MultiKey<Object> multiKey6 = new MultiKey<Object>(objectArray0, false);
multiKeyArray0[4] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>(multiKeyArray0);
MultiKey<Object> multiKey8 = new MultiKey<Object>(multiKey7, multiKey1, (Object) null, multiKey3);
multiKeyArray0[5] = multiKey8;
MultiKey<String> multiKey9 = new MultiKey<String>("", "");
multiKey9.getKey(1);
MultiKey<Object> multiKey10 = new MultiKey<Object>(multiKey3, multiKey5, "", integer0);
multiKeyArray0[6] = multiKey10;
Integer integer2 = new Integer(1719);
MultiKey<Object> multiKey11 = new MultiKey<Object>(integer2, "MultiKey", objectArray0[4]);
multiKeyArray0[7] = multiKey11;
MultiKey<Object> multiKey12 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[8] = multiKey12;
MultiKey<MultiKey<Object>> multiKey13 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
Object object3 = multiKey13.getKey(1);
Integer integer3 = new Integer(1568);
MultiKey<Object> multiKey14 = new MultiKey<Object>(integer3, multiKey12, (Object) null);
Object object4 = new Object();
MultiKey<Object> multiKey15 = new MultiKey<Object>(object3, multiKey14, object4, "", multiKey0);
multiKey15.toString();

[MASTER] 21:03:37.161 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:37.312 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-70/tests/3
* Done!

* Computation finished
