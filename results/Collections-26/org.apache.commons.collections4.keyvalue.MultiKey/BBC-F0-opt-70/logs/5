* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 20892
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 2111498357
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 601s and 3762 generations, 2432694 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 21:03:40.499 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 12 tests with total length 270
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 44%
* Compiling and checking tests
[MASTER] 21:04:12.769 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:12.877 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:12.941 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.087 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.123 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.167 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.202 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.235 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.284 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:13.329 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:14.778 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:14.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:04:14.842 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
Integer integer0 = new Integer(1);
Integer[] integerArray0 = new Integer[9];
integerArray0[0] = integer0;
integerArray0[1] = integer0;
integerArray0[2] = integer0;
integerArray0[3] = integer0;
integerArray0[4] = integer0;
integerArray0[5] = integer0;
integerArray0[6] = integer0;
integerArray0[7] = integer0;
integerArray0[8] = integer0;
MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
Integer[] integerArray1 = new Integer[6];
Integer integer1 = new Integer(int0);
integerArray1[0] = integer1;
integerArray1[1] = integer0;
integerArray1[2] = integer0;
integerArray1[3] = integer0;
integerArray1[4] = integer0;
integerArray1[5] = integer0;
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray1);
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 9);
MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
MultiKey<Object> multiKey3 = new MultiKey<Object>(int0, multiKey2);
multiKeyArray0[0] = multiKey3;
Object object0 = new Object();
MultiKey<String> multiKey4 = new MultiKey<String>("~IE4", "~IE4", "~IE4");
Object object1 = new Object();
MultiKey<String> multiKey5 = new MultiKey<String>("~IE4", "");
MultiKey<Object> multiKey6 = new MultiKey<Object>("~IE4", object0, multiKey4, object1, multiKey5);
multiKeyArray0[1] = multiKey6;
Integer integer2 = new Integer(2219);
MultiKey<Object> multiKey7 = new MultiKey<Object>(int0, integer2, (Object) null, integer0, int0);
multiKeyArray0[2] = multiKey7;
Object object2 = new Object();
MultiKey<Object> multiKey8 = new MultiKey<Object>(object2, multiKey6);
multiKeyArray0[3] = multiKey8;
Integer integer3 = new Integer(int0);
MultiKey<String> multiKey9 = new MultiKey<String>("z\"#cc]0$v`X>e", "z\"#cc]0$v`X>e", "~IE4");
MultiKey<Object> multiKey10 = new MultiKey<Object>(integer3, multiKey9, multiKey8);
multiKeyArray0[4] = multiKey10;
MultiKey<Object> multiKey11 = new MultiKey<Object>(int0, multiKey6);
multiKeyArray0[5] = multiKey11;
MultiKey<Object> multiKey12 = new MultiKey<Object>("", multiKey5);
multiKeyArray0[6] = multiKey12;
MultiKey<Object> multiKey13 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[7] = multiKey13;
MultiKey<String> multiKey14 = new MultiKey<String>("~IE4", "");
String[] stringArray0 = new String[6];
stringArray0[0] = "z\"#cc]0$v`X>e";
stringArray0[1] = "";
stringArray0[2] = "z\"#cc]0$v`X>e";
stringArray0[3] = "~IE4";
stringArray0[4] = "~IE4";
stringArray0[5] = "~IE4";
MultiKey<String> multiKey15 = new MultiKey<String>(stringArray0, false);
multiKey15.getKey(int0);
MultiKey<Object> multiKey16 = new MultiKey<Object>(multiKey14, multiKey14, "", "z\"#cc]0$v`X>e");
multiKeyArray0[8] = multiKey16;
MultiKey<MultiKey<Object>> multiKey17 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey17.toString();

[MASTER] 21:04:15.048 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.303 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-70/tests/5
* Done!

* Computation finished
