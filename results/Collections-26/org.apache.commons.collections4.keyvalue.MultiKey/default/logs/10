* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 5925
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 4142461972
* Starting evolution
* Initial Number of Goals in DynaMOSA = 68 / 152
Number of times BBC is called in total: 0
* Search finished after 603s and 2154 generations, 1343289 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 21:37:47.380 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 27 tests with total length 317
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 21:37:58.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.commons.collections4.keyvalue.MultiKey;
[MASTER] 21:37:58.667 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("V;_;vOGn_pVztn", "V;_;vOGn_pVztn", "");
multiKey0.toString();
Integer integer0 = new Integer((-1));
Integer integer1 = new Integer((-1));
Integer integer2 = new Integer((-1));
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer0, integer1, integer2);
MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey1, multiKey1, multiKey1, multiKey1);
multiKey2.toString();
multiKey2.toString();
multiKey1.toString();
MultiKey<Integer>[] multiKeyArray0 = multiKey2.getKeys();
multiKey1.hashCode();
MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0, multiKey0, multiKey0);
multiKey3.getKeys();
multiKey3.toString();
multiKey1.size();
MultiKey<Object> multiKey4 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKey4.toString();
multiKey1.toString();
MultiKey<MultiKey<Object>> multiKey5 = new MultiKey<MultiKey<Object>>(multiKey4, multiKey4, multiKey4, multiKey4);
multiKey5.toString();
multiKey3.toString();
multiKey5.hashCode();
multiKey3.getKeys();
multiKey4.size();
multiKey1.equals(multiKey0);
multiKey0.toString();
boolean boolean0 = multiKey0.equals("MultiKey[V;_;vOGn_pVztn, V;_;vOGn_pVztn, ]");
assertFalse(boolean0);

Integer[] integerArray0 = new Integer[1];
integerArray0[0] = integer1;
MultiKey<Integer> multiKey6 = new MultiKey<Integer>(integerArray0, false);
boolean boolean1 = multiKey2.equals(multiKey6);
assertFalse(boolean1);

multiKey4.getKeys();
String string0 = multiKey6.toString();
assertEquals("MultiKey[-1]", string0);


[MASTER] 21:38:02.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:38:02.052 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "";
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 6);
MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, "", (Object) null, "");
multiKeyArray0[0] = multiKey0;
Object object0 = new Object();
MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, "", multiKey0, multiKey0, (Object) null);
multiKeyArray0[1] = multiKey1;
multiKeyArray0[2] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKeyArray0);
multiKeyArray0[3] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[4] = multiKey3;
MultiKey<MultiKey<Object>> multiKey4 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey4.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/default/tests/10
* Done!

* Computation finished
