* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 8811
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 3863594713
* Starting evolution
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 303s and 1165 generations, 766370 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 04:14:18.736 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 30 tests with total length 332
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 04:14:53.412 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:14:53.417 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("sQz+i't|n", "sQz+i't|n");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 9);
Integer integer0 = new Integer(5);
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, (Integer) null);
MultiKey<Object> multiKey2 = new MultiKey<Object>((Object) null, multiKey1, "");
multiKeyArray0[0] = multiKey2;
Integer integer1 = new Integer(5);
String[] stringArray0 = new String[1];
stringArray0[0] = null;
MultiKey<String> multiKey3 = new MultiKey<String>(stringArray0);
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey2, integer1, multiKey3, (Object) null);
multiKeyArray0[1] = multiKey4;
Object[] objectArray0 = new Object[3];
objectArray0[0] = (Object) "sQz+i't|n";
objectArray0[1] = (Object) multiKey4;
objectArray0[2] = (Object) multiKey1;
MultiKey<Object> multiKey5 = new MultiKey<Object>(objectArray0, false);
multiKeyArray0[2] = multiKey5;
MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKey4, "\"uKd`P> afM&", multiKey3);
multiKeyArray0[3] = multiKey6;
multiKeyArray0[4] = multiKey4;
MultiKey<Object> multiKey7 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[5] = multiKey7;
Integer integer2 = new Integer(13);
MultiKey<String> multiKey8 = new MultiKey<String>("sQz+i't|n", "", "sQz+i't|n", "j1@3zg$");
MultiKey<Object> multiKey9 = new MultiKey<Object>(multiKey2, integer2, (Object) null, multiKey8, multiKey6);
multiKeyArray0[6] = multiKey9;
MultiKey<Object> multiKey10 = new MultiKey<Object>(objectArray0, false);
multiKeyArray0[7] = multiKey10;
Integer integer3 = new Integer(9);
multiKeyArray0[8] = multiKey7;
MultiKey<MultiKey<Object>> multiKey11 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey11.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/default/tests/9
* Done!

* Computation finished
