* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 7239
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 2721379853
* Starting evolution
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 301s and 1198 generations, 698150 statements, best individual has fitness: 16.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 04:20:41.761 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 26 tests with total length 236
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 04:21:10.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:21:10.333 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("Q", "I", "I", "Q", "The array of keys must not be null");
Integer integer0 = new Integer(1);
Integer integer1 = new Integer(1);
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer0);
multiKey1.toString();
MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey1, multiKey1, multiKey1, multiKey1);
multiKey2.toString();
multiKey2.equals(multiKey0);
Integer integer2 = new Integer(1);
MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0);
MultiKey<String> multiKey4 = multiKey3.getKey(1);
multiKey4.toString();
Integer integer3 = new Integer(1);
MultiKey<String> multiKey5 = new MultiKey<String>("v&&Do@T-yzF J2", "Q", "I");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 3);
Object object0 = new Object();
Integer integer4 = new Integer(1);
MultiKey<Object> multiKey6 = new MultiKey<Object>(object0, integer4);
multiKeyArray0[0] = multiKey6;
Object object1 = new Object();
MultiKey<Object> multiKey7 = new MultiKey<Object>(multiKey0, object1, multiKey2);
MultiKey<Object> multiKey8 = new MultiKey<Object>("MultiKey[MultiKey[1, 1, 1], MultiKey[1, 1, 1], MultiKey[1, 1, 1], MultiKey[1, 1, 1]]", "mu#5z", multiKey7, integer3);
Object object2 = new Object();
MultiKey<Object> multiKey9 = new MultiKey<Object>(multiKey1, multiKey8, object2, multiKey7);
multiKeyArray0[1] = multiKey9;
MultiKey<Object> multiKey10 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKey7.toString();
multiKeyArray0[2] = multiKey10;
MultiKey<MultiKey<Object>> multiKey11 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey11.toString();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/default/tests/30
* Done!

* Computation finished
