* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-40
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 7863
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 1561935852
* Starting evolution
bbc usage percentage is: 40%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 603s and 4795 generations, 3170546 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 21:03:49.390 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 13 tests with total length 250
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 50%
* Compiling and checking tests
[MASTER] 21:04:14.998 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.115 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.222 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.279 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.362 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.431 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.546 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 21:04:15.552 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null);
String string0 = multiKey0.toString();
assertEquals("MultiKey[null, null]", string0);

multiKey0.hashCode();
Integer[] integerArray0 = new Integer[8];
int int0 = 0;
Integer integer0 = new Integer(0);
integerArray0[0] = integer0;
Integer integer1 = new Integer(0);
integerArray0[1] = integer1;
Integer integer2 = new Integer(int0);
integerArray0[2] = integer2;
Integer integer3 = new Integer(0);
integerArray0[3] = integer3;
Integer integer4 = new Integer(int0);
integerArray0[4] = integer4;
Integer integer5 = new Integer(2896);
integerArray0[5] = integer5;
Integer integer6 = new Integer(3724);
integerArray0[6] = integer6;
Integer integer7 = new Integer(int0);
integerArray0[7] = integer7;
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, false);
int int1 = multiKey1.hashCode();
assertFalse(int1 == int0);

String[] stringArray0 = new String[4];
stringArray0[0] = "MultiKey[null, null]";
stringArray0[1] = "MultiKey[null, null]";
stringArray0[2] = "MultiKey[null, null]";
stringArray0[3] = "MultiKey[null, null]";
MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, false);
boolean boolean0 = multiKey2.equals("MultiKey[null, null]");
assertFalse(boolean0);


[MASTER] 21:04:15.608 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.651 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.702 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.768 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:15.802 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:16.931 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:16.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:04:16.965 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 6);
Integer integer0 = new Integer(1);
Integer integer1 = new Integer(1456);
MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, (Integer) null, (Integer) null, integer1);
Object object0 = new Object();
MultiKey<Object> multiKey1 = new MultiKey<Object>("G)12;d/cv8^\"TnB", multiKey0, integer0, integer1, object0);
multiKeyArray0[0] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>((Object) null, integer0, (Object) null, multiKey1);
multiKeyArray0[1] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>(multiKeyArray0);
multiKeyArray0[2] = multiKey3;
Object[] objectArray0 = new Object[8];
objectArray0[0] = (Object) null;
objectArray0[1] = (Object) multiKey0;
objectArray0[2] = (Object) multiKey2;
objectArray0[3] = (Object) null;
objectArray0[4] = (Object) integer1;
objectArray0[5] = (Object) integer1;
objectArray0[6] = (Object) integer1;
objectArray0[7] = null;
MultiKey<Object> multiKey4 = new MultiKey<Object>(objectArray0);
multiKeyArray0[3] = multiKey4;
Object object1 = new Object();
MultiKey<Object> multiKey5 = new MultiKey<Object>(objectArray0[4], "#U", integer1);
MultiKey<Object> multiKey6 = new MultiKey<Object>(object1, multiKey5, "", multiKey1, multiKey3);
multiKeyArray0[4] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[5] = multiKey7;
MultiKey<MultiKey<Object>> multiKey8 = new MultiKey<MultiKey<Object>>(multiKeyArray0, false);
multiKey8.toString();

[MASTER] 21:04:17.127 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:17.228 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-40/tests/6
* Done!

* Computation finished
