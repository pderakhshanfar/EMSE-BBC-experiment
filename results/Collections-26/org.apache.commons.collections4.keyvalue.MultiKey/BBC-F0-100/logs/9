* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 8471
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 2886889574
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 68 / 152
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V: Line 115: 311836,268857,0| Number of FF evals: 228150
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.readResolve()Ljava/lang/Object;: Line 279: 459768,396187,0| Number of FF evals: 228150
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.readResolve()Ljava/lang/Object;: Line 278: 459768,396187,0| Number of FF evals: 228150
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.readResolve()Ljava/lang/Object;: root-Branch: 459768,396187,0| Number of FF evals: 228148
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.equals(Ljava/lang/Object;)Z: I4 Branch 3 IF_ACMPNE L221 - false: 5518,0,0| Number of FF evals: 4509
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: Line 67: 315353,271794,0| Number of FF evals: 228150
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V: Line 82: 323595,279058,0| Number of FF evals: 228150
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.keyvalue.MultiKey.<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V: Line 98: 323287,278604,0| Number of FF evals: 228150
* Search finished after 601s and 4727 generations, 2836147 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 14:39:06.086 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 16 tests with total length 301
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
[MASTER] 14:39:31.896 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:32.213 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:32.337 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:32.560 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:32.700 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:32.955 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.091 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.224 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.487 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.588 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.706 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:33.912 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:34.067 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:35.469 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:35.592 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 14:39:35.608 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("org.apache.commons.collections4.keyvalue.MultiKey", "org.apache.commons.collections4.keyvalue.MultiKey", (String) null, "");
multiKey0.size();
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 9);
MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, "org.apache.commons.collections4.keyvalue.MultiKey", "", "", multiKey0);
multiKeyArray0[0] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey1, multiKey0, (Object) null);
multiKeyArray0[1] = multiKey2;
Object object0 = new Object();
MultiKey<Object> multiKey3 = new MultiKey<Object>("org.apache.commons.collections4.keyvalue.MultiKey", object0);
multiKeyArray0[2] = multiKey3;
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, "", (Object) null);
multiKeyArray0[3] = multiKey4;
MultiKey<Object> multiKey5 = new MultiKey<Object>("F{/\u0001^zK3o1m_^", multiKey1, object0);
multiKeyArray0[4] = multiKey5;
Object object1 = new Object();
Object object2 = new Object();
MultiKey<Object> multiKey6 = new MultiKey<Object>(object1, multiKey4, object2);
multiKeyArray0[5] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>((Object) null, multiKey6, multiKey2, multiKey6);
multiKeyArray0[6] = multiKey7;
MultiKey<Object> multiKey8 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[7] = multiKey8;
Integer integer0 = new Integer(4);
Object object3 = new Object();
Object object4 = new Object();
MultiKey<Object> multiKey9 = new MultiKey<Object>(integer0, object3, object4, multiKey5);
multiKeyArray0[8] = multiKey9;
MultiKey<MultiKey<Object>> multiKey10 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey10.toString();

[MASTER] 14:39:35.796 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:35.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: java.lang.Object cannot be cast to org.apache.commons.collections4.keyvalue.MultiKey
[MASTER] 14:39:35.797 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(0);
Integer integer1 = new Integer((-2015));
Integer integer2 = new Integer(1531);
Integer integer3 = new Integer(2);
Integer integer4 = new Integer((-2015));
MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer3, integer4, integer4, integer4, integer0);
Integer integer5 = new Integer(2);
MultiKey<Object> multiKey1 = new MultiKey<Object>("cAbN#r6A", "cAbN#r6A", integer0);
Object object0 = new Object();
Object object1 = new Object();
Object object2 = new Object();
MultiKey<Object> multiKey2 = new MultiKey<Object>(integer4, object2);
MultiKey multiKey3 = (MultiKey)multiKey2.getKey(1);
MultiKey<Object> multiKey4 = new MultiKey<Object>(object2, multiKey3);
multiKey2.toString();
multiKey3.getKey(0);

[MASTER] 14:39:36.767 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:39:37.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-100/tests/9
* Done!

* Computation finished
