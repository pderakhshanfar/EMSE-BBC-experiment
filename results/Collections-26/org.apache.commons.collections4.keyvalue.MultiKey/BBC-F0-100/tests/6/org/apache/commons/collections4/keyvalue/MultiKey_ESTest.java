/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 06 14:39:45 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer1);
      multiKey0.toString();
      multiKey0.toString();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0, false);
      multiKey1.toString();
      multiKey1.toString();
      int int0 = multiKey1.size();
      multiKey1.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>("", "", "", "LZ{nYyvhC(LEE");
      multiKey2.hashCode();
      multiKey1.toString();
      String string0 = multiKey2.toString();
      assertEquals("MultiKey[, , , LZ{nYyvhC(LEE]", string0);
      
      int int1 = multiKey0.hashCode();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[1] = "";
      stringArray0[2] = "LY/!/Mt3!8u'lh1";
      stringArray0[3] = "<eMdQd*n!1Jf}v!hh5i";
      stringArray0[4] = "(-]QOO^Na]bNm";
      stringArray0[5] = "o?~{9XHgsd_GW^\"";
      stringArray0[6] = "^2<ol$";
      stringArray0[7] = "2<f]ljsF^-]{GGI5";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      multiKey0.toString();
      String string0 = multiKey0.getKey(0);
      assertEquals("org.apache.commons.collections4.keyvalue.MultiKey", string0);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "org.apache.commons.collections4.keyvalue.MultiKey";
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0);
      multiKey0.toString();
      MultiKey<String> multiKey2 = multiKey1.getKey(0);
      String string1 = multiKey2.toString();
      assertEquals("MultiKey[org.apache.commons.collections4.keyvalue.MultiKey, , LY/!/Mt3!8u'lh1, <eMdQd*n!1Jf}v!hh5i, (-]QOO^Na]bNm, o?~{9XHgsd_GW^\", ^2<ol$, 2<f]ljsF^-]{GGI5]", string1);
      
      objectArray0[1] = (Object) multiKey2;
      objectArray0[2] = (Object) "o?~{9XHgsd_GW^\"";
      objectArray0[3] = (Object) multiKey0;
      objectArray0[4] = (Object) "2<f]ljsF^-]{GGI5";
      objectArray0[5] = (Object) "(-]QOO^Na]bNm";
      objectArray0[6] = (Object) "o?~{9XHgsd_GW^\"";
      MultiKey<Object> multiKey3 = new MultiKey<Object>(objectArray0);
      multiKey3.size();
      boolean boolean0 = multiKey2.equals(objectArray0[1]);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, false);
      multiKey0.hashCode();
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[]", string0);
      
      multiKey0.getKeys();
      multiKey0.getKeys();
      MultiKey<String> multiKey1 = new MultiKey<String>("Z4eZ3Uhiz", "$O9A6&XL#", "MultiKey[]", "K", "agDQzIzN`k}6QQ1XO");
      boolean boolean0 = multiKey1.equals(multiKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, true);
      multiKey0.getKey(0);
      objectArray0[0] = null;
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      int int0 = 1665;
      // Undeclared exception!
      try { 
        multiKey0.getKey(1665);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1665
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = "";
      stringArray0[0] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      multiKey0.equals("");
      MultiKey<String> multiKey1 = new MultiKey<String>("", "", "", "", "");
      multiKey1.getKey(0);
      multiKey1.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
      multiKey2.toString();
      int int0 = 820;
      // Undeclared exception!
      try { 
        multiKey2.getKey(820);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 820
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = ";03# l`";
      MultiKey<String> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<String>((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = "";
      String string1 = null;
      MultiKey<String> multiKey0 = new MultiKey<String>("", (String) null);
      // Undeclared exception!
      try { 
        multiKey0.getKey(5266);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5266
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0);
      multiKey0.getKeys();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "NT><{tbe%";
      stringArray0[2] = "";
      stringArray0[3] = "";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      // Undeclared exception!
      try { 
        multiKey1.getKey((-1133));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1133
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.size();
      multiKey0.hashCode();
      MultiKey<Object> multiKey1 = new MultiKey<Object>("", "");
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.toString();
      int int0 = 0;
      multiKey1.toString();
      multiKey1.getKey(0);
      multiKey1.toString();
      MultiKey<Integer> multiKey2 = null;
      try {
        multiKey2 = new MultiKey<Integer>((Integer[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      MultiKey<String> multiKey0 = new MultiKey<String>("", "`QIKK~~c7l.", "`QIKK~~c7l.", "MultiKey");
      int int0 = 1044;
      // Undeclared exception!
      try { 
        multiKey0.getKey(1044);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1044
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
