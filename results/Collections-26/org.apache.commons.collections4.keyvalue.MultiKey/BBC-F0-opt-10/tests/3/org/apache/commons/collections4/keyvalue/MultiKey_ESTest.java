/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 20:47:23 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "", "", "", "");
      MultiKey<String> multiKey1 = new MultiKey<String>("mNl&],d`>B4L1S", "v=)kl{@w%45tJ~[m", "", "uM'~F|.j~!Rs");
      multiKey1.toString();
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0);
      Object[] objectArray1 = multiKey2.getKeys();
      assertNotSame(objectArray0, objectArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, false);
      multiKey0.size();
      String string1 = "org.apache.commons.collections4.keyvalue.MultiKey";
      MultiKey<String> multiKey1 = new MultiKey<String>("", "org.apache.commons.collections4.keyvalue.MultiKey", "org.apache.commons.collections4.keyvalue.MultiKey");
      multiKey1.toString();
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(object0, multiKey0);
      int int0 = 335;
      MultiKey<Object> multiKey3 = new MultiKey<Object>(integerArray0);
      // Undeclared exception!
      try { 
        multiKey3.getKey(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("3Wa(", "3Wa(", "3Wa(");
      multiKey0.toString();
      int int0 = 0;
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = null;
      Integer integer3 = new Integer(2);
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = integer0;
      integerArray0[4] = integer2;
      integerArray0[5] = integer0;
      integerArray0[6] = integer2;
      integerArray0[7] = integer1;
      integerArray0[8] = integer2;
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0);
      multiKey1.equals((Object) null);
      multiKey1.getKey(int0);
      Integer integer4 = multiKey1.getKey(3);
      assertTrue(integer4.equals((Object)integer1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0, object0, object0);
      Integer integer0 = new Integer((-118));
      multiKey0.toString();
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>((Integer) null, integer0, (Integer) null);
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.toString();
      multiKey1.equals("J=7k%\"e");
      multiKey0.hashCode();
      MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey1, multiKey1, multiKey1);
      multiKey1.toString();
      multiKey2.toString();
      // Undeclared exception!
      try { 
        multiKey2.getKey((-118));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -118
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-1546));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0);
      multiKey0.toString();
      multiKey0.toString();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "MultiKey[-1546, -1546, -1546]";
      stringArray0[1] = "MultiKey[-1546, -1546, -1546]";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      multiKey1.toString();
      multiKey1.size();
      multiKey1.toString();
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKey1, multiKey1, multiKey1);
      multiKey2.toString();
      multiKey2.toString();
      multiKey0.size();
      Integer integer1 = new Integer(3);
      multiKey0.toString();
      Object object0 = new Object();
      MultiKey<Object> multiKey3 = new MultiKey<Object>(integer1, "Q~v<N>:N<`5=w", object0);
      Object[] objectArray0 = multiKey3.getKeys();
      assertEquals(3, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 514;
      Integer integer0 = new Integer(514);
      Integer integer1 = new Integer(514);
      Integer integer2 = new Integer(514);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer1, integer2);
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey(514);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 514
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "4?BcOKwI";
      stringArray0[4] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      multiKey0.hashCode();
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[, , , 4?BcOKwI, ]", string0);
      
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(2039);
      integerArray0[0] = integer0;
      int int0 = 0;
      Integer integer1 = new Integer(0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(0);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(2039);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(2728);
      integerArray0[6] = integer6;
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integerArray0, false);
      boolean boolean0 = multiKey1.equals(multiKey2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0);
      Object object1 = multiKey0.getKey(0);
      objectArray0[0] = object1;
      // Undeclared exception!
      try { 
        multiKey0.getKey((-2498));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2498
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0);
      MultiKey<MultiKey<Integer>> multiKey1 = new MultiKey<MultiKey<Integer>>(multiKey0, multiKey0);
      multiKey1.hashCode();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) multiKey1;
      MultiKey<Object> multiKey2 = new MultiKey<Object>(objectArray0, false);
      multiKey0.toString();
      multiKey2.getKeys();
      multiKey2.toString();
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-2146));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2146
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "4";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "The array of keys must not be null";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.commons.collections4.keyvalue.MultiKey";
      stringArray0[7] = "";
      stringArray0[8] = "NnNo_V|S7).d,J7{W";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
      // Undeclared exception!
      try { 
        multiKey0.getKey((-2688));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2688
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 1;
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(1);
      Integer integer3 = new Integer(1);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer2, integer3, integer2);
      multiKey0.toString();
      String string0 = "";
      MultiKey<String> multiKey1 = new MultiKey<String>("", "6%W#sC0b!luP]fCU", (String) null, "", (String) null);
      int int1 = 721;
      multiKey1.toString();
      multiKey1.toString();
      // Undeclared exception!
      try { 
        multiKey1.getKey(721);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 721
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      Object[] objectArray0 = new Object[5];
      MultiKey<Integer> multiKey1 = null;
      try {
        multiKey1 = new MultiKey<Integer>((Integer[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(918);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-1645));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(0);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(2044);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(2044);
      integerArray0[6] = integer6;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, false);
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[0, 918, 0, -1645, 0, 2044, 2044]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiKey<String> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<String>((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
