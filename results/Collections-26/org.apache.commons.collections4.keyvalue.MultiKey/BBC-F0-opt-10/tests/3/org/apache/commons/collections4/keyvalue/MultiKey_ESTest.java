/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 21:04:00 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      Integer integer0 = new Integer((-1));
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<String> multiKey1 = new MultiKey<String>("&c2#", "MultiKey[, ]", ":Hi[");
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>("", ":Hi[", ":Hi[", integer0);
      multiKey2.toString();
      Object object1 = new Object();
      MultiKey<String> multiKey3 = new MultiKey<String>("MultiKey[, ]", "", ":Hi[");
      Object object2 = new Object();
      MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey3, (Object) null, object2);
      MultiKey<MultiKey<Object>> multiKey5 = new MultiKey<MultiKey<Object>>(multiKey2, multiKey4, multiKey4, multiKey4, multiKey2);
      Object object3 = multiKey5.getKey(4);
      Integer integer1 = new Integer(816);
      Integer integer2 = new Integer(816);
      MultiKey<Object> multiKey6 = new MultiKey<Object>(object3, (Object) null, integer1, integer2);
      String string0 = multiKey6.toString();
      assertEquals("MultiKey[MultiKey[, :Hi[, :Hi[, -1], null, 816, 816]", string0);
      
      Object object4 = new Object();
      Integer integer3 = new Integer((-1425));
      MultiKey<Object> multiKey7 = new MultiKey<Object>(integer3, "", object0, (Object) null, integer3);
      MultiKey<String> multiKey8 = new MultiKey<String>("E|l3s|rI)k^Y^7<05", "&F)jCg]x_2:MwI", "&F)jCg]x_2:MwI", "");
      boolean boolean0 = multiKey2.equals(object3);
      assertTrue(boolean0);
      assertFalse(multiKey4.equals((Object)multiKey6));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "9(ER";
      stringArray0[1] = "";
      stringArray0[2] = "";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, object0, "");
      multiKey1.getKeys();
      multiKey0.toString();
      multiKey0.getKeys();
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 0);
      multiKey0.toString();
      boolean boolean0 = false;
      MultiKey<MultiKey<String>> multiKey2 = new MultiKey<MultiKey<String>>(multiKeyArray0, false);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.size();
      multiKey1.getKeys();
      multiKey0.getKeys();
      Integer[] integerArray0 = new Integer[3];
      int int0 = 1;
      Integer integer0 = new Integer(1);
      integerArray0[0] = integer0;
      int int1 = 2;
      Integer integer1 = new Integer(2);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      integerArray0[2] = integer2;
      MultiKey<Integer> multiKey3 = new MultiKey<Integer>(integerArray0);
      Integer integer3 = multiKey3.getKey(int0);
      multiKey0.getKeys();
      MultiKey<Object>[] multiKeyArray1 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 8);
      multiKeyArray1[0] = multiKey1;
      MultiKey<Object> multiKey4 = new MultiKey<Object>(integer3, int1);
      // Undeclared exception!
      try { 
        multiKey4.getKey(9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      multiKey0.getKeys();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-797));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -797
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "=`)$1TGm`", "P6'rrxp%dy");
      Integer integer0 = new Integer(2161);
      Integer[] integerArray0 = new Integer[1];
      integerArray0[0] = integer0;
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, false);
      multiKey1.toString();
      multiKey1.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>("MultiKey[2161]", "", "P6'rrxp%dy");
      MultiKey<Object> multiKey3 = new MultiKey<Object>(integerArray0);
      Object object0 = new Object();
      Integer integer1 = new Integer(0);
      MultiKey<Object> multiKey4 = new MultiKey<Object>(integer0, multiKey1, "MultiKey[2161]");
      MultiKey<Object> multiKey5 = new MultiKey<Object>(integerArray0);
      multiKey3.equals(multiKey5);
      // Undeclared exception!
      try { 
        multiKey3.getKey(189);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 189
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("y4", "");
      Integer integer0 = new Integer(10);
      multiKey0.toString();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "y4";
      stringArray0[1] = "";
      multiKey0.toString();
      stringArray0[2] = "3-N*->";
      stringArray0[3] = "";
      stringArray0[4] = "";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey0, (Object) null, multiKey1, "");
      multiKey2.equals(multiKey1);
      Integer integer1 = new Integer(10);
      Object object0 = new Object();
      MultiKey<Object> multiKey3 = new MultiKey<Object>(integer1, "", object0);
      // Undeclared exception!
      try { 
        multiKey3.getKey(16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "");
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>((MultiKey<String>) null, (MultiKey<String>) null, multiKey0, multiKey0);
      multiKey1.toString();
      multiKey1.hashCode();
      MultiKey<Integer> multiKey2 = null;
      try {
        multiKey2 = new MultiKey<Integer>((Integer[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, (String) null, (String) null, (String) null, (String) null);
      multiKey0.toString();
      multiKey0.hashCode();
      Integer integer0 = new Integer((-959));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer0);
      multiKey1.toString();
      multiKey1.equals((Object) null);
      multiKey0.size();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "MultiKey[-959, -959, -959]";
      stringArray0[3] = "wz9\"\"|M7N'z_QL@FY";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "1e@9;:;sa";
      stringArray0[7] = "MultiKey[-959, -959, -959]";
      stringArray0[8] = null;
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, false);
      multiKey2.getKey(5);
      MultiKey<Object> multiKey3 = new MultiKey<Object>((Object) null, stringArray0[1]);
      int int0 = multiKey3.size();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(2144);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, (Integer) null, integer0, (Integer) null);
      multiKey0.toString();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, multiKey0);
      multiKey0.toString();
      multiKey1.getKeys();
      // Undeclared exception!
      try { 
        multiKey1.getKey(2144);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2144
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(648);
      int int0 = (-1317);
      Integer integer1 = new Integer((-1317));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer1, integer0);
      multiKey0.toString();
      multiKey0.hashCode();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "MultiKey[648, -1317, 648]";
      objectArray0[1] = (Object) multiKey0;
      objectArray0[2] = (Object) integer1;
      objectArray0[3] = (Object) multiKey0;
      MultiKey<String> multiKey1 = new MultiKey<String>("MultiKey[648, -1317, 648]", "MultiKey[648, -1317, 648]", ",?74<6", ",?74<6", "/$`;-?BdXX^jL[");
      // Undeclared exception!
      try { 
        multiKey1.getKey((-3312));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3312
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, true);
      multiKey0.hashCode();
      Object object0 = new Object();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MultiKey<String> multiKey1 = new MultiKey<String>(stringArray0);
      int int0 = 0;
      multiKey1.getKey(0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey0, "", "", object0, "");
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.size();
      int int1 = 3528;
      // Undeclared exception!
      try { 
        multiKey2.getKey(3528);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3528
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, (Integer) null, (Integer) null, integer1);
      MultiKey<String> multiKey1 = new MultiKey<String>("En'o=jw5hgWFA#Q =,", "En'o=jw5hgWFA#Q =,");
      multiKey1.toString();
      multiKey1.toString();
      multiKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer[] integerArray0 = new Integer[8];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1872);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-2460));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((-3816));
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int0);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer(0);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer(1872);
      integerArray0[7] = integer7;
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey((-2460));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2460
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiKey<String> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<String>((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
