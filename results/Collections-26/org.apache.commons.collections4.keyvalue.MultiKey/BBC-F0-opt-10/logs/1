* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 3361
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 2612566758
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 603s and 4560 generations, 2632668 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 21:02:51.842 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 11 tests with total length 244
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
[MASTER] 21:03:14.588 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.718 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.762 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.803 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.848 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.890 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.936 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:14.975 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:15.016 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:16.340 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:16.371 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:03:16.407 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("Ze", "Ze", "Ze", "Ze");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 5);
Integer integer0 = new Integer(780);
Integer integer1 = new Integer((-631));
Integer integer2 = new Integer(1);
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer1, integer2);
MultiKey<MultiKey<Integer>> multiKey2 = new MultiKey<MultiKey<Integer>>(multiKey1, multiKey1, multiKey1, multiKey1);
Object object0 = multiKey2.getKey(0);
MultiKey<Object> multiKey3 = new MultiKey<Object>(object0, integer0);
multiKeyArray0[0] = multiKey3;
Integer integer3 = new Integer(1);
Integer integer4 = new Integer((-631));
Integer integer5 = new Integer((-631));
MultiKey<Integer> multiKey4 = new MultiKey<Integer>(integer0, integer3, integer4, integer3, integer5);
Object object1 = multiKey4.getKey(0);
MultiKey<Object> multiKey5 = new MultiKey<Object>(integer2, object1, multiKey0, integer5);
multiKeyArray0[1] = multiKey5;
Object[] objectArray0 = new Object[7];
objectArray0[0] = (Object) "Ze";
objectArray0[1] = (Object) multiKey3;
objectArray0[2] = (Object) multiKey3;
objectArray0[3] = (Object) multiKey1;
objectArray0[4] = (Object) multiKey4;
objectArray0[5] = object1;
objectArray0[6] = (Object) integer2;
MultiKey<Object> multiKey6 = new MultiKey<Object>(objectArray0);
MultiKey<Object> multiKey7 = new MultiKey<Object>(integer2, multiKey6, integer4, integer1, integer3);
MultiKey<Object> multiKey8 = new MultiKey<Object>(object1, multiKey7);
multiKeyArray0[2] = multiKey8;
Integer integer6 = new Integer((-1903));
MultiKey<Object> multiKey9 = new MultiKey<Object>(objectArray0);
MultiKey<String> multiKey10 = new MultiKey<String>("Ze", "Ze", "Ze");
MultiKey<Object> multiKey11 = new MultiKey<Object>(integer6, multiKey9, multiKey10);
multiKeyArray0[3] = multiKey11;
MultiKey<Object> multiKey12 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[4] = multiKey12;
MultiKey<MultiKey<Object>> multiKey13 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey13.toString();

[MASTER] 21:03:16.570 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:16.667 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-10/tests/1
* Done!

* Computation finished
