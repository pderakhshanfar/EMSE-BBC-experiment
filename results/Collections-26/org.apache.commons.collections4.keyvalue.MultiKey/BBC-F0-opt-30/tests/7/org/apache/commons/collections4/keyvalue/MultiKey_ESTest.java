/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 20:48:59 GMT 2021
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("B:_:>^ww64uP7PXz;", (String) null);
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0);
      Integer[] integerArray1 = multiKey1.getKeys();
      assertEquals(0, integerArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiKey<Object> multiKey0 = new MultiKey<Object>("MultiKey", "MultiKey");
      multiKey0.toString();
      boolean boolean0 = multiKey0.equals(multiKey0);
      assertTrue(boolean0);
      
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[MultiKey, MultiKey]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "-0Kn", "-0Kn", "");
      String string0 = multiKey0.getKey(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = null;
      String string1 = "@s9#|z5U%m\"KUo3QD-H";
      MultiKey<String> multiKey0 = new MultiKey<String>((String) null, "", "@s9#|z5U%m\"KUo3QD-H");
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.equals("");
      MultiKey<Object> multiKey1 = null;
      try {
        multiKey1 = new MultiKey<Object>((Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0, true);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.size();
      multiKey0.size();
      Integer integer0 = new Integer(1344);
      Integer integer1 = new Integer(1344);
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer1);
      multiKey0.toString();
      multiKey1.size();
      multiKey0.toString();
      String[] stringArray0 = new String[8];
      multiKey1.toString();
      stringArray0[0] = "MultiKey[]";
      stringArray0[1] = "MultiKey[]";
      stringArray0[2] = "MultiKey[]";
      stringArray0[3] = "MultiKey[]";
      stringArray0[4] = "MultiKey[]";
      stringArray0[5] = "MultiKey[]";
      multiKey0.toString();
      stringArray0[6] = "MultiKey[]";
      multiKey1.toString();
      stringArray0[7] = "MultiKey[]";
      MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0, true);
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.size();
      multiKey2.equals(multiKey1);
      multiKey2.toString();
      multiKey0.toString();
      // Undeclared exception!
      try { 
        multiKey0.getKey(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(674);
      Integer integer1 = new Integer(674);
      Integer integer2 = new Integer(674);
      Integer integer3 = new Integer(1);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer1, integer2, integer3);
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      multiKey0.toString();
      Object object0 = new Object();
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object0, integer2);
      multiKey0.toString();
      multiKey1.getKeys();
      multiKey1.toString();
      multiKey1.hashCode();
      multiKey1.toString();
      multiKey0.toString();
      MultiKey<String> multiKey2 = new MultiKey<String>("MultiKey[674, 674, 674, 674, 1]", "", "MultiKey[674, 674, 674, 674, 1]");
      multiKey2.toString();
      multiKey2.toString();
      multiKey2.toString();
      multiKey1.toString();
      multiKey2.toString();
      multiKey2.equals("MultiKey[674, 674, 674, 674, 1]");
      multiKey1.toString();
      multiKey1.toString();
      multiKey1.getKeys();
      multiKey1.size();
      multiKey2.size();
      Object object1 = multiKey1.getKey(0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      MultiKey<Object> multiKey0 = new MultiKey<Object>("", "");
      MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, "", multiKey0, multiKey0, "-()AY$1pXMA");
      Object object0 = multiKey1.getKey(0);
      MultiKey<Object> multiKey2 = new MultiKey<Object>(object0, "-()AY$1pXMA");
      MultiKey<String>[] multiKeyArray0 = (MultiKey<String>[]) Array.newInstance(MultiKey.class, 4);
      MultiKey<String> multiKey3 = null;
      try {
        multiKey3 = new MultiKey<String>((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer0, object0);
      Object object1 = multiKey0.getKey(0);
      Integer integer1 = new Integer(0);
      MultiKey<Object> multiKey1 = new MultiKey<Object>(object1, integer0, multiKey0, integer1);
      String string0 = multiKey1.toString();
      multiKey1.toString();
      Integer integer2 = new Integer(0);
      Integer integer3 = new Integer(1);
      Integer integer4 = new Integer((-1670));
      MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer1, integer0, integer2, integer3, integer4);
      multiKey2.toString();
      multiKey2.size();
      multiKey0.size();
      MultiKey<String> multiKey3 = new MultiKey<String>("MultiKey[0, 0, MultiKey[0, 0, java.lang.Object@56ebe546], 0]", "GThBM=8IOwlKl{P$m8", "MultiKey[0, 0, MultiKey[0, 0, java.lang.Object@56ebe546], 0]", "MultiKey[0, 0, MultiKey[0, 0, java.lang.Object@56ebe546], 0]", "8)37.~&r");
      String string1 = multiKey3.toString();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("", "tJa@.?69p>8L");
      multiKey0.equals("tJa@.?69p>8L");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "tJa@.?69p>8L";
      objectArray0[1] = (Object) "tJa@.?69p>8L";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) multiKey0;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) multiKey0;
      MultiKey<Object> multiKey1 = new MultiKey<Object>(objectArray0);
      multiKey1.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      MultiKey<Object> multiKey0 = new MultiKey<Object>(objectArray0);
      // Undeclared exception!
      try { 
        multiKey0.getKey(552);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 552
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = "^RB/D*";
      stringArray0[0] = "^RB/D*";
      stringArray0[1] = "_&I$gY8zvB'Ovl*ne5A";
      MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, true);
      multiKey0.toString();
      multiKey0.toString();
      MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 8);
      MultiKey<Object> multiKey1 = new MultiKey<Object>("^RB/D*", "_&I$gY8zvB'Ovl*ne5A", "_&I$gY8zvB'Ovl*ne5A");
      multiKeyArray0[0] = multiKey1;
      Object object0 = new Object();
      MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey1, "_&I$gY8zvB'Ovl*ne5A", object0, "^RB/D*");
      multiKeyArray0[1] = multiKey2;
      MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) stringArray0, true);
      multiKeyArray0[2] = multiKey3;
      MultiKey<Object> multiKey4 = new MultiKey<Object>("^RB/D*", "_&I$gY8zvB'Ovl*ne5A", "^RB/D*", multiKey2);
      multiKeyArray0[3] = multiKey4;
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      Integer integer2 = new Integer(1);
      MultiKey<Integer> multiKey5 = new MultiKey<Integer>(integer0, integer1, integer2, integer1);
      Object object1 = null;
      MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKey5, (Object) null);
      multiKeyArray0[4] = multiKey6;
      MultiKey<Object> multiKey7 = new MultiKey<Object>(integer0, multiKey4);
      // Undeclared exception!
      try { 
        multiKey7.getKey(2569);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2569
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "s";
      MultiKey<String> multiKey0 = new MultiKey<String>("", "%`(+OGO`]frXdBR2-l", "s", "", (String) null);
      multiKey0.toString();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) "s";
      objectArray0[5] = (Object) "";
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer((-1));
      Integer integer2 = new Integer((-1563));
      MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1, integer2);
      multiKey1.toString();
      // Undeclared exception!
      try { 
        multiKey1.getKey((-1563));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1563
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }
}
