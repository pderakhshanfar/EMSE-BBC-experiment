* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 4929
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 163888997
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 603s and 4343 generations, 3193522 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 21:02:51.419 [logback-2] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 13 tests with total length 367
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 91%
* Compiling and checking tests
[MASTER] 21:03:04.380 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.453 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.496 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.534 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.567 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.603 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.634 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.663 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.700 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.735 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.795 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:04.831 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:05.216 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:05.244 [logback-2] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:03:05.248 [logback-2] WARN  JUnitAnalyzer - Failing test:
 MultiKey<MultiKey<Integer>> multiKey0 = new MultiKey<MultiKey<Integer>>((MultiKey<Integer>) null, (MultiKey<Integer>) null);
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 8);
MultiKey<Object> multiKey1 = new MultiKey<Object>((Object) null, multiKey0, (Object) null);
MultiKey<Object> multiKey2 = new MultiKey<Object>("!.sJ", (Object) null, multiKey1);
multiKeyArray0[0] = multiKey2;
Integer integer0 = new Integer(0);
MultiKey<Object> multiKey3 = new MultiKey<Object>(multiKey2, "The array of keys must not be null", integer0);
multiKeyArray0[1] = multiKey3;
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, multiKey0, multiKey1);
MultiKey<Object> multiKey5 = new MultiKey<Object>(multiKey3, multiKey3, multiKey4, (Object) null, multiKey2);
multiKeyArray0[2] = multiKey5;
Object object0 = new Object();
Integer integer1 = new Integer(3);
Integer integer2 = new Integer(0);
Integer integer3 = new Integer(3);
MultiKey<Integer> multiKey6 = new MultiKey<Integer>(integer1, integer2, (Integer) null, integer3, integer3);
Object object1 = multiKey6.getKey(3);
MultiKey<Object> multiKey7 = new MultiKey<Object>(multiKey3, (Object) null);
multiKey7.getKey(1);
MultiKey<String> multiKey8 = new MultiKey<String>("A@t}HzveS:56k6.&D", "#`E|fh", "b", "#`E|fh");
MultiKey<Object> multiKey9 = new MultiKey<Object>(multiKey4, multiKey8);
MultiKey<Object> multiKey10 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
MultiKey<Object> multiKey11 = new MultiKey<Object>("A@t}HzveS:56k6.&D", integer1, multiKey10, object0, integer2);
Object object2 = new Object();
MultiKey<Object> multiKey12 = new MultiKey<Object>((Object) null, multiKey9, multiKey11, object2);
multiKey12.getKey(0);
MultiKey<Object> multiKey13 = new MultiKey<Object>(object0, object1, (Object) null);
multiKeyArray0[3] = multiKey13;
Object object3 = new Object();
MultiKey<Object> multiKey14 = new MultiKey<Object>(multiKeyArray0);
MultiKey<Object> multiKey15 = new MultiKey<Object>(object3, multiKey14);
multiKeyArray0[4] = multiKey15;
MultiKey<Object> multiKey16 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[5] = multiKey16;
Integer integer4 = new Integer(0);
Integer integer5 = new Integer(3);
Object object4 = new Object();
MultiKey<Object> multiKey17 = new MultiKey<Object>(integer1, integer4, integer5, (Object) null, object4);
multiKeyArray0[6] = multiKey17;
Integer integer6 = new Integer(0);
Object object5 = new Object();
Integer[] integerArray0 = new Integer[7];
integerArray0[0] = integer3;
Integer integer7 = new Integer(1);
integerArray0[1] = integer7;
integerArray0[2] = integer2;
integerArray0[3] = integer1;
integerArray0[4] = integer0;
integerArray0[5] = null;
integerArray0[6] = integer0;
MultiKey<Integer> multiKey18 = new MultiKey<Integer>(integerArray0, false);
MultiKey<Object> multiKey19 = new MultiKey<Object>(integer6, object5, multiKey15, integer4, multiKey18);
multiKeyArray0[7] = multiKey19;
MultiKey<MultiKey<Object>> multiKey20 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey20.toString();

[MASTER] 21:03:05.357 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:03:05.444 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-30/tests/1
* Done!

* Computation finished
