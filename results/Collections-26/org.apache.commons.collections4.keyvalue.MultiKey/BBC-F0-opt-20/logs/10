* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 20558
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 3769945781
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 602s and 5016 generations, 2976769 statements, best individual has fitness: 18.0
* Minimizing test suite
[MASTER] 21:04:34.462 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 15 tests with total length 346
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
[MASTER] 21:04:46.142 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.202 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.314 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.444 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.497 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.620 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.676 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.739 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.847 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:46.905 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:47.011 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:47.073 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:47.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:47.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: java.lang.Integer cannot be cast to org.apache.commons.collections4.keyvalue.MultiKey
[MASTER] 21:04:47.168 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
Integer integer0 = new Integer(0);
MultiKey<Object> multiKey0 = new MultiKey<Object>("DL;", integer0);
multiKey0.equals("DL;");
Integer[] integerArray0 = new Integer[6];
integerArray0[0] = integer0;
integerArray0[1] = integer0;
integerArray0[2] = integer0;
integerArray0[3] = integer0;
integerArray0[4] = integer0;
integerArray0[5] = integer0;
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, false);
String string0 = "";
MultiKey<String> multiKey2 = new MultiKey<String>("", "S>Fs", "DL;", "m");
Object object0 = new Object();
MultiKey<Object> multiKey3 = new MultiKey<Object>(int0, object0, multiKey1);
MultiKey multiKey4 = (MultiKey)multiKey3.getKey(0);
multiKey3.getKeys();
String string1 = "";
MultiKey<String> multiKey5 = new MultiKey<String>("", "S>Fs", "DL;", "", "");
multiKey2.size();
multiKey3.getKeys();
MultiKey<String> multiKey6 = new MultiKey<String>("", "", "", "");
multiKey6.toString();
MultiKey<Object> multiKey7 = new MultiKey<Object>(integerArray0);
Object object1 = null;
multiKey4.getKey(int0);

[MASTER] 21:04:50.254 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:50.286 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:04:50.289 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(1);
Integer integer1 = new Integer(1);
MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, (Integer) null, integer0, (Integer) null, integer1);
MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>((MultiKey<String>) null, (MultiKey<String>) null, (MultiKey<String>) null, (MultiKey<String>) null);
multiKey1.toString();
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 2);
MultiKey<Object> multiKey2 = new MultiKey<Object>(integer0, "MultiKey[null, null, null, null]");
multiKeyArray0[0] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[1] = multiKey3;
MultiKey<MultiKey<Object>> multiKey4 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
Object object0 = multiKey4.getKey(1);
MultiKey<Object> multiKey5 = new MultiKey<Object>(object0, multiKey4, (Object) null);
MultiKey<Object> multiKey6 = new MultiKey<Object>((Object) null, multiKey3);
MultiKey<MultiKey<Object>> multiKey7 = new MultiKey<MultiKey<Object>>(multiKey5, multiKey3, multiKey6, multiKey3, multiKey2);
multiKey7.toString();

[MASTER] 21:04:50.555 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 21:04:50.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-opt-20/tests/10
* Done!

* Computation finished
