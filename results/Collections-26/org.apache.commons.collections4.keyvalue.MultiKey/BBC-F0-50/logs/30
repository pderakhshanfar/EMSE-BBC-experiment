* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 8795
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 1093542715
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 602s and 3525 generations, 2031123 statements, best individual has fitness: 17.0
* Minimizing test suite
[MASTER] 19:25:31.115 [logback-2] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 14 tests with total length 301
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 44%
* Compiling and checking tests
[MASTER] 19:26:07.185 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:07.474 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:07.593 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:07.755 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:07.959 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.128 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.269 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.372 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.576 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.685 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.823 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:08.902 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:09.060 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:10.492 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:10.684 [logback-2] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:26:10.689 [logback-2] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>((String) null, (String) null, " @AW#R yKuRVt3", " @AW#R yKuRVt3");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 9);
MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[0] = multiKey1;
MultiKey<Object> multiKey2 = new MultiKey<Object>(" @AW#R yKuRVt3", (Object) null);
multiKeyArray0[1] = multiKey2;
Object object0 = new Object();
MultiKey<Object> multiKey3 = new MultiKey<Object>(multiKey2, multiKey1, object0, (Object) null, multiKey2);
Object object1 = multiKey3.getKey(1);
Integer integer0 = new Integer(1);
MultiKey<Object> multiKey4 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
Object object2 = multiKey4.getKey(1);
MultiKey<Object> multiKey5 = new MultiKey<Object>(object1, object0, integer0, object2);
multiKeyArray0[2] = multiKey5;
MultiKey<Object> multiKey6 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[3] = multiKey6;
Object object3 = new Object();
MultiKey<Object> multiKey7 = new MultiKey<Object>(integer0, object3);
multiKeyArray0[4] = multiKey7;
Object object4 = new Object();
MultiKey<Object> multiKey8 = new MultiKey<Object>(object2, multiKey6, multiKey2, multiKey3);
MultiKey<Object> multiKey9 = new MultiKey<Object>((Object) null, object4, multiKey0, multiKey8);
multiKeyArray0[5] = multiKey9;
MultiKey<Object> multiKey10 = new MultiKey<Object>(multiKeyArray0);
MultiKey<Object> multiKey11 = new MultiKey<Object>(object3, multiKey3, multiKey3, multiKey1, multiKey10);
MultiKey<Object> multiKey12 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
Object object5 = new Object();
MultiKey<Object> multiKey13 = new MultiKey<Object>(multiKey0, multiKey11, multiKey12, (Object) null, object5);
multiKeyArray0[6] = multiKey13;
MultiKey<Object> multiKey14 = new MultiKey<Object>(multiKey11, object2, multiKey0);
multiKeyArray0[7] = multiKey14;
Object object6 = new Object();
MultiKey<Object> multiKey15 = new MultiKey<Object>(object6, multiKey9, " @AW#R yKuRVt3");
multiKeyArray0[8] = multiKey15;
MultiKey<MultiKey<Object>> multiKey16 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey16.toString();

[MASTER] 19:26:11.210 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
[MASTER] 19:26:12.074 [logback-2] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-50/tests/30
* Done!

* Computation finished
