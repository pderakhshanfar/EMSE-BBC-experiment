* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 4734
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 988618835
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 601s and 4393 generations, 2727940 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 19:22:02.704 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 16 tests with total length 306
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
[MASTER] 19:22:35.161 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.476 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.634 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.861 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.936 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.131 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.265 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.467 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.562 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.697 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.865 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:37.065 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:37.156 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:37.280 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:37.336 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:39.510 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:39.698 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:22:39.703 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(1221);
Integer integer1 = new Integer(1221);
MultiKey<String> multiKey0 = new MultiKey<String>("h#I", "org.apache.commons.collections4.keyvalue.MultiKey", (String) null, "MultiKey", "org.apache.commons.collections4.keyvalue.MultiKey");
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 8);
MultiKey<Object> multiKey1 = new MultiKey<Object>(integer0, multiKey0, (Object) null);
multiKeyArray0[0] = multiKey1;
Integer integer2 = new Integer(2);
Integer integer3 = new Integer(1221);
Integer integer4 = new Integer(2);
Integer integer5 = new Integer(1221);
MultiKey<Integer> multiKey2 = new MultiKey<Integer>(integer0, integer4, integer5);
Object object0 = multiKey2.getKey(2);
MultiKey<Object> multiKey3 = new MultiKey<Object>(integer2, integer3, multiKey0, object0, "dap37Be*");
Object object1 = multiKey3.getKey(2);
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, integer2, integer0, object1);
multiKeyArray0[1] = multiKey4;
MultiKey<Object> multiKey5 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[2] = multiKey5;
MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKey1, integer1);
multiKeyArray0[3] = multiKey6;
MultiKey<Object> multiKey7 = new MultiKey<Object>("_X9ui", "dap37Be*", "");
multiKeyArray0[4] = multiKey7;
MultiKey<Object> multiKey8 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[5] = multiKey8;
MultiKey<Object> multiKey9 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[6] = multiKey9;
MultiKey<Object> multiKey10 = new MultiKey<Object>(multiKey6, multiKey6, object1);
multiKeyArray0[7] = multiKey10;
MultiKey<MultiKey<Object>> multiKey11 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey11.toString();

[MASTER] 19:22:40.361 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:40.991 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-50/tests/15
* Done!

* Computation finished
