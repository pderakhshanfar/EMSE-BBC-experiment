* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 6740
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 1811718915
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 604s and 3411 generations, 2379457 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 19:25:20.558 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 13 tests with total length 270
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
[MASTER] 19:26:16.623 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:17.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:17.212 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:17.367 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:17.536 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:17.778 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.015 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.018 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.commons.collections4.keyvalue.MultiKey;
[MASTER] 19:26:18.018 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[0];
MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
String[] stringArray1 = multiKey0.getKeys();
Integer integer0 = new Integer(259);
Integer integer1 = new Integer(259);
Integer integer2 = new Integer(259);
Integer integer3 = new Integer(259);
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integer0, integer0, integer1, integer2, integer3);
multiKey1.size();
MultiKey<Object> multiKey2 = new MultiKey<Object>(stringArray1);
MultiKey<Object> multiKey3 = new MultiKey<Object>("MultiKey[]", multiKey2);
Integer integer4 = new Integer((-724));
Integer integer5 = new Integer((-831));
Integer integer6 = new Integer(259);
MultiKey<Integer> multiKey4 = new MultiKey<Integer>(integer1, integer4, integer5, integer6);
MultiKey<Object> multiKey5 = new MultiKey<Object>(integer1, multiKey4, multiKey0);
MultiKey<MultiKey<Object>> multiKey6 = new MultiKey<MultiKey<Object>>(multiKey3, multiKey5, multiKey2, multiKey5, (MultiKey<Object>) null);
MultiKey<Object>[] multiKeyArray0 = multiKey6.getKeys();
assertEquals(5, multiKeyArray0.length);


[MASTER] 19:26:18.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.667 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.806 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:18.925 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:21.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:26:21.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:26:21.641 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object object0 = new Object();
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 6);
Integer integer0 = new Integer(1);
MultiKey<Object> multiKey0 = new MultiKey<Object>(integer0, integer0, object0);
multiKeyArray0[0] = multiKey0;
MultiKey<Object> multiKey1 = new MultiKey<Object>(multiKey0, object0, multiKey0);
multiKeyArray0[1] = multiKey1;
Object object1 = new Object();
MultiKey<Object> multiKey2 = new MultiKey<Object>(object1, multiKey0, object1);
multiKeyArray0[2] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[3] = multiKey3;
MultiKey<Object> multiKey4 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
multiKeyArray0[4] = multiKey4;
MultiKey<Object> multiKey5 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[5] = multiKey5;
MultiKey<MultiKey<Object>> multiKey6 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
Object object2 = multiKey6.getKey(1);
MultiKey<Object> multiKey7 = new MultiKey<Object>(object0, object0, object0, object2, object0);
String string0 = "rb";
multiKey6.toString();

[MASTER] 19:26:22.372 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
[MASTER] 19:26:22.782 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-50/tests/24
* Done!

* Computation finished
