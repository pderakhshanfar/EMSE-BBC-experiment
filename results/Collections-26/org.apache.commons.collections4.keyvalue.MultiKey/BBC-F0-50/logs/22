* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 4072
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 94348885
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 601s and 3223 generations, 1996824 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 19:24:29.221 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 15 tests with total length 325
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 75%
* Compiling and checking tests
[MASTER] 19:24:47.224 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:47.672 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:47.810 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:47.937 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.184 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.385 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.commons.collections4.keyvalue.MultiKey;
[MASTER] 19:24:48.392 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer[] integerArray0 = new Integer[4];
Integer integer0 = new Integer(389);
integerArray0[0] = integer0;
Integer integer1 = new Integer((-2691));
integerArray0[1] = integer1;
Integer integer2 = new Integer(0);
integerArray0[2] = integer2;
int int0 = (-1);
Integer integer3 = new Integer((-1));
integerArray0[3] = integer3;
MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.toString();
multiKey0.size();
multiKey0.hashCode();
Integer integer4 = new Integer(237);
MultiKey<Object> multiKey1 = new MultiKey<Object>(integer4, int0);
multiKey1.toString();
multiKey1.getKey(0);
multiKey1.size();
multiKey1.toString();
String[] stringArray0 = new String[9];
stringArray0[0] = "MultiKey[389, -2691, 0, -1]";
stringArray0[1] = "org.apache.commons.collections4.keyvalue.MultiKey";
stringArray0[2] = "MultiKey[237, -1]";
stringArray0[3] = "MultiKey[389, -2691, 0, -1]";
stringArray0[4] = "MultiKey[389, -2691, 0, -1]";
stringArray0[5] = "MultiKey[389, -2691, 0, -1]";
stringArray0[6] = "MultiKey[389, -2691, 0, -1]";
stringArray0[7] = "MultiKey[389, -2691, 0, -1]";
stringArray0[8] = "MultiKey[237, -1]";
MultiKey<String> multiKey2 = new MultiKey<String>(stringArray0);
MultiKey<MultiKey<String>> multiKey3 = new MultiKey<MultiKey<String>>(multiKey2, multiKey2, multiKey2, multiKey2);
MultiKey<String>[] multiKeyArray0 = multiKey3.getKeys();
assertEquals(4, multiKeyArray0.length);


[MASTER] 19:24:48.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.768 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:48.975 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:49.243 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:49.455 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:49.575 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:49.764 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:52.939 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:53.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:24:53.089 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[0];
boolean boolean0 = false;
MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0, false);
MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0, multiKey0, multiKey0);
multiKey1.toString();
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 3);
Integer integer0 = new Integer(3);
MultiKey<Object> multiKey2 = new MultiKey<Object>(multiKey1, integer0);
MultiKey<Object> multiKey3 = new MultiKey<Object>(integer0, multiKey1, multiKey2, multiKey0);
multiKeyArray0[0] = multiKey3;
MultiKey<Object> multiKey4 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[1] = multiKey4;
MultiKey<Object> multiKey5 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKey4.toString();
multiKeyArray0[2] = multiKey5;
MultiKey<MultiKey<Object>> multiKey6 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey6.toString();
multiKey0.getKeys();
multiKey0.toString();
Integer[] integerArray0 = new Integer[7];
integerArray0[0] = integer0;
Integer integer1 = new Integer((int) integerArray0[0]);
integerArray0[1] = integer1;
integerArray0[2] = integer0;
integerArray0[3] = integer0;
integerArray0[4] = integer0;
integerArray0[5] = integer0;
integerArray0[6] = integer0;
MultiKey<Integer> multiKey7 = new MultiKey<Integer>(integerArray0, boolean0);
multiKey7.size();
multiKey0.getKeys();

[MASTER] 19:24:53.599 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:24:53.989 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-50/tests/22
* Done!

* Computation finished
