* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.keyvalue.MultiKey
* Starting Client-0
* Connecting to master process on port 12472
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-26/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.keyvalue.MultiKey
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 152
* Using seed 3472061247
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 68 / 152
* Search finished after 604s and 3996 generations, 2394906 statements, best individual has fitness: 16.0
* Minimizing test suite
[MASTER] 19:21:37.246 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 37
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 32
* Number of covered goals: 31
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 13
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 16 tests with total length 361
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 72%
* Compiling and checking tests
[MASTER] 19:22:34.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:34.619 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:34.809 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:34.955 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.107 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.256 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.373 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.463 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.819 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:35.958 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.042 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.096 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.165 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:36.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:39.765 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:39.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:22:39.922 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MultiKey<String> multiKey0 = new MultiKey<String>("", "", "");
Integer[] integerArray0 = new Integer[8];
int int0 = 11;
Integer integer0 = new Integer(11);
integerArray0[0] = integer0;
Integer integer1 = new Integer(int0);
integerArray0[1] = integer1;
Integer integer2 = new Integer((-1840));
integerArray0[2] = integer2;
Integer integer3 = new Integer(int0);
integerArray0[3] = integer3;
Integer integer4 = new Integer((int) integerArray0[2]);
integerArray0[4] = integer4;
Integer integer5 = new Integer(23);
integerArray0[5] = integer5;
Integer integer6 = new Integer(10);
integerArray0[6] = integer6;
int int1 = 2;
Integer integer7 = new Integer(2);
integerArray0[7] = integer7;
MultiKey<Integer> multiKey1 = new MultiKey<Integer>(integerArray0, false);
multiKey1.toString();
MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 7);
Object object0 = new Object();
MultiKey<Object> multiKey2 = new MultiKey<Object>(integer7, object0, "MultiKey[11, 11, -1840, 11, -1840, 23, 10, 2]");
multiKeyArray0[0] = multiKey2;
MultiKey<Object> multiKey3 = new MultiKey<Object>((Object[]) integerArray0, false);
MultiKey<Object> multiKey4 = new MultiKey<Object>(multiKey1, multiKey1, multiKey3);
multiKeyArray0[1] = multiKey4;
MultiKey<Object> multiKey5 = new MultiKey<Object>("", integer5, int0, integerArray0[4], multiKey4);
multiKeyArray0[2] = multiKey5;
MultiKey<Object> multiKey6 = new MultiKey<Object>(multiKey4, multiKey2, multiKey1, integer1, "");
multiKeyArray0[3] = multiKey6;
Object object1 = new Object();
MultiKey<Object> multiKey7 = new MultiKey<Object>(integerArray0[2], object1, "", int1);
multiKeyArray0[4] = multiKey7;
MultiKey<Object> multiKey8 = new MultiKey<Object>("", "", "");
multiKeyArray0[5] = multiKey8;
MultiKey<Object> multiKey9 = new MultiKey<Object>((Object[]) multiKeyArray0, false);
multiKeyArray0[6] = multiKey9;
MultiKey<MultiKey<Object>> multiKey10 = new MultiKey<MultiKey<Object>>(multiKeyArray0);
multiKey10.toString();

[MASTER] 19:22:40.923 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 19:22:41.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'MultiKey_ESTest' to results/Collections-26/org.apache.commons.collections4.keyvalue.MultiKey/BBC-F0-50/tests/7
* Done!

* Computation finished
