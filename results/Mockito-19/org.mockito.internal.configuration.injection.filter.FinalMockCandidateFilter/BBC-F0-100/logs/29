* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter
* Starting Client-0
* Connecting to master process on port 5166
* Analyzing classpath: 
  - subjects/buggy-versions/Mockito-19/build/classes/main
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
  - subjects/buggy-versions/Mockito-19/compileLib/byte-buddy-0.6.8.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 39
* Using seed 3134606856
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 18 / 39
[MASTER] 02:26:45.415 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1.thenInject()Ljava/lang/Object;: Line 36: 882794,812246,0| Number of FF evals: 346735
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1.thenInject()Ljava/lang/Object;: I12 Branch 2 IFNE L30 - true: 882794,812246,0| Number of FF evals: 346735
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1.thenInject()Ljava/lang/Object;: Line 30: 882794,812246,0| Number of FF evals: 346735
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$1.thenInject()Ljava/lang/Object;: I12 Branch 2 IFNE L30 - false: 882794,812246,0| Number of FF evals: 346735
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$2.thenInject()Ljava/lang/Object;: Line 43: 882794,812246,0| Number of FF evals: 346735
Number of times BBC is called, activated, and useful for org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter$2.thenInject()Ljava/lang/Object;: root-Branch: 882794,812246,0| Number of FF evals: 346734
* Search finished after 601s and 10940 generations, 1319299 statements, best individual has fitness: 17.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 12
* Number of covered goals: 5
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 8
* Number of covered goals: 5
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 2
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 8
* Number of covered goals: 5
* Generated 4 tests with total length 17
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
[MASTER] 02:36:43.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:36:43.654 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:36:43.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:36:43.879 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:36:43.987 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 02:36:44.073 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'FinalMockCandidateFilter_ESTest' to results/Mockito-19/org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter/BBC-F0-100/tests/29
* Done!

* Computation finished
