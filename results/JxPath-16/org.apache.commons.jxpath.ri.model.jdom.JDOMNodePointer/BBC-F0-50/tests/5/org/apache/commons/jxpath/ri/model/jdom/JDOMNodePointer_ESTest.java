/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 02:00:45 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Element element0 = new Element("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr:org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "88bc~EJ2");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("PD", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[ProcessingInstruction: ", locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertEquals("[ProcessingInstruction: ", object0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CDATA cDATA0 = new CDATA("iR>|*1=Hz");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, cDATA0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Namespace namespace0 = Namespace.getNamespace("<<unknown namespace>>");
      String string0 = JDOMNodePointer.findEnclosingAttribute(locale0, ";", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "PD");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("ebY", "ebY");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "ebY");
      QName qName0 = new QName("JXPath: found java.home property ", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("C", "C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("JH,GYcyj+,0_+s4zl", "5+MFlW('{D");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: JH,GYcyj+,0_+s4zl:5+MFlW('{D
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Element element0 = new Element("Z", "Z", "Z");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z");
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apcecmonu.x3a6s.r.mo-ex.jdom.JDOMUode7otm", "org.apcecmonu.x3a6s.r.mo-ex.jdom.JDOMUode7otm");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Document document0 = new Document();
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("Z", "Z");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, (String) null, (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, (QName) null, 1561, (Object) "qc(2q4Z;$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.getNamespace("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "German");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 7929);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      QName qName0 = new QName("=|a)cog", "$%{o?KGV=n0cXe");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      variablePointer0.setIndex((-110));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '=|a)cog:$%{o?KGV=n0cXe'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.getNamespace((String) null);
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"<<unknown namespace>>\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \"<\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("Z", "Z");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = jDOMNodePointer1.getName();
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, (Object) null);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      // Undeclared exception!
      jDOMNodePointer2.createAttribute(jXPathContext0, qName0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Element element0 = new Element("Z");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: Z
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Element element0 = new Element("ebY", "ebY", "ebY");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "]");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("&I3");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", locale0, "http://www.w3.org/XML/1998/namespace");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("@cSIa ({lovoNIj&");
      QName qName0 = new QName("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, (String) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, (NodePointer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CDATA cDATA0 = new CDATA(" to be set to ");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, " to be set to ");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("0`@isql8_");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("0`@isql8_", "xml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '0`@isql8_:xml'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "88bc~EJ2");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "PD");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.forLanguageTag("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("preserve");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "wZ(<peC'dG\"rS");
      CDATA cDATA0 = new CDATA("\tQ/}57Y\"FcW");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('wZ(<peC&apos;dG&quot;rS')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("ebY");
      QName qName0 = new QName("ebY");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.commons.jxpath.ri.compiler.CoreOperation");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CDATA cDATA0 = new CDATA("iR>|*1=Hz");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = new QName("Cannot find an element by ID - no IdentityManager has been specified");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[ProcessingInstruction: ", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "[ProcessingInstruction: ", (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "]");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CDATA cDATA0 = new CDATA("']");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Element element0 = new Element("ebY", "ebY", "ebY");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeTypeTest0, true, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = new Object();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(object0, locale0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "]");
      boolean boolean0 = jDOMNodePointer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, (Object) null);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("preserve");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "wZ(<peC'dG\"rS");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, (Locale) null, (String) null);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, jDOMNodePointer0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for id('wZ(<peC&apos;dG&quot;rS')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      HashMap<JDOMNodePointer, Document> hashMap0 = new HashMap<JDOMNodePointer, Document>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", hashMap0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer')/processing-instruction('org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertEquals(1, jDOMNodePointer1.getLength());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/xml:org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer[1]", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "6bkm");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('6bkm')", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Element element1 = element0.setAttribute("ebY", "PD");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "88bc~EJ2");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = jDOMNodePointer1.getName();
      jDOMNodePointer1.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer1.createAttribute(jXPathContext0, qName0);
      assertEquals("xml:org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.getNamespace("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0.WHOLE_COLLECTION);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      QName qName0 = new QName("/>]");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2050148348));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Comment comment0 = new Comment("/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("&quot;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1843430589));
      String string0 = JDOMNodePointer.getLocalName(nodeTypeTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("PD", "ebl");
      Attribute attribute0 = new Attribute("ebl", "ebl", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("ebl", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("German", "@nqx!'P)~-d&M+eO", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("German", "Factory is not set on the JXPathContext - cannot create path: ", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("b");
      String string0 = JDOMNodePointer.getPrefix(locale_LanguageRange0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      HashMap<ProcessingInstruction, NodeTypeTest> hashMap0 = new HashMap<ProcessingInstruction, NodeTypeTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("d", hashMap0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("Z");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Document document0 = new Document((List) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("ebY", "ebY", "ebY");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) "Z", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("K+f");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) "K+f", (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("Z");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Element element0 = new Element("Z", "Z");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Element element0 = new Element("ebY", "ebY");
      QName qName0 = new QName("ebY");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "ebY");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Locale locale0 = Locale.GERMAN;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "JCz8WdOmf3q$9:,?");
      QName qName0 = new QName((String) null, "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("SeNY", "SeNY");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "SeNY");
      Element element1 = new Element("SeNY", "SeNY");
      element1.setText("bBv{Cf_&h@g");
      jDOMNodePointer0.setValue(element1);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("ebY");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "PD");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.setValue((Object) null);
      assertNull(jDOMNodePointer1.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("eY", "eY");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "eY");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest@0000000003");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("self", "http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = jDOMNodePointer0.createPath(jXPathContext0, (Object) processingInstruction0);
      assertSame(nodePointer0, jDOMNodePointer0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("ebY", "PD");
      Text text0 = new Text("ebY");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      jDOMNodePointer0.setValue(text0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = new Locale("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.forLanguageTag("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("[CDATA: ]", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(jDOMNodePointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      CDATA cDATA0 = new CDATA("org.jdom.CDATA@0000000004");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "org.jdom.CDATA@0000000004");
      jDOMNodePointer0.setValue("ogFr &euqwxXzmY");
      assertEquals("ogFr &euqwxXzmY", cDATA0.getText());
      assertEquals("ogFr &euqwxXzmY", cDATA0.getValue());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Comment comment0 = new Comment("\" could not be added as content to \"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("\" could not be added as content to \"", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Comment comment0 = new Comment("<<unknown namespace>>");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, Integer.MIN_VALUE, locale0);
      jDOMNodePointer0.createPath((JXPathContext) null, (Object) nodePointer0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Document document0 = new Document(element0);
      NodePointer nodePointer0 = jDOMNodePointer0.createPath(jXPathContext0, (Object) document0);
      nodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apcecmonu.x3a6s.r.mo-ex.jdom.JDOMUode7otm", "org.apcecmonu.x3a6s.r.mo-ex.jdom.JDOMUode7otm");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      assertNull(qName0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr", "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      DocType docType0 = new DocType("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Document document0 = new Document(element0, docType0, "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePointmr");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "z81\"`R#Gn");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("ebY");
      Element element1 = element0.setText("ebY");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "PD");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Element element0 = new Element("ebY");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "PD");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpa6h.ri.model.jdom.JDOMNodePointmr", namespace0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer0.WHOLE_COLLECTION, locale0);
      jDOMNodePointer0.createPath((JXPathContext) null, (Object) nodePointer0);
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(nodePointer0, qName0, nodePointer0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer1, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePoBntmr");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.comons.jxpa6h.ri.model.jdom.JDOMNodePoBntmr", "http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer1 = NodePointer.newNodePointer(qName0, processingInstruction0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("eY", "eY");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "eY");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest@0000000003");
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("eY", qName0.toString());
      
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Element element0 = new Element("b");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "b");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.getNamespaceURI("/processing-instruction('");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = jDOMNodePointer1.getName();
      NodePointer nodePointer0 = jDOMNodePointer1.createAttribute((JXPathContext) null, qName0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals("xml:org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", qName0.toString());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("/processing-instruction('");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Element element0 = new Element("Z");
      QName qName0 = new QName("Z", "Z");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ";dZhhx(WGmLI");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[ProcessingInstruction: ", locale0);
      QName qName0 = new QName("ws~>#RHHM=1", "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "[ProcessingInstruction: ");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1306);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) nodeTypeTest0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CDATA cDATA0 = new CDATA("gf.Ef0N");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "gf.Ef0N");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("Z", "Z", "Z");
      CDATA cDATA0 = new CDATA("w.L?g3VA'28i('k");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("Z", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/text()[1]/Z:Z[1]", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "YdRWK-qy8");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Comment comment0 = new Comment("/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Text text0 = new Text("");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("(");
      assertEquals(1, nodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "Z");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
