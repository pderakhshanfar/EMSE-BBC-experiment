/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 22:57:07 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("wT8h", "wT8h", "i-eP|K:6");
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("wT8h", "?'[E");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/processing-instruction('wT8h')[1]/wT8h:wT8h[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("A");
      Element element1 = new Element("A", "A");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "A");
      jDOMNodePointer0.setValue(element0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("preserve", "preserve", "preserve");
      Locale locale0 = Locale.forLanguageTag("QQ*k");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "The name \"");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("preserve", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("bA");
      Integer integer0 = new Integer(16777216);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, integer0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, true, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "B)6PJaq_))dZa7Zu0k");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      QName qName0 = new QName("A");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: A
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      Integer integer0 = new Integer(1);
      Locale locale0 = new Locale("A");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, "A");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer1.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("C");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("C");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'C'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LinkedList<JDOMNodePointer> linkedList0 = new LinkedList<JDOMNodePointer>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("2'tD4L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Text text0 = new Text("lang");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0, "lang");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "A", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Element element0 = new Element("zA", "zA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("zA", (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 58, (Object) element0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      QName qName0 = new QName("-%O?c-R=.C,'cX!r", "K{i9Zy");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "-%O?c-R=.C,'cX!r");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) "-%O?c-R=.C,'cX!r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("t", "t");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "xml");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-1706));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Locale locale0 = Locale.forLanguageTag("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "UDFsmEYe_)B\"");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"null\" is not legal for JDOM/XML attributes: XML names cannot be null or empty.
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      QName qName0 = new QName("< o");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, (NodePointer) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: < o
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "65`AZzr\"xVIqXlm+w");
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("peceding", "peceding", "peceding");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("peceding", locale0, "Cannot create an attribute for path ");
      LinkedList<JDOMNodePointer> linkedList0 = new LinkedList<JDOMNodePointer>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eHdjAhB!ye^.>Oh");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "eHdjAhB!ye^.>Oh");
      QName qName0 = jDOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-33));
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("preserve", "@t{})Nff");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "@t{})Nff");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "QFA~F60q$r");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "QFA~F60q$r");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "QFA~F60q$r");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, jDOMNodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, nodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("z", "z");
      Attribute attribute0 = new Attribute("z", "z", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, (Locale) null, "z2lEuwtx.cjK2n`");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jDOMNodePointer0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('z2lEuwtx.cjK2n`')", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HashMap<Attribute, ProcessingInstruction> hashMap0 = new HashMap<Attribute, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("zbA", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 1108);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /processing-instruction('zbA')[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("zbA", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("bA");
      Integer integer0 = new Integer(16777216);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, integer0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HashMap<ProcessingInstructionTest, Integer> hashMap0 = new HashMap<ProcessingInstructionTest, Integer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("bA", hashMap0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("bA");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA", "[Namespace: prefix \"zbA\" is mapped to URI \"zbA\"]");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("zbA:zbA", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("zbA", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("zbA", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("65`AZzr\"xVIqX.m+w", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Text text0 = new Text("lang");
      Locale locale0 = new Locale("lang");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0, "lang");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("lang", object0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eHdjAhB!ye^.>Oh");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "1]}Y?Z");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Comment comment0 = new Comment("preserve");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) comment0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("/text()");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, jXPathContext0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Cannot set property ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '/text()'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      CDATA cDATA0 = new CDATA("\"\r\"");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0, "\"\r\"");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) null, locale0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "65`AZzr\"xVIqXlm+w");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.equals(nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("zbA", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("wT8h", "wT8h", "i-eP|K:6");
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("wT8h", "?'[E");
      element0.setContent((Content) processingInstruction0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('wT8h')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.compiler.NodeTest");
      Locale locale0 = Locale.CHINA;
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.compiler.NodeTest");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.setContent((Content) cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "65`AZzr\"xVIqXlm+w");
      QName qName0 = new QName("processing-instruction('65`AZzr\"xVIqXlm+w')");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('65`AZzr&quot;xVIqXlm+w')/@processing-instruction('65`AZzr\"xVIqXlm+w'), operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = new Locale("@;Lb+|>ZBP7v{=Ua};", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "-%O?c-R=.C,'cX!r");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('-%O?c-R=.C,&apos;cX!r')", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/zbA[1]", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      Integer integer0 = new Integer((-1789569704));
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, "A");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("A", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('A')/A:A[1]", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      QName qName0 = new QName("-%O?c-R=.C,'cX!r", "K{i9Zy");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "-%O?c-R=.C,'cX!r");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("wT8h", "wT8h", "i-eP|K:6");
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("wT8h", "?'[E");
      element0.setContent((Content) processingInstruction0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      jDOMNodePointer0.remove();
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("xml:zbA", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      QName qName0 = new QName("preserve", "@t{})Nff");
      Element element0 = new Element("preserve");
      Locale locale0 = Locale.forLanguageTag("QA%");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "The nme \"");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: preserve
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("zbA", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Comment comment0 = new Comment("~F >;5E\"6");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "node()");
      boolean boolean0 = jDOMNodePointer0.isLanguage("xml");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("j", "j", "j");
      Element element1 = new Element("space");
      element1.addContent((Content) element0);
      Namespace namespace0 = Namespace.getNamespace("", "<<unknown namespace>>");
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "<<unknown namespace>>", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Element element0 = new Element("m");
      element0.setAttribute("m", "{^u;");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "m", namespace0);
      assertNotNull(string0);
      assertEquals("{^u;", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("T", "T", "T");
      Element element1 = element0.setAttribute("T", "");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element1, "T", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Comment comment0 = new Comment("~F >;5E\"6");
      String string0 = JDOMNodePointer.getLocalName(comment0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Attribute attribute0 = new Attribute("u", "u");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("u", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Attribute attribute0 = new Attribute("K", "K", 5);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA", "zbA");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("zbA", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("K", "<!--");
      Attribute attribute0 = new Attribute("K", "K", 4, namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("K", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("zbA", "http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Surrogate Pair Truncated");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("`", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      Text text0 = new Text("7sS}=");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Integer integer0 = new Integer(1509);
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, "Rd0i:t4vi6");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "?");
      LinkedList<ProcessingInstructionTest> linkedList0 = new LinkedList<ProcessingInstructionTest>();
      Document document0 = new Document(linkedList0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CDATA cDATA0 = new CDATA("&apos;");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "&apos;", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "<<unknown namespace>>", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("`", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("zbA", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("zA");
      Locale locale0 = new Locale("zA", "zA", "zA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "zA");
      QName qName0 = new QName("zA", "zA");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("zbA", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA", "zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("zbA", (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      QName qName0 = new QName("rS");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Element element0 = new Element("A");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "A");
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("A", "\"e/1+Rhl5Lg@^");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      List list0 = element0.cloneContent();
      jDOMNodePointer0.setValue(list0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Element element0 = new Element("O");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("ybf", "A**(o\"tE]o(;3");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eHdjAhB!ye^.>Oh");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "eHdjAhB!ye^.>Oh");
      jDOMNodePointer0.setValue("eHdjAhB!ye^.>Oh");
      assertEquals("eHdjAhB!ye^.>Oh", cDATA0.getValue());
      assertEquals("eHdjAhB!ye^.>Oh", cDATA0.getText());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = new Locale("@;Lb+|>ZBP7v{=Ua};", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "-%O?c-R=.C,'cX!r");
      Object object1 = jDOMNodePointer0.getValue();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = new Locale("'");
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      jDOMNodePointer0.setValue("http://www.w3.org/2000/xmlns/");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Element element0 = new Element("bA", "bA", "bA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("A");
      Locale locale0 = Locale.forLanguageTag("A");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "A");
      Document document0 = new Document();
      Document document1 = document0.addContent((Content) element0);
      jDOMNodePointer0.setValue(document1);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("zbA", "eHdjAhB!ye^.>Oh");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("eHdjAhB!ye^.>Oh", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("zbA", nodeNameTest0.toString());
      assertEquals("zbA", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("zA");
      Document document0 = new Document();
      document0.setContent((Content) element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      jDOMNodePointer0.setValue("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("65`AZzr\"xVIqX.m+w", locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("peedi");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Locale locale0 = Locale.JAPAN;
      jDOMNodePointer0.setValue("peedi");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/XML/1998/namespace");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Element element0 = new Element("peceding", "peceding", "peceding");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("peceding", locale0, "Cannot create an attribute for path ");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for peceding
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Attribute attribute0 = new Attribute("KhsF", "//www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(attribute0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CDATA cDATA0 = new CDATA("eHdjAhB!ye^.>Oh");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "eHdjAhB!ye^.>Oh");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("z", "z");
      Attribute attribute0 = new Attribute("z", "z", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, (Locale) null, "z2lEuwtx.cjK2n`");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((NodePointer) jDOMNodePointer0, (Object) null);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Element element0 = new Element("zbA", "zbA", "zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "zbA");
      QName qName0 = jDOMNodePointer0.getName();
      CDATA cDATA0 = new CDATA("org.jdom.Comment");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("zbA:zbA", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      String string0 = jDOMNodePointer0.getNamespaceURI("rS");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = new Locale("zbA", "zbA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("vSpPftyhW");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("bA", "bA", "bA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("<<unknown namespace>>", "bA");
      jDOMNodePointer0.attributeIterator(qName0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Element element0 = new Element("preserve");
      Locale locale0 = Locale.forLanguageTag("QA%");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "The nme \"");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Element element0 = new Element("zA", "zA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("zA", (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 58, (Object) element0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("65`AZzr\"xVIqX.m+w", locale0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Element element0 = new Element("bA", "bA");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      Object object1 = jDOMNodePointer0.getBaseValue();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("zbA", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "k,Mn*n*|e2 axhD@");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "?");
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("?");
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "2\"u(L3");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
