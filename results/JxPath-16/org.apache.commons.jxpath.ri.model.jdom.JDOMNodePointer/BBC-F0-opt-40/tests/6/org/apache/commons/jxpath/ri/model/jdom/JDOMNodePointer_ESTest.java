/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 07:44:36 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("preerv", namespace0);
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("xml:preerv", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("xml:M5ahQ.", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HashMap<ProcessingInstruction, CDATA> hashMap0 = new HashMap<ProcessingInstruction, CDATA>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("wP", hashMap0);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "ufh7RN}ArUO");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locale locale0 = new Locale("", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "");
      Element element0 = new Element("org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("M5ahQ.", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2179);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, (String) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertSame(nodeTypeTest0, object0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Object object0 = new Object();
      Namespace namespace0 = Namespace.getNamespace((String) null, "preserve");
      String string0 = JDOMNodePointer.findEnclosingAttribute(object0, "D$,Yh", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQ.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("ahQ.");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(qName0, locale0);
      QName qName1 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "')");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Element element0 = new Element("g", "g", "g");
      QName qName0 = new QName("g");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: g
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "]");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("]");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Locale locale0 = Locale.CANADA;
      CDATA cDATA0 = new CDATA("Factory is not set on the JXPathContext - cannot create path: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "wNu/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ']'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      QName qName0 = new QName("I!= W)g(*=X?HJ", "I!= W)g(*=X?HJ");
      Locale locale0 = Locale.CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, (Object) locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("ahQs", "ahQs", "ahQs");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "http://www.w3.org/2000/xmlns/", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("amQs", "amQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "amQs");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "amQs");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 2157, (Object) jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "}Z?");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("}Z?");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      variablePointer0.setIndex(47);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '}Z?'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Namespace namespace0 = Namespace.getNamespace(")k5x>xkl\"t{x>HaJN$");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      QName qName1 = new QName(";v+]#'Nb0\"^.?");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \";v+]#'Nb0\"^.?\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \";\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Namespace namespace0 = Namespace.getNamespace(")k5x>xkl\"t{x>HaJN$");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      QName qName0 = new QName(" |0M<A_B[H$2^i7", " |0M<A_B[H$2^i7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable:  |0M<A_B[H$2^i7: |0M<A_B[H$2^i7
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "d3(t=^5[f=E");
      Element element0 = new Element("DlAcRI", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer((Object) jDOMNodePointer1, locale0);
      // Undeclared exception!
      jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "3'cGDB WQ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "4");
      QName qName0 = new QName("l]0V[GJ5}-3_0V", "DlAcRI");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) cDATA0);
      Variables variables0 = jXPathContext0.getVariables();
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variables0, locale0, "");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-346));
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, (String) null);
      QName qName0 = new QName((String) null, "V`t,KTymMOfNR7B");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: V`t,KTymMOfNR7B
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CDATA cDATA0 = new CDATA("J");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      Locale locale0 = new Locale("/>]", "J", "Cannot setValue of an object that is not some other object's property");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/>]");
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, "http://www.w3.org/2000/xmlns/");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(47);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, (NodePointer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      QName qName0 = jDOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/ahQs:ahQs[1]", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "Error occurred in JDOM application.");
      QName qName0 = new QName("");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("M5ahQ.", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("]");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      QName qName0 = new QName("]");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstructionTest0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "ahQs", (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Comment comment0 = new Comment("=Dz&HjKT&Nw");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("=Dz&HjKT&Nw", object0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "+&xW{3 e;");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertEquals("+&xW{3 e;", object0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "+&xW{3 e;");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((NodePointer) null, jDOMNodePointer0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "+&xW{3 e;");
      boolean boolean0 = jDOMNodePointer0.equals("+&xW{3 e;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "+&xW{3 e;");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = new Locale("x");
      Element element0 = new Element("x");
      HashMap<String, ProcessingInstruction> hashMap0 = new HashMap<String, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("x", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      element0.setContent((Content) processingInstruction0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('x')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.setContent((Content) cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", (Locale) null, "OW.F'nv{H%7 \"");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('OW.F&apos;nv{H%7 &quot;')", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = new Locale("x");
      HashMap<String, ProcessingInstruction> hashMap0 = new HashMap<String, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("x", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('x')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName("<<unknown namespace>>", (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /ahQs:ahQs[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("I", "I", "I");
      Element element1 = new Element("I");
      QName qName0 = new QName((String) null, "Y");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, element1);
      assertEquals("I", nodePointer0.getNamespaceURI());
      
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("$Y/I[1]", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs", "ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = new Locale("", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.setContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http");
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      QName qName0 = new QName("", "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5aQ.", "M5aQ.");
      Element element0 = new Element("M5aQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("M5aQ.:M5aQ.", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /text()[1]/@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("amQs", "amQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "amQs");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "amQs");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 2157, (Object) jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Comment comment0 = new Comment("");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, comment0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("org.apache.commons.jxpath.util.ValueUtils", "org.apache.commons.jxpath.util.ValueUtils");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Element element1 = new Element("org.apache.commons.jxpath.util.ValueUtils");
      element1.setContent((Content) element0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("org.apache.commons.jxpath.util.ValueUtils");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("8T3}jT1^/99I", locale0, "8T3}jT1^/99I");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      String string0 = JDOMNodePointer.getLocalName(nodeTypeTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("s", "s");
      Attribute attribute0 = new Attribute("s", "s", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("s", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Attribute attribute0 = new Attribute("space", "space");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("s", "s");
      Attribute attribute0 = new Attribute("s", "s", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("s", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Text text0 = new Text("=");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "M5ahQ.");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "9RZ:<N8Z=.S,\"jgBvc");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "9RZ:<N8Z=.S,\"jgBvc", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Document document0 = new Document((Element) null, (DocType) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("M5ahQ.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "M5ahQ.");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("M5ahQ.:M5ahQ.", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("");
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      HashMap<Locale.LanguageRange, Object> hashMap0 = new HashMap<Locale.LanguageRange, Object>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("ahQs", hashMap0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("", processingInstruction0.getData());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Namespace namespace0 = Namespace.getNamespace(")k5x>xkl\"t{x>HaJN$");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      CDATA cDATA0 = new CDATA("JXPath internal error: compareChildNodes called for ");
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(")k5x>xkl\"t{x>HaJN$", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Comment comment0 = new Comment("node()");
      jDOMNodePointer0.setValue(comment0);
      assertEquals("node()", comment0.getText());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      CDATA cDATA0 = new CDATA("8T3}jT1^/99I");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "ti");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M5ahQ.", "M'3}qe/ocI");
      Locale locale0 = Locale.forLanguageTag("k[G5vZ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("M'3}qe/ocI", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("NXpATHZ#-?E`@623", locale0, "<<unknown namespace>>");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Comment comment0 = new Comment("");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "");
      Text text0 = new Text("");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, text0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.setValue(jDOMNodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("<<unknown namespace>>");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("i5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Document document0 = new Document(linkedList0);
      document0.setRootElement(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("http://www.w3.org/2000/xmlns/");
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HashMap<ProcessingInstruction, CDATA> hashMap0 = new HashMap<ProcessingInstruction, CDATA>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("wP", hashMap0);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "ufh7RN}ArUO");
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("wP", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      Document document0 = new Document();
      Document document1 = document0.setContent((Content) element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document1, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("org.apache.commons.jxpath.util.ValueUtils", "org.apache.commons.jxpath.util.ValueUtils");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Element element1 = new Element("org.apache.commons.jxpath.util.ValueUtils");
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      linkedList0.add((Text) cDATA0);
      Element element2 = element1.setContent((Collection) linkedList0);
      jDOMNodePointer0.setValue(element2);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertEquals(1, element0.getContentSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("NXpATHZ#-?E`@623", locale0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("as0", "as0", "as0");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
      element0.addContent((Content) cDATA0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("as0", "as0", "as0");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "as0");
      NodePointer nodePointer0 = jDOMNodePointer0.createPath(jXPathContext0, (Object) jDOMNodePointer1);
      int int0 = nodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals(1, element0.getContentSize());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) qName0);
      assertEquals("M5ahQ.", qName0.toString());
      
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, namespace0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer1, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3021);
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      Attribute attribute0 = new Attribute("xml", "http://www.w3.org/2000/xmlns/", (Namespace) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodePointer0, attribute0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, nodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "d3(t=^5[f=E");
      Element element0 = new Element("DlAcRI", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for en_GB
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Namespace namespace0 = Namespace.getNamespace("M5ahQ.", "M5ahQ.");
      Element element0 = new Element("M5ahQ.", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("M5ahQ.");
      assertEquals("M5ahQ.", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Comment comment0 = new Comment("]");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "]");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("qz");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("RKX~wEP/B_e,M2");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("ahQs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("Cannot create an object for path ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Element element0 = new Element("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "space");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "space");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "}Z?");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("}Z?");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: $}Z?
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2179);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, (String) null);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      QName qName0 = new QName("Im22(`1EV", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("$Im22(`1EV:", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("f}`+]X{)=bFd(0CV2)");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "f}`+]X{)=bFd(0CV2)");
      QName qName0 = jDOMNodePointer0.getName();
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "d3(t=^5[f=E");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "]");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeNameTest0, true, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CDATA cDATA0 = new CDATA("]");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      QName qName0 = new QName((String) null, (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("~*fB'-Dh\"7$-");
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("M5ahQ.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
