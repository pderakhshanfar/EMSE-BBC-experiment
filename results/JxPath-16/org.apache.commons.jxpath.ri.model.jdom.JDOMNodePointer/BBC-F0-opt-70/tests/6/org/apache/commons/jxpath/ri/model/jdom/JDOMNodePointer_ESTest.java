/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 07:45:06 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      QName qName0 = new QName("Bqx|P-KPe?!T,J@./{*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "ASQ2P8");
      boolean boolean0 = jDOMNodePointer0.isLanguage("~ ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("nOMBCu", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Comment comment0 = new Comment("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      QName qName0 = new QName("->3!");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "-");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertSame(object0, nodeNameTest0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute((Object) null, "http://www.w3.org/2000/xmlns/", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
      assertEquals("nOMBCu", nodeNameTest0.toString());
      assertEquals("nOMBCu", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((NodePointer) jDOMNodePointer0, (Object) locale0);
      QName qName0 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      QName qName0 = new QName("nLMC", "nLMC");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("nLMC");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: nLMC:nLMC
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nOMBCu", "DV?djBM}8Wt 9LsjXs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "http://www.w3.org/XML/1998/namespace");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.ProcessingInstruction cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("space", "space");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Document document0 = new Document((List) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "[");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Z/:6nq*r");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("h", "h", "h");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "org.jdom.CDATA@0000000007", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Element element0 = new Element("lang", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "SWczW,HG=;1N<f");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 2786, (Object) jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, (Locale) null, "");
      QName qName0 = new QName("processing-instruction('')", "http://www.w3.org/XML/1998/namespace");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 3473, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Element element0 = new Element("n", "n");
      Attribute attribute0 = new Attribute("n", "?3bm]c");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "?3bm]c");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) attribute0);
      QName qName0 = new QName("?3bm]c", "P.e&S|t");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 2850);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu", "nBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nBCu");
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QName qName0 = new QName("M+ Sa7Q3d", "M+ Sa7Q3d");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: M+ Sa7Q3d:M+ Sa7Q3d
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("\r", "\r");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '\r:\r'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("hjUXqZFfAjb[Xw:$_yX");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: hjUXqZFfAjb[Xw:$_yX
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "ASQ2P8");
      QName qName0 = new QName("~3qW=&]", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Element element0 = new Element("lang", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      QName qName0 = new QName("tN_9h-wH", "tN_9h-wH");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "tN_9h-wH");
      String string0 = jDOMNodePointer0.toString();
      assertEquals("$tN_9h-wH:tN_9h-wH", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      QName qName0 = new QName("nOMBCu", "te7!8^v4Yu;sv");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("nOMBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      String string0 = jDOMNodePointer0.toString();
      assertEquals("$nOMBCu:te7!8^v4Yu;sv/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "ASQ2P8");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('ASQ2P8')", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.QName@0000000007");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "&J");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 3592);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('nOMBCu')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("nOMBCu", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      QName qName0 = new QName("c");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) jXPathContext0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      QName qName0 = new QName(" Tk(s|e81eKY", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) qName0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("nOMBCu", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      Text text0 = new Text("c");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) text0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("vh", "vh", "space");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vh");
      String string0 = jDOMNodePointer0.getNamespaceURI("/K");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      String string0 = jDOMNodePointer0.getNamespaceURI("nOMBCu");
      assertEquals("nOMBCu", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      QName qName0 = new QName("tN_9h-wH", "tN_9h-wH");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "tN_9h-wH");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Element element0 = new Element("vh", "vh", "space");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vh");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      QName qName0 = new QName("nOMBCu", "te7!8^v4Yu;sv");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("nOMBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("nOMBCu", locale0, "nOMBCu");
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.QName@0000000007");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "&J");
      boolean boolean0 = jDOMNodePointer0.equals("Cannot add null attribute");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element0, locale0, "o");
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("/", locale0, "hdav}$3Qhj\"|Wg'0y%q");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("nOMBCu", "7.1m1RkS*jPz");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('hdav}$3Qhj&quot;|Wg&apos;0y%q')/@nOMBCu:7.1m1RkS*jPz, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      QName qName0 = new QName("vh", "vh");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("space", "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, processingInstruction0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("$vh:vh/processing-instruction('space')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.toString();
      assertEquals("id('nOMBCu')/nOMBCu[1]", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu", "nBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nBCu");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("nBCu:nBCu", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: $/text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Comment comment0 = new Comment("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "acy%");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Attribute attribute0 = new Attribute("nOMBCXu", "nOMBCXu");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("nOMBCXu", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, object0);
      String string0 = JDOMNodePointer.getLocalName(jDOMNodePointer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Attribute attribute0 = new Attribute("nOMBCXu", "nOMBCXu");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Element element0 = new Element("h", "h", "h");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("h", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Attribute attribute0 = new Attribute("nOMBCu", "nOMBCu");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CDATA cDATA0 = new CDATA("=8+Qr$,#] ]");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "=8+Qr$,#] ]");
      HashMap<CDATA, Object> hashMap0 = new HashMap<CDATA, Object>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nCu", hashMap0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0, "");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu");
      Locale locale0 = Locale.KOREAN;
      CDATA cDATA0 = new CDATA("\"following-sibling::\"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "nOMBCu");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "nOMBCu");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = Locale.ROOT;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "JlO6HgA Hpp2p'IW#");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "<<unknown namespace>>", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale_Category0, locale0, "JXPath internal error: compareChildNodes called for ");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      CDATA cDATA0 = new CDATA("lang");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu");
      Locale locale0 = Locale.PRC;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DocType docType0 = new DocType("nBCu", "nBCu");
      Document document0 = new Document(element0, docType0, "getRootCause");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu", "nBCu");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      QName qName0 = new QName("nBCu");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Element element0 = new Element("spc");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "spc");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "spc");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("vh", "vh", "space");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, ".-v|de:^X");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("vh:vh", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("nOMBCu", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("/processing-instruction('");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Chinese (China)", locale0, "Factory could not create a child node for path: ");
      QName qName0 = new QName("France", "', ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "France", (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Element element0 = new Element("spL");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "spL");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      DocType docType0 = new DocType("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", "http://www.w3.org/2000/xmlns/", "org.apache.commons.jxpath.ri.model.beans.PropertyIterator");
      Document document1 = document0.setDocType(docType0);
      Document document2 = document1.addContent((Content) element0);
      jDOMNodePointer0.setValue(document2);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu", "nBCu");
      Locale locale0 = Locale.KOREAN;
      Element element1 = new Element("nBCu", "nBCu", "nBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "nBCu");
      element0.addContent("http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(element0);
      assertEquals(1, element1.getContentSize());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("org.jdom.CDATA", locale0, "space");
      jDOMNodePointer0.setValue(jDOMNodePointer1);
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      HashMap<Locale, NodeNameTest> hashMap0 = new HashMap<Locale, NodeNameTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nOMBCu", hashMap0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("vh", "vh", "space");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vh");
      CDATA cDATA0 = new CDATA("vh");
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("vh", "vh", "space");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vh");
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      CDATA cDATA0 = new CDATA("vD]?5\"qxpM\"KiKlo!r");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "nOMBCu");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Object object0 = new Object();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      jDOMNodePointer0.setValue(object0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) variablePointer0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(jDOMNodePointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Q", "Q");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATA cDATA0 = new CDATA("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Q:Q'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nOMBCu", "DV?djBM}8Wt 9LsjXs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "http://www.w3.org/XML/1998/namespace");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("DV?djBM}8Wt 9LsjXs", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<NodeNameTest> linkedList0 = new LinkedList<NodeNameTest>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, "<<unknown namespace>>");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Comment comment0 = new Comment("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "acy%");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = new Locale("nOMBCu", "nOMBCu", "nOMBCu");
      Element element1 = element0.setText("nOMBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "nOMBCu");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("nOMBCu", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      Namespace namespace0 = Namespace.getNamespace("hjUXqZFfAjb[Xw:$_yX");
      Element element1 = new Element("c", namespace0);
      element0.addContent((Content) element1);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      Comment comment0 = new Comment("org.jdom.CDATA");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CDATA cDATA0 = new CDATA("=8+Qr$,#] ]");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "=8+Qr$,#] ]");
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("=8+Qr$,#] ]", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      HashMap<NodeNameTest, Element> hashMap0 = new HashMap<NodeNameTest, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nOMBCu", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "nOMBCu");
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("nOMBCu", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale_Category0, locale0, "JXPath internal error: compareChildNodes called for ");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      jDOMNodePointer0.setValue("xml");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu");
      Locale locale0 = Locale.PRC;
      DocType docType0 = new DocType("nBCu", "nBCu");
      Document document0 = new Document(element0, docType0, "getRootCause");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Element element0 = new Element("n", "n");
      element0.setText("?3bm]c");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "?3bm]c");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      QName qName0 = new QName("nOMBCu", "nOMBCu");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, "nOMBCu");
      NodePointer nodePointer1 = NodePointer.newNodePointer(qName0, "nOMBCu", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for nOMBCu
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "nOMBCu", "nOMBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "nOMBCu");
      QName qName0 = new QName("GBKn82");
      CDATA cDATA0 = new CDATA("N(HYHQj}%'GB+Zn");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "L");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, cDATA0);
      NodePointer nodePointer1 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Element element0 = new Element("nOMBCu", "spc", "]\"h");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "spc");
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals((-1), int0);
      assertEquals("spc:nOMBCu", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      QName qName0 = new QName("hjUXqZFfAjb[Xw:$_yX");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "xml");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: hjUXqZFfAjb[Xw
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Comment comment0 = new Comment("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "acy%");
      String string0 = jDOMNodePointer0.getNamespaceURI("acy%");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/2000/xmlns/");
      QName qName0 = new QName(":GB)N");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"GB)N\" is not legal for JDOM/XML attributes: XML names cannot contain the character \")\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Chinese (China)", locale0, "Factory could not create a child node for path: ");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LinkedList<NodeNameTest> linkedList0 = new LinkedList<NodeNameTest>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("int");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("POMCu", "POMCu", "POMCu");
      QName qName0 = new QName("POMCu", "POMCu");
      Locale locale0 = Locale.US;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, element0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("POMCu", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/POMCu:POMCu[1]/POMCu:POMCu[1]", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("spc");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "spc");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("spc", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      QName qName0 = new QName("nOMBCu", "te7!8^v4Yu;sv");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("nOMBCu");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Z/:6nq*r");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "Z/:6nq*r");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/2000/xmlns/");
      QName qName0 = new QName("nOMBCu");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotSame(nodePointer1, nodePointer0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("nOMBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nOMBCu");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, element0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("=]0\"k2&?x'T$q>mQ'UP", "xJnMTt#\"!R_xwl&s");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "OMBu");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '=]0\"k2&?x'T$q>mQ'UP:xJnMTt#\"!R_xwl&s'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("nOMBCu", "DV?djBM}8Wt 9LsjXs");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "http://www.w3.org/XML/1998/namespace");
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Element element0 = new Element("h", "h", "h");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("h");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Element element0 = new Element("nBCu", "nBCu", "nBCu");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "nBCu");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
