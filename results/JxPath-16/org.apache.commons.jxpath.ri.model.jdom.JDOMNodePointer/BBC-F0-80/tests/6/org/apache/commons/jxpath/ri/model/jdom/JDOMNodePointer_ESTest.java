/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 02:24:44 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("Ad");
      Locale locale0 = Locale.CHINESE;
      Element element1 = new Element("Ad");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      jDOMNodePointer0.setValue(element0);
      assertEquals("", element0.getNamespacePrefix());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "Z>mP?I");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("moud");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("mod", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CDATA cDATA0 = new CDATA("xml");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      CDATA cDATA1 = (CDATA)jDOMNodePointer0.getImmediateNode();
      assertEquals("xml", cDATA1.getValue());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodeNameTest0, locale0, "5DqM#:Nh;N3Ax]{i");
      NodeNameTest nodeNameTest1 = (NodeNameTest)jDOMNodePointer1.getBaseValue();
      assertEquals("<<unknown namespace>>", nodeNameTest1.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Object object0 = new Object();
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(object0, "http://www.w3.org/2000/xmlns/", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "^3HjZj@6QS1!");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jDOMNodePointer0);
      QName qName0 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "^3HjZj@6QS1!");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      QName qName0 = new QName("')", "')");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: '):')
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("mod");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'mod'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Z&Tv", locale0, "Z&Tv");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("ZshJA~$XB&&;6");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(processingInstructionTest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CDATA cDATA0 = new CDATA("xml");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("moud", "moud");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest@0000000006", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-75), (Object) qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Element element0 = new Element("Hod", "Hod");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("Hod");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vF5fB7j}yQQ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "mod");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"vF5fB7j}yQQ\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"}\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "^3HjZj@6QS1!");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "mod");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, nodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for ''
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      QName qName0 = new QName("b=-!@y3");
      Locale locale0 = Locale.UK;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "b=-!@y3", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, (Object) locale0);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("BeanInfo [class = ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("xml");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'xml'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = new QName("", "");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "R#oc_@d2");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: :
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "[");
      QName qName0 = jDOMNodePointer0.getName();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("[");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("http://www.w3.org/2000/xmlns/", locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("mfm", "mfm");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      jDOMNodePointer0.printPointerChain();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("X4");
      HashMap<ProcessingInstruction, Text> hashMap0 = new HashMap<ProcessingInstruction, Text>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("preserve", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.toString();
      assertEquals("/processing-instruction('preserve')[1]/X4[1]", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Element element0 = new Element("m");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('m')", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = new Locale("org.jdom.IllegalDataException");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "org.jdom.IllegalDataException");
      QName qName0 = new QName("[");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("mod");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("mod", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("mod");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Attribute attribute0 = new Attribute("eHh", "c$#:++qr~/Qze#");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) attribute0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("xml");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) jDOMNodePointer0.WHOLE_COLLECTION, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Element element0 = new Element("X4", "X4", "X4");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("JXPath internal error: compareChildNodes called for ", "X4");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "X4");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) variablePointer0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0.WHOLE_COLLECTION, locale0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) jDOMNodePointer0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CDATA cDATA0 = new CDATA("xml");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("xml", object0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("mod");
      assertEquals("mod", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jXPathContext0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, jXPathContext0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer2);
      assertFalse(jDOMNodePointer2.equals((Object)jDOMNodePointer0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jXPathContext0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      CDATA cDATA0 = new CDATA("`)n");
      boolean boolean0 = jDOMNodePointer0.equals(cDATA0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "processing-instruction('')");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(object0, locale0, "*X:K;c}14f\"zC$I/X");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('*X:K;c}14f&quot;zC$I/X')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("T4", "T4");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      jDOMNodePointer0.printPointerChain();
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.toString();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "m");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "R!3BY_:q@.#|8dz8<9T");
      QName qName0 = new QName("<<unknown namespace>>", "m");
      CDATA cDATA0 = new CDATA("]");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, (-1717986916), (Object) cDATA0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("mod");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("mod:mod", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ", "vF5fB7j}yQQ");
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vF5fB7j}yQQ");
      Document document0 = new Document(element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: vF5fB7j}yQQ
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("processing-instruction('')", locale0, "processing-instruction('')");
      Text text0 = new Text("");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) text0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('processing-instruction(&apos;&apos;)')/@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "m");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "R!3BY_:q@.#|8dz8<9T");
      QName qName0 = new QName("<<unknown namespace>>", "m");
      CDATA cDATA0 = new CDATA("]");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-1717986916), (Object) cDATA0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('m')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Comment comment0 = new Comment(">?/.<'{lO");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "<BtJkE0p0,+)onT");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Attribute attribute0 = new Attribute("preserve", "http://www.w3.org/XML/1998/namespace", (Namespace) null);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("preserve", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      String string0 = JDOMNodePointer.getLocalName(jDOMNodePointer0.WHOLE_COLLECTION);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Attribute attribute0 = new Attribute("k", "k");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Attribute attribute0 = new Attribute("od", "cJ:>l@;^tj>8");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("mod", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Object object0 = new Object();
      String string0 = JDOMNodePointer.getPrefix(object0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("mod:mod", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) variablePointer0.WHOLE_COLLECTION, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("T4", "T4");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      Document document0 = new Document(linkedList0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Element element0 = new Element("I", "I");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = Locale.forLanguageTag("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = new Locale("mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, (QName) null, nodeTypeTest0);
      CDATA cDATA0 = new CDATA("s1E6v");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("m");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "m");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("mod");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vF5fB7j}yQQ");
      QName qName0 = new QName("mod", "org.jdom.output.Format$DefaultEscapeStrategy");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.jdom.output.Format$DefaultEscapeStrategy");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "^3HjZj@6QS1!");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "^3HjZj@6QS1!");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("mod", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("')");
      HashMap<Object, ProcessingInstruction> hashMap0 = new HashMap<Object, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("DX", hashMap0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("moud");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      DocType docType0 = new DocType("moud", "moud", "moud");
      Document document0 = new Document(element0, docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vF5fB7j}yQQ");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Element element0 = new Element("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "[");
      Comment comment0 = new Comment("");
      jDOMNodePointer0.setValue(comment0);
      assertEquals("", comment0.getText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HashMap<Integer, ProcessingInstruction> hashMap0 = new HashMap<Integer, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("OvfQ47", hashMap0);
      Locale locale0 = Locale.CHINESE;
      Namespace namespace0 = Namespace.getNamespace("OvfQ47");
      Element element0 = new Element("mod", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("OvfQ47", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      Element element0 = new Element("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Text text0 = new Text("z2W-#");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, text0);
      jDOMNodePointer0.setValue("/text()[1]");
      assertEquals("/text()[1]", text0.getValue());
      assertEquals("/text()[1]", text0.getText());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      QName qName0 = new QName("", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Text text0 = new Text("z2W-#");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, text0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HashMap<ProcessingInstruction, Text> hashMap0 = new HashMap<ProcessingInstruction, Text>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("preserve", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null, (String) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      Comment comment0 = new Comment("Z>mP?I");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Z>mP?I", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("Z", "Z");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "vtfB7}FrQQ");
      jDOMNodePointer0.setValue("Z");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Z", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      Document document1 = document0.setRootElement(element0);
      jDOMNodePointer0.setValue(document1);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Comment comment0 = new Comment("vtfB7}FrQQ");
      Locale locale0 = Locale.forLanguageTag("vfB7}y4QQ");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Z", namespace0);
      Element element1 = element0.setContent((Content) comment0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.UK;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      document0.addContent((Content) element0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      Element element0 = new Element("mod");
      Locale locale0 = Locale.PRC;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      Element element1 = element0.addContent("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, element1);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Element element0 = new Element("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      Element element0 = new Element("mod");
      Locale locale0 = Locale.PRC;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      Element element1 = element0.addContent("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, element1);
      NodePointer nodePointer1 = jDOMNodePointer0.namespacePointer("A2");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("Hd");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("Hd");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.createPath(jXPathContext0, (Object) basicVariables0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(basicVariables0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("mod", "mod", "mod");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.createPath(jXPathContext0, (Object) qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(variablePointer0, nodePointer0);
      assertEquals(1, int0);
      assertEquals("mod:mod", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = new Locale("mod", "mod", "mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer1 = variablePointer0.createPath(jXPathContext0, (Object) "mod");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
      assertEquals((-1), int0);
      assertEquals("mod", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Element element0 = new Element("k", "lang", "k9bt=UUz(ffr");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("lang:k", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Element element0 = new Element("mod");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("\" is not legal for JDOM/XML ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      QName qName0 = new QName("vF5fB7j}yQQ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("vF5fB7j}yQQ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("DocType", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("Z>mP?I");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "$r+%4<");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Element element0 = new Element("mfm", "mfm", "mfm");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("mfm", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/mfm:mfm[1]", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) nodeIterator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = new Locale("org.jdom.IllegalDataException");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "org.jdom.IllegalDataException");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      QName qName0 = new QName("", "");
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "DWls5iG|BPelB(|12");
      QName qName0 = new QName("", "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2147483645);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ':http://www.w3.org/XML/1998/namespace'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("DocType", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("DocType", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.attributeIterator(qName0);
      assertEquals("mod", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Element element0 = new Element("mod");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = jDOMNodePointer0.isLanguage("mod");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(jXPathContext0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
