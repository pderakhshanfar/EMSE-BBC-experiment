/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 07:54:59 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("following", "following", "following");
      Locale locale0 = Locale.KOREA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("following", "following");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/processing-instruction('following')[1]/following:following[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element1 = new Element("q", namespace0);
      jDOMNodePointer0.setValue(element1);
      assertEquals(0, element1.getContentSize());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Dx");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("Dx");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.beans.PropertyIterator");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8O>x1Q}?:Q<])_m|11");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "8O>x1Q}?:Q<])_m|11");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8O>x1Q}?:Q<])_m|11");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "8O>x1Q}?:Q<])_m|11");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("l7,q^+L)");
      Namespace namespace0 = Namespace.getNamespace("org.jdom.ContentList", "org.jdom.ContentList");
      String string0 = JDOMNodePointer.findEnclosingAttribute(processingInstructionTest0, "l7,q^+L)", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Element element0 = new Element("q", "q");
      DocType docType0 = new DocType("q", "q", "q");
      Document document0 = new Document(element0, docType0, "UTF-16");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      QName qName0 = new QName("?+yNLl*0-", "?+yNLl*0-");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: ?+yNLl*0-:?+yNLl*0-
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("a:$+N9F.s+F9(SY%");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATA cDATA0 = new CDATA("a:$+N9F.s+F9(SY%");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'a:$+N9F.s+F9(SY%'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "Gv");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jDOMNodePointer0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.setValue(processingInstructionTest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null, "Index is less than 1: ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("1oYye7@P D");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("q");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "http://www.w3.org/2000/xmlns/", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = new QName("", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"http://www.w3.org/XML/1998/namespace\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"/\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("tqnl", "tqnl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = jDOMNodePointer1.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Set<String> set0 = hashMap0.keySet();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, list0);
      // Undeclared exception!
      jDOMNodePointer2.createAttribute(jXPathContext0, qName0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("r\"iXcX<q\"glM");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) comment0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      QName qName0 = new QName("Class ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "kL*:lV.:(tA&");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: Class 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QName qName0 = new QName("1oYye7@P D");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(7);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for UNKNOWN()
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("@At~");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("\"(Nlwrb7aPmIOA");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: \"(Nlwrb7aPmIOA
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("@At~");
      Locale locale0 = new Locale("@At~", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) processingInstructionTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Element element0 = new Element("v4q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(document0, (Locale) null, "d#j5)D\"l$qb");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.childIterator(nodeNameTest0, true, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      QName qName0 = new QName("1oYye7@P D");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "1oYye7@P D");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '1oYye7@P D'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("q", "q");
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CDATA cDATA0 = new CDATA("w}#5O%l0nerg");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, "org.jdom.CDATA@0000000001");
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null, "");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("Factory is not set on the JXPathContext - cannot create path: ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Text text0 = new Text("");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0, "ZM");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("Q", (String) null);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("Q", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("Q", (String) null);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Q", "/processing-instruction('");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(", operation is not alowe fr this type of node");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstructionTest0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "yMR,9f%3qQalHH:%");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("q:q", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("v4q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      Object object0 = new Object();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, object0, (Locale) null);
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("v4q", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("f", "f");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("<<unknown namespace>>", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "/text()");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "&apos;");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "&apos;", (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "n2de()");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "http://www.w3.org/2000/xmlns/", (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      CDATA cDATA0 = new CDATA("/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("/text()", object0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("q", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CDATA cDATA0 = new CDATA("_$wAKTqb5y=Y7");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "_$wAKTqb5y=Y7");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      QName qName0 = new QName("Index is less than 1: ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Index is less than 1: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, (Locale) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertSame(nodeNameTest0, object0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("v4q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.childIterator(nodeNameTest0, true, jDOMNodePointer0);
      assertEquals("v4q", nodeNameTest0.toString());
      assertEquals("v4q", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CDATA cDATA0 = new CDATA("_$wAKTq5y>=Y7");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "{,8+z Fcg");
      CDATA cDATA1 = (CDATA)jDOMNodePointer0.getBaseValue();
      assertEquals("_$wAKTq5y>=Y7", cDATA1.getValue());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "&apos;");
      QName qName0 = jDOMNodePointer0.getName();
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      CDATA cDATA0 = new CDATA("1oYye7@P D");
      boolean boolean0 = jDOMNodePointer0.equals(cDATA0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      CDATA cDATA0 = new CDATA("w}#5O%l0nerg");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      element0.setContent((Content) cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = new Locale("A {tIpW\"@G*c", "cQP3l", "cQP3l");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2191);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "A {tIpW\"@G*c");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('A {tIpW&quot;@G*c')", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "[W,7.3`<'TR");
      QName qName0 = new QName("", "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      CDATA cDATA0 = new CDATA("");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) cDATA0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('[W,7.3`<&apos;TR')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apach..commons.sxpath.ri.Jodel.jdom.JDOMNodePointer", "2:");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
      String string0 = jDOMNodePointer0.toString();
      assertEquals("/processing-instruction('org.apach..commons.sxpath.ri.Jodel.jdom.JDOMNodePointer')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("y");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "y");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('y')/y[1]", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      CDATA cDATA0 = new CDATA("q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      element0.setContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "Q");
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("Q", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("new", "new", "new");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("new:new", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "Q");
      QName qName0 = new QName("DodeP)", "&apos;");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: DodeP)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("<<unknown namespace>>", "*");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 2223, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Comment comment0 = new Comment("{M/Y$V{l8Q4y>sC[");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("q", "q");
      Attribute attribute0 = new Attribute("q", "q", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("q", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      String string0 = JDOMNodePointer.getLocalName(cDATA0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Attribute attribute0 = new Attribute("o", ")SGItn],D1/");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("q", "q", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("q", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = JDOMNodePointer.getPrefix(jDOMNodePointer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("q:q", nodeNameTest0.toString());
      assertEquals("q", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = new Locale("$CF", "Simultaneous operations: should not request pointer list while iterating over an EvalContext");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Simultaneous operations: should not request pointer list while iterating over an EvalContext", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("$CF");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Document document0 = new Document(element0, (DocType) null, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
      assertEquals("Q", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      QName qName0 = new QName("1oYye7@P D");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2073744880));
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) qName0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("q", jDOMNodePointer0.getNamespaceURI());
      assertEquals("q", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CDATA cDATA0 = new CDATA("_$wAKTqb5y=Y7");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "_$wAKTqb5y=Y7");
      Element element0 = new Element("dN", (Namespace) null);
      QName qName0 = new QName("7,OGz$O7qf6Lb!]]/w");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName((String) null, "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.yodel.beans.PropertyItirator");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "org.apache.commons.jxpath.ri.yodel.beans.PropertyItirator");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Element element0 = new Element("ancestor", "ancestor", "ancestor");
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("ancestor", "mod", ".");
      document0.setDocType(docType0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "ancestor");
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("");
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("r\"iXcX<q\"glM");
      jDOMNodePointer0.setValue(comment0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Q", "/processing-instruction('");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      CDATA cDATA0 = new CDATA("=E]Xj+#@&430w!*");
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("space", "space");
      Attribute attribute0 = new Attribute("space", "space", namespace0);
      CDATA cDATA0 = new CDATA("_$wAKTq5y>=Y7");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "{,8+z Fcg");
      jDOMNodePointer0.setValue(attribute0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      CDATA cDATA0 = new CDATA("/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      CDATA cDATA0 = new CDATA("org.jdom.ProcessingInstruction");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      QName qName0 = new QName("O^GbfdoiU", "org.apach..commons.jxpath.ri.model.jdom.JDOMNodePointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("sU", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, processingInstruction0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("<<unknown namespace>>", object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("1oYye7@P D", locale0);
      Comment comment0 = new Comment("\"//\"");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, comment0);
      Object object0 = jDOMNodePointer1.getValue();
      assertEquals("\"//\"", object0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("<<unknown namespace>>");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("<<unknown namespace>>", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      Comment comment0 = new Comment("q");
      Element element1 = element0.addContent((Content) comment0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, (Locale) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "q");
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("Q", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("q", "q");
      DocType docType0 = new DocType("q", "q", "q");
      Document document0 = new Document(element0, docType0, "UTF-16");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      QName qName0 = new QName("Class ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "kL*:lV.:(tA&");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("v", "v", "v");
      element0.addContent("3|%>%J~m/:@DV]Q");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("Was expecting:", "/processing-instruction('");
      Locale locale0 = Locale.ROOT;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer1, locale0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LinkedList<NodeTypeTest> linkedList0 = new LinkedList<NodeTypeTest>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Element element0 = new Element("VGe6");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = new QName("VGe6");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals((-1), int0);
      assertEquals("q:q", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("q");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, (String) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "org.jdom.Text@0000000004");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("bPu");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      QName qName0 = new QName("", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "o<-");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("q", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(".J5xY[p`2P");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "_.M<|<FA/bLpPc 4");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      QName qName0 = new QName("1oYye7@P D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "1oYye7@P D");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "1oYye7@P D");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("T$kyHNvJ", (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, "T$kyHNvJ");
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("Q", (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      QName qName0 = new QName("1oYye7@P D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "1oYye7@P D");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "1oYye7@P D");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Element element0 = new Element("q", "q", "q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("q");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "y");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
