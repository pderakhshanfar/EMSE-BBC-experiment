* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer
* Starting Client-0
* Connecting to master process on port 6301
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-16/target/classes
  - subjects/buggy-versions/JxPath-16/src/java
  - subjects/buggy-versions/JxPath-16/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-16/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-16/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-16/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-16/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-16/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-16/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-16/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-16/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1946
* Using seed 4180184276
* Starting evolution
* Initial Number of Goals in DynaMOSA = 365 / 1946
* Search finished after 302s and 347 generations, 203697 statements, best individual has fitness: 671.0
* Minimizing test suite
[MASTER] 05:05:21.983 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 375
* Number of covered goals: 282
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 324
* Number of covered goals: 213
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 747
* Number of covered goals: 491
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 110
* Number of covered goals: 48
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 33
* Number of covered goals: 30
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 324
* Number of covered goals: 207
* Generated 124 tests with total length 1971
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:06:15.015 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6684% of time used, but only 26/124 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 05:06:47.106 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_104_1605589606977/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer_104_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_104_1605589606977/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer_104_tmp__ESTest_scaffolding.java]]
[MASTER] 05:06:47.106 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/JxPath-16/target/classes:subjects/buggy-versions/JxPath-16/src/java:subjects/buggy-versions/JxPath-16/target/lib/commons-beanutils-1.7.0.jar:subjects/buggy-versions/JxPath-16/target/lib/commons-logging-1.1.jar:subjects/buggy-versions/JxPath-16/target/lib/jdom-1.0.jar:subjects/buggy-versions/JxPath-16/target/lib/jsp-api-2.0.jar:subjects/buggy-versions/JxPath-16/target/lib/junit-3.8.2.jar:subjects/buggy-versions/JxPath-16/target/lib/mockrunner-0.4.1.jar:subjects/buggy-versions/JxPath-16/target/lib/servletapi-2.4.jar:subjects/buggy-versions/JxPath-16/target/lib/xerces-2.4.0.jar:subjects/buggy-versions/JxPath-16/target/lib/xml-apis-2.0.2.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JxPath-16/target/classes:/experiment/subjects/buggy-versions/JxPath-16/src/java:/experiment/subjects/buggy-versions/JxPath-16/target/lib/commons-beanutils-1.7.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/commons-logging-1.1.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/jdom-1.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/jsp-api-2.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/junit-3.8.2.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/mockrunner-0.4.1.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/servletapi-2.4.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/xerces-2.4.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/xml-apis-2.0.2.jar
[MASTER] 05:06:47.106 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JxPath-16/target/classes:/experiment/subjects/buggy-versions/JxPath-16/src/java:/experiment/subjects/buggy-versions/JxPath-16/target/lib/commons-beanutils-1.7.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/commons-logging-1.1.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/jdom-1.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/jsp-api-2.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/junit-3.8.2.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/mockrunner-0.4.1.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/servletapi-2.4.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/xerces-2.4.0.jar:/experiment/subjects/buggy-versions/JxPath-16/target/lib/xml-apis-2.0.2.jar
[MASTER] 05:06:47.122 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.apache.commons.jxpath.ri.model.beans.NullPointer cannot be converted to org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: 123
[MASTER] 05:06:47.123 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_104_1605589606977/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer_104_tmp__ESTest.java uses or overrides a deprecated API.: -1
[MASTER] 05:06:47.123 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:deprecation for details.: -1
[MASTER] 05:06:47.125 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_104_1605589606977/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer_104_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 17 05:06:46 GMT 2020
4:  */
5: 
6: package org.apache.commons.jxpath.ri.model.jdom;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.Locale;
12: import org.apache.commons.jxpath.JXPathContext;
13: import org.apache.commons.jxpath.ri.QName;
14: import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
15: import org.apache.commons.jxpath.ri.model.NodePointer;
16: import org.apache.commons.jxpath.ri.model.beans.NullPointer;
17: import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
18: import org.evosuite.runtime.EvoRunner;
19: import org.evosuite.runtime.EvoRunnerParameters;
20: import org.evosuite.runtime.testdata.EvoSuiteFile;
21: import org.jdom.CDATA;
22: import org.jdom.Element;
23: import org.jdom.Namespace;
24: import org.junit.runner.RunWith;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
27: public class JDOMNodePointer_104_tmp__ESTest extends JDOMNodePointer_104_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       CDATA cDATA0 = new CDATA("");
32:       assertNotNull(cDATA0);
33:       assertEquals("", cDATA0.getValue());
34:       assertEquals("", cDATA0.getText());
35:       
36:       Locale locale0 = Locale.CHINA;
37:       assertNotNull(locale0);
38:       assertEquals("CHN", locale0.getISO3Country());
39:       assertEquals("zh_CN", locale0.toString());
40:       assertEquals("", locale0.getVariant());
41:       assertEquals("zh", locale0.getLanguage());
42:       assertEquals("CN", locale0.getCountry());
43:       assertEquals("zho", locale0.getISO3Language());
44:       
45:       JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
46:       assertNotNull(jDOMNodePointer0);
47:       assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
48:       assertEquals("CHN", locale0.getISO3Country());
49:       assertEquals("zh_CN", locale0.toString());
50:       assertEquals("", locale0.getVariant());
51:       assertEquals("zh", locale0.getLanguage());
52:       assertEquals("CN", locale0.getCountry());
53:       assertEquals("zho", locale0.getISO3Language());
54:       assertTrue(jDOMNodePointer0.isRoot());
55:       assertEquals(1, jDOMNodePointer0.getLength());
56:       assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
57:       assertNull(jDOMNodePointer0.getNamespaceURI());
58:       assertFalse(jDOMNodePointer0.isContainer());
59:       assertFalse(jDOMNodePointer0.isAttribute());
60:       assertTrue(jDOMNodePointer0.isNode());
61:       assertFalse(jDOMNodePointer0.isCollection());
62:       
63:       QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
64:       assertNotNull(qName0);
65:       assertEquals("http://www.w3.org/XML/1998/namespace", qName0.getPrefix());
66:       assertEquals("http://www.w3.org/2000/xmlns/", qName0.getName());
67:       assertEquals("http://www.w3.org/XML/1998/namespace:http://www.w3.org/2000/xmlns/", qName0.toString());
68:       
69:       Namespace namespace0 = Namespace.getNamespace("BcvKn5(wLkh:/}$:");
70:       assertNotNull(namespace0);
71:       assertEquals("BcvKn5(wLkh:/}$:", namespace0.getURI());
72:       assertEquals("", namespace0.getPrefix());
73:       
74:       Element element0 = new Element("C6", namespace0);
75:       assertNotNull(element0);
76:       assertEquals("BcvKn5(wLkh:/}$:", namespace0.getURI());
77:       assertEquals("", namespace0.getPrefix());
78:       assertEquals("C6", element0.getName());
79:       assertEquals("", element0.getNamespacePrefix());
80:       assertFalse(element0.isRootElement());
81:       assertEquals(0, element0.getContentSize());
82:       assertEquals("BcvKn5(wLkh:/}$:", element0.getNamespaceURI());
83:       
84:       Element element1 = cDATA0.getParentElement();
85:       assertNull(element1);
86:       assertEquals("", cDATA0.getValue());
87:       assertEquals("", cDATA0.getText());
88:       
89:       NullPointer nullPointer0 = (NullPointer)NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, (Object) null);
90:       assertNotNull(nullPointer0);
91:       assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
92:       assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
93:       assertEquals("CHN", locale0.getISO3Country());
94:       assertEquals("zh_CN", locale0.toString());
95:       assertEquals("", locale0.getVariant());
96:       assertEquals("zh", locale0.getLanguage());
97:       assertEquals("CN", locale0.getCountry());
98:       assertEquals("zho", locale0.getISO3Language());
99:       assertTrue(jDOMNodePointer0.isRoot());
100:       assertEquals(1, jDOMNodePointer0.getLength());
101:       assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
102:       assertNull(jDOMNodePointer0.getNamespaceURI());
103:       assertFalse(jDOMNodePointer0.isContainer());
104:       assertFalse(jDOMNodePointer0.isAttribute());
105:       assertTrue(jDOMNodePointer0.isNode());
106:       assertFalse(jDOMNodePointer0.isCollection());
107:       assertEquals("http://www.w3.org/XML/1998/namespace", qName0.getPrefix());
108:       assertEquals("http://www.w3.org/2000/xmlns/", qName0.getName());
109:       assertEquals("http://www.w3.org/XML/1998/namespace:http://www.w3.org/2000/xmlns/", qName0.toString());
110:       assertEquals(Integer.MIN_VALUE, nullPointer0.getIndex());
111:       assertFalse(nullPointer0.isAttribute());
112:       assertFalse(nullPointer0.isCollection());
113:       assertFalse(nullPointer0.isRoot());
114:       assertFalse(nullPointer0.isContainer());
115:       assertTrue(nullPointer0.isLeaf());
116:       assertFalse(nullPointer0.isActual());
117:       assertEquals(0, nullPointer0.getLength());
118:       assertTrue(nullPointer0.isNode());
119:       assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());
120:       
121:       // Undeclared exception!
122:       try { 
123:         ((JDOMNodePointer) nullPointer0).namespacePointer("BcvKn5(wLkh:/}$:");
124:         fail("Expecting exception: IllegalArgumentException");
125:       
126:       } catch(IllegalArgumentException e) {
127:       }
128:   }
129: }
RegularFileObject[/tmp/EvoSuite_104_1605589606977/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer_104_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 17 05:06:46 GMT 2020
5:  */
6: 
7: package org.apache.commons.jxpath.ri.model.jdom;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class JDOMNodePointer_104_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(JDOMNodePointer_104_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.apache.commons.jxpath.Variables",
82:       "org.apache.commons.jxpath.JXPathBeanInfo",
83:       "org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory",
84:       "org.apache.commons.jxpath.JXPathInvalidSyntaxException",
85:       "org.apache.commons.jxpath.ri.model.beans.PropertyPointer",
86:       "org.apache.commons.jxpath.ri.model.beans.BeanPointer",
87:       "org.jdom.Document",
88:       "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator",
89:       "org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer",
90:       "org.apache.commons.jxpath.util.BasicTypeConverter",
91:       "org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper",
92:       "org.jdom.Namespace",
93:       "org.jdom.Verifier",
94:       "org.jdom.IllegalNameException",
95:       "org.apache.commons.jxpath.ri.model.VariablePointer",
96:       "org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory",
97:       "org.apache.commons.jxpath.ri.model.NodeIterator",
98:       "org.jdom.IllegalDataException",
99:       "org.apache.commons.jxpath.JXPathContextFactory",
100:       "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
101:       "org.apache.commons.jxpath.ExpressionContext",
102:       "org.apache.commons.jxpath.ri.QName",
103:       "org.jdom.Attribute",
104:       "org.apache.commons.jxpath.ri.model.beans.CollectionPointer",
105:       "org.jdom.Parent",
106:       "org.apache.commons.jxpath.CompiledExpression",
107:       "org.apache.commons.jxpath.NodeSet",
108:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator",
109:       "org.apache.commons.jxpath.JXPathContext",
110:       "org.apache.commons.jxpath.ri.compiler.TreeCompiler",
111:       "org.jdom.filter.Filter",
112:       "org.apache.commons.jxpath.JXPathNotFoundException",
113:       "org.jdom.Comment",
114:       "org.apache.commons.jxpath.ri.model.beans.NullPointer",
115:       "org.apache.commons.jxpath.JXPathIntrospector",
116:       "org.apache.commons.jxpath.ri.compiler.NodeTest",
117:       "org.apache.commons.jxpath.KeyManager",
118:       "org.apache.commons.jxpath.util.TypeConverter",
119:       "org.apache.commons.jxpath.ri.compiler.NameAttributeTest",
120:       "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl$1",
121:       "org.apache.commons.jxpath.DynamicPropertyHandler",
122:       "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest",
123:       "org.apache.commons.jxpath.Container",
124:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer",
125:       "org.apache.commons.jxpath.ri.model.NodePointerFactory",
126:       "org.apache.commons.jxpath.ri.NamespaceResolver",
127:       "org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer",
128:       "org.apache.commons.jxpath.AbstractFactory",
129:       "org.jdom.ContentList",
130:       "org.jdom.IllegalAddException",
131:       "org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer",
132:       "org.jdom.Element",
133:       "org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory",
134:       "org.apache.commons.jxpath.ri.Compiler",
135:       "org.apache.commons.jxpath.BasicVariables",
136:       "org.apache.commons.jxpath.JXPathAbstractFactoryException",
137:       "org.apache.commons.jxpath.JXPathInvalidAccessException",
138:       "org.apache.commons.jxpath.ri.compiler.CoreOperationEqual",
139:       "org.jdom.ContentList$FilterListIterator",
140:       "org.apache.commons.jxpath.ri.model.NodePointer",
141:       "org.apache.commons.jxpath.ri.model.VariablePointer$1",
142:       "org.jdom.JDOMException",
143:       "org.apache.commons.jxpath.ri.compiler.CoreOperation",
144:       "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer",
145:       "org.jdom.ContentList$FilterList",
146:       "org.apache.commons.jxpath.Functions",
147:       "org.apache.commons.jxpath.ri.model.container.ContainerPointer",
148:       "org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory",
149:       "org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl",
150:       "org.jdom.filter.ElementFilter",
151:       "org.apache.commons.jxpath.ri.axes.RootContext",
152:       "org.apache.commons.jxpath.ri.axes.InitialContext",
153:       "org.jdom.Text",
154:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer",
155:       "org.apache.commons.beanutils.DynaBean",
156:       "org.apache.commons.jxpath.MapDynamicPropertyHandler",
157:       "org.apache.commons.jxpath.ri.compiler.NodeTypeTest",
158:       "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl",
159:       "org.apache.commons.jxpath.util.TypeUtils$1",
160:       "org.apache.commons.jxpath.IdentityManager",
161:       "org.apache.commons.jxpath.util.ValueUtils",
162:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator",
163:       "org.apache.commons.jxpath.JXPathException",
164:       "org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer",
165:       "org.apache.commons.jxpath.PackageFunctions",
166:       "org.jdom.Content",
167:       "org.jdom.CDATA",
168:       "org.apache.commons.jxpath.ri.model.VariablePointerFactory",
169:       "org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory",
170:       "org.apache.commons.jxpath.JXPathContextFactoryConfigurationError",
171:       "org.jdom.DocType",
172:       "org.apache.commons.jxpath.util.TypeUtils",
173:       "org.apache.commons.jxpath.JXPathTypeConversionException",
174:       "org.jdom.filter.AbstractFilter",
175:       "org.apache.commons.jxpath.JXPathBasicBeanInfo",
176:       "org.jdom.ProcessingInstruction",
177:       "org.apache.commons.jxpath.ri.EvalContext",
178:       "org.apache.commons.jxpath.JXPathFunctionNotFoundException",
179:       "org.jdom.DataConversionException",
180:       "org.jdom.EntityRef",
181:       "org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory",
182:       "org.apache.commons.jxpath.ri.compiler.NodeNameTest",
183:       "org.apache.commons.jxpath.Pointer",
184:       "org.jdom.IllegalTargetException",
185:       "org.jdom.AttributeList",
186:       "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer",
187:       "org.apache.commons.jxpath.ri.compiler.Expression",
188:       "org.apache.commons.jxpath.ri.compiler.Operation",
189:       "org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory",
190:       "org.apache.commons.jxpath.Function",
191:       "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer"
192:     );
193:   } 
194: 
195:   private static void resetClasses() {
196:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(JDOMNodePointer_104_tmp__ESTest_scaffolding.class.getClassLoader()); 
197: 
198:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
199:       "org.apache.commons.jxpath.ri.model.NodePointer",
200:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer",
201:       "org.jdom.Namespace",
202:       "org.apache.commons.jxpath.util.BasicTypeConverter",
203:       "org.apache.commons.jxpath.util.TypeUtils$1",
204:       "org.apache.commons.jxpath.util.TypeUtils",
205:       "org.apache.commons.jxpath.ri.QName",
206:       "org.apache.commons.jxpath.PackageFunctions",
207:       "org.apache.commons.jxpath.JXPathContext",
208:       "org.apache.commons.jxpath.JXPathContextFactory",
209:       "org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl",
210:       "org.apache.commons.jxpath.ri.compiler.TreeCompiler",
211:       "org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory",
212:       "org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory",
213:       "org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory",
214:       "org.apache.commons.jxpath.ri.model.VariablePointerFactory",
215:       "org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory",
216:       "org.jdom.Document",
217:       "org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory",
218:       "org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory",
219:       "org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory",
220:       "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl$1",
221:       "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl",
222:       "org.apache.commons.jxpath.util.ValueUtils",
223:       "org.apache.commons.jxpath.JXPathBasicBeanInfo",
224:       "org.apache.commons.jxpath.JXPathIntrospector",
225:       "org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer",
226:       "org.apache.commons.jxpath.ri.model.beans.BeanPointer",
227:       "org.apache.commons.jxpath.ri.NamespaceResolver",
228:       "org.jdom.Content",
229:       "org.jdom.Text",
230:       "org.jdom.CDATA",
231:       "org.jdom.Verifier",
232:       "org.apache.commons.jxpath.BasicVariables",
233:       "org.apache.commons.jxpath.ri.model.VariablePointer",
234:       "org.jdom.ContentList",
235:       "org.jdom.Attribute",
236:       "org.jdom.IllegalNameException",
237:       "org.apache.commons.jxpath.ri.compiler.NodeTest",
238:       "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest",
239:       "org.jdom.Element",
240:       "org.apache.commons.jxpath.ri.compiler.NodeNameTest",
241:       "org.jdom.IllegalDataException",
242:       "org.apache.commons.jxpath.ri.compiler.NodeTypeTest",
243:       "org.jdom.ProcessingInstruction",
244:       "org.jdom.IllegalTargetException",
245:       "org.jdom.AttributeList",
246:       "org.apache.commons.jxpath.JXPathException",
247:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator",
248:       "org.apache.commons.jxpath.ri.model.beans.NullPointer",
249:       "org.apache.commons.jxpath.ri.model.VariablePointer$1",
250:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator",
251:       "org.jdom.Comment",
252:       "org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer",
253:       "org.jdom.DocType",
254:       "org.jdom.EntityRef",
255:       "org.apache.commons.jxpath.ri.JXPathCompiledExpression",
256:       "org.apache.commons.jxpath.ri.parser.XPathParser",
257:       "org.apache.commons.jxpath.ri.parser.SimpleCharStream",
258:       "org.apache.commons.jxpath.ri.parser.XPathParserTokenManager",
259:       "org.apache.commons.jxpath.ri.parser.Token",
260:       "org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls",
261:       "org.apache.commons.jxpath.ri.Parser",
262:       "org.apache.commons.jxpath.ri.parser.TokenMgrError",
263:       "org.apache.commons.jxpath.JXPathInvalidSyntaxException",
264:       "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator",
265:       "org.jdom.output.Format",
266:       "org.jdom.output.Format$TextMode",
267:       "org.jdom.output.Format$DefaultEscapeStrategy",
268:       "org.jdom.output.XMLOutputter",
269:       "org.jdom.IllegalAddException",
270:       "org.jdom.filter.AbstractFilter",
271:       "org.jdom.filter.ElementFilter",
272:       "org.jdom.ContentList$FilterList",
273:       "org.jdom.ContentList$FilterListIterator",
274:       "org.apache.commons.jxpath.ri.parser.ParseException",
275:       "org.apache.commons.jxpath.ri.parser.XPathParserConstants",
276:       "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer",
277:       "org.apache.commons.jxpath.ri.compiler.Step",
278:       "org.apache.commons.jxpath.ri.compiler.Expression",
279:       "org.apache.commons.jxpath.ri.compiler.Path",
280:       "org.apache.commons.jxpath.ri.compiler.LocationPath",
281:       "org.apache.commons.jxpath.ri.EvalContext",
282:       "org.apache.commons.jxpath.ri.axes.InitialContext",
283:       "org.apache.commons.jxpath.ri.axes.RootContext",
284:       "org.apache.commons.jxpath.ri.axes.ChildContext",
285:       "org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator",
286:       "org.jdom.DescendantIterator",
287:       "org.jdom.filter.ContentFilter",
288:       "org.jdom.FilterIterator",
289:       "org.apache.commons.jxpath.ri.model.beans.PropertyIterator",
290:       "org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator",
291:       "org.apache.commons.jxpath.ri.model.beans.PropertyPointer",
292:       "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer",
293:       "org.apache.commons.jxpath.ri.model.beans.CollectionPointer",
294:       "org.apache.commons.jxpath.MapDynamicPropertyHandler",
295:       "org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer",
296:       "org.apache.commons.jxpath.ri.axes.SimplePathInterpreter",
297:       "org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer",
298:       "org.apache.commons.jxpath.JXPathBasicBeanInfo$1",
299:       "org.apache.commons.jxpath.JXPathInvalidAccessException",
300:       "org.apache.commons.jxpath.util.ReverseComparator",
301:       "org.jdom.JDOMException",
302:       "org.jdom.DataConversionException",
303:       "org.jdom.filter.NegateFilter"
304:     );
305:   }
306: }

[MASTER] 05:06:47.126 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CDATA cDATA0 = new CDATA("");
assertNotNull(cDATA0);
assertEquals("", cDATA0.getValue());
assertEquals("", cDATA0.getText());

Locale locale0 = Locale.CHINA;
assertNotNull(locale0);
assertEquals("CHN", locale0.getISO3Country());
assertEquals("zh_CN", locale0.toString());
assertEquals("", locale0.getVariant());
assertEquals("zh", locale0.getLanguage());
assertEquals("CN", locale0.getCountry());
assertEquals("zho", locale0.getISO3Language());

JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
assertNotNull(jDOMNodePointer0);
assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
assertEquals("CHN", locale0.getISO3Country());
assertEquals("zh_CN", locale0.toString());
assertEquals("", locale0.getVariant());
assertEquals("zh", locale0.getLanguage());
assertEquals("CN", locale0.getCountry());
assertEquals("zho", locale0.getISO3Language());
assertTrue(jDOMNodePointer0.isRoot());
assertEquals(1, jDOMNodePointer0.getLength());
assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
assertNull(jDOMNodePointer0.getNamespaceURI());
assertFalse(jDOMNodePointer0.isContainer());
assertFalse(jDOMNodePointer0.isAttribute());
assertTrue(jDOMNodePointer0.isNode());
assertFalse(jDOMNodePointer0.isCollection());

QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
assertNotNull(qName0);
assertEquals("http://www.w3.org/XML/1998/namespace", qName0.getPrefix());
assertEquals("http://www.w3.org/2000/xmlns/", qName0.getName());
assertEquals("http://www.w3.org/XML/1998/namespace:http://www.w3.org/2000/xmlns/", qName0.toString());

Namespace namespace0 = Namespace.getNamespace("BcvKn5(wLkh:/}$:");
assertNotNull(namespace0);
assertEquals("BcvKn5(wLkh:/}$:", namespace0.getURI());
assertEquals("", namespace0.getPrefix());

Element element0 = new Element("C6", namespace0);
assertNotNull(element0);
assertEquals("BcvKn5(wLkh:/}$:", namespace0.getURI());
assertEquals("", namespace0.getPrefix());
assertEquals("C6", element0.getName());
assertEquals("", element0.getNamespacePrefix());
assertFalse(element0.isRootElement());
assertEquals(0, element0.getContentSize());
assertEquals("BcvKn5(wLkh:/}$:", element0.getNamespaceURI());

Element element1 = cDATA0.getParentElement();
assertNull(element1);
assertEquals("", cDATA0.getValue());
assertEquals("", cDATA0.getText());

NullPointer nullPointer0 = (NullPointer)NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, (Object) null);
assertNotNull(nullPointer0);
assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
assertEquals("CHN", locale0.getISO3Country());
assertEquals("zh_CN", locale0.toString());
assertEquals("", locale0.getVariant());
assertEquals("zh", locale0.getLanguage());
assertEquals("CN", locale0.getCountry());
assertEquals("zho", locale0.getISO3Language());
assertTrue(jDOMNodePointer0.isRoot());
assertEquals(1, jDOMNodePointer0.getLength());
assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
assertNull(jDOMNodePointer0.getNamespaceURI());
assertFalse(jDOMNodePointer0.isContainer());
assertFalse(jDOMNodePointer0.isAttribute());
assertTrue(jDOMNodePointer0.isNode());
assertFalse(jDOMNodePointer0.isCollection());
assertEquals("http://www.w3.org/XML/1998/namespace", qName0.getPrefix());
assertEquals("http://www.w3.org/2000/xmlns/", qName0.getName());
assertEquals("http://www.w3.org/XML/1998/namespace:http://www.w3.org/2000/xmlns/", qName0.toString());
assertEquals(Integer.MIN_VALUE, nullPointer0.getIndex());
assertFalse(nullPointer0.isAttribute());
assertFalse(nullPointer0.isCollection());
assertFalse(nullPointer0.isRoot());
assertFalse(nullPointer0.isContainer());
assertTrue(nullPointer0.isLeaf());
assertFalse(nullPointer0.isActual());
assertEquals(0, nullPointer0.getLength());
assertTrue(nullPointer0.isNode());
assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());

((JDOMNodePointer) nullPointer0).namespacePointer("BcvKn5(wLkh:/}$:");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'JDOMNodePointer_ESTest' to results/JxPath-16/org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer/BBC-F0/tests/15
* Done!

* Computation finished
