/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 04:42:20 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Object object0 = element0.clone();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      NodePointer nodePointer0 = jDOMNodePointer0.createPath(jXPathContext0, object0);
      assertFalse(nodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      QName qName0 = new QName("J", "J");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, locale0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.isLanguage("J");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locale locale0 = new Locale("J", "J");
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      QName qName0 = new QName("p-V9x!Ua");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "p-V9x!Ua");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      NodeNameTest nodeNameTest1 = (NodeNameTest)jDOMNodePointer0.getImmediateNode();
      assertEquals("p-V9x!Ua", nodeNameTest1.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "X@dJA`-p1WT");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("J", "J");
      String string0 = JDOMNodePointer.findEnclosingAttribute(processingInstruction0, "<<unknown namespace>>", (Namespace) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("S", "S");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName((String) null, (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "_,HX;VS");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Element element0 = new Element("f", "f", "f");
      Locale locale0 = new Locale(" xmlns");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: http://www.w3.org/2000/xmlns/
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      Object object0 = new Object();
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "16X q ame']");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATA cDATA0 = new CDATA("J@,L&+/km");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Q2I", "]t[f=FU@_DP,ct!5Zk'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.ProcessingInstruction cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("J");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("]", locale0, "");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      CDATA cDATA0 = new CDATA("]");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE, (Object) list0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Element element0 = new Element("I", "I");
      Locale locale0 = new Locale("I", "I");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("I", locale0, "I");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer1);
      QName qName0 = new QName("");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, (-671));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      QName qName0 = new QName("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "J");
      QName qName0 = new QName("|TwOa");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"|TwOa\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \"|\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("Y", "Y");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, element0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodePointer0, nodeTypeTest0);
      // Undeclared exception!
      jDOMNodePointer1.createAttribute((JXPathContext) null, qName0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("&quot;", "\"//\"");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "TW7$%G^");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Locale locale0 = Locale.forLanguageTag("<<unknown namespace>>");
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Comment comment0 = new Comment("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, comment0);
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for [Comment: <!--J-->]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      BasicVariables basicVariables0 = new BasicVariables();
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      QName qName0 = new QName("@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: @(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "ib7m^mao?,c:");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      CDATA cDATA0 = new CDATA("/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "/");
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(document0, locale0, ")ZN$K");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.childIterator(processingInstructionTest0, true, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory is not set on the JXPathContext - cannot create path: ", (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Comment comment0 = new Comment("(Ojz7Al\"U9f!7ydAy;");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, comment0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("[");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Factory is not set on the JXPathContext - cannot create path: :null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      QName qName0 = new QName("J");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, "J");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("null()", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("H", "H");
      Locale locale0 = Locale.JAPANESE;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("boolean", "J", "&!yK9');C0@#`@^o");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("boolean", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Element element0 = new Element("J", "J");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("<<unknown namespace>>", "$iCN|b[0X");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      CDATA cDATA0 = new CDATA("7YnAg");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, nodeTypeTest0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("J:J", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "J");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("J", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("vSGH?f", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "J");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      QName qName0 = new QName("*H<mEE>8E_~?Nit0>60");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, object0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("J");
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, (Locale) null, "&apos;");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("3");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("!`yQAf(NS!y)r^B(P%A");
      Locale locale0 = Locale.forLanguageTag("kxJci 5^m4.)");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(processingInstructionTest0, locale0, "wX,x8~7S s+hMR");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/dZUR!^4aP?G5BpIm=");
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = jDOMNodePointer0.equals(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Cannot remove root JDOM node", (Locale) null);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) null, locale0, "name");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("B", "B");
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.UK;
      element0.setText("B");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.addContent((Content) cDATA0);
      String string0 = jDOMNodePointer0.toString();
      assertEquals("/text()[2]", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "The data \"");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-2568));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('The data &quot;')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Text text0 = new Text((String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, (Locale) null, "C<'NdAvc");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('C<&apos;NdAvc')", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("J", "J");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('J')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Element element0 = new Element("H", "H", "H");
      Locale locale0 = Locale.JAPANESE;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "H");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('H')/H:H[1]", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "{ -aEI}yS8cw");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "(.1:XO=|");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element("B", "B", "B");
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.addContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("sJ", "sJ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("sJ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertTrue(nodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "J");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("J:J", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Comment comment0 = new Comment("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, comment0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("2,lv8@B{sNC[$`#`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      String string0 = JDOMNodePointer.getLocalName(comment0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("f", "f", "f");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = new QName("f", "f");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      String string0 = nodePointer0.toString();
      assertEquals("/@f:f", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Attribute attribute0 = new Attribute("J", "http://www.w3.org/XML/1998/namespace");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Element element0 = new Element("J", "J", "J");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Latin1", "Latin1");
      Locale locale0 = Locale.forLanguageTag("Latin1");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "kxJci 5^m4.)");
      Document document0 = new Document();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Object object0 = new Object();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.JXPathTypeConversionException");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "J");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      CDATA cDATA0 = new CDATA("processing-instruction()");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/dZUR!^4aP?G5BpIm=");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "<<unknown namespace>>", (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("J", "J");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Element element0 = new Element("MdI", "MdI", "MdI");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("MdI", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      DocType docType0 = new DocType("MdI", "/?ukXP~d");
      Document document0 = new Document(element0, docType0);
      jDOMNodePointer1.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("");
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("java.lang.Object@0000000008");
      jDOMNodePointer0.setValue(comment0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      HashMap<Text, NodeTypeTest> hashMap0 = new HashMap<Text, NodeTypeTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("J", hashMap0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("|TwOa");
      jDOMNodePointer0.setValue(text0);
      assertEquals("|TwOa", text0.getValue());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Q2I", "]t[f=FU@_DP,ct!5Zk'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("]t[f=FU@_DP,ct!5Zk'", object0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "kxJci 5^m4.)");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Comment comment0 = new Comment("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("J", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = new Locale("J", "J");
      Element element0 = new Element("boolean", "J", "&!yK9');C0@#`@^o");
      element0.addContent("boolean");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("boolean", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = new Locale("J", "J");
      Element element0 = new Element("boolean", "J", "&!yK9');C0@#`@^o");
      HashMap<Comment, ProcessingInstructionTest> hashMap0 = new HashMap<Comment, ProcessingInstructionTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("boolean", hashMap0);
      element0.addContent((Content) processingInstruction0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("S", "S");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("J", "J");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "qG!15Tw2p\"%om");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "/processing-instruction('J')[1]", (NodeTest) nodeNameTest0);
      assertEquals("J", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("J", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "The data \"");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      element0.addContent("|TwOa");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("J");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, jDOMNodePointer0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
      assertEquals("J:J", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName((String) null, "org.jdom.filter.AbstractFilter");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = jDOMNodePointer0.namespacePointer("H");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer1, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("f", "f", "f");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = new QName("f", "f");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = jDOMNodePointer0.namespacePointer("?5jc2jv");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null, "");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("N2D5QI@=Z oT");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Text text0 = new Text((String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, (Locale) null, "C<'NdAvc");
      String string0 = jDOMNodePointer0.getNamespaceURI("J");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "oH");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("_=8B:cqHAA}D");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("J", locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Locale locale0 = new Locale("i");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("i", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, jDOMNodePointer1);
      NodePointer nodePointer0 = jDOMNodePointer2.namespacePointer("Factory is not set on the JXPathContext - cannot create path: ");
      // Undeclared exception!
      jDOMNodePointer2.compareChildNodePointers(nodePointer0, jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      QName qName0 = new QName("p-V9x!Ua");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "p-V9x!Ua");
      Text text0 = new Text("4!nmOA)jZSr");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, text0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("H");
      Locale locale0 = Locale.US;
      CDATA cDATA0 = new CDATA("H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.toString();
      assertEquals("/text()[1]/H[1]", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("J");
      Element element0 = new Element("J", "J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.attributeIterator(qName0);
      assertEquals("J:J", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/dZUR!^4aP?G5BpIm=");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, processingInstructionTest0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      CDATA cDATA0 = new CDATA("/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "/");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, true, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "vP%gpW.v$)Fc");
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("J", "J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("]@lU2{Y_!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Element element0 = new Element("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
