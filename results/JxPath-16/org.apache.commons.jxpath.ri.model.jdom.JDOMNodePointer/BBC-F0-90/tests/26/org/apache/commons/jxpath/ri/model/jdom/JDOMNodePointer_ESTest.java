/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 02:46:32 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("A");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATA cDATA0 = new CDATA("A");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/text()[1]/A[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node", "org.w3c.dom.Node");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.w3c.dom.Node:org.w3c.dom.Node", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Element element1 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, (String) null);
      jDOMNodePointer0.setValue(element0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = new Locale("[Comment: <!--Factory is not set on the JXPathContext - cannot create path: -->]", "a_b8!q A1", "5}@D;I~;");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("a_b8!q A1", locale0, (String) null);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("orgw3cdom.Node", "orgw3cdom.Node");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "orgw3cdom.Node");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("orgw3cdom.Node", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Cannot set duplicate attribute");
      Locale locale0 = Locale.forLanguageTag("8@");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "8@");
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("XB,,Z");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      Object object1 = jDOMNodePointer0.getImmediateNode();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = new Locale("", "", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(nodeTypeTest0, "http://www.w3.org/XML/1998/namespace", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      QName qName0 = new QName("i%]!Iz+(d", "i%]!Iz+(d");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "i%]!Iz+(d");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, ",8");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node", "org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: org.w3c.dom.Node:org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CDATA cDATA0 = new CDATA("BHCndNisiB{B ;q_8;");
      BasicVariables basicVariables0 = new BasicVariables();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.apache.commons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("[lxFoFA`<Y@rW");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      DocType docType0 = new DocType("lang", "http://www.w3.org/2000/xmlns/", "f");
      Document document0 = new Document(element0, docType0);
      document0.setContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.remove();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "preserve");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Document document0 = new Document((Element) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "6#~[mA:l");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("XB,,Z");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("XB,,Z");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dom.Node", "o4d.w3c.dom.Node", "o4d.w3c.dom.Node");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "P79", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("J", "J");
      Locale locale0 = new Locale("J");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("xml", "<<unknown namespace>>");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, 232, (Object) list0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 34, (Object) qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstruction0);
      DocType docType0 = new DocType("lang", "http://www.w3.org/2000/xmlns/", "f");
      Document document0 = new Document(element0, docType0);
      document0.setContent((Content) processingInstruction0);
      QName qName0 = new QName("org.w3c.dom.Node", "org.apache.commons.jxpath.ri.compiler.NodeNameTest@0000000006");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createChild(jXPathContext0, qName0, 4194, (Object) jDOMNodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Element element0 = new Element("R", "R");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, (QName) null, 1264);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) linkedList0);
      QName qName0 = new QName("id('org.w3c.dom.Node')");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"id('org.w3c.dom.Node')\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"(\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "\"\r\"");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstruction0);
      DocType docType0 = new DocType("lang", "http://www.w3.org/2000/xmlns/", "f");
      Document document0 = new Document(element0, docType0);
      document0.setContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Simultaneous operations: should not request pointer list while iterating over an EvalContext", locale0);
      QName qName0 = new QName("string-length", "string-length");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: string-length:string-length
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("parent::");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jXPathContext0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, nodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for null
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, basicVariables0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, nodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      QName qName0 = new QName("XB,,Z");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: XB,,Z
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "A");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      QName qName0 = new QName("i%]!Iz+(d", "i%]!Iz+(d");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "i%]!Iz+(d");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'i%]!Iz+(d:i%]!Iz+(d'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dom.Node", "o4d.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "o4d.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("qEu@l", "Factory is not set on the JXPathContext - cannot create path: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.setIndex(890);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'qEu@l:Factory is not set on the JXPathContext - cannot create path: '
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dom.Node", "o4d.w3c.dom.Node", "o4d.w3c.dom.Node");
      Locale locale0 = new Locale("o4d.w3c.dom.Node", "o4d.w3c.dom.Node", "o4d.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "org.w3c.dom.Node");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('org.w3c.dom.Node')", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("org.w3c.dom.Node", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("\\2@y4gL8,G.w");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "xh5\teKNb#@gn2");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "eh}\";!S7");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-3275));
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) qName0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, (Locale) null, (String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Sc");
      QName qName0 = jDOMNodePointer0.getName();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) qName0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "org.apache.commons.jxpath.ri.model.NodePointer");
      CDATA cDATA0 = new CDATA((String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("[INxTQ$7;5BC^]kbOn", object0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("3", locale0, "3");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.NodeTest");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, variablePointer0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      QName qName0 = new QName("i%]!Iz+(d", "i%]!Iz+(d");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "i%]!Iz+(d");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, ",8");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, nodeNameTest0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Cannot set duplicate attribute");
      Locale locale0 = Locale.forLanguageTag("8@");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "{kNM9V!-}cDR");
      QName qName0 = new QName("", "");
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = new Locale("", "Cannot modify a namespace", "");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("Cannot modify a namespace", locale0, "Cannot modify a namespace");
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      Object object0 = jDOMNodePointer0.clone();
      boolean boolean0 = jDOMNodePointer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Sc");
      boolean boolean0 = jDOMNodePointer0.equals(processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "eh}\";!S7");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-3275));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('eh}&quot;;!S7')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/processing-instruction('org.w3c.dom.Node')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CDATA cDATA0 = new CDATA("A");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/org.w3c.dom.Node[1]", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, (String) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "7|Nm}");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName("org.w3c.dom.Node");
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Comment comment0 = new Comment("ml6k7:ZS2=");
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "ml6k7:ZS2=");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      boolean boolean0 = jDOMNodePointer0.isLanguage("MQnM&7[ ;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory", "org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("3", locale0, "3");
      String string0 = JDOMNodePointer.getLocalName(jDOMNodePointer0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("");
      Attribute attribute0 = new Attribute("org.w3c.dsm.Nde", "org.w3c.dsm.Nde", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Object object0 = new Object();
      String string0 = JDOMNodePointer.getPrefix(object0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node", "org.w3c.dom.Node");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("org.w3c.dom.Node", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("og.w3z.dsm.de", "og.w3z.dsm.de", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      HashMap<Element, Element> hashMap0 = new HashMap<Element, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "'A", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("drBg.w3cdomNod", "drBg.w3cdomNod");
      QName qName0 = new QName("drBg.w3cdomNod", "drBg.w3cdomNod");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Text text0 = new Text("<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, text0);
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dm.Node");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "o4d.w3c.dm.Node");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA(";K");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Document document0 = new Document();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.w3c.dom.Node");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node", "org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xL=QU(a~S");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      QName qName0 = new QName("xL=QU(a~S");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xL=QU(a~S");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      QName qName0 = new QName("org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Element element0 = new Element("A", "A", "A");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "A");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Element element0 = new Element("R", "R", "R");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      DocType docType0 = new DocType("h", "Factory is not set on the JXPathContext - cannot create path: ", "[Attribute: ");
      Document document0 = new Document(element0, docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      jDOMNodePointer0.setValue(linkedList0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.w3c.dom.Node", "http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "\\2@y4gL8,G.w");
      CDATA cDATA0 = new CDATA("icpuJ`%S71n");
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CDATA cDATA0 = new CDATA("3");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "3");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
      jDOMNodePointer1.setValue("http://www.w3.org/2000/xmlns/");
      assertEquals("http://www.w3.org/2000/xmlns/", cDATA0.getValue());
      assertEquals("http://www.w3.org/2000/xmlns/", cDATA0.getText());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.jdom.output.XMLOutputter", "}n*4;w=|{C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "\"$\"");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("}n*4;w=|{C", object0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Comment comment0 = new Comment("eh}\";!S7");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("eh}\";!S7", object0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Element element1 = element0.addContent("org.w3c.dom.Node");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("org.w3c.dom.Node", object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node", "org.w3c.dom.Node");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("PS79", "PS79", "PS79");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "k0?eArSmndr)>0_");
      Comment comment0 = new Comment("\"^ount\"");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("3", locale0, "3");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.apache.commons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.JXPathTypeConversionException", "[lxFoFA`<Y@rW");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      QName qName0 = jDOMNodePointer1.getName();
      assertEquals("org.apache.commons.jxpath.JXPathTypeConversionException", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "6#~[mA:l");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Element element1 = element0.addContent("org.w3c.dom.Node");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "\"\r\"");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Element element0 = new Element("d", "d");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      Comment comment0 = new Comment("<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, comment0, locale0);
      element0.setContent((Content) comment0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals("d", qName0.toString());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("d", "d");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      Comment comment0 = new Comment("<<unknown namespace>>");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, comment0, locale0);
      element0.setContent((Content) comment0);
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, "d");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer1);
      assertEquals((-1), int0);
      assertEquals("d", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("A", "A");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(locale0);
      QName qName0 = new QName("'8B", "*9eq");
      Comment comment0 = new Comment("!L");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, comment0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Element element0 = new Element("A", "A");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("fv+(U7", "fv+(U7");
      Comment comment0 = new Comment("L");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, comment0, locale0);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(document0, locale0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Comment comment0 = new Comment("d");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      Attribute attribute0 = new Attribute("d", "http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, attribute0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      String string0 = jDOMNodePointer0.getNamespaceURI("0");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("0`1AqL5D@TtR*Pht");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      QName qName0 = new QName("org.w3c.dom.Node");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.getNamespaceURI("http://www.w3.org/2000/xmlns/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Element element0 = new Element("org.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.w3c.dom.Node");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, (String) null);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-3919));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "/processing-instruction('");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 2478, (Object) qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('/processing-instruction(&apos;')
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[INxTQ$7;5BC^]kbOn");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Element element0 = new Element("o4d.w3c.dom.Node", "o4d.w3c.dom.Node", "o4d.w3c.dom.Node");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "o4d.w3c.dom.Node");
      QName qName0 = new QName("xml", "o4d.w3c.dom.Node");
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Element element0 = new Element("spc", "space", "space");
      Locale locale0 = new Locale("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "space");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("space", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('space')/space:spc[1]", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName((String) null, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, basicVariables0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("org.jdom.Text@0000000004");
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "3");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
