/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 02:41:05 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("b", "b", "m<0Lw_|1,<Z)E9T9(=");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0.WHOLE_COLLECTION);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("b:b", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      Element element0 = new Element("m");
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("3u#X!=lk*>( X", "m");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.jdom.Comment@0000000004");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-1568), (Object) processingInstructionTest0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      Element element1 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(element1);
      assertNull(jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "|>XJ+H<v=-[`2sWz");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Comment comment0 = new Comment("[");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("FU");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "FU");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("m", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      QName qName0 = new QName("", "");
      CDATA cDATA0 = new CDATA("3a");
      Locale locale0 = Locale.FRANCE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, cDATA0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodeNameTest0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "[,z");
      Object object1 = jDOMNodePointer0.getImmediateNode();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "[,z");
      Object object1 = jDOMNodePointer0.getBaseValue();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.attributeIterator(qName0);
      assertEquals("m:m", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Element element0 = new Element("m", "m", "m");
      QName qName0 = new QName("preserve", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Integer integer0 = new Integer((-1936163856));
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, (String) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = jDOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Element element0 = new Element("gjdo.ilLrA0bactFie", "gjdo.ilLrA0bactFie", "gjdo.ilLrA0bactFie");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: http://www.w3.org/XML/1998/namespace
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(jXPathContext0, locale0, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextReferenceImpl cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      DocType docType0 = new DocType("m", "id('J%9nCY4b,`uL$9U')");
      Document document0 = new Document(element0, docType0, "m");
      document0.setContent((Content) docType0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "%YS3txx");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "@(#) $RCSfile: NegateFilter.java,v $ $Revision: 1.3 $ $Date: 2004/02/06 09:28:31 $");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("<<unknown namespace>>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      QName qName0 = new QName("6eit#");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Element element0 = new Element("m", "m", "m");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "http://www.w3.org/2000/xmlns/", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m");
      Integer integer0 = new Integer(4186);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, "&apos;");
      QName qName0 = new QName("h%)IBZmMfnSwpC<?Z", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "&apos;");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) locale0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      QName qName0 = new QName("|3|tx[oitRn", "|3|tx[oitRn");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "JXPath internal error: compareChildNodes called for ");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      Set<Character> set0 = locale0.getExtensionKeys();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("i", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) list0);
      QName qName0 = new QName(">)id,\",H9Bhho$S1,");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      QName qName0 = new QName("|3|tx[oitRn", "|3|tx[oitRn");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "JXPath internal error: compareChildNodes called for ");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2577));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jDOMNodePointer0.WHOLE_COLLECTION);
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"null\" is not legal for JDOM/XML attributes: XML names cannot be null or empty.
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("q~.m2_F4rU[a(1pPD");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "q~.m2_F4rU[a(1pPD");
      QName qName0 = new QName("-");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: -
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      QName qName0 = new QName("6eit#");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("JX", "#=fWQXR~*g~l'.\"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(text0, locale0, "");
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "@(#) $RCSfile: NegateFilter.java,v $ $Revision: 1.3 $ $Date: 2004/02/06 09:28:31 $");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ':@(#) $RCSfile: NegateFilter.java,v $ $Revision: 1.3 $ $Date: 2004/02/06 09:28:31 $'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Comment comment0 = new Comment("[");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: http://www.w3.org/2000/xmlns/:<<unknown namespace>>
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("hj");
      QName qName0 = new QName("hj");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      DocType docType0 = new DocType("i", "2^.P&P@(");
      Document document0 = new Document((Element) null, docType0, (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, (NodePointer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer:org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("[a/`+aTW&P;|F7&");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstructionTest0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      HashMap<CDATA, Attribute> hashMap0 = new HashMap<CDATA, Attribute>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("b", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('b')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("_", "_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.printPointerChain();
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("i", locale0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) list0);
      QName qName0 = new QName(">)id,\",H9Bhho$S1,");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("m", "m", "m");
      Namespace namespace0 = Namespace.getNamespace("m");
      Element element1 = element0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(element1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "m");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) null, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "Cannot remove root JDOM node");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/XML/1998/namespace", object0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, true, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      QName qName0 = new QName("m", (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Integer integer0 = new Integer(2526);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("=lS<EGI", locale0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "@(#) $RCSfile: NegateFilter.java,v $ $Revision: 1.3 $ $Date: 2004/02/06 09:28:31 $");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.equals(nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "$?\"");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('$?&quot;')", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.UK;
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      Integer integer0 = new Integer(4213);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0, "m");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('m')/m[1]", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Element element0 = new Element("m", "m");
      Locale locale0 = Locale.CHINESE;
      HashMap<Object, ProcessingInstruction> hashMap0 = new HashMap<Object, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("m", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.UK;
      CDATA cDATA0 = new CDATA("f");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "')");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('&apos;)')", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName("m");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer1 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertNotSame(nodePointer1, nodePointer0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("m:m", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("XEv6tD8'Z|Hw;2&}a", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: XEv6tD8'Z|Hw;2&}a
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("hj", "hj", "hj");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jXPathContext0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@hj:hj, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Comment comment0 = new Comment("[");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      boolean boolean0 = jDOMNodePointer0.isLanguage("Unknown namespace prefix: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = new Element("m", namespace0);
      element1.addContent((Content) element0);
      jDOMNodePointer0.setValue("m");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("m", object0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("org.jdoa.ilter.AbsractFiler");
      element0.setAttribute("org.jdoa.ilter.AbsractFiler", "!'");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "org.jdoa.ilter.AbsractFiler", namespace0);
      assertNotNull(string0);
      assertEquals("!'", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("g.jdoa.ilLrA0sbactFile", "g.jdoa.ilLrA0sbactFile", "g.jdoa.ilLrA0sbactFile");
      element0.setAttribute("g.jdoa.ilLrA0sbactFile", "");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "g.jdoa.ilLrA0sbactFile", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("preserve", "h", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("preserve", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = JDOMNodePointer.getLocalName((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Attribute attribute0 = new Attribute("m", "m");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      String string0 = JDOMNodePointer.getPrefix(locale0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("qm", "qm", "qm");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("qm", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Attribute attribute0 = new Attribute("m", "m");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("hj", "hj", "hj");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("hj:hj", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("hj");
      QName qName0 = new QName("hj");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) "hj", (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "\" collides");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("W", "W", "W");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "W");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("java.util.Locale@0000000008", locale0, "java.util.Locale@0000000008");
      Document document0 = new Document((Element) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("ldx", "ldx");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("m");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("b");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "b");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("m", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("_", "_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "2");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("_", "_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Comment comment0 = new Comment("[");
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[", locale0, (String) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(326);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) comment0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("_", "_", "_");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      DocType docType0 = new DocType("_", "http://www.w3.org/XML/1998/namespace", ">'");
      Document document0 = new Document(element0, docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      jDOMNodePointer0.setValue("");
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("k", "k");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "k");
      HashMap<String, NodeTypeTest> hashMap0 = new HashMap<String, NodeTypeTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("k", hashMap0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("", processingInstruction0.getData());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("JX", "#=fWQXR~*g~l'.\"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(text0);
      assertEquals("#=fWQXR~*g~l'.\"", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.UK;
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.UK;
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      CDATA cDATA0 = new CDATA("?");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "<<unknown namespace>>");
      jDOMNodePointer0.setValue("?");
      assertEquals("?", cDATA0.getValue());
      assertEquals("?", cDATA0.getText());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      HashMap<Object, ProcessingInstructionTest> hashMap0 = new HashMap<Object, ProcessingInstructionTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("bZ", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "bZ");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Comment comment0 = new Comment("[");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("[", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Comment comment0 = new Comment("<<unknown namespace>>");
      jDOMNodePointer0.createPath(jXPathContext0, (Object) comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Element element0 = new Element("W");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "W");
      Document document0 = new Document();
      document0.setRootElement(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LinkedList<ProcessingInstructionTest> linkedList0 = new LinkedList<ProcessingInstructionTest>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "http://www.w3.org/2000/xmlns/");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "m");
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("m", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      DocType docType0 = new DocType("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "id('J%9nCY4b,`uL$9U')");
      Document document0 = new Document(element0, docType0, (String) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "%YS3txx");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("m");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = jDOMNodePointer0.getName();
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element1 = new Element("m", namespace0);
      Element element2 = element1.addContent((Content) element0);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, element2);
      int int0 = nodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals("m", qName0.toString());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue("m");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("JX", "#=fWQXR~*g~l'.\"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(text0, locale0, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for [Text: http://www.w3.org/XML/1998/namespace]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
      assertEquals("m:m", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals("m:m", qName0.toString());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("Ghi");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("m");
      assertEquals("m", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("m", "m");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "m");
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "|>XJ+H<v=-[`2sWz");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("~t:foMK.rLG");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "");
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("b");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("b");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "[");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[", locale0, (String) null);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("m", "m", "m");
      Integer integer0 = new Integer(2385);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(integer0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("m", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/m:m[1]", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LinkedList<ProcessingInstructionTest> linkedList0 = new LinkedList<ProcessingInstructionTest>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "java.lang.Object@0000000006");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[", locale0, (String) null);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest@0000000006");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Element element0 = new Element("W");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "W");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
