/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 05:09:14 GMT 2020
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "q`");
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("xml:org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Namespace namespace0 = Namespace.getNamespace("q0", "q0");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      Element element1 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      jDOMNodePointer0.setValue(element0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Text text0 = new Text("");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Text text0 = new Text("");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Namespace namespace0 = Namespace.getNamespace("q0");
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      CDATA cDATA1 = (CDATA)jDOMNodePointer0.getImmediateNode();
      assertEquals("", cDATA1.getValue());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, (Object) null);
      Object object0 = jDOMNodePointer1.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute("", "<<unknown namespace>>", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.forLanguageTag("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("cO", "cO", "cO");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "C", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 3268, (Object) qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = new Locale("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "id('U')");
      QName qName0 = new QName("id('U')");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"id('U')\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"(\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Element element0 = new Element("U", "U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("java.util.Locale@0000000007");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'java.util.Locale@0000000007'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      QName qName0 = new QName("}pc");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: }pc
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "+6xk4>pWc=1I=");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("jbp^pj", locale0);
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "x@cX5ZH!kw[N|^@s");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CDATA cDATA0 = new CDATA(".yy4[EjTf5w6f");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, ".yy4[EjTf5w6f");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'http://www.w3.org/2000/xmlns/:<<unknown namespace>>'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = new Locale("preserve", "preserve", "preserve");
      Element element0 = new Element("preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("gO", "gO");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("gO", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("U");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/2000/xmlns/", object0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "");
      Document document1 = (Document)jDOMNodePointer0.getBaseValue();
      assertNull(document1.getBaseURI());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(",", locale0, "Exception trying to create xpath ");
      boolean boolean0 = jDOMNodePointer0.equals("Exception trying to create xpath ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) null, locale0);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "\"floor\"");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('&quot;floor&quot;')", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("[z`'p2]jx(@&Q]", locale0, "[z`'p2]jx(@&Q]");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('[z`&apos;p2]jx(@&Q]')", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("dspace", "dspace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('dspace')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/U:U[1]", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("U", "U");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/U[1]", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("preserve", "preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve", "preserve");
      QName qName0 = new QName("preserve", "preserve");
      CDATA cDATA0 = new CDATA("preserve");
      Element element1 = element0.addContent((Content) cDATA0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element1, locale0);
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(nodePointer0, qName0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer1, cDATA0);
      jDOMNodePointer0.remove();
      assertFalse(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("gO", "gO");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("cO", "cO", "cO");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("cO:cO", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      QName qName0 = new QName("<<unknown namespace>>", "T");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: <<unknown namespace>>
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Comment comment0 = new Comment("*#,CD0RqZ$EfnM");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "*#,CD0RqZ$EfnM");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("xml", "[CDATA: xml]", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Object object0 = new Object();
      String string0 = JDOMNodePointer.getLocalName(object0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Attribute attribute0 = new Attribute("lang", "http://www.w3.org/2000/xmlns/");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("U", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "')");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("U:U", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("preserve", "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("X", "X", "X");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("X", locale0, "X");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Element element0 = new Element("x", "x", "x");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Integer integer0 = new Integer(91);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) integer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      QName qName0 = new QName("<<unknown namespace>>", "U");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      QName qName0 = new QName("<<unknown namespace>>", "U");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.forLanguageTag("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("U", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("lang", "lang", "lang");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "lang");
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("UTF-8");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("spJac", "spJac", "spJac");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("<<unknown namespace>>");
      jDOMNodePointer0.setValue(text0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CDATA cDATA0 = new CDATA("xml");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Text text0 = new Text((String) null);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      jDOMNodePointer0.setValue(locale0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("dspace", "dspace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("dspace", object0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Comment comment0 = new Comment(",");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, ",");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals(",", object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.forLanguageTag("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "pq");
      Comment comment0 = new Comment("N|%b>}~A!z");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("U");
      Locale locale0 = Locale.forLanguageTag("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("cO", "cO", "cO");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("cO");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("cO", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("lang");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "lang");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("preserve:preserve", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.UK;
      Element element0 = new Element("ZZX8", "ZZX8");
      DocType docType0 = new DocType("ZZX8", "ZZX8");
      Document document0 = new Document(element0, docType0, "ZZX8");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "<<unknown namespace>>");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("U", "U", "U");
      element0.setText("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("U", "U", "U");
      Element element1 = element0.setText("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Locale locale1 = new Locale("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale1, locale1);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for en_GB
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("U", "U", "U");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "U");
      Attribute attribute0 = new Attribute("U", "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(attribute0, locale0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("preserve");
      assertEquals("preserve", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("gO", "gO");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("gO");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Document document0 = new Document((Element) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "8;[21!l`{,!bVH)z");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("spJac");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("xml", (Locale) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix:>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("H");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "H");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('H')/H[1]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Element element0 = new Element("preserve", "preserve");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("preserve", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("x", "x", "x");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "mx`=ZH=");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("preserve", "/text()");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "preserve");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
      assertEquals("preserve", nodeNameTest0.toString());
      assertEquals("preserve", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      LinkedList<Attribute> linkedList0 = new LinkedList<Attribute>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "mx`=ZH=");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "CYsydojHaB!");
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("CYsydojHaB!");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
