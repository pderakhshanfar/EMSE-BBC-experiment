/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 03:23:49 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.EntityRef;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CDATA cDATA0 = new CDATA(")WbLe}gnc+n*kv5h3");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      Element element0 = new Element("org.apache.commons.jxpath.riaxes.IitialContext");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.toString();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "S?w_}43Y'A");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      element0.setNamespace(namespace0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.comons.jxpath.JXPathTypeConversionException");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      Element element1 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element1);
      jDOMNodePointer1.setValue(element0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commonsxjxpath.ri.axes.InitialContext");
      QName qName0 = new QName("org.apache.commonsxjxpath.ri.axes.InitialContext");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.25 $ $Date: 2004/02/06 09:28:30 $ $Name: jdom_1_0 $");
      jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      jDOMNodePointer0.isLanguage("Aq@ph`^S^;]tN");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.comons.jxpath.JXPathTypeConversionException");
      jDOMNodePointer0.getNamespaceURI("");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.getNamespaceURI();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(fileSystemHandling0, locale0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      jDOMNodePointer0.getNamespaceResolver();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CDATA cDATA0 = new CDATA(")WbLe}gnc+n*kv5h3");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      jDOMNodePointer0.getLanguage();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, (String) null);
      jDOMNodePointer0.getImmediateNode();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, (String) null);
      jDOMNodePointer0.getBaseValue();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      JDOMNodePointer.findEnclosingAttribute(cDATA0, "[", namespace0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      QName qName0 = new QName("Vw03`kP<", "Vw03`kP<");
      Locale locale0 = Locale.KOREA;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "Vw03`kP<", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, (Object) locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "[Element: <");
      jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("org.apache.componsxjxpath.ri.axes.InitialContxt");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.componsxjxpath.ri.axes.InitialContxt", (Locale) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "org.apache.componsxjxpath.ri.axes.InitialContxt");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "[");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CDATA cDATA0 = new CDATA("UNKNOWN()");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: http://www.w3.org/2000/xmlns/
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpatHJXPathTypeConversionException");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, "http://www.w3.org/XML/1998/namespace", locale0);
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "i", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-2002));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, (-2118850530));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"<<unknown namespace>>\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \"<\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Element element0 = new Element("oXg.apache.comons.jxpatHJXPathTypeConvevsionException");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '<<unknown namespace>>:<<unknown namespace>>'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Comment comment0 = new Comment("org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "org.apache.commonsxjxpath.ri.axes.InitialContext");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(57343);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, (NodePointer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("java.util.Locale@0000000005", "java.util.Locale@0000000005");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'java.util.Locale@0000000005:java.util.Locale@0000000005'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      jDOMNodePointer0.asPath();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 1867);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      QName qName0 = new QName("$Vz\"]K-g]dRCF\"", "6]'2i({bsRHc");
      Object object0 = new Object();
      Locale locale0 = Locale.ITALY;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, object0, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, nodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("org.apache.commznsxjxpath.ri.a.es.InitilContext", "org.apache.commznsxjxpath.ri.a.es.InitilContext", "org.apache.commznsxjxpath.ri.a.es.InitilContext");
      JDOMNodePointer.getLocalName(element0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer.getPrefix(element0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) processingInstructionTest0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      QName qName0 = new QName("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.commonsxjxpath.ri.axes.InitialContxt", locale0, "S?w_}43Y'A");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "org.apache.commonsxjxpath.ri.axes.InitialContxt");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "')");
      JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeNameTest0, (NodeTest) nodeNameTest0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) null);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Text text0 = new Text("RBgR_'k^}2Ew4&X78");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, (Locale) null, "RBgR_'k^}2Ew4&X78");
      jDOMNodePointer0.getValue();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Factory could not create a child node for path: ", locale0, "Factory could not create a child node for path: ");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null, "");
      jDOMNodePointer0.getBaseValue();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Text text0 = new Text("ra/");
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, text0);
      jDOMNodePointer0.equals(jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(fileSystemHandling0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, (Object) null);
      jDOMNodePointer0.equals(jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      jDOMNodePointer0.equals(jDOMNodePointer0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      jDOMNodePointer0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CDATA cDATA0 = new CDATA(")WbLe}gnc+n*kv5h3");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      Element element0 = new Element("org.apache.commons.jxpath.riaxes.IitialContext");
      element0.setContent((Content) cDATA0);
      jDOMNodePointer0.toString();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "\"#is not legal for a JDOM ");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('&quot;#is not legal for a JDOM ')", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.commonsxjxpath.ri.axes.InitialContxt", locale0, "S?w_}43Y'A");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('S?w_}43Y&apos;A')", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.comons.jxpath.JXPathTypeConversionExeption", "org.apache.comons.jxpath.JXPathTypeConversionExeption");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('org.apache.comons.jxpath.JXPathTypeConversionExeption')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Element element0 = new Element("org.apache.comonX.jxpath.JXPathTypeConversionExcepton", "org.apache.comonX.jxpath.JXPathTypeConversionExcepton", "org.apache.comonX.jxpath.JXPathTypeConversionExcepton");
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.comonX.jxpath.JXPathTypeConversionExcepton");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("org.apache.comonX.jxpath.JXPathTypeConversionExcepton", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.toString();
      assertEquals("id('org.apache.comonX.jxpath.JXPathTypeConversionExcepton')/org.apache.comonX.jxpath.JXPathTypeConversionExcepton:org.apache.comonX.jxpath.JXPathTypeConversionExcepton[1]", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CDATA cDATA0 = new CDATA(")WbLe}gnc+n*kv5h3");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      Element element0 = new Element("org.apache.commons.jxpath.riaxes.IitialContext");
      element0.setContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.commonsxjxpath.ri.axes.InitialContext", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContxt", "org.apache.commonsxjxpath.ri.axes.InitialContxt", "org.apache.commonsxjxpath.ri.axes.InitialContxt");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http://www.w3.org/XML/1998/namespace
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.commonsxjxpath.ri.axes.InitialContext:org.apache.commonsxjxpath.ri.axes.InitialContext", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "JXPath internal error: compareChildNodes called for ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('JXPath internal error: compareChildNodes called for ')/@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Comment comment0 = new Comment("Namespace URIs must be non-null and non-empty Strings");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("F", "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionEception");
      Attribute attribute0 = new Attribute("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionEception", "F", namespace0);
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionEception", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      String string0 = JDOMNodePointer.getLocalName(nodeNameTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("Wih6UWC", "Wih6UWC", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("ih6UWC", "ih6UWC", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("org.apache.comons.jxpath.JXPathTypeConversionException", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2077);
      String string0 = JDOMNodePointer.getPrefix(nodeTypeTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("orl.apNcae.comons.jxpathJXahypeConversinEeption", "orl.apNcae.comons.jxpathJXahypeConversinEeption");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("orl.apNcae.comons.jxpathJXahypeConversinEeption");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("3$^CBP=)");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Document document0 = new Document();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2077);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeNameTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContxt");
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("org.apache.commonsxjxpath.ri.axes.InitialContxt", locale0, "S?w_}43Y'A");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "org.apache.commonsxjxpath.ri.axes.InitialContxt");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("org.kpaIRe.-om0ns.jxpath.JXPathTypeConversionExcepton");
      QName qName0 = new QName("org.kpaIRe.-om0ns.jxpath.JXPathTypeConversionExcepton");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContxt", "org.apache.commonsxjxpath.ri.axes.InitialContxt", "org.apache.commonsxjxpath.ri.axes.InitialContxt");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("org.jdom.filter.AbstractFilter", "org.jdom.filter.AbstractFilter");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("org.jdom.filter.AbstractFilter", "org.jdom.filter.AbstractFilter");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("org.apache.comonX.jxpath.JXPathTypeConversionExcepton", "org.apache.comonX.jxpath.JXPathTypeConversionExcepton", "org.apache.comonX.jxpath.JXPathTypeConversionExcepton");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.comonX.jxpath.JXPathTypeConversionExcepton");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext", "org.apache.commonsxjxpath.ri.axes.InitialContext");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "org.apache.commonsxjxpath.ri.axes.InitialContext");
      jDOMNodePointer0.setValue((Object) null);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpatHJXPathTypeConversionException", "org.apache.comons.jxpatHJXPathTypeConversionException");
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      HashMap<Attribute, NodeNameTest> hashMap0 = new HashMap<Attribute, NodeNameTest>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.comons.jxpatHJXPathTypeConversionException", hashMap0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException", "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Text text0 = new Text("5Z|m2gLc'):X8;/jB.");
      jDOMNodePointer0.setValue(text0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Text text0 = new Text("RBgR_'k^}2Ew4&X78");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, (Locale) null, "RBgR_'k^}2Ew4&X78");
      jDOMNodePointer0.setValue("<<unknown namespace>>");
      assertEquals("<<unknown namespace>>", text0.getText());
      assertEquals("<<unknown namespace>>", text0.getValue());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Text text0 = new Text("org.apache.comons.jxpath.JXPathTypeConversionException");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, (Locale) null, "org.apache.comons.jxpath.JXPathTypeConversionException");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null, "");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("org.apache.comons.jxpath.JXPathTypeConversionExeption");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.comons.jxpath.JXPathTypeConversionExeption", "org.apache.comons.jxpath.JXPathTypeConversionExeption");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("org.apache.comons.jxpath.JXPathTypeConversionExeption", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Comment comment0 = new Comment("/ZnL,kLURb");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "/ZnL,kLURb");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("/ZnL,kLURb", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException", "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      EntityRef entityRef0 = new EntityRef("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      element0.addContent((Content) entityRef0);
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("org.apache.commonsxjxpath.ri.axes.InitialContext");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commonsxjxpath.ri.axes.InitialContext");
      Object object0 = new Object();
      jDOMNodePointer0.setValue(object0);
      Object object1 = jDOMNodePointer0.getValue();
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.comons.jxpath.JXPathTypeConversionExeption", "org.apache.comons.jxpath.JXPathTypeConversionExeption");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      assertEquals("org.apache.comons.jxpath.JXPathTypeConversionExeption", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Document document0 = new Document(element0);
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = new Document((Element) null);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Element element0 = new Element("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException", "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.US;
      element0.addContent("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CDATA cDATA0 = new CDATA(")WbLe}gnc+n*kv5h3");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      Element element0 = new Element("org.apache.commons.jxpath.riaxes.IitialContext");
      element0.setContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("org.apacGe.comons.jxpah.JXPathTypeConversioException", "org.apacGe.comons.jxpah.JXPathTypeConversioException", "org.apacGe.comons.jxpah.JXPathTypeConversioException");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0, "org.apacGe.comons.jxpah.JXPathTypeConversioException");
      Comment comment0 = new Comment("<<unknown namespace>>");
      jDOMNodePointer0.setValue(comment0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for null
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("F", "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      Attribute attribute0 = new Attribute("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException", "F", namespace0);
      QName qName0 = new QName("org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.ENGLISH;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.kpaIhe.-om0ns.jxpath.JXPathTypeConversionException", locale0);
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("F");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, locale_LanguageRange0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(attribute0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException", "org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("org.apache.comons.jxpath.JXPathTypeConversionException");
      assertEquals("org.apache.comons.jxpath.JXPathTypeConversionException", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Element element0 = new Element("org.apache.comons.jxpath.JXPathTypeConversionException");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.comons.jxpath.JXPathTypeConversionException");
      String string0 = jDOMNodePointer0.getNamespaceURI("org.apache.comons.jxpath.JXPathTypeConversionException");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      String string0 = jDOMNodePointer0.getNamespaceURI("UNKNOWN()");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("D", "D", "D");
      QName qName0 = new QName("D", "D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("D");
      QName qName0 = new QName("D");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "D");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, (QName) null, (-2013614161), (Object) locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator((QName) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CDATA cDATA0 = new CDATA("/text()");
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "/text()");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest1 = (NodeNameTest)jDOMNodePointer0.getImmediateNode();
      assertEquals("Aq@ph`^S^;]tN", nodeNameTest1.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      boolean boolean0 = jDOMNodePointer0.isLanguage("UNKNOWN()");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      QName qName0 = new QName("Aq@ph`^S^;]tN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Aq@ph`^S^;]tN");
      Locale locale0 = new Locale("Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN", "Aq@ph`^S^;]tN");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "Aq@ph`^S^;]tN");
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
