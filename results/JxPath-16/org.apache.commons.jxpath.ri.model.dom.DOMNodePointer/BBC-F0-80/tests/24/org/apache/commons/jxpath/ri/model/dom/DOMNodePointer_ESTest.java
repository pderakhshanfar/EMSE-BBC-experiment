/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 02:13:19 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLBaseElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLFrameSetElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLHtmlElementImpl;
import org.apache.html.dom.HTMLImageElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLOListElementImpl;
import org.apache.html.dom.HTMLObjectElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.wml.dom.WMLBigElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLRefreshElementImpl;
import org.apache.wml.dom.WMLSetvarElementImpl;
import org.apache.wml.dom.WMLTrElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.ElementImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("jKdd2@");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "M<5!we*N");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableCellElementImpl0);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "ukNbG");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "']");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "]");
      assertEquals(0, nullPointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("9'a", "9'a");
      Locale locale0 = Locale.CHINESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, hTMLDocumentImpl0, locale0);
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, ":2");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLInputElementImpl0);
      QName qName1 = dOMNodePointer0.getName();
      assertEquals(":2", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "standby");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      QName qName0 = new QName("Factory is not set on the JXPathContext - cannot create path", (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "4tXb!#'c&c6n");
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "Factory is not set on the JXPathContext - cannot create path");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, 68, (Object) wMLTrElementImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('4tXb!#&apos;c&c6n')
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, ")K8>r3muo&]J\"&D~vz?");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id(')K8>r3muo&]J&quot;&D~vz?')", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "yv", "yv", "yv");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "yv");
      dOMNodePointer0.namespaceIterator();
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(deferredDocumentImpl0, "Factory is not set on the JXPathContext - cannot create path: ", ";mPrgK.1jH8++06", "Factory is not set on the JXPathContext - cannot create path: ");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Element element0 = pSVIDocumentImpl0.createElementNS("INS", "INS");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "INS");
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("INS", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl(hTMLDocumentImpl0, "");
      String string0 = DOMNodePointer.getLocalName(hTMLFrameSetElementImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "\"local-name\"");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "\"local-name\"");
      wMLTrElementImpl0.setXmlLang("~T");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTrElementImpl0, locale0, "org.apache.html.dom.HTMLHRElementImpl@0000000003");
      String string0 = dOMNodePointer0.getLanguage();
      assertNotNull(string0);
      assertEquals("~T", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, " but object was null.  Terminating to avoid stack recursion.");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLPreElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentFragment documentFragment0 = pSVIDocumentImpl0.createDocumentFragment();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, locale0, "");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(documentFragment0, object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "META-INF/services/");
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "E");
      String string0 = DOMNodePointer.findEnclosingAttribute(wMLTrElementImpl0, "http://www.w3.org/2000/xmlns/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      ElementImpl elementImpl0 = new ElementImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementImpl0, locale0);
      QName qName0 = new QName("y6`+etsv_w_\u0001$", "xml");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      QName qName0 = new QName("sum", "sum");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "\"-,Fo\"}U)V}9PAMj!0m");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0, "s@FsIXa{u");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: sum:sum
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "O[j?n!'q1T@eL8L;");
      deferredDocumentImpl0.setDeferredAttribute(753, "(=%zv@(jTXk", "V&cEdo#m^Hbeb", "java.math.BigDecimal", true, false, (Object) hTMLTextAreaElementImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type: 20
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(pSVIDocumentImpl0, "0(aK},mDB");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0, "0(aK},mDB");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("0(aK},mDB");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "0tFA&Ik7A~ejpnjXJY");
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, false);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("noresize");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.UK;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "Ucn.}w", "Ucn.}w", "rytet[.DX}g4=$", true, true, (Object) "Ucn.}w");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "z4a-V&4]fJX}WqH6'");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = (HTMLDocumentImpl)hTMLDocumentImpl0.clone();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(deferredDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) entityReferenceImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.EntityReferenceImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, (String) null, "", "8,X#+/6");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "\"descendant-or-self::\"");
      deferredDocumentImpl0.setDeferredAttribute(88, "", "", "JFe9!mGV'rw`tu{mW*J", false, false, (Object) wMLBigElementImpl0);
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("org.apache.xerces.dom.TextImpl@0000000002");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // type: 20
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "Ucn.}w", "Ucn.}w", "rytet[.DX}g4=$", true, true, (Object) "Ucn.}w");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "z4a-V&4]fJX}WqH6'");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      hTMLDocumentImpl0.setReadOnly(true, true);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "1Yq+ypM.i9k0");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "E");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDoElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl((WMLDocumentImpl) null, "}D[xn$:]Rl;T!vN ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLMetaElementImpl0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getLanguage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      hTMLDocumentImpl0.setReadOnly(true, false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl((HTMLDocumentImpl) null, "t@u'%^gMR<");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLImageElementImpl0, locale0, "t@u'%^gMR<");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setDeferredAttribute(1, "Ucn.}w", "Ucn.}w", "rytet[.DX}g4=$", true, true, (Object) "Ucn.}w");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "z4a-V&4]fJX}WqH6'");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DeferredDocumentImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLBaseElementImpl hTMLBaseElementImpl0 = new HTMLBaseElementImpl(hTMLDocumentImpl0, "Wyo");
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLBaseElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "k(ftFtR3");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0, "k(ftFtR3");
      QName qName0 = new QName("Factory is not set on the JXPathContext - cannot create path: ");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, (-2089443546), (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "uN0xu6H$83");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "')");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("Factory could not create a child node for path: ", (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-1409));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      QName qName0 = new QName("b+OjgV", "<<unknown namespace>>");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "org.apache.commons.jxpath.ri.QName");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "-;1'e~a\"");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: <<unknown namespace>>
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null, "META-INF/services/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "uN0xu6H$83");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "')");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale0, "value");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'http://www.w3.org/XML/1998/namespace'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, (NodePointer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "xmlns");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLFontElementImpl0);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Factory is not set on the JXPathContext - cannot create path: ", "marginheight", "marginheight");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "O:Y4");
      QName qName0 = new QName("<<unknown namespace>>");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '<<unknown namespace>>'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "E");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTrElementImpl0, locale0, "E");
      QName qName0 = new QName("<<unknown namespace>>", "M");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, dOMNodePointer0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.dom.DOMNodePointer cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "CWJ1G$K(I", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((NodePointer) null, pSVIElementNSImpl0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer1.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = new Locale("pjq2d");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      assertNotNull(string0);
      assertEquals("<<unknown namespace>>", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLTableElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Element element0 = wMLDocumentImpl0.createElement("http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getLocalName(element0);
      assertEquals("//www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(deferredDocumentImpl0, "Factory is not set on the JXPathContext - cannot create path: ", ";mPrgK.1jH8++06", "Factory is not set on the JXPathContext - cannot create path: ");
      String string0 = DOMNodePointer.getLocalName(attrNSImpl0);
      assertEquals("Factory is not set on the JXPathContext - cannot create path: ", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttribute(":Aw1");
      String string0 = DOMNodePointer.getPrefix(attr0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "I", "id('");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "*(H2xZ~ER}");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "fieldset", "fieldset");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstructionImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('fieldset')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "uN0xu6H$83");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Locale locale0 = Locale.UK;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(pSVIDocumentImpl0, "2u)#JWe");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "ukNbG");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('ukNbG')", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "$b%_}NPI]%\"gU`)J6kE");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0);
      QName qName0 = new QName((String) null, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, (String) null, "y6`+etsv_w_\u0001$", "g");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0, "u0)eL[t7f7T<#%84");
      QName qName0 = new QName("y6`+etsv_w_\u0001$", "g");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, locale0);
      NamespaceResolver namespaceResolver0 = nodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = dOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "~=muHbVA>)M0", "v/HVGEf/R}a`&I'A.i", "L^O?0Gx/o>YG_[/ DV");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Q");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "Q");
      QName qName0 = new QName("M");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLTrElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("jKddX2F@");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, (Locale) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLRefreshElementImpl wMLRefreshElementImpl0 = new WMLRefreshElementImpl(wMLDocumentImpl0, "[pUyk(w");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLRefreshElementImpl0, (Locale) null);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(wMLRefreshElementImpl0, object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "M<5!we*N");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "jKdd2@");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableCellElementImpl0);
      dOMNodePointer0.namespaceIterator();
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "align");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", ":B;");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "*Xd6^>${PX,gYk\u0005:SY", ":B;", "%");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, attrNSImpl0, locale0);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "%");
      NodePointer nodePointer1 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, wMLWmlElementImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(nodePointer1, nodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "j<C5");
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "3%P=DSy>#CkR");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, "FekO.b{w|U[55fff`");
      assertFalse(nullPointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "fieldset", "fieldset");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstructionImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("fieldset", object0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "=V`OTvmhKR,", (String) null);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, processingInstructionImpl0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      TextImpl textImpl0 = new TextImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(cDATASectionImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("http://www.w3.org/XML/1998/namespace", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("')");
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "')");
      hTMLHeadingElementImpl0.appendChild(comment0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.setValue(hTMLHeadingElementImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("jKddX2F@");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, (Locale) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("jKddX2F@", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("jKdd2@");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "M<5!we*N");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableCellElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('M<5!we*N')///WWW.W3.ORG/XML/1998/NAMESPACE[1]", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(pSVIDocumentImpl0, "org.apache.wml.dom.WMLPostfieldElementImpl@0000000002", "xml:space", "1V%");
      String string0 = DOMNodePointer.getPrefix(attrNSImpl0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      boolean boolean0 = dOMNodePointer0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0);
      boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("/BODY[1]", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "uN0xu6H$83");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "')");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale0, "')");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('&apos;)')", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "%nXQWLO?J?vPOk!>2h", "%nXQWLO?J?vPOk!>2h", "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSetvarElementImpl wMLSetvarElementImpl0 = new WMLSetvarElementImpl(wMLDocumentImpl0, "");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLSetvarElementImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("$http://www.w3.org/XML/1998/namespace:http://www.w3.org/2000/xmlns/[1]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "o", "o");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "\"CS>H/eh");
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator((NodeTest) null, true, dOMNodePointer1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLMapElementImpl0);
      QName qName0 = new QName("Jx0?uxcTcwEuw5S@m");
      // Undeclared exception!
      dOMNodePointer1.createChild(jXPathContext0, qName0, (-1609), (Object) nodeIterator0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@http://www.w3.org/2000/xmlns/, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment("/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, (Locale) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      EntityImpl entityImpl0 = new EntityImpl((CoreDocumentImpl) null, " ");
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("/");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ", properties = ", "TqOir_\bc|8 Gd>D", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      TextImpl textImpl0 = new TextImpl(wMLDocumentImpl0, ", properties = ");
      QName qName0 = new QName("", (String) null);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, textImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("'http://www.w3.org/2000/xmlns/'/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "Factory is not set on the JXPathContext - cannot create path: ");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, 3699, (Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "fieldset", "fieldset");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstructionImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "", "", "83qamMDtZs`8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLAnchorElementImpl0);
      Locale locale0 = jXPathContext0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "83qamMDtZs`8");
      dOMNodePointer0.remove();
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "j");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLHtmlElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) coreDocumentImpl0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      dOMNodePointer0.setValue("");
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Be]7,K;}bBxJ{FJ3");
      dOMNodePointer0.setValue((Object) null);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "2r(| ZQ~<91bO;%Kl&", "http://www.w3.org/2000/xmlns/", "");
      dOMNodePointer0.setValue(documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("2r(| ZQ~<91bO;%Kl&");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("Q");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, entityReferenceImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Q'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getBody();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      dOMNodePointer0.setValue(element0);
      assertFalse(dOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "')");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(dOMNodePointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ", properties = ", "TqOir_\bc|8 Gd>D", "http://www.w3.org/2000/xmlns/");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      TextImpl textImpl0 = new TextImpl(wMLDocumentImpl0, ", properties = ");
      QName qName0 = new QName("", (String) null);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, textImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("/");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      QName qName0 = new QName("format");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "/");
      dOMNodePointer0.setValue(nodeNameTest0);
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Q");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "Q");
      wMLTrElementImpl0.setXmlLang("HTMLParagraphElementImpl");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTrElementImpl0, locale0, "Q");
      boolean boolean0 = dOMNodePointer0.isLanguage("Q");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "!wl?FE`&}JJLuR<");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.namespaceIterator();
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("~v]]}");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("Unknown namespace prefix");
      String string0 = dOMNodePointer0.getNamespaceURI("Unknown namespace prefix");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "jKdd2@");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "vPf");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLDocumentImpl0);
      QName qName0 = new QName("xmlns:");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "z4a-V&4]fJX}WqH6'");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "E");
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTrElementImpl0, locale0, "E");
      QName qName0 = new QName("xml:lang");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) deferredDocumentImpl0);
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, "`<G/m?", (String) null);
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("`<G/m?", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("H-a/T]");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "%");
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      TextImpl textImpl0 = new TextImpl();
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment(">zlc!yU<aK|uOb.");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      CommentImpl commentImpl0 = new CommentImpl(deferredDocumentImpl0, "o>lAkJ;r`w~}-^H");
      boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      CDATASection cDATASection0 = documentImpl0.createCDATASection("V/");
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASection0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      ElementImpl elementImpl0 = new ElementImpl(pSVIDocumentImpl0, "M");
      boolean boolean0 = DOMNodePointer.testNode((Node) elementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "e", "e");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("')", "')");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "')");
      HTMLOListElementImpl hTMLOListElementImpl0 = new HTMLOListElementImpl(hTMLDocumentImpl0, "')");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLOListElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      QName qName0 = new QName("<<unknown namespace>>", "M");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("M", "M", "zzu]2B)W,@k{PUO:");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, (String) null, "g", "g");
      Locale locale0 = Locale.PRC;
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "g");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0, "j8");
      QName qName0 = new QName("g", "g");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(nodePointer0, hTMLObjectElementImpl0);
      QName qName1 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLObjectElementImpl0, (NodeTest) nodeNameTest0);
      assertEquals("G", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "E");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "E");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLTrElementImpl0, locale0, "E");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "E");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLTrElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("E", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "G'oM:m/4s.U ");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.commons.jxpath.ri.axes.NodeSetContext");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertEquals("G'OM:M/4S.U ", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("org.apache.commons.jxpath.rimodel.dom.DOMNdePointer", "org.apache.commons.jxpath.rimodel.dom.DOMNdePointer");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstruction0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      boolean boolean0 = DOMNodePointer.testNode((Node) deferredDocumentImpl0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("org.apache.commons.jxpath.rimodel.domDOMNdePointer", "org.apache.commons.jxpath.rimodel.domDOMNdePointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.rimodel.domDOMNdePointer", "<<unknown namespace>>", "org.apache.commons.jxpath.rimodel.domDOMNdePointer");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      QName qName0 = new QName("Zj");
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentFragment documentFragment0 = pSVIDocumentImpl0.createDocumentFragment();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, locale0, "");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("org.apache.commons.jxpath.rimodel.domDOMNdePointer", "org.apache.commons.jxpath.rimodel.domDOMNdePointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("yules");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("f", "f");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "f", "<<unknown namespace>>", "f");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      dOMNodePointer1.createChild(jXPathContext0, qName0, 41);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "|z3bT");
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "M<5!we*N");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }
}
