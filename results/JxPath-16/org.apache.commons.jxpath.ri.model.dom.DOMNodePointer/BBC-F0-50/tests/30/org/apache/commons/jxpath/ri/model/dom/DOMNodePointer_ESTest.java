/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 01:59:51 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.TypeConverter;
import org.apache.commons.jxpath.util.TypeUtils;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLHRElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLabelElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLMenuElementImpl;
import org.apache.html.dom.HTMLOptGroupElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.wml.dom.WMLAnchorElementImpl;
import org.apache.wml.dom.WMLBElementImpl;
import org.apache.wml.dom.WMLDoElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLInputElementImpl;
import org.apache.wml.dom.WMLPrevElementImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "q");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, (String) null, "xmlns:", ":{=");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIAttrNSImpl0, locale0, (String) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ", "ud67yx#)%IyAQ</K[m", "Factory could not create a child node for path: ");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "HTMLAreaElementImpl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "Hs>i_zK1q2ZPn ");
      HTMLElement hTMLElement0 = hTMLTableElementImpl0.createCaption();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLElement0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "nIOF \"\"iRzK");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("id('nIOF &quot;&quot;iRzK')", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "/");
      dOMNodePointer0.getDefaultNamespaceURI();
      DocumentType documentType0 = hTMLDocumentImpl0.createDocumentType("xmlns:", ")LmPm0", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentType0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getApplets();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null);
      dOMNodePointer0.setValue(linkedList0);
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      dOMNodePointer0.setValue(hTMLDocumentImpl0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("pion", "pion", "pion");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("pion", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("", "", "");
      String string0 = DOMNodePointer.getLocalName(element0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(hTMLLIElementImpl0, object0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "xml", "xml", "YpwC!H]<_psgL!Qz_S");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      QName qName0 = new QName("xml", ".[1xOjY+2J,+");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ";\"");
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(nodeNameTest0, true, dOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl((WMLDocumentImpl) null, "processing-instruction");
      Locale locale0 = Locale.FRENCH;
      QName qName0 = new QName("d u", "xml");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPrevElementImpl0, locale0, "bW^f7<[9|4`+r^Mj");
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      QName qName0 = new QName("3>r@$>5'i]cD-l(", "Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "\"id\"");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 3>r@$>5'i]cD-l(:Factory could not create a child node for path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Factory could not create a child node for path: :XY-X*2A'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      doReturn(hTMLDirectoryElementImpl0).when(typeConverter0).convert(any() , any(java.lang.Class.class));
      TypeUtils.setTypeConverter(typeConverter0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("]E");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.html.dom.HTMLDirectoryElementImpl cannot be cast to java.lang.String
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = new Locale("");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl((WMLDocumentImpl) null, "processing-instruction");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPrevElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "processing-instruction");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = new Locale("OL3-pl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("xmx");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl((WMLDocumentImpl) null, "processing-instruction");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLPrevElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("processing-instruction");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "bAWml");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      WMLBElementImpl wMLBElementImpl0 = new WMLBElementImpl((WMLDocumentImpl) null, "[");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBElementImpl0, (Locale) null, "[");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getLanguage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setReadOnly(true, true);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl((HTMLDocumentImpl) null, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, ":\"g0");
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLPreElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      QName qName0 = new QName("Nn#P<L$<ek8 9!^>", "/text()");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 34, (Object) "vD!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("pion", "pion", "pion");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("xml", "pion");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBElementImpl wMLBElementImpl0 = new WMLBElementImpl(wMLDocumentImpl0, "maxlength");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBElementImpl0, locale0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      // Undeclared exception!
      dOMNodePointer1.createChild(jXPathContext0, qName0, 3);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLegendElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "a^|1s4}|");
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Factory could not create a child node for path: :XY-X*2A'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "Factory cannot define variable '");
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: Factory could not create a child node for path: :XY-X*2A
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "YpwC!H]<_psgL!Qz_S");
      QName qName0 = new QName("xmlns", "j#gf}0+U#");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, documentTypeImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Xjnbv/uV");
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(deferredDocumentImpl0, "b{p=", "b{p=", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, (Locale) null, "G9eYsT:rZMT:b p@^");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("W,8Edx')ruTf");
      QName qName0 = new QName((String) null, "HTMLSelectElementImpl");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, processingInstructionTest0, (Locale) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, nodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest cannot be cast to org.w3c.dom.Node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "&!");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLParagraphElementImpl0, locale0, "&!");
      // Undeclared exception!
      try { 
        dOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "L@31~_4", "AIQQ");
      String string0 = DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLAreaElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) pSVIDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("r`E:_JQ*mSk");
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) text0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.TextImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      String string0 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "Cannot add a second doctype, only one is allowed", "`", "xml");
      String string0 = DOMNodePointer.getLocalName(pSVIAttrNSImpl0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "Factory could not create a child node for path:");
      String string0 = DOMNodePointer.getPrefix(elementDefinitionImpl0);
      assertNotNull(string0);
      assertEquals("Factory could not create a child node for path", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, ":", ":", "-Hp#o=4[5KvnV#GPR");
      String string0 = DOMNodePointer.getPrefix(pSVIAttrNSImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHRElementImpl hTMLHRElementImpl0 = new HTMLHRElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHRElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHRElementImpl0);
      dOMNodePointer1.printPointerChain();
      assertTrue(dOMNodePointer1.isNode());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("pion", "pion", "uS gg!K97");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<%g+#**r");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("')", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", ")tk!r<q_");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attr0, locale0);
      dOMNodePointer0.printPointerChain();
      assertFalse(dOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      QName qName0 = new QName("xml", "pion");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBElementImpl wMLBElementImpl0 = new WMLBElementImpl(wMLDocumentImpl0, "maxlength");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLBElementImpl0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, 3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: id('<<unknown namespace>>')
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null);
      String string0 = dOMNodePointer0.getNamespaceURI("org.apache.xerces.dom.TextImpl@0000000003");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZYq%L@$R;");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "08eKYdHCt,N[OZH]");
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "processing-instruction");
      String string0 = dOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "timer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTextAreaElementImpl0, (Locale) null, "\n");
      dOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ", "ud67yx#)%IyAQ</K[m", "Factory could not create a child node for path: ");
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "Factory could not create a child node for path: ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "x");
      boolean boolean0 = DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      QName qName0 = new QName("");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, (Locale) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLButtonElementImpl0);
      Object object0 = dOMNodePointer0.getBaseValue();
      assertSame(object0, hTMLButtonElementImpl0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "option");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "option");
      hTMLDocumentImpl0.getTitle();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "option");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "option");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = new Locale("-Z[i>O;");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "-Z[i>O;");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, "Cannot remove root DOM node", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIAttrNSImpl0, locale0, (String) null);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, (String) null, "|zSJe*+u}m6)nkDHEkm", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIAttrNSImpl0, locale0, (String) null);
      QName qName0 = new QName("Factory is not set on the JXPathContext - cannot create path: ");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl(wMLDocumentImpl0, (String) null);
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer1, qName0, wMLInputElementImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, nodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ".");
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale0, "n");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "+Y_");
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) hTMLInputElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID(jXPathContext0, ":&|j");
      assertFalse(nullPointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.PRC;
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer1 = (DOMNodePointer)dOMNodePointer0.getPointerByID(jXPathContext0, "");
      assertEquals(Integer.MIN_VALUE, dOMNodePointer1.getIndex());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "SXO6Y<.G75t+L}ie", "\"F9m@C");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("\"F9m@C", object0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "iname", (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection((String) null);
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "RHsL?L4naX0mG");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("http");
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("http", object0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      Text text0 = documentImpl0.createTextNode("Unknown namespace prefix: ");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("Unknown namespace prefix:", object0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Comment comment0 = deferredDocumentImpl0.createComment("Factoly could not create a child node for path: ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("Factoly could not create a child node for path:", object0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "option");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "option");
      Object object0 = dOMNodePointer0.clone();
      boolean boolean0 = dOMNodePointer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZYq%L@$R;");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "0000");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "0000");
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(locale0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("pion", "pion", "pion");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2440));
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", ":bMH,R`G(w");
      // Undeclared exception!
      dOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) nodeTypeTest0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      QName qName0 = new QName("Cannot remove root DOM node");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(deferredDocumentImpl0, ",8!MU=C", ",8!MU=C");
      Locale locale0 = Locale.ENGLISH;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, processingInstructionImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, ",8!MU=C", "Cannot remove root DOM node", "java.util.Locale@0000000007");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("xmlns", ",8!MU=C", "gYn\"u>,Z1t54Wzd");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      // Undeclared exception!
      dOMNodePointer0.asPath();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "&apos;", "<<unknown namespace>>", "XY-X*2A");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "SXO6Y<.G75t+L}ie", "\"F9m@C");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('SXO6Y<.G75t+L}ie')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMANY;
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "}M;");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(pSVIDocumentImpl0, "<<unknown namespace>>");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, "id('", ":=E^sA(5+L)@h@FG", "BzagDb");
      QName qName0 = new QName("v&D,)SV~c42|0)", "38i'&|HadKFqUMuOL+\"");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl((CoreDocumentImpl) null, ":=E^sA(5+L)@h@FG=\"\"");
      Locale locale0 = Locale.JAPANESE;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, cDATASectionImpl0, locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, pSVIAttrNSImpl0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /text()[1]/@v&D,)SV~c42|0):38i'&|HadKFqUMuOL+\", operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFrameElementImpl0, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.remove();
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "option");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, "option");
      QName qName0 = dOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      dOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("OPTION", qName0.toString());
      assertEquals("OPTION", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      HTMLLabelElementImpl hTMLLabelElementImpl0 = new HTMLLabelElementImpl(hTMLDocumentImpl0, "\"*r}-up+O8[G%^zv");
      QName qName1 = dOMNodePointer0.getName();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLLabelElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      dOMNodePointer0.setValue((Object) null);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "08eKYdHCt,N[OZH]");
      dOMNodePointer0.setValue(hTMLParagraphElementImpl0);
      assertFalse(dOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(deferredDocumentImpl0, "^+");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("^+");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "q");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("xmlns:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.CharacterDataImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("http");
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.setValue(dOMNodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("valuetype");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000002");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "java.util.Locale@0000000002");
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(commentImpl0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.findEnclosingAttribute(commentImpl0, "n'c@)z#");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "processing-instruction");
      dOMNodePointer0.getNamespaceURI("&quot;");
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\"F9m@C");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0, "\"F9m@C");
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZY5q%L@$R;");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "`z.0'=ZY5q%L@$R;");
      QName qName0 = new QName("v", "`z.0'=ZY5q%L@$R;");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: v
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      QName qName0 = new QName("|oeTe*Ec2dzFy}(zhc", "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      dOMNodePointer0.getNamespaceURI("b");
      String string0 = dOMNodePointer0.getNamespaceURI("b");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "+C(", "<Ideographic>", dOMNodePointer0.XMLNS_NAMESPACE_URI);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLDoElementImpl wMLDoElementImpl0 = new WMLDoElementImpl(wMLDocumentImpl0, (String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLDoElementImpl0);
      QName qName0 = new QName("xmlns", "+C(");
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "_gB0#{Y{");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLAreaElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "~>?RjqL *$#g0ngz");
      String string0 = dOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "~>?RjqL *$#g0ngz");
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "@M");
      Locale locale0 = Locale.PRC;
      hTMLDocumentImpl0.setStrictErrorChecking(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "@M");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLAreaElementImpl0);
      QName qName0 = new QName("xml", "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "SXO6Y.G75t+L}ie", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "xmlns");
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("SXO6Y.G75t+L}ie", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, ":\"g0");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLPreElementImpl0, locale0, (String) null);
      QName qName0 = dOMNodePointer0.getName();
      assertEquals(":\"G0", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "descendant-or-self", "descendant-or-self");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("\"/\"");
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZY5q%L@$R;");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAreaElementImpl0, locale0, "`z.0'=ZY5q%L@$R;");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("r`E:_JQ*mSk");
      boolean boolean0 = DOMNodePointer.testNode((Node) text0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "SXO6Y.G75t+L}ie", "\"F9m@C");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZYq%L@$R;");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAreaElementImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, ".T N0eAW'tv)", ".T N0eAW'tv)");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "ac^ '6Ns>_T?.,O7*w");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "`z.0'=ZYq%L@$R;");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAreaElementImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, ":+<0_=4Zv");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("`z.0'=ZY5q%L@$R;");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAppletElementImpl0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      QName qName0 = new QName("XAY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "XAY-X*2A", "Factory could not create a child node for path: ", "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "XAY-X*2A");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xmlns");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("pion", "pion", "pion");
      QName qName0 = new QName("pion");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "XY-X*2A");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "\f");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "xmlns");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAnchorElementImpl wMLAnchorElementImpl0 = new WMLAnchorElementImpl(wMLDocumentImpl0, "XY-X*2A");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(pSVIDocumentImpl0, "<<unknown namespace>>");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "FA7z<Adm4IPJv@%2");
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "FRAME");
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) hTMLAreaElementImpl0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "HTMLTableCellElementImpl");
      boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = DOMNodePointer.testNode((Node) null, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "SXO6Y.G75t+L}ie", "\"F9m@C");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "SXO6Y.G75t+L}ie");
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("\"F9m@C", "\"F9m@C");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '\"F9m@C:\"F9m@C'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "&apos;", "<<unknown namespace>>", "XY-X*2A");
      Locale locale0 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000002");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "java.util.Locale@0000000002");
      NodeIterator nodeIterator0 = dOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "processing-instruction");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0);
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000002");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "java.util.Locale@0000000002");
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("NK");
      assertFalse(nodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SXO6Y.G75t+L}ie");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
      HTMLMenuElementImpl hTMLMenuElementImpl0 = new HTMLMenuElementImpl(hTMLDocumentImpl0, "cV[.LdP");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLMenuElementImpl0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "cV[.LdP");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-972), (Object) locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ", "XY-X*2A");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "(C.K?#", "(C.K?#", "(C.K?#");
      Locale locale0 = new Locale("", "", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "");
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ".");
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "java.util.Locale@0000000002");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "java.util.Locale@0000000002");
      boolean boolean0 = dOMNodePointer0.isLanguage("GtJ=(U+");
      assertFalse(boolean0);
  }
}
