* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.google.javascript.jscomp.parsing.JsDocInfoParser
* Starting Client-0
* Connecting to master process on port 19480
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-109/build/classes
  - subjects/buggy-versions/Closure-109/lib/args4j.jar
  - subjects/buggy-versions/Closure-109/lib/guava.jar
  - subjects/buggy-versions/Closure-109/lib/json.jar
  - subjects/buggy-versions/Closure-109/lib/jsr305.jar
  - subjects/buggy-versions/Closure-109/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-109/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-109/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.parsing.JsDocInfoParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4198
* Using seed 4098135194
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1231 / 4198
[MASTER] 00:49:41.106 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 306s and 63 generations, 51544 statements, best individual has fitness: 2868.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 1023
* Number of covered goals: 303
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 861
* Number of covered goals: 226
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 45%
* Total number of goals: 793
* Number of covered goals: 353
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 630
* Number of covered goals: 233
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 861
* Number of covered goals: 225
* Generated 54 tests with total length 533
* Resulting test suite's coverage: 45% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:52:58.077 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6937166666666666% of time used, but only 10/54 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 00:53:59.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 00:53:59.768 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("7j<b7+}(4!=&R$,");
assertNotNull(jsDocTokenStream0);

Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
Comment comment0 = new Comment((-1984), 1456, token_CommentType0, "__default_namespace__");
assertEquals(Token.CommentType.BLOCK_COMMENT, comment0.getCommentType());
assertEquals((-1), comment0.getLineno());
assertEquals((-1984), comment0.getAbsolutePosition());
assertEquals(161, comment0.getType());
assertEquals("161", comment0.toString());
assertEquals((-1984), comment0.getPosition());
assertEquals(0, comment0.depth());
assertFalse(comment0.hasChildren());
assertEquals("__default_namespace__", comment0.getValue());
assertNull(comment0.getJsDoc());
assertEquals(1456, comment0.getLength());
assertEquals(0, Node.BOTH);
assertEquals(2, Node.POST_FLAG);
assertEquals(7, Node.VARIABLE_PROP);
assertEquals(1, Node.END_DROPS_OFF);
assertEquals(8, Node.END_YIELDS);
assertEquals(8, Node.ISNUMBER_PROP);
assertEquals(11, Node.SKIP_INDEXES_PROP);
assertEquals(4, Node.DESCENDANTS_FLAG);
assertEquals(2, Node.LOCAL_PROP);
assertEquals(9, Node.DIRECTCALL_PROP);
assertEquals(2, Node.SPECIALCALL_WITH);
assertEquals(26, Node.LAST_PROP);
assertEquals(0, Node.NON_SPECIALCALL);
assertEquals(1, Node.LEFT);
assertEquals(14, Node.CATCH_SCOPE_PROP);
assertEquals(19, Node.PARENTHESIZED_PROP);
assertEquals(15, Node.LABEL_ID_PROP);
assertEquals(12, Node.OBJECT_IDS_PROP);
assertEquals(26, Node.DESTRUCTURING_SHORTHAND);
assertEquals(3, Node.LOCAL_BLOCK_PROP);
assertEquals(1, Node.PROPERTY_FLAG);
assertEquals(18, Node.CONTROL_BLOCK_PROP);
assertEquals(1, Node.SPECIALCALL_EVAL);
assertEquals(24, Node.JSDOC_PROP);
assertEquals(5, Node.CASEARRAY_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(23, Node.DESTRUCTURING_PARAMS);
assertEquals(6, Node.TARGETBLOCK_PROP);
assertEquals(17, Node.NAME_PROP);
assertEquals(1, Node.FUNCTION_PROP);
assertEquals(2, Node.ATTRIBUTE_FLAG);
assertEquals(0, Node.END_UNREACHED);
assertEquals(25, Node.EXPRESSION_CLOSURE_PROP);
assertEquals(22, Node.DESTRUCTURING_NAMES);
assertEquals(2, Node.RIGHT);
assertEquals(4, Node.END_RETURNS_VALUE);
assertEquals(4, Node.REGEXP_PROP);
assertEquals(10, Node.SPECIALCALL_PROP);
assertEquals(16, Node.MEMBER_TYPE_PROP);
assertEquals(21, Node.DESTRUCTURING_ARRAY_LENGTH);
assertEquals(20, Node.GENERATOR_END_PROP);
assertEquals(2, Node.END_RETURNS);
assertEquals(13, Node.INCRDECR_PROP);
assertNotNull(comment0);

Locale locale0 = Locale.UK;
assertEquals("en", locale0.getLanguage());
assertEquals("en_GB", locale0.toString());
assertEquals("eng", locale0.getISO3Language());
assertEquals("GB", locale0.getCountry());
assertEquals("", locale0.getVariant());
assertEquals("GBR", locale0.getISO3Country());
assertNotNull(locale0);

Set<String> set0 = locale0.getUnicodeLocaleKeys();
assertEquals("en", locale0.getLanguage());
assertEquals("en_GB", locale0.toString());
assertEquals("eng", locale0.getISO3Language());
assertEquals("GB", locale0.getCountry());
assertEquals("", locale0.getVariant());
assertEquals("GBR", locale0.getISO3Country());
assertEquals(0, set0.size());
assertTrue(set0.isEmpty());
assertFalse(set0.contains("__default_namespace__"));
assertNotNull(set0);

Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
Config config0 = new Config(set0, set0, false, config_LanguageMode0, true);
assertEquals("en", locale0.getLanguage());
assertEquals("en_GB", locale0.toString());
assertEquals("eng", locale0.getISO3Language());
assertEquals("GB", locale0.getCountry());
assertEquals("", locale0.getVariant());
assertEquals("GBR", locale0.getISO3Country());
assertEquals(0, set0.size());
assertTrue(set0.isEmpty());
assertFalse(set0.contains("__default_namespace__"));
assertNotNull(config0);

Context context0 = Context.getCurrentContext();
assertNull(context0);

ErrorReporter errorReporter0 = context0.getErrorReporter();
com.google.javascript.rhino.Node node0 = com.google.javascript.rhino.Node.newString("7Z-seF>U$!", (-718), 25);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.LC;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);

[MASTER] 00:54:02.077 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'JsDocInfoParser_ESTest' to results/Closure-109/com.google.javascript.jscomp.parsing.JsDocInfoParser/BBC-F0/tests/22
* Done!

* Computation finished
