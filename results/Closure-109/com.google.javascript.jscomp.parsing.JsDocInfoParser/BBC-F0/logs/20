* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.google.javascript.jscomp.parsing.JsDocInfoParser
* Starting Client-0
* Connecting to master process on port 9861
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-109/build/classes
  - subjects/buggy-versions/Closure-109/lib/args4j.jar
  - subjects/buggy-versions/Closure-109/lib/guava.jar
  - subjects/buggy-versions/Closure-109/lib/json.jar
  - subjects/buggy-versions/Closure-109/lib/jsr305.jar
  - subjects/buggy-versions/Closure-109/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-109/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-109/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.parsing.JsDocInfoParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4198
* Using seed 321614210
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1231 / 4198
[MASTER] 00:46:48.572 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 00:47:34.568 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 306s and 59 generations, 59499 statements, best individual has fitness: 2840.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 30%
* Total number of goals: 1023
* Number of covered goals: 306
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 861
* Number of covered goals: 223
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 90%
* Total number of goals: 10
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 793
* Number of covered goals: 335
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 630
* Number of covered goals: 278
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 861
* Number of covered goals: 218
* Generated 56 tests with total length 569
* Resulting test suite's coverage: 46% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:51:21.495 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68015% of time used, but only 11/56 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
[MASTER] 00:52:23.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 00:52:23.302 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Node node0 = JsDocInfoParser.parseTypeString("msg.XML.not.available");
assertNotNull(node0);

JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.XML.not.available");
Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
Comment comment0 = new Comment(29, 1095, token_CommentType0, "LIBRARY_SCOPE");
JSDocInfo jSDocInfo0 = new JSDocInfo();
Set<String> set0 = jSDocInfo0.getModifies();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.ANNOTATION;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
boolean boolean0 = jsDocInfoParser0.parse();
assertEquals(40, node0.getType());
assertFalse(boolean0);
assertEquals(0, node0.getSourcePosition());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
[MASTER] 00:52:26.371 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing JUnit test case 'JsDocInfoParser_ESTest' to results/Closure-109/com.google.javascript.jscomp.parsing.JsDocInfoParser/BBC-F0/tests/20
* Done!

* Computation finished
