* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.parsing.JsDocInfoParser
* Starting Client-0
* Connecting to master process on port 2872
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-109/build/classes
  - subjects/buggy-versions/Closure-109/lib/args4j.jar
  - subjects/buggy-versions/Closure-109/lib/guava.jar
  - subjects/buggy-versions/Closure-109/lib/json.jar
  - subjects/buggy-versions/Closure-109/lib/jsr305.jar
  - subjects/buggy-versions/Closure-109/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-109/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-109/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.parsing.JsDocInfoParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4198
* Using seed 1541507956
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 1231 / 4198
[MASTER] 17:28:55.597 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 17:29:13.253 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 17:31:27.952 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
[MASTER] 17:32:43.120 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 602s and 1908 generations, 1100106 statements, best individual has fitness: 2522.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 1023
* Number of covered goals: 380
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 861
* Number of covered goals: 271
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 53%
* Total number of goals: 793
* Number of covered goals: 420
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 630
* Number of covered goals: 324
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 31%
* Total number of goals: 861
* Number of covered goals: 270
* Generated 74 tests with total length 586
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 17:39:37.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:38.203 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:38.960 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:40.159 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:41.082 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:41.985 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:42.683 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:43.400 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:44.170 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:44.178 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 17:39:44.179 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.deprecated", (-2288), (-2288));
Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-2288), (-2288), token_CommentType0, "msg.jsdoc.deprecated");
Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.deprecated");
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
node0.setSourceFileForTesting("Y");
Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
jsDocInfoParser0.parse();

[MASTER] 17:39:45.021 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:45.766 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:45.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 17:39:45.767 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.deprecated", (-2288), (-2288));
Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-357), (-2573), token_CommentType0, "msg.jsdoc.deprecated");
Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.deprecated");
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
jsDocInfoParser0.parse();

[MASTER] 17:39:46.452 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:47.275 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:48.015 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:48.951 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:50.047 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:50.727 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:39:57.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: UnsupportedOperationException
[MASTER] 17:39:57.055 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Node node0 = JsDocInfoParser.parseTypeString("PIH-[;o:*47(FkB,jp");
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("DnN?tib{u[0MbI_&S", 16);
jsDocTokenStream0.cursor = 39;
jsDocTokenStream0.cursor = 31;
FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
Context context0 = Context.enter();
Context context1 = Context.enter(context0);
FileSystemHandling.shouldAllThrowIOExceptions();
ErrorCollector errorCollector0 = new ErrorCollector();
ErrorReporter errorReporter0 = context1.setErrorReporter(errorCollector0);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.RB;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);

[MASTER] 17:40:05.473 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: UnsupportedOperationException
[MASTER] 17:40:05.473 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, true);
ContextFactory contextFactory0 = new ContextFactory();
Context context0 = contextFactory0.enter();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("funetion");
Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
Comment comment0 = new Comment((-55), (-1910102270), token_CommentType0, ".,duh(C");
Node node0 = Node.newString(2899, "YzuRTuV#q`>(2,>7", 130, 1317);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.EQUALS;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);

[MASTER] 17:40:21.901 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 17:40:21.902 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-2288), (-2288), token_CommentType0, "msg.jsdoc.deprecated");
Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.deprecated");
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":");
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
jsDocInfoParser0.parse();

[MASTER] 17:40:24.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 17:40:24.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-2288), (-2288), token_CommentType0, "msg.jsdoc.deprecated");
Node node0 = JsDocInfoParser.parseTypeString("msg.jsdoc.deprecated");
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":");
jsDocTokenStream0.sourceCursor = 5;
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
jsDocInfoParser0.parse();

[MASTER] 17:40:25.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 17:40:25.673 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("msg.jsdoc.deprecated", (-2288), (-2288));
Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-357), (-2573), token_CommentType0, "msg.jsdoc.deprecated");
HashSet<String> hashSet0 = new HashSet<String>();
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
jsDocTokenStream0.sourceCursor = (-1844929248);
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);
Node node0 = JsDocInfoParser.parseTypeString("com.google.javascript.rhino.InputId");
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.LB;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);

[MASTER] 17:40:27.887 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing tests to file
* Writing JUnit test case 'JsDocInfoParser_ESTest' to results/Closure-109/com.google.javascript.jscomp.parsing.JsDocInfoParser/BBC-F0-50/tests/21
* Done!

* Computation finished
