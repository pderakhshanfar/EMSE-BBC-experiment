* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: com.google.javascript.jscomp.parsing.JsDocInfoParser
* Starting Client-0
* Connecting to master process on port 13608
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-109/build/classes
  - subjects/buggy-versions/Closure-109/lib/args4j.jar
  - subjects/buggy-versions/Closure-109/lib/guava.jar
  - subjects/buggy-versions/Closure-109/lib/json.jar
  - subjects/buggy-versions/Closure-109/lib/jsr305.jar
  - subjects/buggy-versions/Closure-109/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-109/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-109/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.parsing.JsDocInfoParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4198
* Using seed 2759149341
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 1231 / 4198
[MASTER] 08:52:31.285 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 08:52:37.672 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 08:54:22.232 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 08:56:45.089 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
* Search finished after 601s and 1425 generations, 876574 statements, best individual has fitness: 2585.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 35%
* Total number of goals: 1023
* Number of covered goals: 357
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 861
* Number of covered goals: 261
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 50%
* Total number of goals: 793
* Number of covered goals: 399
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 630
* Number of covered goals: 325
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 73%
* Total number of goals: 15
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 861
* Number of covered goals: 260
* Generated 78 tests with total length 629
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 26%
* Compiling and checking tests
[MASTER] 09:03:11.130 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:12.720 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:13.697 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:15.488 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:16.450 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:17.405 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:03:21.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:21.283 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".*D");
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
TreeSet<String> treeSet0 = new TreeSet<String>();
Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment(1, 110, token_CommentType0, "gSU8RKn\"");
ErrorReporter errorReporter0 = context0.getErrorReporter();
Node node0 = Node.newNumber(0.0);
node0.setSourceFileForTesting("language version");
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
jsDocInfoParser0.parse();

[MASTER] 09:03:25.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:25.412 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("e");
Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
Comment comment0 = new Comment((-2872), 0, token_CommentType0, "msg.jsdoc.missing.gt");
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
TreeSet<String> treeSet0 = new TreeSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, (Node) null, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.EOC;
jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
jsDocInfoParser0.parse();

[MASTER] 09:03:28.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:28.669 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".*D");
HashSet<String> hashSet0 = new HashSet<String>();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, true);
Context context0 = Context.getCurrentContext();
Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
Comment comment0 = new Comment(2306, (-930), token_CommentType0, "3S$o?gY?s\u0003,");
ErrorReporter errorReporter0 = context0.getErrorReporter();
Node node0 = Node.newNumber(1716.37059);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.STAR;
Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
JsDocInfoParser jsDocInfoParser1 = new JsDocInfoParser(jsDocTokenStream0, comment0, node1, config0, errorReporter0);
jsDocInfoParser1.parse();

[MASTER] 09:03:30.502 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:30.502 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Node node0 = JsDocInfoParser.parseTypeString("7=Nwb");
SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
Set<String> set0 = functionType0.getOwnPropertyNames();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
Context context0 = Context.getCurrentContext();
Token.CommentType token_CommentType0 = Token.CommentType.LINE;
Comment comment0 = new Comment((-1289), 45, token_CommentType0, "Unknown class name");
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("YKcz!$k>.g2SCTu", 42);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocInfoParser jsDocInfoParser1 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.STAR;
jsDocInfoParser1.parseAndRecordTypeNode(jsDocToken0);
jsDocInfoParser0.parse();

[MASTER] 09:03:38.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:38.771 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Vqp");
JSDocInfo jSDocInfo0 = new JSDocInfo();
Set<String> set0 = jSDocInfo0.getSuppressions();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(set0, set0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
Comment comment0 = new Comment(5, 13, token_CommentType0, "9<T?/({zKc");
ErrorReporter errorReporter0 = context0.getErrorReporter();
Node node0 = Node.newNumber((double) 25);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.PIPE;
Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
assertNull(node1);

boolean boolean0 = jsDocInfoParser0.parse();
assertFalse(boolean0);


[MASTER] 09:03:43.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:43.730 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Vqp");
JSDocInfo jSDocInfo0 = new JSDocInfo();
Set<String> set0 = jSDocInfo0.getSuppressions();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(set0, set0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
Comment comment0 = new Comment(5, 13, token_CommentType0, "9<T?/({zKc");
ErrorReporter errorReporter0 = context0.getErrorReporter();
ImmutableList<JSType> immutableList0 = ImmutableList.of();
JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((com.google.javascript.rhino.ErrorReporter) null, true);
Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.ANNOTATION;
Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
assertNull(node1);

boolean boolean0 = jsDocInfoParser0.parse();
assertFalse(boolean0);


[MASTER] 09:03:45.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:45.568 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Node node0 = JsDocInfoParser.parseTypeString("error: ");
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("error: ", 7);
Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
Comment comment0 = new Comment(54, 50, token_CommentType0, "error: ");
JSDocInfo jSDocInfo0 = new JSDocInfo();
Set<String> set0 = jSDocInfo0.getSuppressions();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(set0, set0, true, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
boolean boolean0 = jsDocInfoParser0.parse();
assertEquals(0, node0.getSourcePosition());
assertFalse(boolean0);
assertEquals(5, node0.getLength());


[MASTER] 09:03:46.629 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:46.629 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Node node0 = new Node(17, 23, 1);
JSDocInfo jSDocInfo0 = new JSDocInfo();
Set<String> set0 = jSDocInfo0.getSuppressions();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
Context context0 = Context.getCurrentContext();
ErrorReporter errorReporter0 = context0.getErrorReporter();
JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]v?;y~");
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.LC;
Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
assertNull(node1);


[MASTER] 09:03:48.061 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:03:48.062 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("&b+|*]g-{3");
Node node0 = JsDocInfoParser.parseTypeString("&b+|*]g-{3");
JSDocInfo jSDocInfo0 = new JSDocInfo();
Context context0 = Context.getCurrentContext();
Set<String> set0 = jSDocInfo0.getSuppressions();
Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
Config config0 = new Config(set0, set0, false, config_LanguageMode0, true);
ErrorReporter errorReporter0 = context0.getErrorReporter();
Token.CommentType token_CommentType0 = Token.CommentType.HTML;
Comment comment0 = new Comment(50, 55, token_CommentType0, "msg.jsdoc.expose");
JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorReporter0);
JsDocToken jsDocToken0 = JsDocToken.LC;
Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
assertEquals(301, node1.getType());
assertEquals(2, node1.getChildCount());
assertNotNull(node1);


* Writing tests to file
* Writing JUnit test case 'JsDocInfoParser_ESTest' to results/Closure-109/com.google.javascript.jscomp.parsing.JsDocInfoParser/BBC-F0-opt-20/tests/6
* Done!

* Computation finished
