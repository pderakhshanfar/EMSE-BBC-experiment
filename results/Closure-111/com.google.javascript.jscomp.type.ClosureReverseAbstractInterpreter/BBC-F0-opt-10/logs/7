* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter
* Starting Client-0
* Connecting to master process on port 7179
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-111/build/classes
  - subjects/buggy-versions/Closure-111/lib/args4j.jar
  - subjects/buggy-versions/Closure-111/lib/guava.jar
  - subjects/buggy-versions/Closure-111/lib/json.jar
  - subjects/buggy-versions/Closure-111/lib/jsr305.jar
  - subjects/buggy-versions/Closure-111/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-111/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-111/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 305
* Using seed 3274605807
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 112 / 305
[MASTER] 10:10:53.683 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 10:11:24.040 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 602s and 1432 generations, 688877 statements, best individual has fitness: 221.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 20%
* Total number of goals: 60
* Number of covered goals: 12
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 71
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 75%
* Total number of goals: 4
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 28%
* Total number of goals: 97
* Number of covered goals: 27
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 71
* Number of covered goals: 21
* Generated 8 tests with total length 44
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 10:21:01.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:02.402 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:02.840 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:03.431 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:03.927 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:04.391 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:04.841 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:05.312 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:05.851 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:21:06.420 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'ClosureReverseAbstractInterpreter_ESTest' to results/Closure-111/com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter/BBC-F0-opt-10/tests/7
* Done!

* Computation finished
