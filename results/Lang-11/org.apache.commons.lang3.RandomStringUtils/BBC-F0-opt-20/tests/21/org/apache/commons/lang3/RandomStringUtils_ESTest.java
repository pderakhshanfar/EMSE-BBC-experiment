/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 10:26:47 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom(2384);
      RandomStringUtils.randomAlphanumeric(2384);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[1];
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.random(1, false, false);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      RandomStringUtils.random(2914, 0, (-1821), true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.random(0, 0, (-1), false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.random(0, 177, (-1), true, true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1943));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1943 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(46220);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-916));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -916 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2019));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2019 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2821));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2821 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2338, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1049, true, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(46346, "c*7Ej|!m+Q");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-265), "Requested random string length ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -265 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(36231, 123, 2309, false, false, charArray0, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[2];
      MockRandom mockRandom0 = new MockRandom(263L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(123, 2617, 123, true, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(46199, 46200, 46200, true, true, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[8];
      // Undeclared exception!
      RandomStringUtils.random(3255, 0, 3510, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1679), 0, (-2634), true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1679 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, 1787, 1787, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2156), 14, 53, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2156 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 41, 41, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2959));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2959 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[2];
      RandomStringUtils.random(2337, charArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(56191, 56191, 2131, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(517, (-174), (-2614), true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      MockRandom mockRandom0 = new MockRandom(4679L);
      // Undeclared exception!
      RandomStringUtils.random(56192, 0, 0, true, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '3';
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(574, 1, 55296, true, true, charArray0, (java.util.Random) mockRandom0);
      assertEqualsstring0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '3', '\u0000', '\u0000'}, charArray0);
      assertEquals(4, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, true, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(1, 0, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
      assertEquals("\u0000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom(0);
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(14, 0, 56192, false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[4];
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1186), 0, 387, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1186 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[4];
      MockRandom mockRandom0 = new MockRandom(0L);
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(0, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(4, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, (String) null);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296, 56192, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(219, 56191, 219, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = RandomStringUtils.random(686, (-4526), 55296, false, false);
      assertEquals("\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52\uEE52", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(35, 57331, 21, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Random.setNextRandom(16);
      String string0 = RandomStringUtils.randomNumeric(1459);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Random.setNextRandom((-4526));
      String string0 = RandomStringUtils.randomAlphabetic(686);
      assertEquals("cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = RandomStringUtils.random(2672, ";cS})33(W T:=");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3753, 56320, (-1), true, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3540), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3540 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphanumeric(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1459);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = RandomStringUtils.random(123);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2384);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(686);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2582, 1459, 3444, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(2384);
      assertNotNull(string0);
  }
}
