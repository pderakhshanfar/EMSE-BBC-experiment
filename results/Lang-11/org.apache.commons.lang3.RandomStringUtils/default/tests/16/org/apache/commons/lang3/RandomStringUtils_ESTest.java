/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:18:02 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-328);
      Random.setNextRandom((-328));
      Random.setNextRandom(25);
      Random.setNextRandom(25);
      RandomStringUtils.randomNumeric(25);
      int int1 = 56191;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56191);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt(720);
      RandomStringUtils.random(0, 0, 720, true, true, (char[]) null, (java.util.Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(476, 720, 476, false, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(36429, 55296, 36429, false, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      Random.setNextRandom(48733);
      RandomStringUtils.randomAlphanumeric(5514);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomStringUtils.random(638, 56320, (-1), false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextGaussian();
      RandomStringUtils.random(2655, (-1827), 1, false, false, (char[]) null, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1827), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1827 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(498);
      RandomStringUtils.randomAlphanumeric(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      RandomStringUtils.random(638, 56308, (-1), false, false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.random(1073, 1073, 342, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 1546;
      boolean boolean0 = false;
      RandomStringUtils.random(14, 14, 1546, false, false);
      int int1 = (-1761);
      Random.setNextRandom((-1761));
      int int2 = 729;
      char[] charArray0 = new char[6];
      charArray0[0] = '{';
      charArray0[5] = '>';
      charArray0[0] = 'G';
      charArray0[5] = 'I';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.nextDouble();
      mockRandom0.setSeed((-1761));
      mockRandom0.longs((long) 729, (long) '\u0000', (long) 1546);
      RandomStringUtils.randomAlphabetic('>');
      int int3 = (-1958);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1958), "\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E\u000E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1958 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.setSeed(0L);
      RandomStringUtils.random(1209, 354, 32, false, false, (char[]) null, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-5037), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -5037 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, (-1), false, false, charArray0, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0);
      int int0 = 1;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1, "!J_L%.IkO8{@z>.'");
      char[] charArray0 = new char[5];
      MockRandom mockRandom0 = new MockRandom((-1666L));
      mockRandom0.doubles();
      mockRandom0.setSeed(1860);
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 127, false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1, "!J_L%.IkO8{@z>.'");
      char[] charArray0 = new char[3];
      charArray0[2] = '8';
      charArray0[1] = '8';
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0L);
      RandomStringUtils.random(39, (int) (byte)1, (int) (byte)0, false, true, charArray0, (java.util.Random) mockRandom0);
      int int0 = 55296;
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2968));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2968 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.random(127);
      char[] charArray0 = new char[2];
      charArray0[1] = '8';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(127, 1, 1379, false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1379, "a[e>_\"#a7J.e]8/\"[<");
      RandomStringUtils.random(1, "!J_L%.IkO8{@z>.'");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-37);
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte) (-37);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0L);
      RandomStringUtils.random(34, (int) (byte)0, (int) (byte) (-37), false, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, Integer.MAX_VALUE, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(48733, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      RandomStringUtils.random(18, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1379, "a[e>_\"#a7J.e]8/\"[<");
      RandomStringUtils.random(1, "!J_L%.IkO8{@z>.'");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0L);
      // Undeclared exception!
      RandomStringUtils.random(39, (int) (byte)1, 270, true, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-349), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -349 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1379, "a[e>_\"#a7J.e]8/\"[<");
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.setSeed(1);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56320, 1379, 870, true, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.random(534, (-1727), 638, false, false);
      RandomStringUtils.random(638);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(498);
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'c';
      charArray0[2] = 'V';
      charArray0[3] = 'l';
      charArray0[4] = '`';
      charArray0[5] = 'I';
      mockRandom0.setSeed(0L);
      charArray0[6] = '~';
      charArray0[7] = 'Q';
      RandomStringUtils.random(1860, 0, 1860, true, true, charArray0, (java.util.Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(22);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56191, " b/% ");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56191, 56191, 28, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56191
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1, "bT?|/5ES");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '(';
      charArray0[3] = 'y';
      charArray0[4] = 'H';
      MockRandom mockRandom0 = new MockRandom(1419L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1969, 55296, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1969
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 12, true, true);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = false;
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAlphabetic(0);
      boolean boolean1 = true;
      RandomStringUtils.random(0, 1, 22, true, true);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(48733);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3495, 3495, 16, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3495
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = '0';
      charArray0[2] = 'n';
      charArray0[3] = 'K';
      charArray0[4] = 'B';
      charArray0[5] = 'J';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-75), 1, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -75
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(406, 406, 406, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(579, false, false);
      RandomStringUtils.random(579, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1192));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1192 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1168));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1168 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = ']';
      charArray0[1] = '(';
      charArray0[2] = 'Y';
      charArray0[3] = 't';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomStringUtils.random(498);
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'c';
      charArray0[2] = 'd';
      charArray0[5] = '\u0000';
      mockRandom0.setSeed((-583L));
      RandomStringUtils.random(18, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[6];
      charArray0[0] = 'r';
      charArray0[1] = 'N';
      charArray0[2] = 'c';
      charArray0[3] = 'H';
      charArray0[4] = 't';
      charArray0[5] = 'g';
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1493);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.randomAscii(1027);
      int int0 = (-2270);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2270));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2270 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, 1, 0, true, true);
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(293, 293, 0, true, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3445), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3445 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RandomStringUtils.random(181, 181, (-1), true, true);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-679);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-679), (-679), (-679), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -679 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = (-1510);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-435), (-435), (-1510), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -435 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      charArray0[1] = 'A';
      charArray0[2] = '*';
      charArray0[3] = 'j';
      charArray0[4] = 'm';
      charArray0[5] = 'j';
      charArray0[6] = 'w';
      RandomStringUtils.random(0, 0, 108, true, true, charArray0);
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(48733, 48733, 48733, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1, "bT?|/5ES");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '(';
      charArray0[3] = 'y';
      charArray0[4] = 'H';
      MockRandom mockRandom0 = new MockRandom(1419L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-112), 1969, 55296, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -112 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1915, true, true);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      int int1 = 0;
      boolean boolean0 = true;
      boolean boolean1 = true;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      // Undeclared exception!
      try { 
        mockRandom0.nextInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = (-1194);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1194), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1194 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-94), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -94 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(9);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-3330));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3330 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 166;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(166);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1839);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RandomStringUtils.random(2735, (char[]) null);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(299);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      RandomStringUtils.random(1, charArray0);
      int int0 = (-264);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-264));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -264 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1379, "a[e>_\"#a7J.e]8/\"[<");
      RandomStringUtils.random(1, "!J_L%.IkO8{@z>.'");
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      // Undeclared exception!
      RandomStringUtils.random(45298, (-4252), 1, false, false);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(973, 973, 973, false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RandomStringUtils.randomAscii(1471);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = 498;
      RandomStringUtils.random(498);
      RandomStringUtils.random(0, (String) null);
      // Undeclared exception!
      RandomStringUtils.random(56191, "a[e>_\"#a7J.e]8/\"[<");
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomStringUtils.random(23, "Wv4+`Fh97B");
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = 1486;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1486, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3934), " is less than 0.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3934 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.random(1);
      int int1 = (-2272);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2272));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2272 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.setSeed(127);
      mockRandom0.nextGaussian();
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(1209, 56191, (-1827), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.setSeed(0L);
      mockRandom0.nextGaussian();
      // Undeclared exception!
      RandomStringUtils.random(441, 55296, (-2785), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      RandomStringUtils.random(651, 56320, (-1), false, false);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RandomStringUtils.random(32, "]kq>Z{)7WZ3");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'L';
      charArray0[2] = 'x';
      charArray0[3] = '\"';
      charArray0[4] = 'D';
      charArray0[5] = 'I';
      charArray0[6] = '%';
      charArray0[7] = '3';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(32, 32, 32, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1471);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(55296);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = 56192;
      // Undeclared exception!
      RandomStringUtils.randomAscii(56192);
  }
}
