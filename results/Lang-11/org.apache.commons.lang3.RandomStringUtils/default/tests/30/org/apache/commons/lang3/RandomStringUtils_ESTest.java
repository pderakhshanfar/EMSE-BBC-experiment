/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:28:04 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = '8';
      charArray0[2] = 'H';
      charArray0[3] = 'W';
      charArray0[4] = 'w';
      charArray0[5] = 'E';
      charArray0[6] = 'A';
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.nextInt((-1636));
      RandomStringUtils.random(1, 1, (-2700), true, true, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(35);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(62, 57343, 62, false, false, (char[]) null, (Random) mockRandom0);
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomStringUtils.randomAlphanumeric(62);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.randomAscii(1);
      int int0 = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = 'p';
      charArray0[1] = '\"';
      charArray0[2] = '(';
      charArray0[3] = '\\';
      charArray0[4] = '6';
      charArray0[5] = 'W';
      charArray0[6] = 'd';
      charArray0[7] = 'l';
      charArray0[8] = '_';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 0, 0, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = '|';
      // Undeclared exception!
      RandomStringUtils.random(45301, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      MockRandom mockRandom1 = new MockRandom(0L);
      // Undeclared exception!
      RandomStringUtils.random(56191, 56191, 0, false, false, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((long) 6);
      mockRandom0.setSeed(0L);
      mockRandom0.longs();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte) (-23);
      mockRandom0.nextBytes(byteArray0);
      MockRandom mockRandom1 = new MockRandom((byte)0);
      // Undeclared exception!
      RandomStringUtils.random(123, (int) (byte)0, (int) (byte)0, false, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(32, 3614, 1105, true, true, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((long) 6);
      mockRandom0.setSeed(0L);
      mockRandom0.longs();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte) (-23);
      mockRandom0.nextBytes(byteArray0);
      MockRandom mockRandom1 = new MockRandom((byte)0);
      RandomStringUtils.random(123, (int) (byte)0, (int) (byte)0, false, false, (char[]) null, (Random) mockRandom1);
      RandomStringUtils.random(333);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(33, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphabetic(0);
      assertEquals("", string0);
      
      RandomStringUtils.random((int) (byte)0, "");
      org.evosuite.runtime.Random.setNextRandom((byte)0);
      RandomStringUtils.random((int) (byte)0, false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((long) 6);
      mockRandom0.setSeed(0L);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      MockRandom mockRandom1 = new MockRandom((byte)0);
      // Undeclared exception!
      RandomStringUtils.random(123, (int) (byte)0, (int) (byte)0, true, false, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 56319;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56319, 56319, 23, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 24;
      MockRandom mockRandom0 = new MockRandom(5L);
      // Undeclared exception!
      RandomStringUtils.random(56320, 651, 24, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(27374, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(57343);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomStringUtils.random(674, "rT:>,=aAb`4n");
      org.evosuite.runtime.Random.setNextRandom(88);
      RandomStringUtils.randomAlphabetic(88);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = new char[3];
      int int0 = 0;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56320, 0, (-1741), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte byte0 = (byte)0;
      mockRandom0.longs((long) (byte)0, 1L);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      RandomStringUtils.random(9, 0, 1964, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 737;
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(737, 231, 737, true, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(737, (-501), 366, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(37317, 37317, (-3079), false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.longs((long) (byte)0, 1L);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(9, 0, 1964, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt((-174));
      // Undeclared exception!
      try { 
        RandomStringUtils.random(Integer.MAX_VALUE, Integer.MAX_VALUE, (-174), true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(57343, 3, 37357, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((long) 0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      int int0 = 56192;
      MockRandom mockRandom1 = new MockRandom((byte)0);
      // Undeclared exception!
      RandomStringUtils.random(38, 56191, (int) (byte)0, false, false, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints(0L);
      mockRandom0.nextFloat();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      boolean boolean0 = false;
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(56192, (-636), 56192, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.random(483, (-1825), 483, false, false);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(62, 62, 62, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4871));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4871 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      boolean boolean0 = true;
      RandomStringUtils.random(2873, 2873, (-4141), true, true);
      char[] charArray0 = new char[9];
      charArray0[0] = 't';
      charArray0[1] = 't';
      charArray0[2] = 't';
      charArray0[3] = 'K';
      charArray0[1] = 'a';
      charArray0[5] = 't';
      charArray0[6] = 't';
      charArray0[7] = 't';
      charArray0[8] = 't';
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.random(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(2873);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = RandomStringUtils.random(2873, 2873, (-4165), true, true);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4165), string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4165 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-1), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomStringUtils.randomAscii(128);
      RandomStringUtils.random(128, "                                                                                                                                ");
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-989), (-989), 0, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -989 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(11, (char[]) null);
      char[] charArray0 = new char[3];
      charArray0[0] = 'r';
      charArray0[1] = ']';
      charArray0[2] = '6';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1454, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-169), (-169), 45310, true, true, (char[]) null, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -169 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'F';
      charArray0[1] = 'c';
      charArray0[2] = '0';
      charArray0[3] = 'n';
      charArray0[4] = '_';
      charArray0[5] = 't';
      charArray0[6] = 'x';
      charArray0[7] = '+';
      charArray0[8] = ';';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-5919), (-5919), (-5919), true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -5919 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(148, 148, 148, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-900));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -900 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      org.evosuite.runtime.Random.setNextRandom(24);
      RandomStringUtils.randomAlphanumeric(24);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-941);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-941), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -941 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 762;
      RandomStringUtils.randomAscii(762);
      int int1 = (-13);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-13));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -13 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1760), (-1760), (-731), false, false, (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1760 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, 0, 0, false, false);
      int int0 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = 't';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(2149, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2072), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2072 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(37272, (String) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(251, (-3544), 1, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3544
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '?';
      charArray0[1] = 'F';
      charArray0[2] = '#';
      charArray0[3] = 'l';
      charArray0[4] = '2';
      charArray0[5] = ')';
      charArray0[6] = 'R';
      charArray0[7] = 'B';
      MockRandom mockRandom0 = new MockRandom((-1L));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-4);
      mockRandom0.ints((long) 57343);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, 32, 57343, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 674;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(674, 105, 674, true, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 105
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 922;
      int int1 = (-1);
      boolean boolean0 = true;
      boolean boolean1 = false;
      char[] charArray0 = new char[1];
      charArray0[0] = 'j';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(922, (-1), (-1), true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(197, true, true);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      charArray0[1] = '#';
      charArray0[2] = 'g';
      charArray0[3] = 'G';
      charArray0[4] = 'l';
      RandomStringUtils.random(0, (-2217), 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56320, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, "");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'M';
      charArray0[1] = '`';
      charArray0[2] = 'c';
      charArray0[3] = ',';
      charArray0[4] = '/';
      charArray0[5] = '5';
      charArray0[6] = 'D';
      RandomStringUtils.random(0, charArray0);
      int int1 = 0;
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = ' ';
      charArray0[1] = '[';
      charArray0[2] = 'J';
      charArray0[3] = 'J';
      charArray0[4] = 'J';
      charArray0[5] = ' ';
      charArray0[6] = ' ';
      charArray0[7] = ' ';
      charArray0[8] = ' ';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.setSeed(0L);
      RandomStringUtils.random(1, 1, 57343, false, false, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(57343, 57343, 1, false, false);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean0 = false;
      int int0 = 77;
      int int1 = 57343;
      // Undeclared exception!
      RandomStringUtils.random(77, 57343, 77, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils.random(835, false, false);
      char[] charArray0 = new char[9];
      charArray0[0] = 'o';
      charArray0[1] = '}';
      charArray0[2] = 'o';
      charArray0[3] = '^';
      charArray0[4] = 'Y';
      charArray0[5] = '7';
      charArray0[6] = 'L';
      charArray0[7] = '!';
      charArray0[8] = 'N';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 835, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.random(56320, 0, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-3272));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3272 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, "The chars array must not be empty");
      boolean boolean0 = true;
      RandomStringUtils.random(0, 0, 0, true, true);
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'Z';
      charArray0[2] = 'V';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0, "The chars array must not be empty");
      int int1 = 85;
      boolean boolean1 = true;
      boolean boolean2 = false;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        mockRandom0.ints((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size must be non-negative
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 1935, true, true);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1111, 1111, 1111, false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(0);
      assertEquals("", string0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3092, 3092, 3092, true, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2292, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = (-4062);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4062), ")I+t!L1/vL}}!]wbV3\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4062 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = '9';
      charArray0[2] = 'T';
      charArray0[3] = 'U';
      charArray0[4] = ':';
      charArray0[5] = '\'';
      charArray0[6] = '5';
      charArray0[7] = '.';
      charArray0[8] = 'q';
      RandomStringUtils.random(1, 1, 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 356;
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = '%';
      charArray0[4] = '1';
      charArray0[5] = 'F';
      charArray0[6] = 'k';
      charArray0[7] = 'm';
      charArray0[8] = 'L';
      RandomStringUtils.random(356, charArray0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(356);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'O';
      charArray0[2] = '6';
      charArray0[3] = '\\';
      charArray0[4] = '8';
      charArray0[5] = 'u';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56191, "N)fi$%(36>;~");
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-879));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -879 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      int int1 = 759;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(759);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-411));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -411 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = (-2450);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-2450));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2450 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(231);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          // Undeclared exception!
          RandomStringUtils.randomNumeric(2103);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56319);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RandomStringUtils.randomAscii(127);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 31;
      RandomStringUtils.random(31);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(37);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.random(17251, 56191, 17251, false, false);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(545);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = RandomStringUtils.random(1);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int int0 = 387;
      int int1 = (-4229);
      boolean boolean0 = false;
      RandomStringUtils.random(0, 387, (-4229), false, false);
      RandomStringUtils.random(1);
      RandomStringUtils.random(544);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }
}
