/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:22:20 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = (-4951);
      // Undeclared exception!
      RandomStringUtils.random(56320, 56320, (-4951), false, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320, 56320, 61, false, false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.random(2620);
      Random.setNextRandom(2620);
      RandomStringUtils.randomAlphabetic(319);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'X';
      charArray0[1] = 'g';
      charArray0[2] = '';
      RandomStringUtils.random(19, charArray0);
      Random.setNextRandom(19);
      RandomStringUtils.randomNumeric(19);
      RandomStringUtils.random(19, charArray0);
      RandomStringUtils.randomAlphanumeric(2552);
      RandomStringUtils.random(21, charArray0);
      int int0 = (-3930);
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56192, (-3930), 314, false, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(393L);
      RandomStringUtils.random(59, 0, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
      RandomStringUtils.random(59);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 1169;
      MockRandom mockRandom0 = new MockRandom(4125L);
      mockRandom0.nextDouble();
      int int1 = 0;
      MockRandom mockRandom1 = new MockRandom(3555L);
      // Undeclared exception!
      RandomStringUtils.random(1576, 56191, (-245), false, false, (char[]) null, (java.util.Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 1169;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      MockRandom mockRandom1 = new MockRandom(1576);
      // Undeclared exception!
      RandomStringUtils.random(1576, 0, 0, true, true, (char[]) null, (java.util.Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'o';
      charArray0[1] = '3';
      charArray0[2] = '$';
      charArray0[3] = '|';
      charArray0[4] = 'e';
      RandomStringUtils.random(18, 1, (-933), true, true, charArray0);
      RandomStringUtils.randomAlphanumeric(0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2416);
      mockRandom0.nextInt(8);
      RandomStringUtils.random(1285, 0, (-1600), false, false, (char[]) null, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-4318));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4318 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      int int0 = 0;
      char[] charArray0 = new char[7];
      charArray0[2] = 'B';
      charArray0[5] = 'B';
      // Undeclared exception!
      RandomStringUtils.random(55296, 0, 0, false, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2417);
      mockRandom0.nextInt(23);
      RandomStringUtils.random(23, (-688), 57343, true, true, (char[]) null, (java.util.Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(57343, "\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50\uFD50");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom(23);
      RandomStringUtils.random(0, 1, 2417, true, false, charArray0, (java.util.Random) mockRandom0);
      mockRandom0.nextGaussian();
      RandomStringUtils.randomAscii(530);
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(530, 633, 38, false, true, charArray1, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(2413);
      Random.setNextRandom(20);
      RandomStringUtils.randomAlphanumeric(2413);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.nextDouble();
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      RandomStringUtils.random(3, 3, (-1), true, true, charArray0, (java.util.Random) mockRandom0);
      RandomStringUtils.random(3, "R+klfKU\"2\"pj8FC*,");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(32, 32, 32, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(283, 283, 283, false, false, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 48836;
      // Undeclared exception!
      RandomStringUtils.random(48836, (-4939), (-3), false, false);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(47371, "Requested random string length ");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[5];
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.doubles();
      // Undeclared exception!
      RandomStringUtils.random(46322, 1, 2, false, true, charArray0, (java.util.Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 2601;
      boolean boolean0 = true;
      MockRandom mockRandom0 = new MockRandom(2601);
      // Undeclared exception!
      RandomStringUtils.random(2601, 2601, 1066, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2601);
      // Undeclared exception!
      RandomStringUtils.random(2601, 2601, 1066, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = ',';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 2094, (-1983), false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(45315);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      int int0 = 32;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2413, 2413, 32, false, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'H';
      charArray0[4] = '#';
      charArray0[5] = 'e';
      RandomStringUtils.random(2413, 0, 1, false, false, charArray0, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'v';
      charArray0[1] = '}';
      charArray0[2] = '%';
      charArray0[3] = 'l';
      char[] charArray1 = new char[6];
      charArray1[0] = ')';
      charArray1[1] = ')';
      charArray1[2] = ')';
      charArray1[3] = '}';
      charArray1[4] = 'v';
      charArray1[5] = 'l';
      RandomStringUtils.random(1, charArray1);
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.random(1, true, true);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(1);
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 2822, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'i';
      charArray0[1] = 'G';
      charArray0[2] = 'q';
      charArray0[3] = 'z';
      charArray0[4] = 'U';
      charArray0[5] = '-';
      charArray0[6] = '3';
      charArray0[7] = 'S';
      RandomStringUtils.random(0, charArray0);
      int int1 = 0;
      int int2 = 0;
      boolean boolean0 = true;
      RandomStringUtils.random(0, 0, 0, true, true);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(804, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 56319;
      // Undeclared exception!
      RandomStringUtils.random(56319, 56319, 1, false, false);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(18, 10, 16, true, false, (char[]) null, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[7];
      charArray0[0] = 'F';
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = 'F';
      // Undeclared exception!
      RandomStringUtils.random(55296, 0, 0, false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = (-1);
      int int1 = 2085;
      boolean boolean0 = false;
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = 'e';
      charArray0[2] = ')';
      charArray0[3] = '.';
      charArray0[4] = 'k';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(127, (-1), 2085, false, false, charArray0, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-1), true, true, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'd';
      charArray0[1] = 'f';
      charArray0[2] = 'i';
      charArray0[3] = '~';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), 496, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-867));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -867 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(586, 586, 0, true, true);
      char[] charArray0 = new char[8];
      charArray0[0] = ':';
      charArray0[1] = '#';
      charArray0[2] = 'D';
      charArray0[3] = 'B';
      charArray0[4] = '4';
      charArray0[5] = '5';
      charArray0[6] = 'I';
      charArray0[7] = '+';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils.random(1323);
      Random.setNextRandom(1323);
      RandomStringUtils.randomAlphanumeric(1323);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1104), 57343, 57343, false, false, (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1104 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0);
      int int1 = 806;
      RandomStringUtils.random(806);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(806);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.random(750, (String) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3617), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3617 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(23, 55296, (-4264), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      charArray0[1] = '#';
      charArray0[2] = 'e';
      charArray0[3] = '&';
      charArray0[4] = 'H';
      charArray0[5] = 'q';
      charArray0[6] = '*';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, 0, true, false, charArray0, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1610, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(36, true, true);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = 'U';
      charArray0[2] = '1';
      charArray0[3] = '(';
      charArray0[4] = '~';
      RandomStringUtils.random(0, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-595));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -595 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-1), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = (-1);
      int int1 = 1305;
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, (-1), 1305, true, false, charArray0);
      int int2 = (-1595);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1595), (-1), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-842), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -842 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = '7';
      charArray0[2] = 's';
      charArray0[3] = 'u';
      charArray0[4] = 'j';
      charArray0[5] = 'S';
      charArray0[6] = 'd';
      charArray0[7] = '~';
      charArray0[8] = ':';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1074), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1074 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils.randomAscii(28);
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      // Undeclared exception!
      RandomStringUtils.random(55296, charArray0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom((-3608L));
      mockRandom0.nextInt(1);
      MockRandom mockRandom2 = new MockRandom();
      RandomStringUtils.random(1, 2413, (-1), true, true, (char[]) null, (java.util.Random) mockRandom2);
      RandomStringUtils.random(699, "\u096D");
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = (-2958);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2958), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2958 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RandomStringUtils.random(1, "Requested random string length ");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RandomStringUtils.randomAscii(1083);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3694), "ZfF{EhdER9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3694 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      String string0 = RandomStringUtils.random(0, (String) null);
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = RandomStringUtils.random(4689, false, false);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = RandomStringUtils.random(0, false, false);
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertNotNull(string2);
      
      String string3 = RandomStringUtils.randomAscii(0);
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertNotNull(string3);
      
      char[] charArray0 = new char[3];
      charArray0[0] = '-';
      charArray0[1] = 'h';
      charArray0[2] = 'N';
      // Undeclared exception!
      RandomStringUtils.random(56319, charArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'O';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(4919, 4919, 4919, true, true, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 4330;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3178, 4330, 4330, true, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      assertArrayEquals(new char[] {}, charArray0);
      assertEquals(0, charArray0.length);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-899));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -899 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(10);
      assertEquals("          ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = (-3946);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-3946));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3946 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56191);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, (String) null);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(28);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = RandomStringUtils.random(40);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
      assertNotNull(string0);
      
      Random.setNextRandom(56192);
      // Undeclared exception!
      RandomStringUtils.random(739);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = RandomStringUtils.random(0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56309);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = RandomStringUtils.random(1);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-878));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -878 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomStringUtils.random(1058);
      RandomStringUtils.random(1058);
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1058);
  }
}
