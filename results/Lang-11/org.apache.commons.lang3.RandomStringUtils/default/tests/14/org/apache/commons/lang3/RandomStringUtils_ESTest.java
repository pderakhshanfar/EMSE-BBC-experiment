/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:16:47 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(717, 57343, 710, false, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 2434;
      // Undeclared exception!
      RandomStringUtils.random(2045, 55296, 2434, false, false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1159, 798, 1159, true, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(46325, (String) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 269;
      char[] charArray0 = null;
      RandomStringUtils.random(269, 269, 2470, true, true, (char[]) null);
      int int1 = 56320;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56320);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.random(0, true, false);
      RandomStringUtils.randomAscii(1379);
      Random.setNextRandom((-1634));
      RandomStringUtils.randomAlphanumeric(128);
      RandomStringUtils.randomAlphanumeric(128);
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = '@';
      charArray0[2] = '(';
      charArray0[3] = '2';
      charArray0[4] = '5';
      RandomStringUtils.random(642, charArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.randomAscii(1094);
      RandomStringUtils.randomAscii(32);
      char[] charArray0 = new char[3];
      Random.setNextRandom((-966));
      RandomStringUtils.randomAlphabetic(32);
      MockRandom mockRandom0 = new MockRandom((-3624));
      mockRandom0.doubles();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1729, 7, (-3624), false, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 973
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2399, 120, 56192, false, false, (char[]) null, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom((-1622L));
      MockRandom mockRandom1 = new MockRandom(0L);
      // Undeclared exception!
      RandomStringUtils.random(57343, (-118), 33, false, false, (char[]) null, (java.util.Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.randomAscii(1094);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[3];
      RandomStringUtils.random(0, charArray0);
      Random.setNextRandom(1094);
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0);
      RandomStringUtils.random(0, "");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.randomAscii(12);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = '\\';
      charArray0[2] = '`';
      RandomStringUtils.random(12, charArray0);
      RandomStringUtils.random(12, charArray0);
      RandomStringUtils.random(12, charArray0);
      RandomStringUtils.random(855, (-1426), 0, false, false);
      MockRandom mockRandom0 = new MockRandom((-1643L));
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(1, 137, (-2439), false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = '`';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles((long) 0);
      int int0 = 56320;
      boolean boolean0 = false;
      MockRandom mockRandom1 = new MockRandom();
      int int1 = 127;
      boolean boolean1 = false;
      RandomStringUtils.random(127, 0, 0, false, false, charArray0, (java.util.Random) mockRandom0);
      RandomStringUtils.random(0, 56319, 56320, false, true);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(127);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1161), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1161 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-643));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -643 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      RandomStringUtils.random(55296, charArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(36503);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      String string0 = RandomStringUtils.randomAscii(2414);
      RandomStringUtils.random(2414, string0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = '3';
      charArray0[2] = 'T';
      charArray0[3] = 'c';
      charArray0[4] = 'J';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = ',';
      MockRandom mockRandom0 = new MockRandom(2414);
      mockRandom0.nextInt();
      RandomStringUtils.random(2414, 0, (-2827), false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.random(49, 49, (-1769), true, true);
      RandomStringUtils.randomAscii(49);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(18, 18, (-1608), true, true);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1757));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1757 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(128, "RlF{tKQ34,k-");
      char[] charArray0 = new char[5];
      charArray0[0] = 'B';
      charArray0[1] = ']';
      charArray0[2] = 'O';
      charArray0[3] = '@';
      charArray0[4] = 't';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(128, 1, 1230, true, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(0, "");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(32, (-29), 32, false, false);
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[9];
      mockRandom0.nextFloat();
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte) (-125);
      byteArray0[6] = (byte) (-78);
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte)4;
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3061, 20, (-1), false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      Random.setNextRandom(56319);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(56319);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(419, 419, 419, true, true, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = false;
      RandomStringUtils.random(0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAscii(0);
      int int1 = 1345;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1345);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      int int1 = 0;
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = 'm';
      charArray0[2] = '|';
      charArray0[3] = 'L';
      charArray0[4] = 'z';
      charArray0[5] = 'Y';
      charArray0[6] = 'X';
      MockRandom mockRandom0 = new MockRandom((-1303L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4087), (-1297), 0, true, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4087 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-2331));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2331 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      int int1 = (-571);
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[1] = ';';
      charArray0[2] = '}';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-571), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -571 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-11));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -11 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      MockRandom mockRandom0 = new MockRandom(0L);
      RandomStringUtils.random(0, 0, 0, true, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(32);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RandomStringUtils.random(49, (-1739), 49, false, false);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-860), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -860 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.random(0, "@");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[4];
      charArray0[0] = '#';
      charArray0[1] = '3';
      charArray0[2] = '6';
      charArray0[3] = '$';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-294), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -294 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = '-';
      charArray0[2] = '*';
      charArray0[3] = '[';
      charArray0[4] = 's';
      charArray0[5] = '$';
      charArray0[6] = ' ';
      RandomStringUtils.random(303, charArray0);
      RandomStringUtils.random(303, 0, 303, false, false);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, 21, 21, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = new char[1];
      charArray0[0] = 'M';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1619, 1619, 18, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = 'K';
      charArray0[2] = '[';
      charArray0[3] = '(';
      charArray0[4] = 'q';
      charArray0[5] = 'L';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-114), 1, true, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(127, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      String string0 = RandomStringUtils.randomAscii(2414);
      RandomStringUtils.random(2414, string0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = '3';
      charArray0[2] = 'T';
      charArray0[3] = 'c';
      charArray0[4] = 'J';
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      charArray0[7] = ',';
      MockRandom mockRandom0 = new MockRandom(2414);
      // Undeclared exception!
      RandomStringUtils.random(2414, 0, (-2827), false, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = '`';
      charArray0[1] = '5';
      charArray0[2] = 'E';
      charArray0[3] = 'Y';
      charArray0[4] = '{';
      charArray0[5] = 'R';
      charArray0[6] = 'U';
      charArray0[7] = 'P';
      RandomStringUtils.random(0, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-725), "[,yP6.*%'F@N.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -725 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char char0 = 'f';
      int int0 = (-1697);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1697), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1697 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[5];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2229, (-3039), 2229, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'm';
      charArray0[1] = '`';
      charArray0[2] = 'y';
      charArray0[3] = 'd';
      charArray0[4] = '.';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(123, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
      RandomStringUtils.randomAscii(1453);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2453));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2453 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RandomStringUtils.random(23);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RandomStringUtils.random(1137);
      RandomStringUtils.random(2470, false, false);
      char[] charArray0 = new char[7];
      charArray0[0] = 'N';
      charArray0[1] = ':';
      charArray0[2] = '0';
      charArray0[3] = 'P';
      charArray0[4] = 'o';
      charArray0[5] = '{';
      charArray0[6] = 's';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1137, 2470, 1137, true, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'w';
      charArray0[1] = 'S';
      charArray0[2] = '^';
      charArray0[3] = 'b';
      charArray0[4] = '4';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2287), (-2287), (-2287), false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2287 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 5055;
      int int1 = (-871);
      boolean boolean0 = true;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(5055, (-871), 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, 21, 21, true, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-101), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -101 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 1094;
      RandomStringUtils.randomAscii(1094);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'f';
      charArray0[1] = '\\';
      charArray0[2] = '`';
      RandomStringUtils.random(1094, charArray0);
      RandomStringUtils.random(1094, charArray0);
      RandomStringUtils.random(1094, charArray0);
      int int1 = (-1426);
      int int2 = 0;
      boolean boolean0 = false;
      RandomStringUtils.random(855, (-1426), 0, false, false);
      RandomStringUtils.random(855, (String) null);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(855);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RandomStringUtils.random(9, "BDVZC");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAscii(0);
      int int1 = 2988;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2988, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int int0 = 440;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(440);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(2498, true, true);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = 55296;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(55296, true, true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(0, (-77), 0, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-227));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -227 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3), (-3), (-3), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2507));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2507 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = (-1650);
      int int1 = 1;
      int int2 = (-2279);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1650), 1, (-2279), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1650 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RandomStringUtils.randomAscii(7);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomStringUtils.random(2040, 55296, 2434, false, false);
      RandomStringUtils.randomAscii(2434);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(20);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(4050);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = 2680;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2680);
  }
}
