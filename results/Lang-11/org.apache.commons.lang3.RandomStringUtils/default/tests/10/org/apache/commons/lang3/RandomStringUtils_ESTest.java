/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:14:59 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs((long) 11);
      int int0 = (-2666);
      int int1 = 56320;
      // Undeclared exception!
      RandomStringUtils.random(9, 56320, (-860), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      // Undeclared exception!
      RandomStringUtils.random(55296, 55296, (-1447), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      // Undeclared exception!
      RandomStringUtils.random(142, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      mockRandom0.longs();
      // Undeclared exception!
      RandomStringUtils.random(1, 55296, 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      RandomStringUtils.random(142, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      org.evosuite.runtime.Random.setNextRandom(0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(142, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(142, 56320, (-1756), false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.randomAscii(3);
      RandomStringUtils.random(20, "   ");
      RandomStringUtils.random(20);
      org.evosuite.runtime.Random.setNextRandom(1591);
      RandomStringUtils.randomAscii(20);
      RandomStringUtils.randomAlphabetic(3);
      char[] charArray0 = new char[6];
      charArray0[0] = 't';
      charArray0[1] = '(';
      char char0 = '5';
      charArray0[2] = '5';
      char char1 = 'K';
      charArray0[3] = 'K';
      char char2 = '2';
      charArray0[4] = '2';
      charArray0[5] = '+';
      RandomStringUtils.random(20, charArray0);
      RandomStringUtils.randomAscii(1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1591);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.random(784, 56178, 56191, false, false);
      RandomStringUtils.randomAscii(4);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 15;
      int int1 = 5;
      // Undeclared exception!
      RandomStringUtils.random(15, 57343, 5, false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      RandomStringUtils.random(1, 57343, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(33);
      RandomStringUtils.random(180);
      RandomStringUtils.random(731, 180, 127, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1L));
      RandomStringUtils.random(2134, (-186), 10, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 4;
      RandomStringUtils.random(4);
      org.evosuite.runtime.Random.setNextRandom(56319);
      RandomStringUtils.randomAlphanumeric(11);
      RandomStringUtils.randomAscii(19);
      char[] charArray0 = new char[7];
      charArray0[0] = '9';
      charArray0[1] = '>';
      charArray0[2] = 'L';
      charArray0[3] = '%';
      charArray0[4] = 'n';
      charArray0[5] = '\'';
      charArray0[6] = '';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, 4, 11, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 33;
      boolean boolean0 = false;
      RandomStringUtils.random(33, false, false);
      // Undeclared exception!
      RandomStringUtils.random(33, 1951, 33, false, true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(36345, "8G");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.random(0, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      charArray0[1] = 'R';
      charArray0[2] = 'x';
      charArray0[3] = 'w';
      charArray0[4] = 'd';
      charArray0[5] = 'R';
      MockRandom mockRandom1 = new MockRandom((-9L));
      RandomStringUtils.random(1383, 0, 1383, true, true, charArray0, (Random) mockRandom1);
      // Undeclared exception!
      RandomStringUtils.random(1383, 56319, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 16;
      // Undeclared exception!
      RandomStringUtils.random(1, 56192, 16, false, false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56191, 56191, 56191, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.nextInt(1);
      mockRandom0.ints();
      mockRandom0.setSeed((-40L));
      mockRandom0.doubles();
      mockRandom0.nextGaussian();
      RandomStringUtils.random(1, 0, 0, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(54, 127, 54, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(148, 148, 148, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.nextInt(1);
      mockRandom0.ints();
      MockRandom mockRandom1 = new MockRandom(1);
      mockRandom1.doubles();
      mockRandom0.nextGaussian();
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 1, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.nextInt(46);
      mockRandom0.setSeed(0);
      RandomStringUtils.random(1, 0, 0, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(0, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = 'x';
      charArray0[1] = 'R';
      charArray0[2] = 'x';
      charArray0[3] = 'w';
      charArray0[4] = 'd';
      charArray0[5] = 'R';
      MockRandom mockRandom1 = new MockRandom(0L);
      RandomStringUtils.random(1383, 0, 1383, true, true, charArray0, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[4] = 'x';
      charArray0[2] = 'x';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      RandomStringUtils.random(1383, 1, 54, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = 'T';
      charArray0[2] = '{';
      charArray0[3] = 'l';
      charArray0[4] = '{';
      charArray0[5] = '<';
      charArray0[6] = 'F';
      RandomStringUtils.random(0, charArray0);
      int int0 = (-481);
      // Undeclared exception!
      RandomStringUtils.random(1, 0, (-481), true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      // Undeclared exception!
      RandomStringUtils.random(3617, 1, 3617, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.random(0, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom((-1315L));
      mockRandom0.nextInt(1);
      mockRandom0.ints();
      mockRandom0.setSeed(1);
      mockRandom0.doubles();
      mockRandom0.nextGaussian();
      // Undeclared exception!
      RandomStringUtils.random(17, (-433), 1, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 1201;
      RandomStringUtils.random(1201, (String) null);
      int int1 = 404;
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = 'e';
      charArray0[2] = '+';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1201, 1201, 404, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1201
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RandomStringUtils.random(1, (String) null);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1957), (-10), (-10), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1957 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          MockRandom mockRandom0 = new MockRandom();
          // Undeclared exception!
          RandomStringUtils.random(56191, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 1540;
      // Undeclared exception!
      RandomStringUtils.random(1540, (-2012), 1540, true, true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, "");
      int int1 = (-1);
      boolean boolean0 = false;
      RandomStringUtils.random(0, (-1), 0, false, false);
      int int2 = 1;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RandomStringUtils.random(0, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.randomNumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[2];
      char char0 = '6';
      charArray0[0] = '6';
      char char1 = 'Z';
      charArray0[1] = 'Z';
      RandomStringUtils.random(338, charArray0);
      int int0 = 0;
      int int1 = 0;
      int int2 = (-1);
      boolean boolean0 = false;
      MockRandom mockRandom0 = new MockRandom(0L);
      int int3 = 0;
      int int4 = (-1);
      mockRandom0.nextInt((-1));
      // Undeclared exception!
      try { 
        mockRandom0.ints(338, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils.random(31);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1076, 31, 31, false, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-474), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -474 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils.randomAscii(808);
      RandomStringUtils.random(808, "CX#'V<P.x");
      int int0 = 3492;
      // Undeclared exception!
      RandomStringUtils.random(3492, true, true);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      charArray0[1] = 'e';
      charArray0[2] = 'b';
      charArray0[3] = 'X';
      charArray0[4] = 'v';
      charArray0[5] = 'm';
      charArray0[6] = 'e';
      charArray0[7] = '~';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, 0, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(0, 0, (-2013), true, false, (char[]) null);
      // Undeclared exception!
      RandomStringUtils.random(1248, true, false);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.random(1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = 'H';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1698, 707, 1698, true, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 707
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = RandomStringUtils.randomNumeric(0);
      assertEquals("", string0);
      
      char[] charArray0 = new char[5];
      charArray0[0] = '?';
      charArray0[1] = 'l';
      charArray0[2] = 'P';
      charArray0[3] = 'Y';
      charArray0[4] = 'x';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(539, 3746, (-847), true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3746
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-10));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -10 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      charArray0[1] = '#';
      // Undeclared exception!
      RandomStringUtils.random(57343, charArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(590);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(36345);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(32, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      int int1 = 4159;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(4159, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = 'V';
      charArray0[2] = '9';
      charArray0[3] = 'X';
      charArray0[4] = '(';
      charArray0[5] = 'g';
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(0, 0, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56192, (-185), 54, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -185
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RandomStringUtils.random(798, "org.apache.commons.lang3.RandomStringUtils");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(6);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(56191);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = '7';
      charArray0[2] = 'W';
      MockRandom mockRandom0 = new MockRandom(13);
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(13, 1, 13, true, true, charArray0, (Random) mockRandom0);
      assertEquals("7777777777777", string0);
      assertEquals(3, charArray0.length);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'Z', '7', 'W'}, charArray0);
      
      int int0 = (-56);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-56));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -56 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, 0, 0, true, true);
      assertEquals("", string0);
      assertNotNull(string0);
      
      char[] charArray0 = new char[4];
      charArray0[0] = '&';
      charArray0[1] = '9';
      charArray0[2] = ':';
      charArray0[3] = 'q';
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random(668, 84, 123, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 84
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = RandomStringUtils.random(24, 56178, 16, false, false);
      assertEquals("\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00\uDB72\uDC00", string0);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-819));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -819 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = (-659);
      String string0 = RandomStringUtils.random(32, (-659), 32, true, false);
      assertEquals("\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D\uFD6D", string0);
      assertNotNull(string0);
      
      int int1 = (-787);
      boolean boolean0 = false;
      char[] charArray0 = new char[4];
      char char0 = '}';
      charArray0[0] = '}';
      char char1 = 'R';
      charArray0[1] = 'R';
      charArray0[2] = 'e';
      charArray0[3] = 'f';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-787), (-4346), (-787), false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -787 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = RandomStringUtils.random(1540, (-1957), 1540, false, false);
      assertNotNull(string0);
      
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1540);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = RandomStringUtils.randomAscii(14);
      assertEquals("              ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = RandomStringUtils.random(1, (-390), 123, true, true);
      assertEquals("\uFE7A", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(22, 22, 22, false, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(32, true, false);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = 16;
      // Undeclared exception!
      RandomStringUtils.random(1, 56178, 16, false, false);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(6);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      String string0 = RandomStringUtils.random(0, false, false);
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = RandomStringUtils.random(0, 0, 1028, false, false);
      assertEquals("", string1);
      assertNotNull(string1);
      
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2487);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int int0 = (-1268);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1268));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1268 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-4004));
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4004), (-4004), (-4004), false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4004 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom(0L);
      assertNotNull(mockRandom0);
      
      int int0 = mockRandom0.nextInt(1);
      assertEquals(0, int0);
      
      IntStream intStream0 = mockRandom0.ints();
      assertNotNull(intStream0);
      
      mockRandom0.setSeed(0L);
      DoubleStream doubleStream0 = mockRandom0.doubles();
      assertNotNull(doubleStream0);
      
      double double0 = mockRandom0.nextGaussian();
      assertEquals(0.0, double0, 0.01);
      
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = false;
      char[] charArray0 = new char[8];
      charArray0[0] = '(';
      charArray0[1] = '}';
      charArray0[2] = ']';
      charArray0[3] = 'o';
      charArray0[4] = 'w';
      charArray0[5] = '6';
      charArray0[6] = 'r';
      charArray0[7] = ']';
      MockRandom mockRandom0 = new MockRandom(1L);
      assertNotNull(mockRandom0);
      
      mockRandom0.setSeed(1L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1607), (-1607), 0, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1607 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      int int0 = (-146);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-146));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -146 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(56191, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = 'y';
      charArray0[2] = '^';
      charArray0[3] = 'd';
      charArray0[4] = 'P';
      charArray0[5] = 'd';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3712), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3712 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2183), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2183 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      RandomStringUtils.random(0, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1409));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1409 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      String string0 = RandomStringUtils.random(5279);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1229));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1229 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
