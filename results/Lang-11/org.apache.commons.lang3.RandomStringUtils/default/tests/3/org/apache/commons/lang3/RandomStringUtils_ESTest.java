/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:09:24 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(57337);
      mockRandom0.nextBoolean();
      int int0 = 10;
      // Undeclared exception!
      RandomStringUtils.random(57337, 57337, 10, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 15;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles(0L);
      // Undeclared exception!
      RandomStringUtils.random(15, 56191, 47380, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(4);
      mockRandom0.longs((long) 4, (long) 4, 827L);
      RandomStringUtils.random(128, 50, 128, true, true, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(50, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      byte[] byteArray0 = new byte[7];
      mockRandom0.nextBytes(byteArray0);
      RandomStringUtils.random(990, (int) (byte)0, 0, false, false, (char[]) null, (Random) mockRandom1);
      RandomStringUtils.random(127);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(57359);
      mockRandom0.nextBoolean();
      mockRandom0.nextDouble();
      // Undeclared exception!
      RandomStringUtils.random(57359, 56191, 57359, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 57359;
      MockRandom mockRandom0 = new MockRandom(57359);
      mockRandom0.nextBoolean();
      // Undeclared exception!
      RandomStringUtils.random(57359, 56191, 57359, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 56319;
      org.evosuite.runtime.Random.setNextRandom(56319);
      // Undeclared exception!
      RandomStringUtils.random(56319, (String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      RandomStringUtils.random(990, (int) (byte)0, 0, true, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = (-1043);
      int int1 = 57343;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(1565, 57343, (-1043), false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2322);
      int int0 = (-2824);
      // Undeclared exception!
      RandomStringUtils.random(57343, 57343, (-1043), false, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(891, 2307, 32, false, false);
      org.evosuite.runtime.Random.setNextRandom(891);
      RandomStringUtils.randomAlphabetic(32);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(20);
      RandomStringUtils.randomAlphanumeric(596);
      RandomStringUtils.randomAlphanumeric(596);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'X';
      // Undeclared exception!
      RandomStringUtils.random(47368, charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2322);
      MockRandom mockRandom1 = new MockRandom();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      mockRandom1.nextBytes(byteArray0);
      mockRandom1.nextDouble();
      RandomStringUtils.random(2322, (-2177), 1534, false, false, (char[]) null, (Random) mockRandom1);
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(2322, false, true);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1043));
      mockRandom0.doubles();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)38;
      mockRandom0.nextBytes(byteArray0);
      int int0 = 0;
      char[] charArray0 = new char[1];
      charArray0[0] = '4';
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)38, (int) (byte)0, 0, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2317);
      mockRandom0.ints(0L);
      RandomStringUtils.random(2317, 2317, (-461), true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(20, "The chars array must not be empty");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(714L);
      mockRandom0.longs();
      MockRandom mockRandom1 = new MockRandom(714L);
      // Undeclared exception!
      RandomStringUtils.random(57343, (-461), 2, false, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(46324);
      // Undeclared exception!
      RandomStringUtils.random(46324, 46324, (-1), false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(2322, "R*");
      MockRandom mockRandom0 = new MockRandom((-2976L));
      // Undeclared exception!
      RandomStringUtils.random(2795, 0, (-461), true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom((-1L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random(946, (-1856), (-1464), false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1856
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(2322, "R*");
      MockRandom mockRandom0 = new MockRandom((-2976L));
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = '\\';
      charArray0[2] = '}';
      charArray0[3] = ';';
      charArray0[4] = 'o';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2322, 452, 2795, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 452
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3427, 3427, 3427, true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56153);
      mockRandom0.longs();
      boolean boolean0 = true;
      int int0 = 453;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(453, 453, 453, true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)33;
      mockRandom0.nextInt((int) (byte)33);
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-46);
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)33, (int) (byte)0, (int) (byte) (-46), true, true);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1593), (-1593), 0, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1593 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      RandomStringUtils.random((int) (byte)0);
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(56319, true, true);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(57348);
      // Undeclared exception!
      RandomStringUtils.random(57348, (-2584), 458, false, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-46);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.longs();
      int int1 = 2884;
      MockRandom mockRandom1 = new MockRandom(1959L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2884, (-209), 0, false, true, charArray0, (Random) mockRandom1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(56340);
      // Undeclared exception!
      RandomStringUtils.random(21);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(56319);
      // Undeclared exception!
      RandomStringUtils.random(56319);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 57377;
          // Undeclared exception!
          RandomStringUtils.random(57377, 57377, 3394, false, false);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = '9';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(3166, charArray0);
      RandomStringUtils.random(3166);
      RandomStringUtils.random(18, false, false);
      boolean boolean0 = false;
      int int0 = (-1931);
      RandomStringUtils.random(3166, 5576, (-1931), false, false);
      int int1 = 2192;
      // Undeclared exception!
      RandomStringUtils.random(2192, 1441, 56192, true, false);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-21));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -21 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(56319);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56319);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-2976L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-343), 2795, 2795, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -343 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = (-1342);
      int int1 = 0;
      boolean boolean0 = false;
      boolean boolean1 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-46);
      byteArray0[4] = (byte)25;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.longs();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1342), (-1342), 0, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1342 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(36330, 45313, 36330, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45313
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(57359);
      mockRandom0.nextBoolean();
      // Undeclared exception!
      RandomStringUtils.random(57359, 56191, 57359, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomStringUtils.random(0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[3];
      charArray0[0] = '{';
      charArray0[1] = '1';
      charArray0[2] = '^';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 1, 1161, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 372;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(372, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(46324, (String) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 128;
      int int1 = (-1451);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, (-1451), (-1451), false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-1850);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1850), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1850 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-886), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -886 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56310);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-2378));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2378 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 2589;
      RandomStringUtils.random(2589, "kGuK");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(2589);
      RandomStringUtils.random(2589, false, false);
      // Undeclared exception!
      RandomStringUtils.random(2589);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = '3';
      charArray0[2] = 'r';
      charArray0[3] = '5';
      charArray0[4] = '0';
      charArray0[5] = 'p';
      charArray0[6] = 'q';
      charArray0[7] = '-';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1287), 1306, 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1287 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils.randomAscii(8);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(8, 8, 8, false, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 2322;
      RandomStringUtils.random(2322, "R*");
      boolean boolean0 = false;
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = '|';
      charArray0[2] = '~';
      charArray0[3] = '(';
      charArray0[4] = '$';
      charArray0[5] = 'j';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2322, 2322, 2322, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      char[] charArray0 = new char[3];
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      mockRandom0.ints((long) (byte)0, (int) (byte)0, 2493);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-46);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.longs();
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.random(2182, (int) (byte)0, (int) (byte)0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = '9';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, true, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-34));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -34 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-634), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -634 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(40, 40, (-1596), true, true);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = 'H';
      charArray0[2] = '4';
      charArray0[3] = '\'';
      charArray0[4] = 'u';
      charArray0[5] = '!';
      charArray0[6] = 'O';
      RandomStringUtils.random(0, 1, 0, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RandomStringUtils.random(10);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(10, 10, (-2853), true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(10, true, true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(3535, true, true);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3332, 3332, 3332, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = 2266;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2266, 2266, 2266, true, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RandomStringUtils.randomAscii(2215);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = 2240;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(2240);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-9));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -9 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomStringUtils.random(0, false, true);
      char[] charArray0 = new char[5];
      charArray0[0] = 'p';
      charArray0[1] = 'E';
      charArray0[2] = ']';
      charArray0[3] = '!';
      charArray0[4] = 'L';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(7);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(56165);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RandomStringUtils.random(32);
      int int0 = 0;
      // Undeclared exception!
      RandomStringUtils.random(182, 0, 182, true, true);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'r';
      charArray0[1] = 'N';
      charArray0[2] = 'u';
      charArray0[3] = '-';
      charArray0[4] = '>';
      charArray0[5] = 'j';
      charArray0[6] = 'P';
      charArray0[7] = '|';
      charArray0[8] = 'V';
      RandomStringUtils.random(19, 0, 19, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(581);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int int0 = 2064;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2064);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-611));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -611 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = 56191;
      String string0 = null;
      // Undeclared exception!
      RandomStringUtils.random(56191, (String) null);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomStringUtils.random(21);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56153, "3ViyTAzT$`WQ=}n");
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.randomAscii(0);
      int int1 = (-1345);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1345));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1345 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-267));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -267 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56153);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int int0 = (-376);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-376));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -376 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
