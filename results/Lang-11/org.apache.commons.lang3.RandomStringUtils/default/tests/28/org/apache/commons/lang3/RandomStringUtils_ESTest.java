/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:26:29 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs((long) 0);
      // Undeclared exception!
      RandomStringUtils.random(56189, 56189, 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(45, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom((-907));
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAlphanumeric(127);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '2';
      charArray0[2] = 'N';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = '4';
      // Undeclared exception!
      RandomStringUtils.random(54, 0, 0, true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(55296, 55296, 56319, false, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.random(36);
      RandomStringUtils.random(42, false, false);
      char[] charArray0 = new char[3];
      charArray0[0] = ';';
      charArray0[1] = '1';
      charArray0[2] = 'C';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(24, 1777, 4643, true, true);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(749, 56192, 1033, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2110, 0, 0, true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 56307;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56307, 56307, 1984, false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs((long) 0);
      // Undeclared exception!
      RandomStringUtils.random(56192, 56192, 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56319, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 0;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(26, (-1659), (-1523), false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, false);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(2063, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.randomNumeric(12);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, 0, 0, false, true);
      int int1 = 0;
      char[] charArray0 = new char[1];
      RandomStringUtils.random(0, 0, 109, false, false, charArray0);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1288, 0, 1288, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 0;
          RandomStringUtils.random(0, 0, 0, false, false);
          char[] charArray0 = new char[1];
          charArray0[0] = '1';
          RandomStringUtils.random(0, 0, 109, false, false, charArray0);
          boolean boolean0 = true;
          MockRandom mockRandom0 = new MockRandom();
          mockRandom0.doubles();
          // Undeclared exception!
          RandomStringUtils.random(4017, 0, 4017, true, false, charArray0, (Random) mockRandom0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(57343);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296, 55296, 56319, true, true);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.random(128, 55296, 128, false, false);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319, (-1), 56319, false, false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      RandomStringUtils.random(2439, 0, 109, false, true, charArray0);
      MockRandom mockRandom0 = new MockRandom();
      int int0 = 16;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2439, 56319, 16, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56319
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\\';
      charArray0[1] = ' ';
      // Undeclared exception!
      RandomStringUtils.random(2187, 0, (-1), false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(921, 687, 127, true, false);
      boolean boolean0 = false;
      int int0 = 38;
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(127, 38, 1, true, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(238, 238, (-19), true, true);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319, "D|O~0(hCF|D");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(921, (String) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(2538);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56191, 3430, 56191, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 12;
      MockRandom mockRandom0 = new MockRandom(12);
      mockRandom0.longs();
      boolean boolean0 = false;
      int int1 = 56192;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56192, 56192, 56192, false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      int int1 = 132;
      char[] charArray0 = new char[1];
      RandomStringUtils.random(0, 0, 132, false, false, charArray0);
      boolean boolean0 = true;
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1178, (-1097), (-1097), true, true, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = true;
      boolean boolean1 = true;
      char[] charArray0 = new char[0];
      int int0 = 43;
      int int1 = (-2223);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1605, 1, 0, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '+';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(5, 123, 790, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 123
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = RandomStringUtils.random(1289);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1289, 19, 19, false, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 123;
      char[] charArray0 = new char[4];
      charArray0[0] = 'L';
      charArray0[1] = 'v';
      charArray0[2] = 'Z';
      charArray0[3] = 'D';
      RandomStringUtils.random(123, charArray0);
      int int1 = 1382;
      RandomStringUtils.randomAscii(1382);
      int int2 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(5, 5, 5, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(38, 1, 555, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = '8';
      charArray0[2] = 'R';
      charArray0[3] = '&';
      charArray0[4] = '8';
      charArray0[5] = 'R';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2737, 2737, 1, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2737
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 396;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(396);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1664));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1664 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, true, true);
      char[] charArray0 = new char[9];
      charArray0[0] = 'b';
      charArray0[1] = '?';
      charArray0[2] = 'i';
      charArray0[3] = 'u';
      charArray0[4] = '^';
      charArray0[5] = '&';
      charArray0[6] = 'x';
      charArray0[7] = '`';
      charArray0[8] = 'v';
      RandomStringUtils.random(0, 0, 0, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, true, true);
      int int1 = 911;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1256), 0, 911, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1256 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils.random(24, 1777, 4643, true, true);
      RandomStringUtils.random(1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, 0, 0, false, true);
      char[] charArray0 = new char[1];
      charArray0[0] = '1';
      RandomStringUtils.random(0, 0, 109, false, false, charArray0);
      boolean boolean0 = true;
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(4017, 0, 4017, true, true, charArray0, (Random) mockRandom0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2979));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2979 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-512), (-512), (-512), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -512 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = 'u';
      charArray0[2] = '2';
      charArray0[3] = 'e';
      charArray0[4] = 'u';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.random(1000, false, true);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56191);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(45323);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils.randomAscii(921);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = (-1935);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1935));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1935 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-232));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -232 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(603, 0, 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = 0;
      int int1 = 56191;
      boolean boolean0 = true;
      String string0 = RandomStringUtils.random(0, 56191, 56191, true, true);
      assertNotNull(string0);
      assertEquals("", string0);
      
      char[] charArray0 = new char[1];
      charArray0[0] = 't';
      String string1 = RandomStringUtils.random(0, charArray0);
      assertNotNull(string1);
      assertEquals(1, charArray0.length);
      assertEquals("", string1);
      assertArrayEquals(new char[] {'t'}, charArray0);
      
      String string2 = RandomStringUtils.random(0, "");
      assertNotNull(string2);
      assertEquals("", string2);
      
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56191);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), 0, 0, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = 't';
      charArray0[2] = '!';
      charArray0[3] = '#';
      charArray0[4] = 's';
      charArray0[5] = 'X';
      charArray0[6] = 'M';
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-359), 1, 2401, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -359 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(4393, true, true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 128;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(128, true, true);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(921);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-616), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -616 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 56320;
      // Undeclared exception!
      RandomStringUtils.randomAscii(56320);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '2';
      charArray0[1] = 'X';
      charArray0[2] = 'N';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = '4';
      // Undeclared exception!
      RandomStringUtils.random(54, 0, 0, true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(1, (-1523), 0, true, true, (char[]) null, (Random) mockRandom0);
      assertNotNull(string0);
      assertEquals("\uFA0D", string0);
      
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(32);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      int int0 = 57343;
      // Undeclared exception!
      RandomStringUtils.random(2063, 57343, 1580, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      RandomStringUtils.random(1, 55296, 1, false, false);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RandomStringUtils.random(954, "Q_=`rt,~SyeL*<");
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      assertNotNull(mockRandom0);
      
      String string0 = RandomStringUtils.random(17, (-1523), 0, true, true, (char[]) null, (Random) mockRandom0);
      assertNotNull(string0);
      assertEquals("\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D\uFA0D", string0);
      
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1523), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1523 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      String string0 = RandomStringUtils.random(0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = 1289;
      String string0 = RandomStringUtils.random(1289, (String) null);
      assertNotNull(string0);
      
      int int1 = 840;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(840);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.randomNumeric(57343);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), "/b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = '9';
      charArray0[2] = 'H';
      charArray0[3] = 'J';
      RandomStringUtils.random(123, charArray0);
      RandomStringUtils.random(123, "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
      RandomStringUtils.random(0);
      RandomStringUtils.random(123);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, true, false);
      RandomStringUtils.random(123, "p");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
