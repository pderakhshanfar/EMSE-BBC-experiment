/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:20:09 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(32, 57343, 2843, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-10);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(1184, 56165, (-10), false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-10));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -10 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      RandomStringUtils.random(32, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0, "'dew*Z\"x*%55fXN0s");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(21);
      MockRandom mockRandom1 = new MockRandom((-917));
      RandomStringUtils.random(21, 2408, (-917), false, true, (char[]) null, (Random) mockRandom1);
      RandomStringUtils.random(127, " is less than 0.");
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2408, (-789), (-789), false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1184, 56194, 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.randomAscii(19);
      RandomStringUtils.random(19, 2048, 2, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 4281;
      // Undeclared exception!
      RandomStringUtils.random(4281, 57343, 4281, false, false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 87;
      // Undeclared exception!
      RandomStringUtils.random(57343, 57343, 87, false, false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      MockRandom mockRandom0 = new MockRandom((-117L));
      // Undeclared exception!
      RandomStringUtils.random(56194, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-117L));
      // Undeclared exception!
      RandomStringUtils.random(56194, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 56319;
      int int1 = 0;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(87, 56319, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 56198;
      // Undeclared exception!
      RandomStringUtils.random(56198, 56198, (-490), false, false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom((-117L));
      mockRandom0.nextDouble();
      mockRandom0.nextBoolean();
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.random(56191, (-874), 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      RandomStringUtils.random(123, 0, (-496), false, true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      RandomStringUtils.random(189, charArray0);
      org.evosuite.runtime.Random.setNextRandom(46448);
      RandomStringUtils.randomAlphanumeric(87);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2915), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2915 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = (-492);
      // Undeclared exception!
      RandomStringUtils.random(56191, 56191, (-492), false, false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.random(2894, "8|*hRM3[^Mxa:8:");
      MockRandom mockRandom0 = new MockRandom(1710L);
      RandomStringUtils.random(2894, 2894, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[1];
      RandomStringUtils.randomAscii(1);
      org.evosuite.runtime.Random.setNextRandom(46448);
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56194, Integer.MAX_VALUE, 188, true, true, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, "u");
      RandomStringUtils.random(0, 0, 1317, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'q';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(28, 0, 1317, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, "u");
      RandomStringUtils.random(0, 0, 1317, false, false);
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = new char[8];
      charArray0[0] = '.';
      charArray0[1] = 'v';
      charArray0[2] = '{';
      charArray0[3] = '{';
      charArray0[4] = '{';
      mockRandom0.nextLong();
      charArray0[5] = '{';
      charArray0[6] = 'q';
      charArray0[7] = 'q';
      RandomStringUtils.random(1317, 0, 1317, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAscii(19);
      int int0 = (-703);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-703));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -703 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-983), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -983 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(7);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(7, 7, 7, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          // Undeclared exception!
          RandomStringUtils.randomAscii(46205);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(46195, "`;)v7B2g");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1429));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1429 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils.random(1050);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(128);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(55296, 12, (-1), true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils.random(0, "u");
      boolean boolean0 = false;
      RandomStringUtils.random(0, 0, 1317, true, false);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = '{';
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.nextBoolean();
      mockRandom0.nextFloat();
      // Undeclared exception!
      RandomStringUtils.random(1317, 0, 0, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[0];
      RandomStringUtils.random(78, false, false);
      MockRandom mockRandom0 = new MockRandom((-3371L));
      mockRandom0.setSeed(56192);
      mockRandom0.nextInt((-554));
      mockRandom0.nextInt();
      mockRandom0.longs();
      mockRandom0.ints();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(78, 1870, (-554), false, false, charArray0, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[8];
      MockRandom mockRandom0 = new MockRandom((-3371L));
      mockRandom0.setSeed(56185);
      mockRandom0.nextInt(32);
      mockRandom0.nextInt();
      mockRandom0.longs();
      mockRandom0.ints();
      mockRandom0.ints(0L);
      RandomStringUtils.random(405, false, false);
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      int int0 = 0;
      RandomStringUtils.random(0, "u");
      RandomStringUtils.random(0, 0, 1317, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'q';
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.nextFloat();
      RandomStringUtils.random(1317, 0, 0, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAscii(389);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, false, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1982));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1982 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1681));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1681 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1044, 1044, 123, true, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.randomAscii(1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-327), (-327), true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1235L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-927), (-927), (-927), false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -927 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      charArray0[1] = 'z';
      charArray0[2] = '1';
      charArray0[3] = 'L';
      charArray0[4] = 'F';
      charArray0[5] = '@';
      MockRandom mockRandom0 = new MockRandom((-1254L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-384), 0, (-1), false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -384 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      char[] charArray0 = new char[2];
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      RandomStringUtils.random(1317, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      int int0 = 0;
      RandomStringUtils.random(0, "u");
      RandomStringUtils.random(0, 0, 1317, true, false);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'q';
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.nextFloat();
      RandomStringUtils.random(1317, 0, 0, true, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAscii(389);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, false, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1982));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1982 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56194, 56194, (-24), false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-346));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -346 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 2098;
      RandomStringUtils.randomAscii(2098);
      int int1 = 0;
      RandomStringUtils.random(0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2098);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, false, false);
      int int1 = 946;
      boolean boolean0 = true;
      char[] charArray0 = null;
      RandomStringUtils.random(0, 946, 946, false, true, (char[]) null);
      int int2 = 1700;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1700, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2878), false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2878 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(46198, false, false);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56175);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56175, 56175, (-490), false, false);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = (-1404);
      RandomStringUtils.random(1105, (-1404), 1105, true, false);
      int int1 = 55296;
      // Undeclared exception!
      RandomStringUtils.random(55296);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom('\"');
      RandomStringUtils.randomAlphabetic(189);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils.random(1124, (-1424), 1124, true, true);
      RandomStringUtils.randomAscii(1124);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
      RandomStringUtils.random(1032, "5&3F6,ryS0");
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      int int1 = 1916;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1916);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      boolean boolean0 = false;
      boolean boolean1 = false;
      char[] charArray0 = new char[6];
      charArray0[0] = 'i';
      charArray0[1] = '0';
      charArray0[2] = 'k';
      charArray0[3] = 'B';
      charArray0[4] = 'o';
      charArray0[5] = 'b';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, charArray0);
      boolean boolean2 = true;
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      try { 
        mockRandom0.ints((long) 0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils.random(0, 0, 3748, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = '.';
      charArray0[2] = '`';
      charArray0[3] = '<';
      charArray0[4] = '\\';
      // Undeclared exception!
      RandomStringUtils.random(56192, charArray0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles(0L);
      mockRandom0.ints();
      RandomStringUtils.random(0, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0, true, true);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = RandomStringUtils.random(2894, "8v*hRM3[^Mxa$w:");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, string0);
      RandomStringUtils.randomNumeric(0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1, 56169, 4, false, false);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1105);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, false);
      char[] charArray0 = new char[3];
      charArray0[0] = 'i';
      charArray0[1] = 'q';
      charArray0[2] = '%';
      RandomStringUtils.random(3171, charArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = (-1911);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1911));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1911 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = 1;
      char[] charArray0 = new char[2];
      charArray0[1] = 'D';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 123, 1, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 123
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\'';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(55296, 55296, 0, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 55296
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RandomStringUtils.random(54, 54, 7, true, true);
      char[] charArray0 = new char[2];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      RandomStringUtils.random(54, charArray0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = '=';
      charArray0[2] = 'J';
      charArray0[3] = ',';
      charArray0[4] = 'n';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 588, 3426, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 588
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56175, 56175, 56175, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomStringUtils.randomAscii(29);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = (-3046);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-3046));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3046 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1376), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1376 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RandomStringUtils.random(1197);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2174), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2174 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(Integer.MAX_VALUE, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RandomStringUtils.random(37);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(55296, 55296, 55296, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RandomStringUtils.random(1577);
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'I';
      charArray0[1] = 'q';
      charArray0[2] = '.';
      charArray0[3] = '[';
      charArray0[4] = ',';
      charArray0[5] = '&';
      charArray0[6] = 'Z';
      RandomStringUtils.random(0, 1, 0, false, false, charArray0);
      RandomStringUtils.randomNumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1575, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-598), (-598), (-598), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -598 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1424));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1424 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int int0 = (-669);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-669), (-669), (-669), false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -669 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1050);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(948);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(317);
  }
}
