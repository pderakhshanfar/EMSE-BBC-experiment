/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 07:16:08 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 9;
      int int1 = 56191;
      char[] charArray0 = null;
      int int2 = 2876;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(9, 56191, 2876, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils.random(1242, 56191, 1242, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1);
      mockRandom0.nextInt(397);
      // Undeclared exception!
      RandomStringUtils.random(1, 57340, 397, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 1179;
      char[] charArray0 = new char[1];
      charArray0[0] = 'R';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1179, 2803, 465, false, true, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte byte0 = (byte) (-81);
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-43);
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'A';
      charArray0[2] = '7';
      charArray0[3] = 'q';
      charArray0[4] = 'H';
      charArray0[5] = '6';
      charArray0[6] = ',';
      charArray0[7] = '`';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2500, (int) (byte)0, 0, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56217);
      mockRandom0.nextInt(56217);
      RandomStringUtils.random(175, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(175);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt(56217);
      int int0 = 191;
      // Undeclared exception!
      RandomStringUtils.random(191, 0, 0, true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56214);
      int int0 = 46238;
      // Undeclared exception!
      RandomStringUtils.random(56214, 56214, 46238, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56217);
      mockRandom0.nextInt(56217);
      // Undeclared exception!
      RandomStringUtils.random(191, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56214);
      mockRandom0.nextInt(56214);
      // Undeclared exception!
      RandomStringUtils.random(57340, 57340, 56214, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = true;
      int int0 = 46349;
      char[] charArray0 = new char[7];
      charArray0[0] = 'e';
      charArray0[1] = 'G';
      charArray0[2] = 'R';
      charArray0[3] = 'p';
      charArray0[4] = 'R';
      charArray0[5] = 'p';
      charArray0[6] = 'R';
      // Undeclared exception!
      RandomStringUtils.random(46349, 0, 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt(5);
      int int0 = 528;
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      // Undeclared exception!
      RandomStringUtils.random(528, 0, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56194);
      int int0 = 33;
      // Undeclared exception!
      RandomStringUtils.random(56194, 56194, 33, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 56214;
      MockRandom mockRandom0 = new MockRandom(56214);
      mockRandom0.nextInt((-2935));
      // Undeclared exception!
      RandomStringUtils.random(56214, (-2935), 9, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.random(1749);
      org.evosuite.runtime.Random.setNextRandom(1749);
      RandomStringUtils.randomAlphanumeric(1749);
      RandomStringUtils.randomNumeric(1749);
      int int0 = 33;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(33);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56214);
      // Undeclared exception!
      RandomStringUtils.random(1, 56214, 1, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1749;
      RandomStringUtils.random(1749);
      org.evosuite.runtime.Random.setNextRandom(1749);
      RandomStringUtils.randomAlphanumeric(1749);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1749, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(57340, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.random(16, (-3703), 16, false, false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(358, 358, 0, true, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(358, 358, 37, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      RandomStringUtils.random(105, 30, 2593, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(358, 358, 0, true, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(358, 358, 37, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[1];
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(0, 0, 685, true, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(474);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[4];
      charArray0[0] = '6';
      charArray0[1] = '^';
      charArray0[2] = 'V';
      mockRandom0.nextFloat();
      charArray0[3] = '6';
      RandomStringUtils.random(128, 2, 10, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56236);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(57336, 128, 57336, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(0, 0, 685, true, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[4];
      charArray0[0] = '6';
      charArray0[1] = '^';
      charArray0[2] = 'V';
      charArray0[3] = '6';
      // Undeclared exception!
      RandomStringUtils.random(128, 2, 10, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(14, false, false);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = 'w';
      charArray0[1] = 'x';
      charArray0[2] = 'J';
      charArray0[3] = 'J';
      charArray0[4] = 'w';
      charArray0[5] = 'w';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2606), 0, 487, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2606 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(29);
      RandomStringUtils.random(1636, 1636, 123, false, true);
      RandomStringUtils randomStringUtils1 = new RandomStringUtils();
      RandomStringUtils.random(1427, "                             ");
      RandomStringUtils.random(45);
      RandomStringUtils.random(29, "                             ");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.random(1680, (String) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = '=';
      RandomStringUtils.random(2164, charArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56214, "Cvr%=V");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 370;
      RandomStringUtils.random(370, 370, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom(370);
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = '>';
      charArray0[2] = '\'';
      charArray0[3] = '@';
      charArray0[4] = '}';
      charArray0[5] = 'N';
      charArray0[6] = 'M';
      charArray0[7] = 'n';
      charArray0[8] = 'r';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1875), 2336, 2336, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1875 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'v';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(46282, (-2560), 57343, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(35, 0, 35, true, true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      int int0 = 0;
      // Undeclared exception!
      RandomStringUtils.random(34, 0, (-2309), true, true);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.random(19);
      char[] charArray0 = new char[1];
      charArray0[0] = 'S';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(41, 19, 14, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      int int0 = 57336;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57336, 57336, 57336, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = false;
      char[] charArray0 = new char[5];
      charArray0[0] = '#';
      charArray0[1] = 'S';
      charArray0[2] = '+';
      charArray0[3] = '4';
      charArray0[4] = '_';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2439, (-1), (-1), false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      RandomStringUtils.random(0, (-1), 0, false, false, charArray0);
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
      MockRandom mockRandom0 = new MockRandom(0L);
      RandomStringUtils.random(0, 0, 1, false, false, charArray0, (Random) mockRandom0);
      char[] charArray1 = new char[1];
      charArray1[0] = '$';
      RandomStringUtils.random(1, 0, 1, false, false, charArray1, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 39;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(39, 39, 39, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1225, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 35;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1126), (-1126), 35, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1126 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56206, 467, 467, false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RandomStringUtils.random(105, "-Ekf6xWOxCk al");
      char[] charArray0 = new char[2];
      charArray0[0] = '<';
      charArray0[1] = 'C';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(105, 105, 105, true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      int int1 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = null;
      RandomStringUtils.random(0, (char[]) null);
      RandomStringUtils.random(0);
      boolean boolean0 = false;
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, true, false);
      RandomStringUtils.random(147);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-162));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -162 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomStringUtils.random(0, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-477), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -477 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RandomStringUtils.random(5, "&{4\"b8NLVS+KX]14");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomStringUtils.random(30);
      org.evosuite.runtime.Random.setNextRandom(128);
      RandomStringUtils.randomAlphabetic(30);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(1469, true, true);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 56319;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56319, false, false);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = '`';
      charArray0[2] = '9';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-545), (-545), 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -545 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, "*");
      boolean boolean0 = true;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1758, 0, 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 186;
      boolean boolean0 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(186, 186, 186, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RandomStringUtils.random(370, 370, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom((-1L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random(127, (-1875), 370, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[2];
      charArray0[0] = 'W';
      charArray0[1] = '%';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.randomAscii(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-450));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -450 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1708), "Ol;FT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1708 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56214);
      mockRandom0.nextInt((-2935));
      int int0 = 46238;
      // Undeclared exception!
      RandomStringUtils.random(57340, 57340, 46238, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = '<';
      charArray0[1] = 'l';
      charArray0[2] = 's';
      charArray0[3] = 'R';
      charArray0[4] = '{';
      charArray0[5] = 'i';
      charArray0[6] = 'D';
      charArray0[7] = 'v';
      MockRandom mockRandom0 = new MockRandom((-1L));
      mockRandom0.doubles((double) 0, 1.0);
      RandomStringUtils.random(0, 0, 0, true, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(0, "");
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(55296);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RandomStringUtils.random(0, (String) null);
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = 'A';
      charArray0[2] = '\\';
      charArray0[3] = '';
      charArray0[4] = 't';
      charArray0[5] = '~';
      charArray0[6] = 'H';
      charArray0[7] = 'o';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      int int1 = 0;
      RandomStringUtils.randomNumeric(0);
      int int2 = 57343;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(57343);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = 963;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(963, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(39, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-3379));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3379 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = 'u';
      charArray0[2] = ' ';
      charArray0[3] = 'u';
      charArray0[4] = '=';
      charArray0[5] = 'e';
      charArray0[6] = 'N';
      charArray0[7] = ':';
      RandomStringUtils.random(0, 0, 0, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = (-480);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-480));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -480 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1547));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1547 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.randomAscii(1);
      int int1 = (-3032);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-3032));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3032 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          // Undeclared exception!
          RandomStringUtils.randomAlphanumeric(110);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = 127;
      RandomStringUtils.random(0, 127, 0, false, false);
      RandomStringUtils.random(866);
      RandomStringUtils.random(0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2603);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(358);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomStringUtils.randomAscii(12);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1242, 56191, 1242, false, false, (char[]) null);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1061);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 't';
      charArray0[2] = 'G';
      charArray0[3] = '';
      charArray0[4] = '-';
      RandomStringUtils.random(1, 0, 1, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = RandomStringUtils.randomNumeric(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-683));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -683 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String string0 = RandomStringUtils.random(1610);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.random(1);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }
}
