/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:35:40 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      String string0 = RandomStringUtils.random(1023);
      RandomStringUtils.random(1023, string0);
      char[] charArray0 = new char[6];
      charArray0[1] = '\u0000';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 0, 0, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1314L);
      mockRandom0.setSeed((-105L));
      boolean boolean0 = false;
      char[] charArray0 = null;
      int int0 = 56191;
      int int1 = 1543;
      boolean boolean1 = false;
      // Undeclared exception!
      RandomStringUtils.random(5, 56191, 1543, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.randomAscii(120);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      char[] charArray0 = new char[21];
      charArray0[2] = '5';
      charArray0[3] = '5';
      RandomStringUtils.random(2961, 1, 2961, false, true, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(56191);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.randomAscii(165);
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(165, 56320, 165, false, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      String string0 = RandomStringUtils.random(1023);
      RandomStringUtils.random(1023, string0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = '+';
      // Undeclared exception!
      RandomStringUtils.random(1, 55296, 1023, false, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = false;
      int int0 = 3;
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(913, (-1701), 3, false, false, (char[]) null, (Random) mockRandom0);
      int int1 = 55296;
      // Undeclared exception!
      RandomStringUtils.random(3, 55296, 25, false, false);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.randomAscii(156);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(156, 56320, 156, false, false);
      RandomStringUtils.random(9, (-75), 40, false, false);
      org.evosuite.runtime.Random.setNextRandom(56320);
      RandomStringUtils.randomAlphabetic(40);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-43));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -43 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      String string0 = RandomStringUtils.random(1023);
      RandomStringUtils.random(1023, string0);
      boolean boolean0 = false;
      RandomStringUtils.random(1, 0, (-1), false, false);
      RandomStringUtils.random(1023, false, false);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.randomAscii(156);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[21];
      // Undeclared exception!
      RandomStringUtils.random(35317, charArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.randomAscii(156);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(156, 56320, 156, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1109, 1109, 1109, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RandomStringUtils.randomAscii(156);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[4];
      charArray0[1] = 'l';
      charArray0[2] = '2';
      charArray0[3] = '`';
      // Undeclared exception!
      RandomStringUtils.random(2961, 1, 2961, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56191);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 5905;
      boolean boolean0 = true;
      RandomStringUtils.random(5905, 56, (-651), true, true);
      int int1 = (-1603);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1603));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1603 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 715;
      org.evosuite.runtime.Random.setNextRandom(715);
      RandomStringUtils.random(715, "&|dd");
      RandomStringUtils.random(715, false, false);
      RandomStringUtils.randomAlphanumeric(5);
      int int1 = 13;
      RandomStringUtils.random(13, Integer.MAX_VALUE, 5, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-415));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -415 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(55296);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.random(10, (-1), 3261, false, false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 21;
      RandomStringUtils.random(2606, 32, 21, false, false);
      int int1 = 12;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(12, (-546), (-3664), false, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt((-237));
      mockRandom0.setSeed(15);
      RandomStringUtils.random(1795, 647, 15, true, true, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 127;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(127, 127, 127, true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt((-237));
      mockRandom0.setSeed(15);
      RandomStringUtils.random(1795, 647, 15, false, false, (char[]) null, (Random) mockRandom0);
      org.evosuite.runtime.Random.setNextRandom(15);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(10, 1866, 10, false, false, (char[]) null);
      RandomStringUtils.random(32);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(32, true, true);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(1172, 3347, 3686, true, true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(1993, false, false);
      int int0 = 1679;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1679, 1679, (-523), false, false, charArray0, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom(127);
      // Undeclared exception!
      RandomStringUtils.random(36, 127, 0, true, false, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      String string0 = RandomStringUtils.random(1023);
      RandomStringUtils.random(1023, string0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = '+';
      charArray0[2] = ':';
      charArray0[3] = 'A';
      charArray0[4] = '>';
      charArray0[5] = 'Q';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1023, 0, 1, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1172), 2467, (-1172), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1172 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils.randomAscii(120);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[21];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2947, 2947, 120, true, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 56319;
      int int1 = (-3734);
      int int2 = 0;
      boolean boolean0 = false;
      boolean boolean1 = false;
      char[] charArray0 = new char[4];
      charArray0[0] = 't';
      charArray0[1] = '#';
      charArray0[2] = '\'';
      charArray0[3] = ' ';
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, (-3734), 0, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 1041;
      boolean boolean0 = false;
      RandomStringUtils.random(1041, 1041, (-1082), false, false);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3664), (-1082), (-1082), false, false, (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3664 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(1795, 1795, 127, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, "&>%[N!");
      char[] charArray0 = new char[9];
      charArray0[0] = '<';
      charArray0[1] = 'j';
      charArray0[2] = '}';
      charArray0[3] = '_';
      charArray0[4] = 'n';
      charArray0[5] = '7';
      charArray0[6] = 'K';
      charArray0[7] = 'V';
      charArray0[8] = '2';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAscii(2013);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      RandomStringUtils.random(0, "");
      int int1 = 242;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(242);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1231));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1231 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(26);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 2728;
      String string0 = RandomStringUtils.random(2728);
      RandomStringUtils.random(2728, string0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2676);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RandomStringUtils.randomAscii(1);
      RandomStringUtils.random(1);
      char[] charArray0 = new char[6];
      charArray0[0] = '!';
      charArray0[1] = '4';
      charArray0[2] = 'z';
      charArray0[3] = '+';
      charArray0[4] = '@';
      charArray0[5] = '5';
      MockRandom mockRandom0 = new MockRandom((-1231L));
      RandomStringUtils.random(0, 0, 1, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 55318;
      // Undeclared exception!
      RandomStringUtils.random(55318, "8");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 55296;
      // Undeclared exception!
      RandomStringUtils.random(55296, (String) null);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomStringUtils.random(886, (String) null);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'J';
      charArray0[1] = '(';
      charArray0[2] = '(';
      charArray0[3] = ']';
      charArray0[4] = '7';
      RandomStringUtils.random(0, (-275), 1, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils.randomAscii(897);
      org.evosuite.runtime.Random.setNextRandom(897);
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '`';
      charArray0[2] = '5';
      charArray0[3] = 'l';
      charArray0[4] = 'm';
      charArray0[5] = 'l';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(897, 897, 897, true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 21;
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, 21, 921, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[3];
      charArray0[0] = 'y';
      charArray0[1] = '2';
      charArray0[2] = ')';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3273, 3273, 0, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(555, true, false);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-944), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -944 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1589), (-1589), 40, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1589 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = ')';
      charArray0[2] = 'z';
      charArray0[3] = '<';
      charArray0[4] = '=';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      MockRandom mockRandom0 = new MockRandom(4085L);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.nextBoolean();
      mockRandom0.longs(738L, (long) 742, 2133L);
      mockRandom0.nextFloat();
      RandomStringUtils.random(0, 742, 742, false, true, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(742, charArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils.randomAscii(120);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[21];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(123, 123, 120, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      int int0 = (-237);
      mockRandom0.nextInt((-3627));
      mockRandom0.setSeed((-545L));
      RandomStringUtils.random(668, (-237), 0, false, false, (char[]) null, (Random) mockRandom0);
      org.evosuite.runtime.Random.setNextRandom(56320);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-237), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -237 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils.random(1, "The chars array must not be empty");
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, 432, (-1250), false, true);
      char[] charArray0 = new char[9];
      charArray0[0] = 'H';
      charArray0[1] = 'F';
      charArray0[2] = '`';
      charArray0[3] = '<';
      charArray0[4] = ';';
      charArray0[5] = 'r';
      charArray0[6] = ',';
      charArray0[7] = '\'';
      charArray0[8] = '}';
      MockRandom mockRandom0 = new MockRandom(716);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 716, 0, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-944), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -944 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = (-1732);
      int int1 = 0;
      boolean boolean0 = false;
      char[] charArray0 = new char[4];
      charArray0[0] = '+';
      charArray0[1] = 'A';
      charArray0[2] = 'a';
      charArray0[3] = '9';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.longs((-1805L), 292L);
      mockRandom0.nextGaussian();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1732), (-1732), 0, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1732 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 55318;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(55318, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.random(1, true, false);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-145), "BO$X#!pha77~SL'Cg6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -145 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), 1862, 1862, true, false, (char[]) null, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'D';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0, (Random) null);
      RandomStringUtils.randomNumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2610, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2731);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1771));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1771 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, true, false);
      int int0 = (-1596);
      boolean boolean0 = true;
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      charArray0[1] = '\'';
      charArray0[2] = '8';
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1596), (-1), false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RandomStringUtils.random(1041, 1041, (-1082), true, true);
      // Undeclared exception!
      RandomStringUtils.random(2118, false, true);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(0, true, false);
      int int0 = 2099;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2099);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      String string0 = RandomStringUtils.random(1023);
      RandomStringUtils.random(1023, string0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[1] = '+';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 0, 0, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296, 55296, 1, false, false);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = RandomStringUtils.random(9);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 2354;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2354);
  }
}
