/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:36:11 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(109);
      RandomStringUtils.randomNumeric(109);
      RandomStringUtils.random(109);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(109, 1, 1, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 32;
      // Undeclared exception!
      RandomStringUtils.random(55296, 32, 19, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 46351;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(1728, 56192, 46351, false, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(2963, 0, 0, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2963, 0, 0, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      Random.setNextRandom(56191);
      RandomStringUtils.randomAlphabetic(22);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[4];
      charArray0[0] = '7';
      charArray0[1] = 'J';
      charArray0[2] = 'W';
      charArray0[3] = 'g';
      // Undeclared exception!
      RandomStringUtils.random(56319, charArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.random(4280, (char[]) null);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(4280);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.ints();
      int int0 = 128;
      char[] charArray0 = null;
      mockRandom0.longs();
      MockRandom mockRandom1 = new MockRandom(0L);
      mockRandom0.nextDouble();
      int int1 = 6;
      int int2 = 1028;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(6, 1028, 6, false, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 35;
      Random.setNextRandom(35);
      RandomStringUtils.randomAlphanumeric(35);
      boolean boolean0 = false;
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[1] = 'J';
      charArray0[2] = 'h';
      charArray0[3] = '6';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(35, 35, 35, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56320, 1228, 1, false, false, (char[]) null, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2462L);
      mockRandom0.nextFloat();
      mockRandom0.ints();
      int int0 = 1021;
      int int1 = (-233);
      MockRandom mockRandom1 = new MockRandom((-592L));
      RandomStringUtils.random(1021, (-233), 1021, true, true, (char[]) null, (java.util.Random) mockRandom1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(16);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      int int0 = 25;
      int int1 = 55296;
      // Undeclared exception!
      RandomStringUtils.random(25, 55296, (-1981), false, false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[8];
      char char0 = 'H';
      charArray0[0] = 'H';
      int int1 = 55296;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(25, 55296, (-1981), false, false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 561;
      // Undeclared exception!
      RandomStringUtils.random(56191, 56191, 32, false, false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.random(1283, (String) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2963, 0, 0, true, true, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = '1';
      charArray0[2] = '*';
      charArray0[3] = '>';
      charArray0[4] = '+';
      charArray0[5] = '\'';
      charArray0[6] = 'X';
      charArray0[7] = '|';
      MockRandom mockRandom0 = new MockRandom(136L);
      mockRandom0.nextDouble();
      mockRandom0.nextFloat();
      mockRandom0.ints(136L, 0, 1452);
      // Undeclared exception!
      RandomStringUtils.random(2963, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      MockRandom mockRandom0 = new MockRandom(1069);
      mockRandom0.nextFloat();
      mockRandom0.ints();
      MockRandom mockRandom1 = new MockRandom(1069);
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      charArray0[1] = '}';
      charArray0[2] = '5';
      charArray0[3] = 'W';
      charArray0[4] = 'v';
      charArray0[5] = 'L';
      charArray0[6] = '^';
      RandomStringUtils.random(1069, 0, (-1), true, false, charArray0, (java.util.Random) mockRandom1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1021);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom(2462L);
      char[] charArray0 = new char[5];
      charArray0[0] = 'E';
      charArray0[1] = 'z';
      charArray0[2] = '4';
      charArray0[3] = '7';
      charArray0[4] = 'M';
      RandomStringUtils.random(60, 0, (-2883), true, false, charArray0);
      MockRandom mockRandom1 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, 37986, 32, true, false, charArray0, (java.util.Random) mockRandom1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56191);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      MockRandom mockRandom0 = new MockRandom(2462L);
      mockRandom0.nextFloat();
      mockRandom0.ints();
      MockRandom mockRandom1 = new MockRandom(1021);
      RandomStringUtils.random(1021, 128, (-233), false, false, (char[]) null, (java.util.Random) mockRandom1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1021);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1255), 1865, (-1255), true, true, (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1255 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.randomAscii(24);
      Random.setNextRandom(24);
      RandomStringUtils.randomAlphanumeric(24);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = '1';
      charArray0[2] = '*';
      charArray0[3] = '>';
      charArray0[4] = '+';
      charArray0[5] = '\'';
      charArray0[6] = 'X';
      charArray0[7] = '|';
      MockRandom mockRandom0 = new MockRandom(136L);
      mockRandom0.nextDouble();
      mockRandom0.ints(136L, 0, 1452);
      RandomStringUtils.random(2963, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1468));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1468 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[26];
      charArray0[2] = '*';
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, 0, 21, false, true, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, 0, 0, true, true, charArray0, (java.util.Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'H';
      charArray0[1] = '1';
      charArray0[2] = '*';
      charArray0[3] = '>';
      charArray0[4] = '+';
      charArray0[5] = '\'';
      charArray0[6] = 'X';
      charArray0[7] = '|';
      MockRandom mockRandom0 = new MockRandom(136L);
      RandomStringUtils.random(2963, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-765), (-765), 3746, true, true, (char[]) null, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -765 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-1636);
      int int1 = 1316;
      boolean boolean0 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextInt(1316);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1636), (-1636), 1316, true, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1636 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56192);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 1581;
      int int1 = 56320;
      boolean boolean0 = false;
      RandomStringUtils.random(1581, 1581, 56320, false, false);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56320);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(269, 57343, 269, false, false);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      int int0 = (-1);
      // Undeclared exception!
      RandomStringUtils.random(39, 56320, (-1), false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(57343, 57343, 185, false, false, (char[]) null, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1588);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(939);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1546, 1546, 1546, false, false, (char[]) null, (java.util.Random) mockRandom1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-983), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -983 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(829, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-642));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -642 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.randomAscii(1);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-309));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -309 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(966, 966, 966, false, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, charArray0);
      int int0 = 459;
      RandomStringUtils.random(459, charArray0);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2462L);
      mockRandom0.nextFloat();
      mockRandom0.ints();
      RandomStringUtils.random(2013, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, "");
      int int1 = 2153;
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(2153, 2153, 0, false, true);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(47945, 47945, (-601), true, true);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(82, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'q';
      charArray0[2] = 'M';
      charArray0[3] = '6';
      charArray0[4] = 'w';
      charArray0[5] = '6';
      charArray0[6] = '=';
      charArray0[7] = 'V';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2127, (-1186), (-246), true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-1694);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1694));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1694 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(40);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = 'F';
      charArray0[1] = '|';
      charArray0[2] = 'v';
      charArray0[3] = '5';
      charArray0[4] = 'u';
      charArray0[5] = 'j';
      charArray0[6] = '4';
      charArray0[7] = '.';
      charArray0[8] = 'r';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(3734, (String) null);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '1';
      charArray0[2] = 'L';
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(0, 0, 0, false, false, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      int int0 = 932;
      char[] charArray0 = new char[3];
      charArray0[0] = 'l';
      charArray0[1] = 'k';
      charArray0[2] = 'w';
      RandomStringUtils.random(1, 1, 932, false, false, charArray0);
      int int1 = (-927);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-927));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -927 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2106), (-2106), (-2106), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2106 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'Y';
      charArray0[1] = 'k';
      charArray0[2] = '9';
      charArray0[3] = 'i';
      charArray0[4] = ',';
      charArray0[5] = 'G';
      charArray0[6] = '3';
      charArray0[7] = 'i';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (java.util.Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      char[] charArray0 = new char[1];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(16, (-2264), 8, false, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, 1069, 0, true, true, charArray0);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1069, 32, 1, false, true, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(2466, true, true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-4815), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4815 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-614), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -614 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2805, 2805, 57343, false, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 128;
      int int1 = 32;
      int int2 = 0;
      char[] charArray0 = new char[6];
      char char0 = 'H';
      charArray0[0] = 'H';
      char char1 = '&';
      charArray0[1] = '&';
      char char2 = 'u';
      charArray0[2] = 'u';
      char char3 = '^';
      charArray0[3] = '^';
      char char4 = 'B';
      charArray0[4] = 'B';
      charArray0[5] = 'o';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, 32, 0, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(47945, "<Er^;");
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RandomStringUtils.random(97, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(97, 97, 97, false, true, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, 1069, 0, true, true, charArray0);
      RandomStringUtils.random(0, 1069, 0, false, true);
      RandomStringUtils.random(0);
      RandomStringUtils.random(0, false, false);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1069);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(128);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RandomStringUtils.random(10);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RandomStringUtils.randomAscii(1666);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RandomStringUtils.random(4, (-642), 1866, true, true);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RandomStringUtils.random(0);
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextFloat();
      mockRandom0.ints();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2545, (-388), 1993, false, false, charArray0, (java.util.Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(13);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1215));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1215 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      int int0 = 909;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(909);
  }
}
