/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 08:34:47 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)24;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte) (-108);
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)123;
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      RandomStringUtils.random(10, (int) (byte)0, (int) (byte)0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(200);
      mockRandom0.nextLong();
      mockRandom0.ints();
      int int0 = 26;
      mockRandom0.nextBoolean();
      int int1 = 57342;
      MockRandom mockRandom1 = new MockRandom(200);
      MockRandom mockRandom2 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2897, 57342, 2897, false, false, (char[]) null, (Random) mockRandom2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.ints((int) (byte) (-101), 0);
      mockRandom0.nextBoolean();
      mockRandom0.nextBoolean();
      RandomStringUtils.random(1, (-2221), 1, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)1, 56320, 0, false, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.ints((int) (byte) (-101), 0);
      mockRandom0.nextBoolean();
      mockRandom0.nextBoolean();
      RandomStringUtils.random(1, (-2221), 1, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(1508, 56320, 0, false, false, (char[]) null);
      RandomStringUtils.random(482, "\uF755");
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      char char0 = 'g';
      charArray0[1] = 'g';
      int int0 = 41;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(41, 0, 0, true, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = (-1066);
      int int1 = 56192;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(56192, 56192, 1995, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(45);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.nextLong();
      MockRandom mockRandom1 = new MockRandom(1L);
      mockRandom1.nextBoolean();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = null;
      MockRandom mockRandom2 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(45, 55296, (int) (byte)2, false, false, (char[]) null, (Random) mockRandom2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte) (-4);
      byteArray0[8] = (byte)9;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.doubles();
      RandomStringUtils.random((int) (byte)1, (int) (byte)46, (int) (byte)12, true, true, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random((int) (byte)94, (int) (byte)1, (int) (byte)12, true, false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      RandomStringUtils.randomAscii('E');
      byte byte0 = (byte)0;
      MockRandom mockRandom0 = new MockRandom((-1573L));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      mockRandom0.nextBoolean();
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)83;
      byteArray0[6] = (byte)46;
      mockRandom0.nextBytes(byteArray0);
      RandomStringUtils.random((int) (byte)83, (int) (byte)0, (int) (byte)0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random((int) (byte)0, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1659));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1659 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      mockRandom0.nextInt();
      mockRandom0.nextGaussian();
      mockRandom0.nextFloat();
      RandomStringUtils.random(1, (-876), 293, true, false, (char[]) null, (Random) mockRandom0);
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = 'z';
      charArray0[2] = '!';
      charArray0[3] = '\"';
      charArray0[4] = 'g';
      charArray0[5] = '(';
      charArray0[6] = 'd';
      charArray0[7] = 'l';
      charArray0[8] = 'c';
      RandomStringUtils.random(1919, charArray0);
      org.evosuite.runtime.Random.setNextRandom(188);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'g';
      RandomStringUtils.random(1919, 1991, 39, false, true);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(1919, (-1), 1919, false, false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 1;
      RandomStringUtils.random(1, (String) null);
      org.evosuite.runtime.Random.setNextRandom(56192);
      RandomStringUtils.randomAlphabetic(2717);
      RandomStringUtils.randomAlphanumeric(1);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(47361);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 1919;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(1919, 0, (-1), true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = (-273);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-273), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -273 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = (-265);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      mockRandom0.longs();
      int int1 = (-1368);
      // Undeclared exception!
      RandomStringUtils.random(27, (-1368), 557, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(111, 111, 111, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 59;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      int int1 = 869;
      boolean boolean0 = true;
      char[] charArray0 = null;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(869, 59, 659, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'E';
      char char0 = 'g';
      charArray0[1] = 'g';
      int int0 = 41;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(41, 0, 1919, true, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 57343;
      // Undeclared exception!
      RandomStringUtils.random(57343);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.random(111, (-265), 111, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-265), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -265 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ".(%+w7 :";
      RandomStringUtils.random(17, ".(%+w7 :");
      int int0 = 1919;
      char[] charArray0 = new char[3];
      charArray0[2] = 'V';
      charArray0[1] = 'g';
      charArray0[2] = '-';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(17, 17, 1919, false, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.nextDouble();
      mockRandom0.nextInt();
      RandomStringUtils.random(659, 111, 869, true, true, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(659, 2227, 31, true, true);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = 'd';
      charArray0[2] = '_';
      // Undeclared exception!
      RandomStringUtils.random(55296, charArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(0, ".(%+w7 :");
      RandomStringUtils.randomAscii(1919);
      RandomStringUtils.random(1768, 0, 1872, false, false);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'g';
      charArray0[2] = '~';
      charArray0[3] = '6';
      charArray0[4] = 'W';
      charArray0[5] = 'R';
      charArray0[6] = ')';
      charArray0[7] = 'w';
      charArray0[8] = 'K';
      RandomStringUtils.random(1872, 0, 56319, false, false, charArray0);
      int int0 = 1622;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1622, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 2696;
      int int1 = 0;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom(2886L);
      mockRandom0.nextBoolean();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2696, 0, 0, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      charArray0[3] = 'O';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      charArray0[6] = 'J';
      RandomStringUtils.random(0, 45, 90, false, false, charArray0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(90, (char[]) null);
      RandomStringUtils.random(0, 1566, (-431), false, false);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1);
      MockRandom mockRandom0 = new MockRandom(111);
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(111, (-121), 16, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = 'X';
      charArray0[1] = '.';
      charArray0[2] = ':';
      charArray0[3] = '*';
      charArray0[4] = '\'';
      charArray0[5] = ' ';
      charArray0[6] = 'V';
      charArray0[7] = 'H';
      charArray0[8] = 'W';
      RandomStringUtils.random(21, charArray0);
      int int0 = 939;
      char[] charArray1 = new char[5];
      char char0 = 't';
      // Undeclared exception!
      RandomStringUtils.random(411, 1, (-392), true, true, charArray1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.random(2696, 46354, 1205, true, true);
      // Undeclared exception!
      RandomStringUtils.random(3037, 0, 0, true, false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = 'h';
      MockRandom mockRandom0 = new MockRandom(341);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(341, 341, 341, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'U';
      charArray0[1] = 'J';
      charArray0[2] = ';';
      charArray0[3] = 'i';
      charArray0[4] = 'Y';
      charArray0[5] = ',';
      charArray0[6] = '>';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-558), (-558), (-1182), false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -558 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 56320;
      // Undeclared exception!
      RandomStringUtils.random(56320, "The chars array must not be empty");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils.random(0, ".(%+w7 :");
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'g';
      charArray0[2] = '-';
      RandomStringUtils.random(0, 0, 1919, false, true, charArray0);
      RandomStringUtils.random(1919, ".(%+w7 :");
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.nextDouble();
      mockRandom0.nextInt();
      RandomStringUtils.random(1919, 0, 0, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(0, 0, 0, true, true);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-601));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -601 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-702), 0, 0, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -702 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(111, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.random(0, "&5Zf");
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-3919));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3919 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56191);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 2809;
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = 'B';
      charArray0[2] = 'z';
      charArray0[3] = 'p';
      charArray0[4] = 'r';
      charArray0[5] = 'k';
      charArray0[6] = 't';
      charArray0[7] = '>';
      RandomStringUtils.random(2809, charArray0);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2809);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils.randomAscii(2696);
      RandomStringUtils.random(2696, 2696, 1228, false, false);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = 'M';
      charArray0[2] = '/';
      charArray0[3] = ',';
      charArray0[4] = 'Z';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 3316, 1, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-1035);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1035), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1035 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils.random(0);
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-78), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -78 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-2766);
      boolean boolean0 = false;
      char[] charArray0 = new char[1];
      char char0 = ';';
      charArray0[0] = ';';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2766), (-2766), 0, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2766 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = (-449);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-449), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -449 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = (-1124);
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = 'b';
      charArray0[2] = '.';
      charArray0[3] = '+';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1124), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1124 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextLong();
      mockRandom0.ints((long) 0);
      mockRandom0.nextInt(1566);
      mockRandom0.setSeed(0);
      mockRandom0.nextDouble();
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(0, "%{w`V|C(e_");
      RandomStringUtils.random(0, true, false);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 1;
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = 'M';
      charArray0[2] = '#';
      charArray0[3] = '?';
      charArray0[4] = 'O';
      charArray0[5] = 'l';
      charArray0[6] = 'q';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 315;
      RandomStringUtils.random(315, false, false);
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(315, false, true);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RandomStringUtils.random(0, "<iP%aPK.W3U.PC");
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[1] = 'c';
      charArray0[2] = 'J';
      charArray0[3] = 'D';
      charArray0[4] = 'B';
      charArray0[5] = 'H';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 694;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(694, true, true);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(116);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, "The chars array must not be empty");
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1542));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1542 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 56192;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56192);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2048));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2048 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = (-1);
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-1), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = '\\';
      charArray0[2] = '~';
      charArray0[3] = '1';
      charArray0[4] = ':';
      MockRandom mockRandom0 = new MockRandom(0);
      String string0 = RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1389, 1389, 1853, true, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RandomStringUtils.random(3639, " is less than 0.");
      int int0 = 32;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(32);
  }
}
