/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:31:18 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      byte[] byteArray0 = new byte[3];
      mockRandom0.nextGaussian();
      mockRandom0.longs();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.ints((long) 47950, 636, Integer.MAX_VALUE);
      mockRandom1.nextFloat();
      // Undeclared exception!
      RandomStringUtils.random(47950, (int) (byte)0, (int) (byte)0, true, false, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 37;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(37, 56181, 37, false, false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom0.nextBoolean();
      mockRandom0.nextDouble();
      mockRandom1.longs();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      mockRandom0.nextBytes(byteArray0);
      MockRandom mockRandom2 = new MockRandom();
      mockRandom0.nextGaussian();
      MockRandom mockRandom3 = new MockRandom(0L);
      RandomStringUtils.random(128, (-209), (-1), true, true, (char[]) null, (Random) mockRandom3);
      RandomStringUtils.random(0, true, false);
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(3);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.randomAscii(1770);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      MockRandom mockRandom1 = new MockRandom((byte) (-51));
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-51);
      mockRandom1.nextBytes(byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-51);
      byteArray1[1] = (byte) (-51);
      byteArray1[2] = (byte) (-51);
      byteArray1[3] = (byte) (-51);
      byteArray1[4] = (byte) (-51);
      byteArray1[5] = (byte) (-51);
      byteArray1[6] = (byte) (-51);
      byteArray1[7] = (byte) (-51);
      mockRandom1.nextBytes(byteArray1);
      MockRandom mockRandom2 = new MockRandom();
      mockRandom0.nextGaussian();
      int int0 = 47950;
      MockRandom mockRandom3 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(47950, (int) (byte)0, (int) (byte)0, false, false, (char[]) null, (Random) mockRandom3);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 5;
      RandomStringUtils.randomAscii(5);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      byte byte0 = (byte)68;
      mockRandom0.nextBoolean();
      byte byte1 = (byte)45;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)68;
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = null;
      MockRandom mockRandom1 = new MockRandom();
      mockRandom0.nextGaussian();
      RandomStringUtils.random((int) (byte)1, (int) (byte)45, 729, true, true, (char[]) null, (Random) mockRandom1);
      boolean boolean0 = false;
      RandomStringUtils.random((int) (byte)45, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2484));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2484 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(37, 56192, 37, false, false);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      boolean boolean1 = true;
      RandomStringUtils.random(1, 1636, 1, true, true);
      RandomStringUtils.random(1);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(4139);
      RandomStringUtils.randomAlphabetic(4139);
      org.evosuite.runtime.Random.setNextRandom((-4075));
      char[] charArray0 = null;
      RandomStringUtils.random(604, (char[]) null);
      RandomStringUtils.randomAlphabetic(22);
      // Undeclared exception!
      RandomStringUtils.random(4139, 56191, 604, true, true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.random(352, "");
      RandomStringUtils.randomAscii(1770);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      MockRandom mockRandom1 = new MockRandom((byte)68);
      mockRandom1.nextBoolean();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)68;
      mockRandom1.nextBytes(byteArray0);
      mockRandom0.ints(3080L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      RandomStringUtils.random(3732, (int) (byte)0, (int) (byte)0, false, false, charArray0, (Random) mockRandom1);
      // Undeclared exception!
      RandomStringUtils.random(3732, true, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.randomAscii(56191);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte byte0 = (byte)68;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte) (-30);
      byteArray0[6] = (byte)68;
      byteArray0[7] = (byte)68;
      mockRandom0.nextBytes(byteArray0);
      boolean boolean0 = true;
      char char0 = '[';
      char[] charArray0 = new char[1];
      charArray0[0] = 'p';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(33, (int) (byte)0, (-1773), true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.randomAscii(1770);
      // Undeclared exception!
      RandomStringUtils.random(56192, (String) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RandomStringUtils.random(352, "");
      RandomStringUtils.randomAscii(1770);
      org.evosuite.runtime.Random.setNextRandom(353);
      RandomStringUtils.randomAlphanumeric(619);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      byte[] byteArray0 = new byte[0];
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'O';
      charArray0[1] = ';';
      charArray0[2] = 't';
      charArray0[3] = '8';
      MockRandom mockRandom1 = new MockRandom();
      RandomStringUtils.random((int) (byte)32, 1, (-1598), false, false, charArray0, (Random) mockRandom1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1598), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1598 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[8];
      charArray0[0] = '+';
      charArray0[1] = '+';
      charArray0[2] = '+';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = '+';
      charArray0[7] = '+';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 37, 37, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.randomAscii(1770);
      RandomStringUtils.random(1770, (-53), 19, true, true);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      charArray0[1] = 'G';
      charArray0[2] = 'm';
      // Undeclared exception!
      RandomStringUtils.random(13, 0, 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.random(352, "");
      RandomStringUtils.randomAscii(1770);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte) (-51);
      mockRandom0.nextBytes(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = 'p';
      charArray0[2] = '#';
      charArray0[3] = '4';
      // Undeclared exception!
      RandomStringUtils.random(56192, 0, 352, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.random(352, "");
      RandomStringUtils.randomAscii(1770);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      MockRandom mockRandom1 = new MockRandom();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-51);
      mockRandom1.nextBytes(byteArray0);
      char[] charArray0 = new char[0];
      MockRandom mockRandom2 = new MockRandom((byte)68);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, 1055, (int) (byte) (-30), false, false, charArray0, (Random) mockRandom2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(352, "");
      RandomStringUtils.randomAscii(1770);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, (-1310), (-857), true, true, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = '2';
      charArray0[2] = '7';
      charArray0[3] = '$';
      char[] charArray1 = new char[7];
      charArray1[0] = '2';
      charArray1[1] = '2';
      charArray1[2] = '|';
      charArray1[3] = '7';
      charArray1[4] = '$';
      charArray1[5] = '!';
      charArray1[6] = '$';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 56192, 56192, true, true, charArray1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(2770);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'g';
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)68;
      mockRandom0.nextBoolean();
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte) (-30);
      mockRandom0.nextBytes(byteArray0);
      RandomStringUtils.random(2263, (-1), 2263, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.random(56192, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = null;
      RandomStringUtils.random(0, (char[]) null);
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomNumeric(0);
      int int1 = 0;
      RandomStringUtils.randomAlphabetic(0);
      int int2 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 2547;
      RandomStringUtils.random(2547, (String) null);
      int int1 = (-968);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-968));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -968 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 352;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(352, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 2039;
      char[] charArray0 = new char[7];
      charArray0[0] = '~';
      charArray0[1] = 'k';
      charArray0[2] = 'g';
      charArray0[3] = 'p';
      charArray0[4] = '\\';
      charArray0[5] = 'o';
      charArray0[6] = 'U';
      MockRandom mockRandom0 = new MockRandom(128);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, 2039, 128, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = '2';
      charArray0[2] = 'O';
      charArray0[3] = 'F';
      charArray0[4] = '-';
      charArray0[5] = 'd';
      charArray0[6] = '/';
      charArray0[7] = 'l';
      RandomStringUtils.random(0, 2664, 0, true, true, charArray0);
      MockRandom mockRandom0 = new MockRandom(0L);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)19;
      mockRandom0.nextBytes(byteArray0);
      RandomStringUtils.random(0, 2664, 2664, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0);
      boolean boolean0 = false;
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[2];
      charArray0[0] = '*';
      charArray0[1] = 'j';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2003), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2003 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = '2';
      charArray0[2] = '7';
      charArray0[3] = '$';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, 56192, 1, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 148;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-472), 148, (-472), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -472 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils.randomAscii(3054);
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = 'F';
      charArray0[2] = '0';
      charArray0[3] = 'C';
      charArray0[4] = '6';
      charArray0[5] = 'D';
      charArray0[6] = 'u';
      RandomStringUtils.random(3054, charArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 127;
      // Undeclared exception!
      RandomStringUtils.random(1615, (-379), 127, false, true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0, 0, 1838, true, true);
      RandomStringUtils.random(1838, false, false);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.randomNumeric(0);
      int int0 = 0;
      RandomStringUtils.random(0);
      int int1 = (-1900);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1900));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1900 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, true, false);
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = 'I';
      charArray0[2] = 'J';
      charArray0[3] = '@';
      charArray0[4] = '+';
      charArray0[5] = 'w';
      charArray0[6] = '^';
      charArray0[7] = 'B';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1148), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1148 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 808;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(808);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils.random(0, "v:@b\tw-sVM#<`7&8m");
      int int0 = (-2684);
      char[] charArray0 = new char[5];
      charArray0[0] = ';';
      char char0 = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 't';
      char char1 = 'o';
      charArray0[3] = 'o';
      charArray0[4] = 'r';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2684), 0, 0, false, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2684 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils.random(2770);
      char[] charArray0 = new char[8];
      charArray0[0] = 'a';
      charArray0[1] = 'g';
      charArray0[2] = 's';
      charArray0[3] = 'm';
      charArray0[4] = 'a';
      charArray0[5] = 'h';
      charArray0[6] = 'c';
      charArray0[7] = 'Q';
      RandomStringUtils.random(2770, charArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'G';
      charArray0[1] = 'U';
      charArray0[2] = '}';
      charArray0[3] = '0';
      charArray0[4] = 'Q';
      MockRandom mockRandom0 = new MockRandom((-841));
      mockRandom0.nextFloat();
      RandomStringUtils.random(0, (-841), 32, true, true, charArray0, (Random) mockRandom0);
      String string0 = RandomStringUtils.random(1931, 0, 0, true, true, charArray0);
      RandomStringUtils.random(32, string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      boolean boolean0 = true;
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.randomAlphabetic(0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 'V';
      charArray0[2] = 'T';
      charArray0[3] = 'T';
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0, false, true);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom((-1L));
      // Undeclared exception!
      RandomStringUtils.random(56192, 1, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.random(0, "~>kNG!");
      RandomStringUtils.random(1787, "(s9~pM(ytH%*#");
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1613), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1613 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = (-1073);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1073));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1073 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[2];
      charArray0[0] = '=';
      charArray0[1] = 'b';
      RandomStringUtils.random(0, 0, 56319, true, true, charArray0);
      int int1 = (-855);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-855));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -855 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 2709;
      int int1 = 128;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2709, 128, 128, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0);
      RandomStringUtils.randomAlphanumeric(0);
      int int1 = 5236;
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      Random random0 = null;
      RandomStringUtils.random(0, 0, 5236, true, true, charArray0, (Random) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(5236, 5236, (-716), false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5236
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-724), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -724 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = (-3179);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-3179));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3179 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, true);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 2726;
      RandomStringUtils.random(2726);
      int int1 = 4013;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(4013);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 25;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(25);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = (-1306);
      int int1 = (-1976);
      boolean boolean0 = false;
      boolean boolean1 = true;
      char[] charArray0 = new char[7];
      charArray0[0] = '5';
      charArray0[1] = 'w';
      charArray0[2] = '1';
      charArray0[3] = '[';
      charArray0[4] = '?';
      charArray0[5] = 'X';
      charArray0[6] = ',';
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1306), (-1306), (-1976), false, true, charArray0, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1306 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'B';
      charArray0[1] = 'J';
      charArray0[2] = 'X';
      charArray0[3] = 'u';
      charArray0[4] = 'D';
      charArray0[5] = '8';
      charArray0[6] = 'j';
      charArray0[7] = ' ';
      MockRandom mockRandom0 = new MockRandom();
      String string0 = RandomStringUtils.random(0, 56191, 56191, false, false, charArray0, (Random) mockRandom0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 1633;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(1633, true, true);
  }
}
