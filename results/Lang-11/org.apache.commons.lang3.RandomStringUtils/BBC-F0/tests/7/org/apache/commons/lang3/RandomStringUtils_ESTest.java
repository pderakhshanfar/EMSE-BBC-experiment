/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:28:35 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.random(1);
      int int0 = (-1);
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(40, (-1), 1, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom(0);
      mockRandom0.nextInt(1);
      mockRandom0.doubles((long) 0);
      int int0 = 0;
      // Undeclared exception!
      RandomStringUtils.random(1, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = false;
      int int0 = 7;
      int int1 = 39;
      // Undeclared exception!
      RandomStringUtils.random(7, 56320, 39, false, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 56320;
      int int1 = Integer.MAX_VALUE;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(39, 56191, Integer.MAX_VALUE, false, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 377;
      // Undeclared exception!
      RandomStringUtils.random(56221, 56221, 377, false, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.random(377, (-3141), 8, false, false);
      org.evosuite.runtime.Random.setNextRandom(1687);
      RandomStringUtils.randomAlphanumeric(1856);
      char[] charArray0 = new char[7];
      charArray0[0] = '(';
      charArray0[1] = 'O';
      charArray0[2] = 'm';
      charArray0[3] = 'r';
      charArray0[4] = 'm';
      charArray0[5] = 'A';
      charArray0[6] = '6';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-925), (-668), (-5230), true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -925 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAscii(0);
      MockRandom mockRandom0 = new MockRandom(0);
      mockRandom0.nextInt(1);
      mockRandom0.doubles((long) 0);
      RandomStringUtils.random(1, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(2044, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-575));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -575 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-3141);
      boolean boolean0 = false;
      RandomStringUtils.random(377, (-3141), 8, false, false);
      org.evosuite.runtime.Random.setNextRandom(1687);
      RandomStringUtils.randomAlphabetic(8);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1687);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.random(32, 56320, 39, false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 377;
      // Undeclared exception!
      RandomStringUtils.random(56191, 56191, 377, false, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(1);
      RandomStringUtils.random(40, (-1), 1, false, false, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-1), (-1), false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RandomStringUtils.random(0, "");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Y';
      RandomStringUtils.random(0, (-2138), (-2138), true, true, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 424, true, true, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom((-1098L));
      mockRandom0.ints();
      mockRandom0.nextLong();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1627, 1627, 1, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RandomStringUtils.random(1882, (-181), 637, false, false);
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'y';
      RandomStringUtils.random(501);
      // Undeclared exception!
      RandomStringUtils.random(56192, "g7lT>!O#\u0005kF;[");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.doubles(0L);
      RandomStringUtils.random(1529, 1529, 57343, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(57343, 2895, 57343, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      RandomStringUtils.random(1873, 2582, 0, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2582, 1873, 1873, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(0);
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(1434, (-1223), 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom(0L);
      RandomStringUtils.random(127, 295, (-1), true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.randomAscii(928);
      int int0 = 46194;
      // Undeclared exception!
      RandomStringUtils.randomAscii(46194);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56192);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      RandomStringUtils.random(3825, charArray0);
      RandomStringUtils.randomAscii(3825);
      int int0 = 123;
      int int1 = 327;
      int int2 = 1531;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1531, 3825, 1531, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3825
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1873);
      int int0 = (-3177);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3177), (-3177), (-3177), true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3177 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(36, 128, 128, true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = '\\';
      charArray0[2] = 'u';
      charArray0[3] = 't';
      char char0 = 'r';
      charArray0[4] = 'r';
      charArray0[5] = '~';
      RandomStringUtils.random(85, charArray0);
      RandomStringUtils.random(1579, "mw");
      RandomStringUtils.randomAscii(85);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric('X');
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3349), 0, (-3349), false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3349 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(2289, (-2363), 2289, true, true);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 128;
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = '}';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, 128, 128, true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAscii(0);
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(2232, 0, (-2141), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = '';
      charArray0[2] = 'j';
      charArray0[3] = '\'';
      charArray0[4] = '>';
      charArray0[5] = '<';
      charArray0[6] = '_';
      charArray0[7] = 'o';
      charArray0[8] = 'P';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0, true, false);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 'c';
      charArray0[2] = '/';
      charArray0[3] = 'N';
      charArray0[4] = 'F';
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      RandomStringUtils.random(4238, 0, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 1243;
      RandomStringUtils.randomAscii(1243);
      int int1 = 1116;
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(1116, 1116, 1243, false, true);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = (-880);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-880));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -880 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = (-544);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-544));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -544 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.random(56191, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      int int0 = 609;
      int int1 = 0;
      int int2 = 56319;
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = 'u';
      charArray0[2] = 'o';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      RandomStringUtils.random(609, 0, 56319, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(0, 56319, (-1470), false, false, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 1038;
      RandomStringUtils.random(1038, (char[]) null);
      RandomStringUtils.random(1038);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1038);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 829;
      RandomStringUtils.random(829, false, false);
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(829, true, true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils.random(807, (String) null);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 165;
      RandomStringUtils.random(165, "48XSA");
      int int1 = 0;
      RandomStringUtils.random(0, "444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444");
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(165);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-829);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-829));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -829 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, true, false);
      RandomStringUtils.random(0, 0, 0, false, true);
      int int1 = 1161;
      boolean boolean0 = false;
      boolean boolean1 = false;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1161, 0, 327, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '3';
      charArray0[1] = '^';
      charArray0[2] = '|';
      charArray0[3] = 'z';
      charArray0[4] = '>';
      charArray0[5] = '[';
      charArray0[6] = 'M';
      RandomStringUtils.random(1971, charArray0);
      int int0 = (-1602);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1602));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1602 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1873);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 3825;
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      RandomStringUtils.random(3825, charArray0);
      RandomStringUtils.randomAscii(3825);
      int int1 = 1;
      int int2 = 123;
      boolean boolean0 = false;
      boolean boolean1 = true;
      MockRandom mockRandom0 = new MockRandom(0L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 123, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      String string0 = RandomStringUtils.randomAlphanumeric(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = (-3991);
      char[] charArray0 = new char[7];
      charArray0[0] = 'h';
      charArray0[1] = '/';
      charArray0[2] = '\"';
      charArray0[3] = 'L';
      charArray0[4] = '=';
      charArray0[5] = 'w';
      charArray0[6] = '5';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3991), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3991 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-411);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-411), false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -411 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
