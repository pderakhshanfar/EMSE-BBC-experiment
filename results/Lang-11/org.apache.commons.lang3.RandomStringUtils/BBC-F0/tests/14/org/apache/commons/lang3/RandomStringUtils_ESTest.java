/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:31:40 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextInt();
      mockRandom0.nextLong();
      mockRandom0.nextDouble();
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte)57;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte) (-13);
      mockRandom0.nextInt();
      byteArray0[4] = (byte)57;
      mockRandom0.nextBytes(byteArray0);
      MockRandom mockRandom1 = new MockRandom((-1L));
      RandomStringUtils.random((int) (byte)5, (-846), (int) (byte)5, false, false, (char[]) null, (Random) mockRandom1);
      int int0 = 517;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric((byte)4);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 1143;
      int int1 = 0;
      boolean boolean0 = false;
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      boolean boolean1 = true;
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = 'q';
      charArray0[2] = '$';
      charArray0[3] = 'd';
      charArray0[4] = '9';
      charArray0[5] = '%';
      charArray0[6] = 'z';
      charArray0[7] = '}';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(55296, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(55296);
      int int0 = 35;
      // Undeclared exception!
      RandomStringUtils.random(35);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(55296);
      // Undeclared exception!
      RandomStringUtils.random(55296);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-3604L));
      RandomStringUtils.random(1, 317, 668, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(668, 317, 1, true, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(25);
      RandomStringUtils.random(4577);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56319);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.randomAscii(4577);
      org.evosuite.runtime.Random.setNextRandom(56300);
      // Undeclared exception!
      RandomStringUtils.random(37386);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.randomAscii(4577);
      org.evosuite.runtime.Random.setNextRandom(56320);
      // Undeclared exception!
      RandomStringUtils.random(781);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = true;
      org.evosuite.runtime.Random.setNextRandom(1528);
      RandomStringUtils.randomAlphanumeric(151);
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 1;
      int int1 = 16;
      char[] charArray0 = new char[2];
      charArray0[0] = '~';
      charArray0[1] = 'R';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(16, 1, 16, true, true, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(1, true, false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(0);
      boolean boolean0 = false;
      RandomStringUtils.random(1, false, false);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(55296);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles(0L);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)16;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0);
      mockRandom0.doubles();
      mockRandom0.doubles();
      // Undeclared exception!
      RandomStringUtils.random(2425, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.randomAscii(328);
      org.evosuite.runtime.Random.setNextRandom(56320);
      // Undeclared exception!
      RandomStringUtils.random(56320);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 19;
      int int1 = 19;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(19, 19, 19, true, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 2425;
      boolean boolean0 = true;
      MockRandom mockRandom0 = new MockRandom(0L);
      int int1 = (-493);
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '0';
      charArray0[3] = '0';
      charArray0[4] = '0';
      charArray0[3] = '0';
      charArray0[6] = '0';
      charArray0[7] = '0';
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, (-493), true, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.ints(0L);
      byte byte0 = (byte)0;
      byte byte1 = (byte) (-1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed((-4741L));
      mockRandom0.doubles();
      mockRandom0.doubles();
      RandomStringUtils.random(3937, (int) (byte)0, (int) (byte)0, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(40, (int) (byte)0, (int) (byte) (-1), true, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      int int0 = 55296;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(123, 1, 55296, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(56319);
      RandomStringUtils.random(0, 112, 112, true, true);
      // Undeclared exception!
      RandomStringUtils.randomAscii(56319);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(56320);
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'a';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56320, 56320, 56320, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom(56320);
      mockRandom1.nextLong();
      int int0 = 3352;
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = 'M';
      charArray0[2] = 'c';
      charArray0[3] = ' ';
      charArray0[4] = '>';
      charArray0[5] = ' ';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1725), (-1725), 3352, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1725 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(2249, 1143, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = '0';
      charArray0[2] = 'f';
      MockRandom mockRandom0 = new MockRandom((-3604L));
      RandomStringUtils.random(1143, 1, 0, false, false, charArray0, (Random) mockRandom0);
      char[] charArray1 = new char[5];
      charArray1[0] = 'x';
      charArray1[1] = 'h';
      charArray1[2] = ' ';
      RandomStringUtils.random(1);
      // Undeclared exception!
      RandomStringUtils.random(39, 1, (-1), true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(2249, 1143, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = '0';
      charArray0[2] = 'f';
      MockRandom mockRandom0 = new MockRandom((-3604L));
      RandomStringUtils.random(1143, 1, 0, false, false, charArray0, (Random) mockRandom0);
      char[] charArray1 = new char[5];
      charArray1[0] = 'x';
      charArray1[1] = 'h';
      charArray1[2] = ' ';
      charArray1[3] = 'c';
      charArray1[4] = '>';
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextLong();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2249, 2249, 0, true, false, charArray1, (Random) mockRandom1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2250
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(206, (String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = 'X';
      charArray0[2] = '';
      charArray0[3] = 'i';
      charArray0[4] = 'U';
      charArray0[5] = 'A';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.ints(0L, 127, 206);
      // Undeclared exception!
      RandomStringUtils.random(56319, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(1);
      RandomStringUtils.random(1, "\u0000");
      org.evosuite.runtime.Random.setNextRandom(1);
      // Undeclared exception!
      RandomStringUtils.random(2653, (-1), 2653, true, true);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextInt();
      boolean boolean0 = true;
      char[] charArray0 = new char[3];
      charArray0[1] = 'Z';
      charArray0[2] = 'q';
      RandomStringUtils.random(0, (-1415), (-1415), true, true, charArray0, (Random) mockRandom0);
      int int0 = 311;
      RandomStringUtils.random(311);
      int int1 = (-247);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -247 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      charArray0[2] = 'Z';
      charArray0[3] = 'p';
      charArray0[4] = 'C';
      charArray0[5] = '?';
      charArray0[6] = '1';
      charArray0[7] = 'H';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      mockRandom0.nextInt();
      RandomStringUtils.random(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -247 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.doubles(0L);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0);
      mockRandom0.doubles();
      RandomStringUtils.random(20, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils.random(206, (String) null);
      int int0 = 1127;
      int int1 = 2498;
      boolean boolean0 = true;
      boolean boolean1 = false;
      char[] charArray0 = new char[6];
      charArray0[0] = 'T';
      charArray0[1] = 'X';
      charArray0[2] = '';
      charArray0[3] = 'i';
      charArray0[4] = 'U';
      charArray0[5] = 'A';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      mockRandom0.ints(0L, 127, 206);
      mockRandom0.nextLong();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1127, 2498, 1127, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '0';
      charArray0[1] = '$';
      charArray0[2] = 'z';
      charArray0[3] = '#';
      RandomStringUtils.random(0, charArray0);
      int int1 = Integer.MAX_VALUE;
      int int2 = 1;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(743, Integer.MAX_VALUE, 1, false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils.random(3522, (-747), (-1511), true, true);
      char[] charArray0 = new char[8];
      charArray0[0] = '/';
      charArray0[1] = '*';
      charArray0[2] = 'B';
      charArray0[3] = '6';
      charArray0[4] = '#';
      charArray0[5] = '[';
      charArray0[6] = '%';
      charArray0[7] = '4';
      RandomStringUtils.random(571, charArray0);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56319);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 57343;
      int int1 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      charArray0[2] = 'Z';
      charArray0[3] = 'p';
      charArray0[4] = 'C';
      charArray0[5] = '?';
      charArray0[6] = '1';
      charArray0[7] = 'H';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      mockRandom0.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(57343, 0, 0, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomStringUtils.random(684);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-357));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -357 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RandomStringUtils.randomAscii(852);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(852);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils.random(0, "Q");
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphabetic(0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      charArray0[1] = 'W';
      charArray0[2] = 'l';
      charArray0[3] = 'f';
      charArray0[4] = '}';
      charArray0[5] = '9';
      charArray0[6] = '(';
      // Undeclared exception!
      RandomStringUtils.random(57343, charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = '8';
      charArray0[2] = 'd';
      charArray0[3] = '&';
      charArray0[4] = '5';
      charArray0[5] = '0';
      charArray0[6] = 'U';
      charArray0[7] = 's';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(123, (-376), 3939, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 2482;
      int int1 = (-1786);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'z';
      charArray0[2] = 'H';
      charArray0[3] = 'd';
      charArray0[4] = 'k';
      RandomStringUtils.random(0, 2482, (-1786), false, false, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1786), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1786 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = (-724);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-724), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -724 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-488));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -488 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils.random(2249, 1143, 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = 'h';
      charArray0[2] = ' ';
      charArray0[3] = 'c';
      charArray0[4] = '>';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2249, 2249, 0, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 56192;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(56192);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = '7';
      charArray0[2] = 'D';
      charArray0[3] = '4';
      charArray0[4] = '`';
      charArray0[5] = '_';
      RandomStringUtils.random(3837, charArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 1;
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      charArray0[1] = '\'';
      charArray0[2] = '~';
      charArray0[3] = ':';
      charArray0[4] = 'j';
      charArray0[5] = 'c';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = '|';
      charArray0[2] = '8';
      charArray0[3] = 'i';
      charArray0[4] = 'c';
      charArray0[5] = '=';
      charArray0[6] = '(';
      charArray0[7] = '<';
      charArray0[8] = '/';
      RandomStringUtils.random(0, 0, (-1549), true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAscii(0);
      int int1 = (-288);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-288));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -288 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2005));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2005 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = 'L';
      charArray0[2] = 't';
      charArray0[3] = 'V';
      charArray0[4] = 'b';
      charArray0[5] = 'c';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-839), (-839), (-839), false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -839 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.doubles(0L);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.setSeed(0);
      mockRandom0.doubles();
      mockRandom0.doubles();
      // Undeclared exception!
      RandomStringUtils.random(2425, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = (-435);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-435), (-435), (-435), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -435 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = 1044;
      RandomStringUtils.random(1044, "org.apache.commons.lang3.RandomStringUtils");
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1044, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), "?fR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 56320;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(56320, true, true);
  }
}
