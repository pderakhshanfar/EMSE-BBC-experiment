/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:30:22 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom0.nextBoolean();
      RandomStringUtils.random(6002, (-1457), (-1539), true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '!';
      charArray0[1] = '(';
      charArray0[2] = '3';
      charArray0[3] = '@';
      charArray0[4] = 'X';
      charArray0[5] = 'W';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2706), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2706 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextInt();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextFloat();
      RandomStringUtils.random(18, "G-w;{|z\"RXK4Tg$z@:");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-76), (-76), true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.random(1);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[9];
      charArray0[0] = '9';
      charArray0[1] = 'g';
      charArray0[2] = '2';
      charArray0[3] = '5';
      charArray0[4] = 'k';
      charArray0[5] = '$';
      charArray0[6] = 'a';
      charArray0[7] = '^';
      charArray0[8] = 'C';
      RandomStringUtils.random(1, 0, 1, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 55296;
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = '\'';
      charArray0[2] = 'o';
      charArray0[3] = '/';
      RandomStringUtils.random(0, 55296, 39, false, false, charArray0);
      // Undeclared exception!
      RandomStringUtils.random(55296, charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 4107;
      MockRandom mockRandom0 = new MockRandom();
      String string0 = RandomStringUtils.random(4107);
      RandomStringUtils.random(4107, string0);
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextLong();
      mockRandom1.nextFloat();
      mockRandom1.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(4107, "L(4F*ww_y/3");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(25, false, false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.random(1, (-825), 1, true, false);
      RandomStringUtils.random(492);
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = 'b';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(492, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(22);
      RandomStringUtils.random(22, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      boolean boolean0 = true;
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextLong();
      mockRandom1.nextInt();
      // Undeclared exception!
      RandomStringUtils.random(22, 1, 30, false, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 55296;
      // Undeclared exception!
      RandomStringUtils.randomAscii(55296);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      String string0 = RandomStringUtils.random(4107);
      RandomStringUtils.random(4107, string0);
      MockRandom mockRandom1 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(4107, 4107, 0, true, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RandomStringUtils.randomAscii(4127);
      MockRandom mockRandom0 = new MockRandom(4107);
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = 'Y';
      charArray0[2] = '@';
      charArray0[3] = 'P';
      charArray0[4] = '+';
      charArray0[5] = 'u';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(4107, 4107, 4127, true, true, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 13;
      char[] charArray0 = null;
      RandomStringUtils.random(860, 860, 13, false, false, (char[]) null);
      int int1 = (-668);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-668));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -668 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[5];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      mockRandom0.ints();
      mockRandom0.doubles((double) 0, 2723.33);
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      // Undeclared exception!
      RandomStringUtils.random(56319, 0, 56319, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char char0 = 'V';
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = 'V';
      charArray0[2] = 'd';
      charArray0[3] = 'V';
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-530));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -530 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      int int0 = (-597);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-597), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -597 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[4];
      charArray0[0] = '+';
      charArray0[1] = '+';
      charArray0[2] = '&';
      charArray0[3] = '';
      // Undeclared exception!
      RandomStringUtils.random(1, 1, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(32, (-1), (-1), true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[8];
      charArray0[0] = '&';
      charArray0[1] = '.';
      charArray0[2] = 'y';
      charArray0[3] = 'q';
      charArray0[4] = '?';
      charArray0[5] = 'j';
      charArray0[6] = 'H';
      charArray0[7] = 'a';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), 0, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 701;
      int int1 = 55296;
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(701, 55296, 128, true, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = 'V';
      charArray0[2] = 'd';
      charArray0[3] = 'V';
      charArray0[4] = 'd';
      charArray0[5] = '<';
      MockRandom mockRandom1 = new MockRandom();
      RandomStringUtils.random(4107, 0, 0, false, false, charArray0, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'V';
      charArray0[1] = '[';
      charArray0[2] = 'd';
      charArray0[3] = '<';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(339, "$p-9P=*3");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 0;
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.random(0, 55296, (-1), false, true);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 339;
      boolean boolean0 = false;
      char[] charArray0 = new char[4];
      charArray0[0] = 'V';
      charArray0[1] = '[';
      charArray0[2] = 'd';
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic('V');
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.randomAscii(358);
      boolean boolean0 = true;
      int int0 = (-879);
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '1';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(358, (-879), 1863, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 4107;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(4107, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.random(32);
      // Undeclared exception!
      RandomStringUtils.random(128, 0, (-1259), true, true);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 1;
      int int1 = (-825);
      boolean boolean0 = true;
      RandomStringUtils.random(1, (-825), 1, true, false);
      int int2 = (-2481);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2481), 1, (-2481), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2481 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-2578);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-2578));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2578 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = '{';
      charArray0[2] = 'j';
      charArray0[3] = 'P';
      charArray0[4] = 'X';
      charArray0[5] = 'W';
      charArray0[6] = 'f';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1778), (-1778), 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1778 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, 0, 0, true, false);
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, "-)8+7%?0$sT!ho");
      RandomStringUtils.random(0, 0, 0, true, true);
      int int0 = (-359);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-359));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -359 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, 0, 56191, false, false, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-852));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -852 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[1] = '0';
      charArray0[2] = '-';
      charArray0[3] = '9';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1446, 1446, 1446, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = '_';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56192, 834, 0, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, (-3192), 1, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 994;
      RandomStringUtils.randomAscii(994);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = 'p';
      charArray0[2] = '#';
      charArray0[3] = '`';
      charArray0[4] = 'f';
      charArray0[5] = 'm';
      charArray0[6] = 'X';
      charArray0[7] = 'k';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(994, 994, 994, true, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      int int1 = (-2379);
      int int2 = 766;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2379), 766, 0, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2379 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils.randomAscii(0);
      int int0 = 56192;
      // Undeclared exception!
      RandomStringUtils.random(56192);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = (-680);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-680), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -680 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      int int1 = 156;
      char[] charArray0 = new char[7];
      charArray0[0] = 'f';
      charArray0[1] = ':';
      charArray0[2] = '@';
      charArray0[3] = 'U';
      charArray0[4] = '?';
      charArray0[5] = '=';
      charArray0[6] = ']';
      RandomStringUtils.random(0, 156, 0, true, true, charArray0);
      int int2 = 0;
      // Undeclared exception!
      RandomStringUtils.random(3936, 0, 899, true, true);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = 'C';
      charArray0[2] = '3';
      charArray0[3] = '<';
      charArray0[4] = 'w';
      RandomStringUtils.random(801, charArray0);
      RandomStringUtils.random(0, 801, (-506), true, true);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(801);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.randomAlphabetic(0);
      int int0 = 56319;
      int int1 = 2058;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(56319, 2058, 56319, false, true);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 211;
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'M';
      charArray0[2] = 'h';
      RandomStringUtils.random(211, charArray0);
      RandomStringUtils.randomAscii(211);
      RandomStringUtils.randomAscii(211);
      // Undeclared exception!
      RandomStringUtils.random(211, true, true);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = (-1348);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1348));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1348 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = '\\';
      charArray0[2] = 'e';
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, (-2590), true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomStringUtils.randomAscii(1591);
      int int0 = 32;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(32);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 56319;
      // Undeclared exception!
      RandomStringUtils.random(56319, true, true);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }
}
