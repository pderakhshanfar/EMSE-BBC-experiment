/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:28:55 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      char[] charArray0 = null;
      RandomStringUtils.random(1758, (char[]) null);
      int int0 = (-2853);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(123, 56320, (-2853), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(1758, (char[]) null);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(1758, (-237), 1758, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.randomAscii(1);
      org.evosuite.runtime.Random.setNextRandom((-997));
      RandomStringUtils.randomAlphabetic(24);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils.random(1746, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(1746);
      MockRandom mockRandom1 = new MockRandom(55296);
      // Undeclared exception!
      RandomStringUtils.random(55296, 55296, (-2853), false, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'K';
      charArray0[1] = 't';
      charArray0[2] = 'X';
      charArray0[3] = 'g';
      charArray0[4] = 'p';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(23, 23, 23, true, true, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      int int0 = 1758;
      MockRandom mockRandom0 = new MockRandom(0);
      mockRandom0.nextInt();
      mockRandom0.doubles();
      boolean boolean0 = true;
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = '!';
      charArray0[2] = '6';
      charArray0[3] = 'k';
      charArray0[4] = '7';
      // Undeclared exception!
      RandomStringUtils.random(21, 0, 0, true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils.random(2510);
      org.evosuite.runtime.Random.setNextRandom(2510);
      RandomStringUtils.randomAlphanumeric(2510);
      RandomStringUtils.random(2510);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(1758, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(123);
      // Undeclared exception!
      RandomStringUtils.random(123, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomStringUtils.random(1501, (-520), 6, true, true);
      char[] charArray0 = new char[9];
      charArray0[0] = 'd';
      charArray0[1] = 'R';
      charArray0[2] = 'V';
      charArray0[3] = 'p';
      charArray0[4] = 'e';
      charArray0[5] = 'Q';
      charArray0[6] = '}';
      charArray0[7] = 'W';
      charArray0[8] = '3';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2010, 6, 2010, true, true, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1, 523, 18, true, true);
      char[] charArray0 = new char[7];
      charArray0[0] = 'p';
      charArray0[1] = 'I';
      charArray0[2] = 'l';
      charArray0[3] = '7';
      charArray0[4] = 'v';
      charArray0[5] = 'y';
      charArray0[6] = 'o';
      RandomStringUtils.random(1022, charArray0);
      RandomStringUtils.random(523, 0, 18, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(1123, (-4644), 2822, false, false);
      RandomStringUtils.random(1123);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, (-931), 56320, true, false, charArray0, (Random) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      char[] charArray0 = null;
      RandomStringUtils.random(1758, (char[]) null);
      MockRandom mockRandom0 = new MockRandom((-1245L));
      RandomStringUtils.random(1, 1396, (-373), true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(354, (-293), 0, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(1124, "\u0574");
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.random(2822, 0, 0, false, false);
      // Undeclared exception!
      RandomStringUtils.random(56192);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RandomStringUtils.random(1123, (char[]) null);
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(1758, 0, (-1909), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.random(0, (-1), 0, false, true);
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      RandomStringUtils.random(346, 0, 346, true, true, charArray0, (Random) mockRandom0);
      org.evosuite.runtime.Random.setNextRandom(1);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, 0, (-2235), false, false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(1758, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      RandomStringUtils.random(1758, 16, 55296, true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = (-48);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-48));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -48 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, false, false);
      int int0 = 0;
      int int1 = 749;
      RandomStringUtils.random(749, 0, 1246, false, false);
      RandomStringUtils.randomAlphanumeric(0);
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextBoolean();
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      RandomStringUtils.random(0, 1364, 346, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(727);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      boolean boolean0 = false;
      RandomStringUtils.random(0, true, false);
      int int1 = 1329;
      int int2 = (-291);
      boolean boolean1 = true;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1329, (-291), (-291), true, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.randomAscii(56186);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 2672;
      RandomStringUtils.random(123, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2678, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 56192;
      int int1 = (-90);
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56192, (-471), (-90), false, false);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(0, "XCJq]toK'\"jniF");
      org.evosuite.runtime.Random.setNextRandom((-1398));
      boolean boolean0 = true;
      RandomStringUtils.random(0, 0, 28, true, true);
      int int0 = 55296;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(55296);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      int int0 = 1;
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      charArray0[1] = '7';
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.randomAscii(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-752));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -752 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[1];
      RandomStringUtils.random(0, 0, 0, true, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(484, 14, 1, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'M';
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(1035);
      RandomStringUtils.randomAlphanumeric(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(127);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      int int1 = 1;
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      charArray0[1] = '7';
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.randomAscii(1);
      // Undeclared exception!
      RandomStringUtils.random(46359, 1, 46359, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = '-';
      charArray0[4] = '\'';
      charArray0[5] = '0';
      charArray0[6] = ';';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3641), 1, 1, false, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3641 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      boolean boolean0 = false;
      RandomStringUtils.random(0, false, false);
      int int1 = 0;
      RandomStringUtils.random(0, 0, 0, false, false);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      // Undeclared exception!
      RandomStringUtils.random(346, 0, 346, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'I';
      charArray0[1] = 'Z';
      charArray0[2] = ']';
      charArray0[3] = '8';
      charArray0[4] = '\\';
      charArray0[5] = '6';
      charArray0[6] = 'P';
      charArray0[7] = 'p';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2295), (-3271), 0, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2295 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-277));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -277 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 44;
      boolean boolean0 = false;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextGaussian();
      long long0 = (-1L);
      mockRandom0.longs((-1L), (long) 44);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(44, 44, 44, false, false, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.random(56191, "E|I=(3\u0003+h _O0}[pE\"");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0);
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      charArray0[1] = '7';
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.randomAscii(1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomNumeric(0);
      int int1 = 1;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RandomStringUtils.random(0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, 0, (-3343), false, true);
      RandomStringUtils.random(0, false, false);
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, 0, 317, false, false);
      char[] charArray0 = new char[6];
      charArray0[0] = 's';
      charArray0[1] = '`';
      charArray0[2] = 'Y';
      charArray0[3] = 'B';
      charArray0[4] = 'n';
      charArray0[5] = '/';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(317, (-3343), 317, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(1758, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(123, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-371), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -371 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = 'M';
      charArray0[2] = '&';
      charArray0[3] = 'I';
      charArray0[4] = '+';
      charArray0[5] = 'P';
      charArray0[6] = 'e';
      charArray0[7] = '!';
      MockRandom mockRandom0 = new MockRandom((-1));
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-1), false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 56320;
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      charArray0[2] = 'O';
      charArray0[3] = ']';
      charArray0[4] = 'b';
      // Undeclared exception!
      RandomStringUtils.random(56320, charArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = 547;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(547, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, true, true);
      int int1 = 0;
      int int2 = (-554);
      boolean boolean0 = true;
      RandomStringUtils.random(0, (-554), 0, true, false);
      RandomStringUtils.random(0, "");
      int int3 = 57343;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(57343);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 2459;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2459);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = (-15);
      String string0 = "2!@}";
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-15), "2!@}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -15 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-2020);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-2020));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2020 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = (-2093);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2093));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2093 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = '&';
      charArray0[2] = '&';
      charArray0[3] = '-';
      charArray0[4] = '\'';
      charArray0[5] = '0';
      charArray0[6] = ';';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3611), 1, 1, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3611 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = '$';
      charArray0[2] = '?';
      charArray0[3] = 'L';
      charArray0[4] = '3';
      charArray0[5] = 'M';
      charArray0[6] = 'P';
      RandomStringUtils.random(5969, charArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomStringUtils.random(0, (String) null);
      int int0 = 1189;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1189);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = '>';
      charArray0[2] = 'S';
      charArray0[3] = 'Z';
      charArray0[4] = '%';
      charArray0[5] = '-';
      charArray0[6] = 'y';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      RandomStringUtils.random(0, 0, 0, false, false);
      int int2 = 689;
      // Undeclared exception!
      RandomStringUtils.random(689, false, true);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 'h';
      charArray0[2] = '#';
      charArray0[3] = 'O';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, (-2487), false, false, charArray0, (Random) mockRandom0);
      int int0 = (-424);
      int int1 = (-3312);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1786), (-424), (-3312), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1786 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = (-3139);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3587), 0, (-3139), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3587 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 2625;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2625);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 2648;
      RandomStringUtils.random(2648, (String) null);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(2648);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 57343;
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      RandomStringUtils.random(57343, true, false);
  }
}
