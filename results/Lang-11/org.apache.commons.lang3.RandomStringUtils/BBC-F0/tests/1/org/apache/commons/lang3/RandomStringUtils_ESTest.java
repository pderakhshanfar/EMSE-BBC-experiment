/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:26:53 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.random(1045);
      RandomStringUtils.random(969, "u[x? GLNLYti&1yx&I1");
      int int0 = 56184;
      boolean boolean0 = false;
      int int1 = (-721);
      // Undeclared exception!
      RandomStringUtils.random(56192, 56184, (-721), false, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextInt();
      RandomStringUtils.random(413, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(1197);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'p';
      charArray0[2] = 'B';
      RandomStringUtils.random(432, charArray0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(432, 0, 0, true, true, charArray0);
      org.evosuite.runtime.Random.setNextRandom(432);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      boolean boolean0 = true;
      mockRandom0.nextInt();
      int int0 = 413;
      // Undeclared exception!
      RandomStringUtils.random(413, 0, 0, true, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(4322);
      RandomStringUtils.random(2991, 2446, 127, false, false);
      RandomStringUtils.randomAlphanumeric(4057);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      mockRandom0.nextInt();
      int int0 = 413;
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(413, 0, 0, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 145;
      RandomStringUtils.random(145);
      MockRandom mockRandom0 = new MockRandom(0L);
      char[] charArray0 = null;
      int int1 = (-934);
      int int2 = 56319;
      // Undeclared exception!
      RandomStringUtils.random(56319, 56319, (-481), false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom(5807L);
      RandomStringUtils.random(2124, (-1473), (-934), false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(2446, 49, (-1473), false, true);
      RandomStringUtils.random(49, (char[]) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(11, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom((-2908));
      RandomStringUtils.randomAscii(2895);
      int int0 = 15;
      RandomStringUtils.randomAlphabetic(15);
      org.evosuite.runtime.Random.setNextRandom(15);
      int int1 = 42;
      int int2 = (-962);
      int int3 = (-1098);
      boolean boolean0 = false;
      boolean boolean1 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs();
      byte[] byteArray0 = new byte[0];
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      try { 
        mockRandom0.longs((-113L), 378L, (long) (-2908));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size must be non-negative
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom(1L);
      char[] charArray0 = new char[9];
      charArray0[0] = 'r';
      mockRandom0.nextBoolean();
      charArray0[1] = 'O';
      charArray0[2] = '/';
      charArray0[3] = '%';
      charArray0[4] = '6';
      charArray0[5] = 'l';
      charArray0[6] = 'h';
      charArray0[7] = '1';
      charArray0[8] = 'r';
      RandomStringUtils.random(2124, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(145);
      RandomStringUtils.randomAscii(145);
      MockRandom mockRandom0 = new MockRandom(1338L);
      RandomStringUtils.random(0, 14, 14, false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(14, (String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((-3331), 3642);
      RandomStringUtils.random(3484, 3484, 1, false, false, (char[]) null, (Random) mockRandom0);
      MockRandom mockRandom1 = new MockRandom((-1));
      MockRandom mockRandom2 = new MockRandom((-1));
      RandomStringUtils.random(1, (-1), 3642, false, false, (char[]) null, (Random) mockRandom2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.random(0);
      RandomStringUtils.random(3520);
      int int0 = 56192;
      boolean boolean0 = false;
      RandomStringUtils.random(3677, 0, (-3385), false, false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-973), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -973 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 444;
      RandomStringUtils.randomAscii(444);
      RandomStringUtils.random(444);
      int int1 = 56320;
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = ',';
      charArray0[2] = '@';
      charArray0[3] = 'T';
      charArray0[4] = '';
      charArray0[5] = '\'';
      charArray0[6] = 'Y';
      charArray0[7] = 'J';
      // Undeclared exception!
      RandomStringUtils.random(56320, charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((-3331), 3642);
      mockRandom0.longs();
      MockRandom mockRandom1 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(3484, 47496, (-3331), false, true, (char[]) null, (Random) mockRandom1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 2124;
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2124, 2124, 2124, true, true, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.random(145);
      RandomStringUtils.random(145, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      int int0 = 34;
      RandomStringUtils.random(34);
      int int1 = 56192;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(145, 56192, 34, false, false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.random(0);
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, charArray0);
      RandomStringUtils.random(3642, (-1968), 318, false, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.random(0);
      MockRandom mockRandom0 = new MockRandom(1L);
      char[] charArray0 = new char[9];
      charArray0[0] = 'r';
      charArray0[1] = 'O';
      charArray0[2] = '/';
      charArray0[3] = '%';
      charArray0[4] = '6';
      charArray0[5] = 'l';
      charArray0[6] = 'h';
      charArray0[7] = '1';
      charArray0[8] = 'r';
      RandomStringUtils.random(2124, 0, 0, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.random(0);
      RandomStringUtils.random(0, (char[]) null);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1968), 3327, 0, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1968 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(145);
      RandomStringUtils.randomAscii(145);
      MockRandom mockRandom0 = new MockRandom(98);
      // Undeclared exception!
      RandomStringUtils.random(981, 14, 0, true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[1] = 'k';
      charArray0[2] = 't';
      charArray0[3] = 'R';
      RandomStringUtils.random(2124, 0, 3642, false, false, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(3642, 2124, (-691), false, false);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.randomAscii(6);
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      RandomStringUtils.random(6, charArray0);
      int int0 = 20;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(20, true, false);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 2106;
      boolean boolean0 = false;
      char[] charArray0 = null;
      // Undeclared exception!
      RandomStringUtils.random(2529, 3057, 2529, false, true, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(1, false, false);
      char[] charArray0 = new char[7];
      RandomStringUtils.random(857, "\u0000");
      int int0 = 0;
      RandomStringUtils.random(1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1495));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1495 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 2124;
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      charArray0[1] = 'b';
      RandomStringUtils.random(2124, charArray0);
      RandomStringUtils.randomAscii(2124);
      boolean boolean0 = true;
      RandomStringUtils.random(2124, 3687, (-2454), false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-2454));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2454 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(55296, "org.apache.commons.lang3.RandomStringUtils");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = 6;
      RandomStringUtils.random(6, "org.apache.commons.lang3.RandomStringUtils");
      // Undeclared exception!
      RandomStringUtils.random(56191);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-323);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-323));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -323 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 32;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(32);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RandomStringUtils.random(2124, "org.apache.commons.lang3.RandomStringUtils");
      RandomStringUtils.random(0);
      RandomStringUtils.random(0);
      RandomStringUtils.random(2124, 4317, 2124, true, true);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[2];
      charArray0[0] = '-';
      charArray0[1] = 'u';
      MockRandom mockRandom0 = new MockRandom(0L);
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-220));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -220 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charArray0[1] = 'K';
      charArray0[2] = '[';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1668), (-1668), 0, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1668 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(455, false, false);
      RandomStringUtils.randomAscii(455);
      RandomStringUtils.randomAlphabetic(0);
      int int0 = (-692);
      boolean boolean1 = true;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-692), 455, (-825), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -692 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 3638;
      boolean boolean0 = false;
      boolean boolean1 = false;
      char[] charArray0 = new char[3];
      char char0 = 'h';
      charArray0[0] = 'h';
      char char1 = '_';
      charArray0[1] = '_';
      charArray0[2] = ')';
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3638, 3638, 654, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 2956;
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = 'G';
      charArray0[2] = 'Q';
      charArray0[3] = 'R';
      charArray0[4] = 'P';
      charArray0[5] = '6';
      RandomStringUtils.random(2956, charArray0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray1 = new char[8];
      charArray1[0] = 'G';
      charArray1[1] = 'R';
      charArray1[2] = '@';
      charArray1[3] = '6';
      charArray1[4] = '6';
      charArray1[5] = 'P';
      charArray1[6] = 'R';
      charArray1[7] = '@';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2956, 56192, 56192, true, true, charArray1, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      RandomStringUtils.random(0, "");
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      RandomStringUtils.random(55296, 0, 98, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RandomStringUtils.random(0);
      char[] charArray0 = new char[0];
      RandomStringUtils.random(0, charArray0);
      int int0 = 3642;
      boolean boolean0 = false;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3484, 3642, 3484, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(4802, 4802, 4802, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1771);
      // Undeclared exception!
      RandomStringUtils.randomAscii(56320);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      charArray0[1] = 'N';
      charArray0[2] = 'q';
      charArray0[3] = 'U';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56320, 56320, 0, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(1, false, false);
      char[] charArray0 = new char[7];
      charArray0[0] = '=';
      charArray0[1] = 'z';
      charArray0[2] = 'h';
      charArray0[3] = 'K';
      charArray0[4] = ' ';
      charArray0[5] = 'b';
      charArray0[6] = '>';
      RandomStringUtils.random(1, charArray0);
      RandomStringUtils.randomAscii(1);
      int int0 = (-1);
      // Undeclared exception!
      RandomStringUtils.random(1, 3687, (-1), true, true);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = '2';
      charArray0[2] = '-';
      charArray0[3] = '|';
      charArray0[4] = '\'';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, 56319, 0, true, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils.random(1752);
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(1752);
      int int0 = (-3447);
      int int1 = (-3293);
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = '5';
      charArray0[2] = '&';
      charArray0[3] = 'D';
      charArray0[4] = '!';
      charArray0[5] = 's';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1752, (-3447), (-3293), false, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '@';
      charArray0[1] = '\\';
      charArray0[2] = ';';
      charArray0[3] = '2';
      charArray0[4] = 'J';
      charArray0[5] = '^';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), (-1), (-509), true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = 'k';
      charArray0[2] = 'X';
      RandomStringUtils.random(1068, charArray0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray1 = new char[6];
      charArray1[0] = 'w';
      charArray1[1] = 'k';
      charArray1[2] = 'k';
      charArray1[3] = 'X';
      charArray1[4] = 'l';
      charArray1[5] = 'k';
      RandomStringUtils.random(0, 0, 0, true, false, charArray1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1128), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1128 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(1162);
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'p';
      charArray0[2] = 'B';
      RandomStringUtils.random(432, charArray0);
      RandomStringUtils.randomNumeric(0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 30;
      RandomStringUtils.random(30, "#[Y\"`BXdoIYCK");
      int int1 = 32;
      RandomStringUtils.random(32, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[8];
      charArray0[0] = 'G';
      charArray0[1] = '~';
      charArray0[2] = 'j';
      charArray0[3] = ',';
      charArray0[4] = 'Q';
      charArray0[5] = '\\';
      charArray0[6] = 'g';
      charArray0[7] = '4';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(30, 2533, 0, true, false, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 1543;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1543);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = (-663);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-663), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -663 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1663), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1663 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '|';
      charArray0[1] = 'Q';
      charArray0[2] = 'e';
      RandomStringUtils.random(0, charArray0);
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.random(0);
      int int1 = 538;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(538);
  }
}
