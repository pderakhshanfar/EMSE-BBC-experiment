/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:26:56 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56319, 56319, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[9];
      RandomStringUtils.random(18, 0, 0, false, false, charArray0, (Random) mockRandom0);
      org.evosuite.runtime.Random.setNextRandom(18);
      RandomStringUtils.randomNumeric(26);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomStringUtils.random(449, (-2188), 449, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = 'Q';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(449, 0, 123, false, false, charArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(56192);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(221);
      RandomStringUtils.randomAlphabetic(221);
      RandomStringUtils.randomAlphanumeric(221);
      int int0 = 209;
      int int1 = 0;
      int int2 = 11;
      char[] charArray0 = new char[5];
      charArray0[0] = ':';
      charArray0[1] = 'H';
      charArray0[2] = '#';
      charArray0[3] = 'W';
      charArray0[4] = 'd';
      // Undeclared exception!
      RandomStringUtils.random(209, 0, 11, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.random(10, (-1366), 1132, true, true);
      RandomStringUtils.random(31, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(0L);
      RandomStringUtils.random(2559, (-1366), 1132, true, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      MockRandom mockRandom0 = new MockRandom();
      int int1 = 5;
      boolean boolean0 = true;
      char[] charArray0 = new char[18];
      // Undeclared exception!
      RandomStringUtils.random(5, 0, 0, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.random(449, 449, 0, false, false);
      MockRandom mockRandom0 = new MockRandom(2559);
      // Undeclared exception!
      RandomStringUtils.random(9, 57319, 449, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      RandomStringUtils.randomAscii(1);
      RandomStringUtils.random(1, (-821), 1, false, false);
      RandomStringUtils.random(780, true, false);
      RandomStringUtils.randomAscii(1);
      RandomStringUtils.random(1, (char[]) null);
      RandomStringUtils.random(0, true, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1973));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1973 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils.random(449, 449, 0, false, false);
      RandomStringUtils.random(2559, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(0);
      RandomStringUtils.random(2559, 449, 2559, false, false, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.random(449, (-2188), 449, false, false);
      RandomStringUtils.random(0, false, true);
      RandomStringUtils.randomAscii(0);
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.longs(0L);
      mockRandom0.nextGaussian();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(449, (-571), 37, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = 'M';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(5, 0, (-982), false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(221);
      RandomStringUtils.randomAlphanumeric(30);
      RandomStringUtils.random(30, "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGG");
      RandomStringUtils.randomAlphanumeric(221);
      int int0 = 209;
      int int1 = 0;
      char[] charArray0 = new char[5];
      charArray0[0] = '/';
      charArray0[1] = 'H';
      charArray0[2] = '#';
      charArray0[3] = 'W';
      charArray0[4] = 'd';
      // Undeclared exception!
      RandomStringUtils.random(209, 0, 11, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RandomStringUtils.random(449, 449, 0, false, false);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      RandomStringUtils.random(5, 0, (-982), true, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, true, true);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[8];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      charArray0[5] = '7';
      charArray0[6] = '7';
      charArray0[7] = '7';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, (-1), 751, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(449, (-2188), 449, false, false);
      RandomStringUtils.random(0, false, true);
      RandomStringUtils.randomAscii(0);
      int int0 = 1614;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1614);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 1171;
      RandomStringUtils.randomAscii(1171);
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'G';
      charArray0[2] = ']';
      charArray0[3] = 'E';
      charArray0[4] = '7';
      charArray0[5] = 'G';
      // Undeclared exception!
      RandomStringUtils.random(36229, charArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 46198;
      // Undeclared exception!
      RandomStringUtils.random(46198, "DMaC5c~n3)EmpI?P7p");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 21;
      boolean boolean0 = false;
      boolean boolean1 = true;
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = 'Y';
      charArray0[2] = '7';
      charArray0[3] = '-';
      charArray0[4] = '2';
      charArray0[5] = '3';
      charArray0[6] = 'Q';
      charArray0[7] = '1';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints((long) 21);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(21, 21, 21, true, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = 'b';
      charArray0[2] = 'v';
      RandomStringUtils.random(1245, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(449, 449, 0, false, false);
      MockRandom mockRandom0 = new MockRandom();
      char[] charArray0 = new char[1];
      charArray0[0] = '7';
      RandomStringUtils.random(5, 0, 1, true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils.random(1732, (String) null);
      int int0 = 0;
      int int1 = 1558;
      boolean boolean0 = true;
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = 'u';
      charArray0[2] = 'K';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      // Undeclared exception!
      try { 
        mockRandom0.doubles((long) 1558, (double) 1732, (double) 1558);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 195;
      RandomStringUtils.randomAscii(195);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1714));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1714 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0, "");
      RandomStringUtils.random(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[1] = '3';
      charArray0[2] = 'M';
      charArray0[3] = 'F';
      charArray0[4] = '1';
      charArray0[5] = 'b';
      charArray0[6] = 'W';
      charArray0[7] = '3';
      charArray0[8] = 'C';
      RandomStringUtils.random(0, 0, 0, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 1698;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(1698);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      int int0 = 1909;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1909);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1335), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1335 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = (-4633);
      boolean boolean0 = false;
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = '^';
      charArray0[2] = 'L';
      charArray0[3] = 'E';
      charArray0[4] = 'P';
      charArray0[5] = ',';
      charArray0[6] = 'I';
      charArray0[7] = 'u';
      charArray0[8] = 'w';
      RandomStringUtils.random(0, 2524, (-4633), false, false, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-4633));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -4633 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      boolean boolean0 = false;
      RandomStringUtils.random(449, 449, 0, false, false);
      int int0 = 1;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(1, true, false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1341));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1341 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(0, true, false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.random(0, "");
      int int1 = (-1129);
      boolean boolean0 = false;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      byte[] byteArray0 = new byte[2];
      mockRandom0.longs();
      byteArray0[0] = (byte)14;
      mockRandom0.nextInt();
      mockRandom0.nextBoolean();
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        mockRandom0.longs(0L, (long) (-1129));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = 'g';
      charArray0[2] = 'p';
      charArray0[3] = ' ';
      charArray0[4] = 'k';
      charArray0[5] = 'B';
      charArray0[6] = 'S';
      charArray0[7] = 'R';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(3021, 179, 0, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 399;
      int int1 = (-2363);
      boolean boolean0 = false;
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(399, 399, (-2363), false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 56191;
      // Undeclared exception!
      RandomStringUtils.random(56191);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 2982;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2982, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = (-573);
      int int1 = 0;
      int int2 = 123;
      boolean boolean0 = false;
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      charArray0[1] = '%';
      MockRandom mockRandom0 = new MockRandom(0L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-573), 0, 123, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -573 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      // Undeclared exception!
      RandomStringUtils.random(56192, 0, 0, true, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 3136;
      RandomStringUtils.random(3136);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-256), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -256 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 1681;
      boolean boolean0 = false;
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'M';
      charArray0[2] = '5';
      charArray0[3] = '9';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.longs(0L);
      mockRandom0.nextGaussian();
      mockRandom0.longs();
      // Undeclared exception!
      RandomStringUtils.random(1681, 0, 1681, false, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-712);
      int int1 = (-807);
      boolean boolean0 = true;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-712), (-807), (-712), true, false, (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -712 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = 'a';
      charArray0[1] = 'e';
      charArray0[2] = '6';
      charArray0[3] = 's';
      charArray0[4] = 'j';
      charArray0[5] = 'X';
      charArray0[6] = 'r';
      charArray0[7] = 'P';
      charArray0[8] = 'v';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, charArray0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = 'b';
      charArray0[2] = 'v';
      charArray0[3] = '`';
      charArray0[4] = 'I';
      charArray0[5] = 'k';
      charArray0[6] = 'q';
      charArray0[7] = 'X';
      charArray0[8] = 'Y';
      MockRandom mockRandom0 = new MockRandom((-3388L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1245, 1245, 1245, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-215));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -215 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(3365, 56192, (-1), true, true);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RandomStringUtils.random(2385);
      // Undeclared exception!
      RandomStringUtils.random(610, false, true);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 1793;
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(1793, false, true);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-2637);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-2637));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2637 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = (-3554);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3554), ">:VL~H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3554 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = (-2518);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2518), (char[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2518 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = (-2494);
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = ';';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2494), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2494 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = new char[2];
      charArray0[0] = 'z';
      charArray0[1] = '-';
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.setSeed(2853L);
      mockRandom0.ints();
      mockRandom0.doubles();
      mockRandom0.longs((long) 0);
      mockRandom0.setSeed(4338L);
      mockRandom0.nextGaussian();
      RandomStringUtils.random(0, 0, 0, true, true, charArray0, (Random) mockRandom0);
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-98));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -98 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomStringUtils.random(0, true, true);
      RandomStringUtils.randomAlphabetic(0);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'H';
      charArray0[2] = 'x';
      charArray0[3] = 'g';
      charArray0[4] = 'w';
      charArray0[5] = 'P';
      charArray0[6] = ')';
      charArray0[7] = '.';
      charArray0[8] = ';';
      String string0 = RandomStringUtils.random(0, 0, (-3598), true, true, charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomNumeric(0);
      RandomStringUtils.randomAlphanumeric(0);
      int int1 = 128;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(128);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = (-440);
      int int1 = 0;
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-440), 0, (-440), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -440 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
