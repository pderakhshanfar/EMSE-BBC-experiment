/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 07:35:20 GMT 2020
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = null;
      int int0 = 17;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(17, 1014, 1412, true, false, (char[]) null, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '{';
      charArray0[1] = '6';
      charArray0[2] = 'l';
      charArray0[3] = 's';
      charArray0[4] = 'c';
      charArray0[5] = 'k';
      charArray0[6] = 'P';
      charArray0[7] = '[';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(383, 383, (-130), false, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 383
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(1683);
      char[] charArray0 = new char[0];
      RandomStringUtils.randomAlphabetic(128);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 1683;
      org.evosuite.runtime.Random.setNextRandom(1683);
      char[] charArray0 = new char[0];
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, (-346), (-2887), true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = null;
      RandomStringUtils.random(1846, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      int int0 = 1683;
      mockRandom0.nextGaussian();
      // Undeclared exception!
      RandomStringUtils.random(1683, 2858, 1846, false, true, (char[]) null, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomStringUtils.randomAscii(6);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      RandomStringUtils.random(1, (-280), 6, true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0, (char[]) null);
      RandomStringUtils.random(1, "      ");
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(1683);
      char[] charArray0 = new char[0];
      RandomStringUtils.random(1683, (String) null);
      RandomStringUtils.randomAlphanumeric(335);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomStringUtils.randomAscii(2710);
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom(1);
      int int0 = 0;
      int int1 = 324;
      RandomStringUtils.random(5538, 324, 1565, false, false, (char[]) null, (Random) mockRandom0);
      // Undeclared exception!
      RandomStringUtils.random(2041);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = 'S';
      charArray0[2] = '1';
      charArray0[3] = 'T';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 155, 155, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 950;
      MockRandom mockRandom0 = new MockRandom(950);
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = '!';
      RandomStringUtils.random(1681);
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(128);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = 'S';
      charArray0[2] = '1';
      charArray0[3] = 'T';
      charArray0[4] = 'J';
      RandomStringUtils.random(0, 4129, (-1528), false, true, charArray0);
      org.evosuite.runtime.Random.setNextRandom(1);
      org.evosuite.runtime.Random.setNextRandom(4129);
      // Undeclared exception!
      RandomStringUtils.randomNumeric(18);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 950;
      char[] charArray0 = null;
      RandomStringUtils.random(2858, (char[]) null);
      RandomStringUtils randomStringUtils1 = new RandomStringUtils();
      int int1 = (-346);
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean0 = false;
      boolean boolean1 = true;
      RandomStringUtils.random(950, 950, (-346), true, true, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(0, (char[]) null);
      int int2 = 0;
      int int3 = 11;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-97), (-318), 11, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -97 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      int int1 = 1;
      char[] charArray0 = null;
      RandomStringUtils.random(1, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int2 = 1135;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1135, 1135, 1135, false, false, (char[]) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      MockRandom mockRandom0 = new MockRandom((-679L));
      int int0 = (-1823);
      int int1 = 0;
      RandomStringUtils.random(1, 0, (-1070), false, false, charArray0, (Random) mockRandom0);
      int int2 = 3182;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1969));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1969 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 2710;
      RandomStringUtils.random(1, (char[]) null);
      MockRandom mockRandom0 = new MockRandom(1003L);
      boolean boolean0 = false;
      MockRandom mockRandom1 = new MockRandom(1027L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 1, false, false, (char[]) null, (Random) mockRandom1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomStringUtils.randomAscii(2710);
      boolean boolean0 = false;
      char char0 = '0';
      MockRandom mockRandom0 = new MockRandom();
      MockRandom mockRandom1 = new MockRandom((-1L));
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = 'G';
      charArray0[5] = '0';
      charArray0[6] = '/';
      charArray0[7] = '0';
      charArray0[8] = '0';
      RandomStringUtils.random(1, 1, 43, false, true, charArray0, (Random) mockRandom0);
      RandomStringUtils.random(43, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), 27, (int) '0', false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils.randomAscii(17);
      RandomStringUtils.random(629);
      int int0 = 1;
      boolean boolean0 = false;
      char[] charArray0 = new char[2];
      char char0 = '<';
      charArray0[0] = '<';
      char char1 = '}';
      charArray0[1] = '}';
      // Undeclared exception!
      RandomStringUtils.random(17, 1, 629, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      boolean boolean0 = true;
      RandomStringUtils.random(0, "");
      int int0 = (-2466);
      int int1 = 123;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(123, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomStringUtils.randomAscii(2710);
      RandomStringUtils.random(1, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      boolean boolean0 = false;
      RandomStringUtils.random(0, 2710, (-2139), false, false, (char[]) null, (Random) mockRandom0);
      RandomStringUtils.random(2710, (char[]) null);
      int int0 = 0;
      boolean boolean1 = true;
      RandomStringUtils.random(0, 11, (-2139), true, false);
      int int1 = 354;
      RandomStringUtils.random(354, (-346), 44, true, true);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      char[] charArray0 = null;
      RandomStringUtils.random(1, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 0;
      RandomStringUtils.random(0, (char[]) null);
      RandomStringUtils.random(1956, "\u0000");
      int int1 = 56320;
      boolean boolean0 = false;
      RandomStringUtils.random(3, 3, 56320, false, false);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(3);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 2710;
      RandomStringUtils.randomAscii(2710);
      RandomStringUtils.random(0, "");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = ',';
      boolean boolean0 = true;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomStringUtils.random(2710, 1, (-1), true, true, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(0, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(3276, 3276, 0, false, false, (char[]) null);
      RandomStringUtils.random(0, "K%Lt1Z~");
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(0, "");
      // Undeclared exception!
      RandomStringUtils.randomNumeric(3276);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'k';
      // Undeclared exception!
      RandomStringUtils.random(5, (-1), 37, false, true);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 57343;
      // Undeclared exception!
      RandomStringUtils.random(57343, "hmhoSliR3");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(1793, false, false);
      char[] charArray0 = new char[5];
      charArray0[0] = 'G';
      charArray0[1] = '/';
      charArray0[2] = '0';
      charArray0[3] = 'G';
      charArray0[4] = '\"';
      MockRandom mockRandom0 = new MockRandom(0L);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56319, 56319, 56319, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(3276, 3276, 0, false, false, (char[]) null);
      int int1 = 0;
      RandomStringUtils.random(0, "K%Lt1Z~");
      RandomStringUtils.randomAlphanumeric(0);
      RandomStringUtils.random(0, "");
      int int2 = 0;
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      mockRandom0.doubles();
      mockRandom0.setSeed(1859L);
      mockRandom0.longs((-2653L), (long) 0);
      mockRandom0.setSeed(0);
      RandomStringUtils.random(0, 0, 0, false, false, (char[]) null, (Random) mockRandom0);
      boolean boolean0 = true;
      RandomStringUtils.random(0, false, true);
      // Undeclared exception!
      RandomStringUtils.random(177, true, false);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.randomAscii(2710);
      int int0 = 0;
      RandomStringUtils.random(0, "");
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = ',';
      charArray0[1] = '2';
      charArray0[2] = 'u';
      charArray0[3] = 'G';
      charArray0[4] = 'n';
      charArray0[5] = 'a';
      charArray0[6] = '`';
      charArray0[7] = 'j';
      charArray0[8] = '#';
      RandomStringUtils.random(2710, charArray0);
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1956, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-1209);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-1209));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1209 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 3837;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1398), 3837, 2398, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1398 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = ' ';
      charArray0[2] = ';';
      RandomStringUtils.random(1, charArray0);
      int int0 = 32;
      // Undeclared exception!
      RandomStringUtils.random(32, 1, (-1376), false, true);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RandomStringUtils.random(1844);
      char[] charArray0 = new char[8];
      charArray0[0] = 'J';
      charArray0[1] = '3';
      charArray0[2] = '{';
      charArray0[3] = '8';
      charArray0[4] = 'K';
      charArray0[5] = 'Z';
      charArray0[6] = '(';
      charArray0[7] = '[';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), 1844, 1828, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 1693;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(1693);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAscii(0);
      int int1 = 1;
      char[] charArray0 = null;
      RandomStringUtils.random(1, (char[]) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-346), (-1), (-1), true, true, (char[]) null, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -346 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 2310;
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(2310, false, true);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1051));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1051 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[1] = '1';
      charArray0[2] = '.';
      charArray0[3] = '+';
      charArray0[4] = '\\';
      charArray0[5] = 'z';
      charArray0[6] = 'Z';
      MockRandom mockRandom0 = new MockRandom((-1992L));
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1408, 3659, 1408, false, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3659
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-573), false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -573 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 1343;
      RandomStringUtils.random(1343, "org.apache.commons.lang3.RandomStringUtils");
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = '?';
      RandomStringUtils.random(1343, charArray0);
      int int1 = (-1265);
      boolean boolean0 = false;
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        mockRandom0.doubles((double) (-1265), (double) (-1265));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-439);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-439));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -439 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      charArray0[1] = 'J';
      charArray0[2] = '!';
      charArray0[3] = '<';
      charArray0[4] = 'y';
      charArray0[5] = 'J';
      charArray0[6] = 'A';
      charArray0[7] = '(';
      charArray0[8] = '7';
      // Undeclared exception!
      RandomStringUtils.random(55296, charArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-1425);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1425));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1425 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = '<';
      charArray0[2] = '>';
      charArray0[3] = 'k';
      charArray0[4] = 'q';
      charArray0[5] = 'S';
      charArray0[6] = 'X';
      charArray0[7] = 'g';
      charArray0[8] = 'M';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1806), (-1806), (-2545), false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1806 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(127);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.random(0, false, false);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 57343;
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-2888);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2888));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2888 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
}
