/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 09:51:26 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("EiJp", "EiJp", "<<unknown namespace>>");
      Element element1 = new Element("EiJp", "EiJp", "<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, (Locale) null, "EiJp");
      jDOMNodePointer0.setValue(element0);
      assertEquals(0, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("mt");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("mt", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "http://www.w3.org/XML/1998/namespace");
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CDATA cDATA0 = new CDATA("ocX+a$4");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "s$_^ri9Asv[V70~:_]");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("UNKNOWN()", locale0, (String) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertEquals("UNKNOWN()", object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Locale locale0 = new Locale("", "EsWs@oO1w5Cc50]r;i/", "/text()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, nodeTypeTest0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("iC", "iC", "<<unknown namespace>>");
      Locale locale0 = new Locale("iC");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "iC");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("AKqR&X]Q!s]=L`");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, true, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Element element0 = new Element("iC", "iC", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer", namespace0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("xml", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable:   
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Document document0 = new Document();
      Locale locale0 = new Locale("3fbsJj`b]eaNaTSW%hQ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CDATA cDATA0 = new CDATA("+4EwC?EMnW=");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("+4EwC?EMnW=");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '+4EwC?EMnW='
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      QName qName0 = new QName((String) null, ",LT>PiS}");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(qName0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(locale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CDATA cDATA0 = new CDATA("UNKNOWN()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("BfM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("MF-nYTY3", "MF-nYTY3");
      Document document0 = new Document(element0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("MF-nYTY3", "MF-nYTY3");
      linkedList0.add(processingInstruction0);
      document0.addContent((Collection) linkedList0);
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, ":+");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("Ql3}WVWHp;~<");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      Document document0 = new Document(element0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("i", "i");
      linkedList0.add(processingInstruction0);
      document0.addContent((Collection) linkedList0);
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Element element0 = new Element("h");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "http://www.w3.org/2000/xmlns/", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      QName qName0 = new QName("  ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.JAPAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 0, (Object) nodeNameTest0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.CANADA_FRENCH;
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer1);
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) jXPathContext0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("o", "o");
      Locale locale0 = new Locale("o", "o");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("o");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "o");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, (QName) null, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("UNKNOWN()", locale0, (String) null);
      QName qName0 = new QName("UNKNOWN()");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-3));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"  \" is not legal for JDOM/XML attributes: XML names cannot be null or empty.
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("h]SP]qPrt", "iG");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.setIndex(309);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'h]SP]qPrt:iG'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Locale locale0 = Locale.ITALY;
      CDATA cDATA0 = new CDATA("\"-\"");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "\"-\"");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable:   
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2185);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, "java.util.concurrent.atomic.AtomicLong");
      QName qName0 = new QName("Xd#mM?O5[/4h/i/V");
      Object object0 = new Object();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, object0);
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      QName qName0 = new QName("i", "i");
      Locale locale0 = Locale.ENGLISH;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, "i");
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("/text()");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '/text()'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(47);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      QName qName0 = new QName("  ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "  ");
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Comment comment0 = new Comment("Hy1gE/JH");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, comment0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '  '
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      variablePointer0.setIndex(1128);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Integer integer0 = new Integer((-1018));
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) integer0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("G yc:fTA? z", "J!>{8j+93");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      CDATA cDATA0 = new CDATA("G yc:fTA? z");
      variablePointer0.setIndex((-1018));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'G yc:fTA? z:J!>{8j+93'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Document document0 = new Document(element0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("i", "i");
      linkedList0.add(processingInstruction0);
      document0.addContent((Collection) linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("iC", "iC", "<<unknown namespace>>");
      Locale locale0 = new Locale("iC");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "iC");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('iC')", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      QName qName0 = new QName("Cannot remove root JDOM node");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 2974);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("iC", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest@0000000008");
      HashMap<ProcessingInstruction, Document> hashMap0 = new HashMap<ProcessingInstruction, Document>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Locale locale0 = new Locale("o", "o");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("o");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "o");
      CDATA cDATA0 = new CDATA("iM0");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      Locale locale0 = new Locale("i");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("i:i", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "");
      CDATA cDATA0 = new CDATA("lC`l`H&'Bkk?|CccP$o");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("<<unknown namespace>>", object0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      QName qName0 = new QName("  ", "  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Xo", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HashMap<Attribute, Integer> hashMap0 = new HashMap<Attribute, Integer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("I8-OB.1", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      Locale locale0 = new Locale("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(processingInstruction0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, (Object) null);
      boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "");
      boolean boolean0 = jDOMNodePointer0.equals(nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.JAPANESE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("a", "CW1$Vb_|~OEGCk");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      element0.addContent((Content) processingInstruction0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('a')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.JAPANESE;
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.addContent((Content) cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("a", "CW1$Vb_|~OEGCk");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('a')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      element0.setNamespace(namespace0);
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/xml:i[1]", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      Locale locale0 = new Locale("i");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("mt");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("i", "i", "KF");
      Text text0 = new Text("KF");
      Element element1 = element0.setContent((Content) text0);
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "i");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodePointer0, text0);
      jDOMNodePointer1.remove();
      assertEquals("i:i", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      QName qName1 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "iC");
      jDOMNodePointer0.createAttribute(jXPathContext0, qName1);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName1);
      assertEquals("xml:iC", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Comment comment0 = new Comment("T$!^eXE'W`19{:T+h");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(comment0, "", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      QName qName0 = new QName("IS$1E", (String) null);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      String string0 = JDOMNodePointer.getLocalName(nodeNameTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Attribute attribute0 = new Attribute("J", "J");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Attribute attribute0 = new Attribute("I8-M.k1", "I8-M.k1");
      Namespace namespace0 = Namespace.getNamespace("J", "I8-M.k1");
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("J", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Attribute attribute0 = new Attribute("I8-M.k1", "I8-M.k1");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer", "org.apache.commons.jxpath.AbstractFactory");
      Element element0 = new Element("iC", namespace0);
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix("UNKNOWN()");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("rJUan#Mg|x&f#oew/q", "i");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      QName qName0 = new QName("J");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, variablePointer0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("d1AXOVoYy5R.");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2752));
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) variablePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      QName qName0 = new QName("a=UYh!H", "a=UYh!H");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) qName0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      QName qName0 = new QName("J");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      Element element0 = new Element("J");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.CoreOperationCompare", "J");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      Element element0 = new Element("J");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      QName qName0 = new QName("iw", "iw");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Element element0 = new Element("iw");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Document document0 = new Document(element0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("'eI`U%qNahQ2F[/\"");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) "  ", (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Element element0 = new Element("i");
      Document document0 = new Document(element0);
      LinkedList<ProcessingInstruction> linkedList0 = new LinkedList<ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("i", "i");
      linkedList0.add(processingInstruction0);
      document0.addContent((Collection) linkedList0);
      Locale locale0 = new Locale("i");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      QName qName0 = new QName("  ", "  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Xo", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue("");
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      Comment comment0 = new Comment("java.util.Locale@0000000012");
      jDOMNodePointer0.setValue(comment0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      QName qName0 = new QName("  ", "  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Xo", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      CDATA cDATA0 = new CDATA("8");
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix: ");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "s{");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CDATA cDATA0 = new CDATA("]s8PER{C-9O(pC");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "]s8PER{C-9O(pC");
      jDOMNodePointer0.setValue(cDATA0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      QName qName0 = new QName("  ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "  ");
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Comment comment0 = new Comment("Hy1gE/JH");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Hy1gE/JH", object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      QName qName0 = new QName("yc9H|8Qr~)+mnN");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("preserve", "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(processingInstruction0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      QName qName0 = new QName("  ", "  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Xo", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue("Xo");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Xo", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("i", "i");
      Document document0 = new Document(element0);
      Locale locale0 = new Locale("3fbsJj`b]eaNaTSW%hQ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = new Locale("JXPath internal error: compareChildNodes called for ", "", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "JXPath internal error: compareChildNodes called for ");
      Object object1 = jDOMNodePointer0.getValue();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      HashMap<Attribute, Integer> hashMap0 = new HashMap<Attribute, Integer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("I8-OB.1", hashMap0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      QName qName0 = jDOMNodePointer1.getName();
      assertEquals("I8-OB.1", qName0.getName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Text text0 = new Text("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      assertNull(qName0.toString());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "Was expecting one of:");
      Document document0 = new Document(element0);
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("a", "CW1$Vb_|~OEGCk");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Object object0 = new Object();
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      jDOMNodePointer0.setValue(object0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      QName qName0 = new QName("  ", "  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("Xo", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("i", "i", "i");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("i");
      Text text0 = new Text("c2du\"Fr(,*-AE");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) text0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("org.apache.commons.beanutils.converters.AbstractArrayConverter");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) variables0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      QName qName0 = new QName("i", "i");
      Locale locale0 = Locale.ENGLISH;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, "i");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for i
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Attribute attribute0 = new Attribute("E", "E");
      QName qName0 = new QName("E");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "lang");
      Text text0 = new Text((String) null);
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, text0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(variablePointer0, attribute0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Attribute attribute0 = new Attribute("J", "J");
      QName qName0 = new QName("J", "+CHc87UuWog3");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0, "@(#) $RCSfile: DocType.java,v $ $Revision: 1.31 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("OBk<1K|sFadHS c&JK");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("IXJ!N([EJ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Element element0 = new Element("iC", "iC", "<<unknown namespace>>");
      Locale locale0 = new Locale("iC");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "iC");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("iC:iC", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      QName qName0 = new QName("  ");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "  ");
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Comment comment0 = new Comment("Hy1gE/JH");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, comment0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, (QName) null, 3203, (Object) "  ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CDATA cDATA0 = new CDATA("ocX+a$4");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "s$_^ri9Asv[V70~:_]");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.CANADA_FRENCH;
      Text text0 = new Text("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/text()[1]/org.apache.commons.jxpath.ri.model.dom.DOMNodePointer[1]", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      QName qName0 = new QName("  ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element0 = new Element("iC", namespace0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, element0);
      QName qName1 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName1);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName1);
      assertEquals("iC", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = new QName("/text()");
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Text text0 = new Text("dQv7");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      QName qName0 = new QName("//92nhuH6bi");
      Locale locale0 = Locale.CANADA_FRENCH;
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "//92nhuH6bi", locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, (Object) null);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      // Undeclared exception!
      try { 
        jXPathContext0.getRelativeContext(jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create a relative context for a non-existent node: 
         //
         verifyException("org.apache.commons.jxpath.ri.JXPathContextReferenceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("\"substring\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", "Was expecting one of:");
      Document document0 = new Document(element0);
      Locale locale0 = Locale.CANADA_FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("/");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      QName qName0 = new QName("");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
