/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 01:14:09 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("Taiwan");
      Element element1 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, (Locale) null, "Taiwan");
      jDOMNodePointer0.setValue(element0);
      assertFalse(element0.equals((Object)element1));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Comment comment0 = new Comment("false");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "false");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("<<unknown namespace>>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Element element0 = new Element("Taiwan", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertTrue(namespaceResolver1.isSealed());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Cannot create an object for path ", "^pA$YJl-EFS!Jh=*S0");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Comment comment0 = new Comment("");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Comment comment1 = (Comment)jDOMNodePointer0.getImmediateNode();
      assertEquals("", comment1.getText());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertEquals("l", object0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute((Object) null, "http://www.w3.org/2000/xmlns/", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      QName qName0 = new QName("Cj", "org.jdom.CDATA@0000000008");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName1 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "Taiwan");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      QName qName0 = new QName("a");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: a
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("Italy");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Italy");
      QName qName0 = jDOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Italy'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      QName qName0 = new QName("lang");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.QName cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = new Document((Element) null, (DocType) null, "xml");
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "SIz-+vx88");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M", "M");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Element element0 = new Element("M", (String) null);
      DocType docType0 = new DocType("nN");
      Document document0 = new Document(element0, docType0, "[ +A");
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "Tv0]", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "Taiwan");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName0 = jDOMNodePointer1.getName();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2403);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, (-1145837689), (Object) nodeTypeTest0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M", "M");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "M");
      QName qName0 = new QName("M", "The comment \"");
      Element element0 = new Element("M", (String) null);
      DocType docType0 = new DocType("nN");
      Document document0 = new Document(element0, docType0, "[ +A");
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 58, (Object) jDOMNodePointer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "Taiwan");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);
      Locale locale0 = Locale.CANADA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "U<Ad@ths+yJ0D64J]\"r");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Cannot create an object for path ", "^pA$YJl-EFS!Jh=*S0");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) basicVariables0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      variablePointer0.setIndex(47);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 519);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Cannot create an object for path :^pA$YJl-EFS!Jh=*S0'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M", "M");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "M");
      QName qName0 = new QName("M", "The comment \"");
      Element element0 = new Element("M", (String) null);
      DocType docType0 = new DocType("nN");
      Document document0 = new Document(element0, docType0, "[ +A");
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 1501);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"<<unknown namespace>>\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \"<\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "Taiwan");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Cannot create an object for path ", "^pA$YJl-EFS!Jh=*S0");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) basicVariables0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, (Object) null);
      variablePointer0.setIndex(47);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Cannot create an object for path :^pA$YJl-EFS!Jh=*S0'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      QName qName0 = new QName("lang");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: lang
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("sk");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "sk");
      variablePointer0.createPath(jXPathContext0, (Object) basicVariables0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(jXPathContext0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(basicVariables0, locale0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CDATA cDATA0 = new CDATA("preserve");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("v,uw(");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionTest0);
      Variables variables0 = jXPathContext0.getVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, nodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      QName qName0 = new QName("9eXn", "The DOCTYPE ");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "The DOCTYPE ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 9eXn:The DOCTYPE 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Comment comment0 = new Comment("false");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "false");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "false");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      Variables variables0 = jXPathContext0.getVariables();
      VariablePointer variablePointer0 = new VariablePointer(variables0, (QName) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = new Document((List) null);
      Locale locale0 = Locale.forLanguageTag("Factory could not create a child node for path: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "Factory could not create a child node for path: ");
      QName qName0 = new QName("<<unknown namespace>>", "*e*!\"/[#(xIj4K");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, (Object) null, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator((NodeTest) null, true, nodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "0&UC");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, basicVariables0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1683));
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ':0&UC'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "EfX?a");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "<<unknown namespace>>");
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("V.", hashMap0);
      Locale locale0 = new Locale("V.", "v2Y`B{YLC2.P=$mN", "V.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('V.')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "EfX?a");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('EfX?a')", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix: ");
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, (-2094));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Element element0 = new Element("false");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("Taiwan", "Taiwan");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      QName qName0 = new QName("lang", "preserve");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-803));
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "Cj");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName((String) null, "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.common.jxpath.ri.model.jdom.JDOMNodePointer");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "Taiwan", (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("u``|P\"");
      boolean boolean0 = jDOMNodePointer0.equals(processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "Unkn/wn namespace refix:");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("{-L&?Rl{6N%07q_;3}");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M", "M");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "M");
      QName qName0 = new QName("M", "The comment \"");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 58, (Object) jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /processing-instruction('M')[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("M", "M");
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.BasicNodeSet");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      QName qName0 = new QName("The XML construct ");
      Object object0 = new Object();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, object0, locale0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, locale0, "org.apache.commons.jxpath.PackageFunctions");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName0 = new QName("Taiwan");
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertTrue(nodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("Taiwan:Taiwan", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("Taiwan", "Taiwan", "i('");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("Taiwan:Taiwan", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      QName qName0 = new QName("lM~tVC(2=f#\"", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: lM~tVC(2=f#\"
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Comment comment0 = new Comment("");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Attribute attribute0 = new Attribute("M", "M");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("M", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CDATA cDATA0 = new CDATA("false");
      String string0 = JDOMNodePointer.getLocalName(cDATA0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("l", "<<unknown namespace>>", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Attribute attribute0 = new Attribute("Taiwan", "Taiwan");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("Taiwan", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix("$>Yf;Y=Dp6]|");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("Taiwan:Taiwan", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("r");
      Locale locale0 = new Locale("r", "r");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("W", "W");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("Italy", "Italy");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Italy");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA("<<unknown namespace>>");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Element element0 = new Element("M", "M", "M");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Attribute attribute0 = new Attribute("M", "G9^x=Wu^l");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) attribute0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("M", "M", "M");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Attribute attribute0 = new Attribute("M", "M");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) attribute0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("Italy", "Italy", "Italy");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Italy");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("!W?9ZHp~#l");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Element element0 = new Element("Germany");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Germany");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("Germany", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      assertEquals("Taiwan", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("Taiwan", "Taiwan", "i('");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "i('");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("Taiwan:Taiwan", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("a");
      QName qName0 = new QName("a", "a");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "a");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      QName qName0 = new QName("lang");
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      Document document0 = new Document();
      Document document1 = document0.setContent((Content) element0);
      DocType docType0 = new DocType("Taiwan", "Taiwan", "T");
      document1.setDocType(docType0);
      jDOMNodePointer0.setValue(document1);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      jDOMNodePointer0.setValue("");
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("Taiwan", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      jDOMNodePointer0.setValue((Object) null);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.axes.PredicateContext");
      Comment comment0 = new Comment("id('");
      jDOMNodePointer0.setValue(comment0);
      assertEquals("id('", comment0.getText());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Element element0 = new Element("M", "M", "M");
      Locale locale0 = new Locale("M");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("M", "zP[J");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("zP[J", processingInstruction0.getValue());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Qd<yB-$`aNWN$");
      CDATA cDATA0 = new CDATA("H1l!:dyZ5Bc?");
      jDOMNodePointer0.setValue(cDATA0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      jDOMNodePointer0.setValue(locale0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      Text text0 = new Text("l");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "Taiwan");
      Object object1 = jDOMNodePointer0.getValue();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      HashMap<String, ProcessingInstruction> hashMap0 = new HashMap<String, ProcessingInstruction>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Taiwan", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "Taiwan");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Comment comment0 = new Comment("false");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "false");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("false", object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Comment comment0 = new Comment("org.apache.commons.jxpath.ri.compiler.CoreOperationCompare");
      Element element0 = new Element("org.apache.commons.jxpath.ri.compiler.CoreOperationCompare", "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare", "+~D$c'bk6\"8K2");
      Element element1 = element0.setContent((Content) comment0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare");
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      Document document0 = new Document();
      Document document1 = document0.setContent((Content) element0);
      jDOMNodePointer0.setValue(document1);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      jDOMNodePointer0.setValue("Taiwan");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Taiwan", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix: ");
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "Unknown namespace prefix: ");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("Unknown namespace prefix:", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.forLanguageTag("Vbm:~\"n>,b4");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "UNKNOWN()");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("java.util.concurrent.atomic.AtomicBoolean", "j+~/B+*0K;\"~");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, processingInstruction0);
      QName qName0 = jDOMNodePointer1.getName();
      assertEquals("java.util.concurrent.atomic.AtomicBoolean", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("Italy", "Italy", "Italy");
      DocType docType0 = new DocType("round", "8m");
      Document document0 = new Document(element0, docType0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      LinkedList<NodeTypeTest> linkedList0 = new LinkedList<NodeTypeTest>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "b/-D9Jz/~9)");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Element element1 = element0.setText("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "Taiwan");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "Taiwan", "Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("{-L&?Rl{6N%07q_;3}");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("France", "France", "France");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "France");
      QName qName0 = jDOMNodePointer0.getName();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      element0.addContent("http://www.w3.org/2000/xmlns/");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) jDOMNodePointer0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(0, int0);
      assertEquals("France:France", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("sk");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) "sk");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(jXPathContext0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, variablePointer0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl@5
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("Taiwan", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Taiwan");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals("Taiwan", qName0.toString());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("G", "G", "G");
      Locale locale0 = Locale.TAIWAN;
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
      Variables variables0 = jXPathContext0.getVariables();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("G", locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(variables0, qName0);
      Attribute attribute0 = new Attribute("y", "')");
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) attribute0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Element element0 = new Element("Taiwan");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "Taiwan");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = NodePointer.newChildNodePointer(jDOMNodePointer0, qName0, jDOMNodePointer0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
      assertEquals("Taiwan", qName0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Element element0 = new Element("org.apache.commons.jxpath.ri.compiler.CoreOperationCompare", "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare", "+~D$c'bk6\"8K2");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare");
      String string0 = jDOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.container.ContainerPointer");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("org.apache.common.jxpath.ri.model.jdom.JDOMNodePointer", "", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("Qd/\"9H[)`l|;=y~Vi");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Unknown namespace prefix: ");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "l");
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("l", locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("K}pN< e)$j.");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("M", "M", "M");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/M:M[1]", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, "Unknown namespace prefix:");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2147483645), (Object) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("France");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/France[1]", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      QName qName0 = new QName("lang");
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "Unknown namespace prefix: ");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("u``|P\"");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, false, jDOMNodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("{-L&?Rl{6N%07q_;3}");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("$>Yf;Y=Dp6]|");
      assertTrue(nodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("V.", hashMap0);
      Locale locale0 = new Locale("V.", "v2Y`B{YLC2.P=$mN", "V.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
