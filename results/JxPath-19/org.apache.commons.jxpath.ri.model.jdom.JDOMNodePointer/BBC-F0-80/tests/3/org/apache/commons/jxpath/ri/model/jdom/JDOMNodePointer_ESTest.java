/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 00:12:35 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("Q", "Q", "[");
      QName qName0 = new QName("Q", "[");
      CDATA cDATA0 = new CDATA("Q");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-829));
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
      Locale locale0 = jXPathContext0.getLocale();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.createChild(jXPathContext0, qName0, 2514);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]/Q:Q[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.comTons.jxpath.ri.pIrer.XPatharser", "org.apache.comTons.jxpath.ri.pIrer.XPatharser", "u$D^s&Du0E");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "");
      QName qName0 = jDOMNodePointer0.getName();
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.comTons.jxpath.ri.pIrer.XPatharser:org.apache.comTons.jxpath.ri.pIrer.XPatharser", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      Element element1 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "#K8>");
      jDOMNodePointer0.setValue(element0);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      QName qName0 = new QName("u`B-nvj46u{,R", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("v");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "French (France)");
      boolean boolean0 = jDOMNodePointer0.isLanguage("<<unknown namespace>>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = new Locale("RLI3;.AVH");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "2=R?L|~`eH");
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.seal();
      NamespaceResolver namespaceResolver1 = jDOMNodePointer0.getNamespaceResolver();
      assertTrue(namespaceResolver1.isSealed());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Element element0 = new Element("R", "R");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "N");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = new Locale("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = JDOMNodePointer.findEnclosingAttribute((Object) null, "L#IUt&E*", (Namespace) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = new Locale(" to type ", "*[Hu2_lK");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("3*^I@", locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      variablePointer0.setValue(namespaceResolver0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      QName qName0 = new QName("u`B-nvj46u{,R", "v");
      Locale locale0 = new Locale("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.container.ContainerPointer", "y!'4:\"iV");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      HashMap<NodeNameTest, NodeTypeTest> hashMap0 = new HashMap<NodeNameTest, NodeTypeTest>();
      HashMap<Object, NodeTypeTest> hashMap1 = new HashMap<Object, NodeTypeTest>(hashMap0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.parser.XPathParser", hashMap1);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      QName qName0 = new QName("H");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: H
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      Document document0 = new Document();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0);
      CDATA cDATA0 = new CDATA("");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(cDATA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.compiler.NodeNameTest cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("orgapache.cqmmons.jxpath.ri.parser.XPathParser", "orgapache.cqmmons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Document document0 = new Document(element0);
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Z", "Z");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Document document0 = new Document();
      document0.setContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("Z");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Z", "Z");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Document document0 = new Document();
      document0.setContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "''}", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Element element0 = new Element("xml", "xml");
      QName qName0 = new QName("gxGSiacUDF:uEuo1rd", "xml");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xml");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("gxGSiacUDF:uEuo1rd", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeNameTest0);
      Object object0 = new Object();
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, object0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 4688, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Element element0 = new Element("org.pache.comTons.jpath.i.pIrer.XPatarser", "org.pache.comTons.jpath.i.pIrer.XPatarser");
      Comment comment0 = new Comment("org.pache.comTons.jpath.i.pIrer.XPatarser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "org.pache.comTons.jpath.i.pIrer.XPatarser");
      QName qName0 = new QName("org.pache.comTons.jpath.i.pIrer.XPatarser");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      Object object0 = new Object();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      // Undeclared exception!
      jDOMNodePointer1.createChild(jXPathContext0, qName0, (-2833));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      QName qName0 = new QName("\"id)#o&x#-' (\"ID)#O&X#-',CfuI}vP<`@!`R[g@goT)", "\"id)#o&x#-' (\"ID)#O&X#-',CfuI}vP<`@!`R[g@goT)");
      NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, "\"id)#o&x#-' (\"ID)#O&X#-',CfuI}vP<`@!`R[g@goT)");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Z", "Z");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      CDATA cDATA0 = new CDATA("Z");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      Document document0 = new Document();
      document0.setContent((Content) processingInstruction0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, 58);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      CDATA cDATA0 = new CDATA("pKK2g-)M$N|Nh");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"null\" is not legal for JDOM/XML attributes: XML names cannot be null or empty.
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1102));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("U", "U");
      Comment comment0 = new Comment("U");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "U");
      QName qName0 = new QName("U");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, locale0, "oa<$X!ZR4");
      // Undeclared exception!
      jDOMNodePointer2.compareChildNodePointers(nodePointer0, jDOMNodePointer1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      QName qName0 = new QName("QXUG", (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Element element0 = new Element("jn", "jn");
      Locale locale0 = new Locale("jn", "jn", "jn");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      document0.removeContent((Content) element0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("{0k!s5o\"gyfxOlc67");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("{0k!s5o\"gyfxOlc67");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, processingInstructionTest0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, jDOMNodePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '{0k!s5o\"gyfxOlc67'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      QName qName0 = new QName("u`B-nvj46u{,R", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("v");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(8016);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: u`B-nvj46u{,R:v
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, nodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName(" encoding=\"", "S%bi\"");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "e");
      variablePointer0.setIndex((-2487));
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ' encoding=\":S%bi\"'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("orgapache.cqmmons.jxpath.ri.parser.XPathParser", "orgapache.cqmmons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", "org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
      Document document0 = new Document(element0);
      document0.addContent((Content) processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jdom.Document cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('org.apache.commons.jxpath.ri.parser.XPathParser')/org.apache.commons.jxpath.ri.parser.XPathParser[1]", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('org.apache.commons.jxpath.ri.parser.XPathParser')", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "tzM]hJmGeTBC", (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Comment comment0 = new Comment("org.pache.comTons.jpath.i.pIrer.XPatarser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "org.pache.comTons.jpath.i.pIrer.XPatarser");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("R", "R");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "*");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CDATA cDATA0 = new CDATA("7_*7(pnU,7nf^KIMa.");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CDATA cDATA0 = new CDATA("7_*7(pnU,7nf^KIMa.");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("7_*7(pnU,7nf^KIMa.", object0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(47);
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "tzM]hJmGeTBC");
      QName qName0 = jDOMNodePointer0.getName();
      boolean boolean0 = jDOMNodePointer0.equals(qName0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("DUy-vY*Yh]y", locale0, "DUy-vY*Yh]y");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("DUy-vY*Yh]y", locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("H", "H");
      Locale locale0 = Locale.GERMANY;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("H", "H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      element0.setContent((Content) processingInstruction0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('H')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("Q");
      QName qName0 = new QName("gxGSiacUDF:uEuo1rd", "Q");
      Locale locale0 = Locale.GERMANY;
      CDATA cDATA0 = new CDATA("Q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.setContent((Content) cDATA0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: /text()[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.parser.XPathParser", "Factory could not create a child node for path: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('org.apache.commons.jxpath.ri.parser.XPathParser')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      QName qName0 = new QName("u`B-nvj46u{,R", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("v");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("$u`B-nvj46u{,R:v/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("org.pacheycomTon.jpath.i.pIre.Paarser", "org.pacheycomTon.jpath.i.pIre.Paarser", "org.pacheycomTon.jpath.i.pIre.Paarser");
      Comment comment0 = new Comment("%c5;");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      assertEquals("org.pacheycomTon.jpath.i.pIre.Paarser", jDOMNodePointer1.getNamespaceURI());
      
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("/org.pacheycomTon.jpath.i.pIre.Paarser:org.pacheycomTon.jpath.i.pIre.Paarser[1]", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("Q");
      Locale locale0 = Locale.GERMANY;
      CDATA cDATA0 = new CDATA("Q");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      element0.setContent((Content) cDATA0);
      jDOMNodePointer0.remove();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser:org.apache.commons.jxpath.ri.parser.XPathParser", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      CDATA cDATA0 = new CDATA((String) null);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) cDATA0);
      QName qName0 = new QName("java.util.Locale@0000000004", (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: java.util.Locale@0000000004
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("g", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0, "g");
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstruction0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('g')/@g, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      QName qName0 = new QName("", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, variablePointer0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodeTypeTest0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory is not set on the JXPathContext - cannot create path: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Comment comment0 = new Comment("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Attribute attribute0 = new Attribute("ISO-8859-1", "http://www.w3.org/2000/xmlns/");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("ISO-8859-1", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("f", "http://www.w3.org/2000/xmlns/", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("f", "http://www.w3.org/2000/xmlns/", namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("org.pache.comTons.jxpath.ri.pIrer.XPatarser", "org.pache.comTons.jxpath.ri.pIrer.XPatarser", "org.pache.comTons.jxpath.ri.pIrer.XPatarser");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertEquals("org.pache.comTons.jxpath.ri.pIrer.XPatarser", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix("10uQ[m:c5|");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      CDATA cDATA0 = new CDATA((String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "10uQ[m:c5|");
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, (String) null);
      LinkedList<JDOMNodePointer> linkedList0 = new LinkedList<JDOMNodePointer>();
      Document document0 = new Document(linkedList0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("orgapache.cqmmons.jxpath.ri.parser.XPathParser", "orgapache.cqmmons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "French (Franc>)");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      QName qName0 = new QName("76vooWnnq", "org.apache.commons.jxpath.ri.parser.XPathParser");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "French (France)");
      QName qName0 = new QName("org.apache.commons.jxpath.ri.parser.XPathParser", "French (France)");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("R", "R");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      QName qName0 = new QName("<<unknown namespace>>", "org.apache.commons.jxpath.ri.parser.XPathParser");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      Comment comment0 = new Comment("y!'4:\"iV");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) comment0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Element element0 = new Element("P", "P");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("D");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "F&:Jr0");
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      jDOMNodePointer0.setValue(locale0);
      assertEquals("CHN", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      jDOMNodePointer0.setValue((Object) null);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser", "org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.parser.XPathParser", "lang");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("lang", processingInstruction0.getValue());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      CDATA cDATA0 = new CDATA("org.apache.commons.jxpath.ri.model.VariablePointerFactory");
      jDOMNodePointer0.setValue(cDATA0);
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      QName qName0 = new QName("u`B-nvj46u{,R", "v");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      CDATA cDATA0 = new CDATA("v");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
      jDOMNodePointer0.setValue(jXPathContext0);
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CDATA cDATA0 = new CDATA("j~^x8dP.b@0T5ngz0");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CDATA cDATA0 = new CDATA("7_*7(pnU,7nf^KIMa.");
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Comment comment0 = new Comment("POINTER: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("POINTER:", object0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      Element element1 = element0.setText("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "processing-instruction('");
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(comment0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      String string0 = JDOMNodePointer.getLocalName(nodeNameTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      QName qName0 = jDOMNodePointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
      assertEquals("org.apache.commons.jxpath.ri.parser.XPathParser", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Element element0 = new Element("o");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "o");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document();
      Locale locale0 = Locale.forLanguageTag("h}M");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "h}M");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      Element element1 = element0.setText("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("org.pache.comTons.jpath.i.pIrer.XPatarser", "org.pache.comTons.jpath.i.pIrer.XPatarser", "org.pache.comTons.jpath.i.pIrer.XPatarser");
      element0.setText("org.pache.comTons.jpath.i.pIrer.XPatarser");
      Comment comment0 = new Comment("%c5&Uh");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "%c5&Uh");
      QName qName0 = new QName("8{v");
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Attribute attribute0 = new Attribute("o", "i(skL67}1>!p");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0, "o");
      QName qName0 = new QName("ig!R[hff");
      Object object0 = new Object();
      NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, object0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("jn", "jn");
      Locale locale0 = new Locale("jn", "jn", "jn");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for [Document:  No DOCTYPE declaration, Root is [Element: <jn [Namespace: jn]/>]]
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Z", locale0);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Attribute attribute0 = new Attribute("space", "http://www.w3.org/2000/xmlns/", namespace0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, attribute0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "#K8>");
      String string0 = jDOMNodePointer0.getNamespaceURI("[");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      LinkedList<NodeTypeTest> linkedList0 = new LinkedList<NodeTypeTest>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("c]5B4eHHxt");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Element element0 = new Element("R", "R");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("R", jDOMNodePointer0.getNamespaceURI());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Element element0 = new Element("org.apache.commons.jxpath.ri.parser.XPathParser");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "org.apache.commons.jxpath.ri.parser.XPathParser");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator((QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(nodeTypeTest0, object0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<Text> linkedList0 = new LinkedList<Text>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.CHINESE;
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATA cDATA0 = new CDATA("MoU-qz/!(U>^0~J?");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: ''
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = new Locale("@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $", "", "@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertSame(cDATA0, object0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HashMap<ProcessingInstructionTest, Attribute> hashMap0 = new HashMap<ProcessingInstructionTest, Attribute>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("D9", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, processingInstruction0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("y!'4:\"iV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("' for path: ");
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Element element0 = new Element("P", "P");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
