/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:39:18 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      Element element1 = new Element("s.", "s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element1);
      jDOMNodePointer0.setValue(element0);
      assertEquals("s.", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "rpBZZ7z&&9n8IKY");
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("s.", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, "/$|Rt]");
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer((NodePointer) null, qName0, (Object) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "vMEaVj+ks{.aG");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertSame(cDATA0, object0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = new Locale("", "", "");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertSame(object0, cDATA0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Element element0 = new Element("s.", "Undefined function: ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("k%#@pE[U(L");
      NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(processingInstructionTest0, true, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("indent = '", locale0, "indent = '");
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("id('indent = &apos;')", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      Element element0 = new Element("y", (String) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Element element0 = new Element("s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null, "s");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(processingInstructionTest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      QName qName0 = new QName("uPS,", "uPS,");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "node()");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "s", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("", "Evymj6");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"Evymj6\" is not legal for JDOM/XML attributes: XML names cannot contain the character \"\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "H");
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: s:s
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("+~..bIAQ$}$':!N: p");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) null, locale0);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer2.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("$~#7-@T e", "");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '$~#7-@T e:'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = new QName("s");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer((String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, nodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%7qS^");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0.WHOLE_COLLECTION, locale0);
      QName qName0 = jDOMNodePointer1.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Element element0 = new Element("b", "b");
      Locale locale0 = Locale.PRC;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("b", locale0, "b");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Comment comment0 = new Comment("rE5h|P.UV@");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("+~..bIAQ$}$':!N: p");
      Locale locale0 = Locale.ITALIAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("s.", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("s.");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = new QName("s");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "H");
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "nod|(Q");
      Element element1 = element0.setNamespace((Namespace) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element1, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, "idH'");
      CDATA cDATA0 = new CDATA((String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%7qS^");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("%7qS^", object0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("b");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0, "rpBZZ7z&&9n8IKY");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Element element0 = new Element("s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "[Comment: <!--http://www.w3.org/200/xmlns/-->]");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, (NodePointer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = new QName("-'jchjHiE2qfh:4f~=", "1Pn83ACbH>7A/$V)");
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      QName qName0 = new QName("uPS,", "uPS,");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "node()");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("lang", locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CDATA cDATA0 = new CDATA("idH'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CDATA cDATA0 = new CDATA("idH'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      Object object0 = jDOMNodePointer0.clone();
      boolean boolean0 = object0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Element element0 = new Element("s.");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("s.", "http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.CHINESE;
      element0.setContent((Content) processingInstruction0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      jDOMNodePointer0.printPointerChain();
      assertTrue(jDOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Element element0 = new Element("cs", "cs", "cs");
      Element element1 = new Element("cs");
      element1.setText("cs");
      element1.addContent((Content) element0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1451147983));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, "cs");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertTrue(jDOMNodePointer1.isNode());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("cs");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element1 = new Element("cs", namespace0);
      element1.addContent((Content) element0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1451147983));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, "cs");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertFalse(jDOMNodePointer1.isAttribute());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("s.", "http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      jDOMNodePointer0.printPointerChain();
      assertTrue(jDOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertEquals(1, jDOMNodePointer1.getLength());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Element element0 = new Element("b");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("s", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = new QName("yes", "yes");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: yes
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      QName qName0 = new QName("]*YFAq");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@]*YFAq, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Element element0 = new Element("cs");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Element element1 = new Element("cs", namespace0);
      element1.addContent((Content) element0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1451147983));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, "cs");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.remove();
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("Ms", "Ms", "Ms");
      element0.setAttribute("Ms", "Ms");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "Ms", namespace0);
      assertEquals("Ms", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Element element0 = new Element("Ms", "Ms", "Ms");
      element0.setAttribute("Ms", "");
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      String string0 = JDOMNodePointer.findEnclosingAttribute(element0, "Ms", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Text text0 = new Text("");
      String string0 = JDOMNodePointer.getLocalName(text0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Attribute attribute0 = new Attribute("s", "#6}tq_la*V}Z1");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("s", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Attribute attribute0 = new Attribute("space", "4|&|*G");
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertEquals("xml", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("s", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Attribute attribute0 = new Attribute("s", "#6}tq_la*V}Z1");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = new QName("s.");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("!g ");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("BdH", "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(54);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("$~#7-@T e", "");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) "http://www.w3.org/XML/1998/namespace", (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      QName qName0 = new QName("uPS,", "uPS,");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "node()");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CDATA cDATA0 = new CDATA("idH'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) null, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) "node()", (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      CDATA cDATA0 = new CDATA((String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("s", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%7qS^");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "preserve");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      QName qName0 = new QName("s.", "UNKNOWN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      Object object0 = new Object();
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, object0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Element element0 = new Element("Ge", "Ge", "Ge");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("Ge", "v");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      jDOMNodePointer0.setValue(list0);
      assertFalse(jDOMNodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      jDOMNodePointer0.setValue((Object) null);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
      jDOMNodePointer0.setValue(comment0);
      assertEquals("http://www.w3.org/XML/1998/namespace", comment0.getValue());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("yes", "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("s.", jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      CDATA cDATA0 = new CDATA("org.apache.comons.jxpath.ri.model.jdo.JDOMNodePointer");
      jDOMNodePointer0.setValue(cDATA0);
      assertEquals(1, jDOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
      Locale locale0 = Locale.forLanguageTag("http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue("http://www.w3.org/2000/xmlns/");
      assertEquals("http://www.w3.org/2000/xmlns/", cDATA0.getText());
      assertEquals("http://www.w3.org/2000/xmlns/", cDATA0.getValue());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA("dQ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CDATA cDATA0 = new CDATA("idH'");
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("indent = '", locale0, "indent = '");
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Comment comment0 = new Comment("rE5h|P.UV@");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("rE5h|P.UV@", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Element element0 = new Element("s.", "s.");
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("s.");
      Object object0 = jDOMNodePointer0.getValue();
      assertNotNull(object0);
      assertEquals("s.", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Element element0 = new Element("s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("s", "http://www.w3.org/XML/1998/namespace");
      element0.setContent((Content) processingInstruction0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("s", "s", "s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      Document document0 = new Document(element0);
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("s", "s");
      Locale locale0 = Locale.GERMANY;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("s", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("dQ", "dQ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Element element0 = new Element("s");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("s", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      CDATA cDATA0 = new CDATA("e:hSD`$?=TN-");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element("s.", "s.", ":Yj~A;");
      Locale locale0 = Locale.JAPAN;
      Document document0 = new Document((List) null);
      Document document1 = document0.setContent((Content) element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document1, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      Document document0 = new Document((List) null);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      jDOMNodePointer0.setValue("s.");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CDATA cDATA0 = new CDATA("idH'");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      element0.addContent((Content) comment0);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer0, (QName) null, comment0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("s.", "s.", "s.");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("http://www.w3.org/2000/xmlns/");
      Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer0, (QName) null, comment0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(37);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "java.util.concurrent.atomic.AtomicInteger");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for UNKNOWN()
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Locale locale0 = Locale.UK;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(list0, locale0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      Attribute attribute0 = new Attribute("g", "k[8c|)Fc$|X", 10, namespace0);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(jDOMNodePointer0, (QName) null, attribute0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Attribute attribute0 = new Attribute("b", "b");
      Locale locale0 = Locale.ITALIAN;
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer((QName) null, attribute0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      QName qName0 = new QName("uPS,", "uPS,");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeNameTest0, locale0, "node()");
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("b");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      String string0 = jDOMNodePointer0.getNamespaceURI("N/^~/W4=)~//xg@u");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CDATA cDATA0 = new CDATA("node()");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      String string0 = jDOMNodePointer0.getNamespaceURI("node()");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Element element0 = new Element("s", "s");
      Locale locale0 = Locale.TAIWAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("xml:space");
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals(1, nodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("cgSV5");
      Locale locale0 = Locale.ITALY;
      CDATA cDATA0 = new CDATA("1Pn83ACbH>7A/$V)");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      jDOMNodePointer1.printPointerChain();
      assertFalse(jDOMNodePointer1.isRoot());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("lang", locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale locale0 = Locale.GERMAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, "/$|Rt]");
      QName qName0 = new QName("K;`j$9n=9}M+=");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, 8116, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Element element0 = new Element("d", "d", "d");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("d:d", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstructionTest0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      Element element0 = new Element("s.", "s.");
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("s.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Element element0 = new Element("space");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
