/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:44:10 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.EntityRef;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.jdom.Text;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Element element0 = new Element("newEncode");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "newEncode");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      String string0 = jDOMNodePointer1.asPath();
      assertEquals("id('newEncode')/newEncode[1]", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.KOREAN;
      Element element1 = new Element("a", "a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
      jDOMNodePointer0.setValue(element0);
      assertEquals(0, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Z");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[)cZKZ");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CDATA cDATA0 = new CDATA("nU.%HUbmh]m&O79HUM+");
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLanguage("nU.%HUbmh]m&O79HUM+");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("default");
      Element element0 = new Element("default", "default", "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "2[4B3>~");
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "&;]4");
      Object object0 = jDOMNodePointer0.getBaseValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Element element0 = new Element("la9H", "la9H", "la9H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "la9H");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(443);
      jDOMNodePointer0.childIterator(nodeTypeTest0, true, nodePointer0);
      assertEquals("la9H:la9H", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("default");
      Element element0 = new Element("default", "default", "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%");
      QName qName0 = new QName("%", "%");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: %:%
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CDATA cDATA0 = new CDATA((String) null);
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("]]>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The data \"]]>\" is not legal for a JDOM CDATA section: CDATA cannot internally contain a CDATA ending delimiter (]]>).
         //
         verifyException("org.jdom.CDATA", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("a", "a");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      LinkedList<CDATA> linkedList0 = new LinkedList<CDATA>();
      Document document0 = new Document(linkedList0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CDATA cDATA0 = new CDATA("%");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("%", "%");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '%:%'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.FRENCH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, jDOMNodePointer0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jDOMNodePointer1.setValue(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer cannot be cast to org.jdom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0, "org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.namespaceIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2070787801));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, ";lUho");
      Document document0 = new Document((Element) null, (DocType) null);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, document0);
      // Undeclared exception!
      try { 
        jDOMNodePointer1.isLeaf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.getNamespaceURI("[Comment: <!--q-->]");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Element element0 = new Element("lang");
      // Undeclared exception!
      try { 
        JDOMNodePointer.findEnclosingAttribute(element0, "lang", (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jdom.AttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("G0JjuNP0O6SJW", "G0JjuNP0O6SJW", "G0JjuNP0O6SJW");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "G0JjuNP0O6SJW");
      QName qName0 = new QName("G0JjuNP0O6SJW", "[Element: <G0JjuNP0O6SJW:G0JjuNP0O6SJW [Namespace: G0JjuNP0O6SJW]/>]");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name \"[Element: <G0JjuNP0O6SJW:G0JjuNP0O6SJW [Namespace: G0JjuNP0O6SJW]/>]\" is not legal for JDOM/XML attributes: XML names cannot begin with the character \"[\".
         //
         verifyException("org.jdom.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      QName qName0 = new QName(")-\"fsi,", ")-\"fsi,");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Comment comment0 = new Comment("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "id('");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: )-\"fsi,:)-\"fsi,
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Comment comment0 = new Comment(" Gfx%|1^`7jZ");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, " Gfx%|1^`7jZ");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      QName qName0 = new QName("[", "eYL 1kOibmWc@");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: [:eYL 1kOibmWc@
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Text text0 = new Text("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(text0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("node()");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = jDOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null, (Object) basicVariables0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, nodePointer0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Document document0 = new Document(linkedList0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "z+$S@3");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeNameTest0, false, jDOMNodePointer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Root element not set
         //
         verifyException("org.jdom.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2070787801));
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, (Locale) null, ";lUho");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("@(#) $RCSfile: AbstractFilter.java,v $ $Revision: 1.5 $ $Date: 2004/02/27 11:32:58 $", (String) null);
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: '@(#) $RCSfile: AbstractFilter.java,v $ $Revision: 1.5 $ $Date: 2004/02/27 11:32:58 $:null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("default");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("default", locale0);
      Element element0 = new Element("default", "default", "http://www.w3.org/2000/xmlns/");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer1.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Element element0 = new Element("G", "G");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      // Undeclared exception!
      jDOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, (QName) null);
      variablePointer0.setIndex(415);
      Object object0 = new Object();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, object0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(":3<T<zhhQ^*)VW9@o", locale0, (String) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = new QName("<<unknown namespace>>", ".g");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2118850530));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Element element0 = new Element("a");
      String string0 = JDOMNodePointer.getLocalName(element0);
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Element element0 = new Element("a");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[)cZKZ");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CDATA cDATA0 = new CDATA("Z");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Pfm");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Comment comment0 = new Comment("LVp_4[w");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      Comment comment1 = (Comment)jDOMNodePointer0.getBaseValue();
      assertEquals("LVp_4[w", comment1.getValue());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      QName qName0 = new QName(")-\"fsi,", ")-\"fsi,");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      Comment comment0 = new Comment("<<unknown namespace>>");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, (Locale) null, "id('");
      boolean boolean0 = jDOMNodePointer0.equals(variablePointer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("java.lang.Object@0000000009", locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("java.lang.Object@0000000009", locale0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Element element0 = new Element("W", "F", "]02M(0t@1T7NG;|;%#9");
      CDATA cDATA0 = new CDATA("nU.%HUbmh]m&O79HUM+");
      element0.setContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<Integer, Element> hashMap0 = new HashMap<Integer, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/processing-instruction('q')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("E", "E", "E");
      Locale locale0 = Locale.ENGLISH;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
      JDOMNodePointer jDOMNodePointer2 = new JDOMNodePointer(jDOMNodePointer1, element0);
      assertEquals("E", jDOMNodePointer2.getNamespaceURI());
      
      String string0 = jDOMNodePointer2.asPath();
      assertEquals("/E:E[1]/E:E[1]", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      String string0 = jDOMNodePointer0.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "2[4B3>~");
      jDOMNodePointer0.printPointerChain();
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("default", locale0, "default");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root JDOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Element element0 = new Element("W", "F", "]02M(0t@1T7NG;|;%#9");
      CDATA cDATA0 = new CDATA("nU.%HUbmh]m&O79HUM+");
      element0.setContent((Content) cDATA0);
      Locale locale0 = Locale.UK;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      jDOMNodePointer0.remove();
      assertNull(jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      Element element1 = element0.setAttribute("a", "a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, (String) null);
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("a", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("la9H", "la9H", "la9H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "la9H");
      QName qName0 = jDOMNodePointer0.getName();
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals("la9H:la9H", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Element element0 = new Element("G0JjuNP0O6SJW", "pJa[k]*:.a8n");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "pJa[k]*:.a8n");
      QName qName0 = new QName("/C9g^'", "_j+");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: /C9g^'
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      QName qName0 = new QName("=Kk3,`V OqV%Jn82F", "=Kk3,`V OqV%Jn82F");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(qName0, locale0, "xml");
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      Comment comment0 = new Comment("4(I$|fhH4|_{DZ^l");
      String string0 = JDOMNodePointer.findEnclosingAttribute(comment0, "org.apache.commons.jxpath.PackageFunctions", namespace0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Attribute attribute0 = new Attribute("defTPlt", "defTPlt");
      String string0 = JDOMNodePointer.getLocalName(attribute0);
      assertEquals("defTPlt", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = JDOMNodePointer.getLocalName("{5v");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Attribute attribute0 = new Attribute("defTPlt", "defTPlt");
      Namespace namespace0 = Namespace.getNamespace("defTPlt", "<<unknown namespace>>");
      attribute0.setNamespace(namespace0);
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNotNull(string0);
      assertEquals("defTPlt", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = JDOMNodePointer.getPrefix("java.lang.Object@0000000009");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      String string0 = JDOMNodePointer.getPrefix(element0);
      assertNotNull(string0);
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Attribute attribute0 = new Attribute("default", "default");
      String string0 = JDOMNodePointer.getPrefix(attribute0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Locale locale0 = Locale.US;
      Element element0 = new Element("la9H", "la9H", "la9H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "la9H");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("C_ bfQ9QeVI(gT-Z");
      boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) locale0, (NodeTest) processingInstructionTest0);
      assertEquals("la9H:la9H", qName0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("a", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Comment comment0 = new Comment("LVp_4[w");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) comment0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      Document document0 = new Document();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) locale0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CDATA cDATA0 = new CDATA("a");
      Locale locale0 = Locale.ROOT;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("a", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Ajj", "b`nX,oTNvX_6}Q8#._|");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Element element0 = new Element("a");
      Locale locale0 = new Locale("a", "a", "a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "a");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("a", nodeNameTest0.toString());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      LinkedList<NodeTypeTest> linkedList0 = new LinkedList<NodeTypeTest>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0);
      QName qName0 = new QName("a", "a");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "a");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = new QName("a");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "a");
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      LinkedList<NodeTypeTest> linkedList0 = new LinkedList<NodeTypeTest>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0);
      QName qName0 = new QName("a", "7!5!`_<");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
      assertEquals("a", jDOMNodePointer0.getNamespaceURI());
      assertEquals("a:a", nodeNameTest0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<Integer, Element> hashMap0 = new HashMap<Integer, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Element element0 = new Element("q", "q", "[Comment: <!--q-->]");
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "68y0Ze@");
      // Undeclared exception!
      try { 
        JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("default", locale0);
      boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("po", "po", "po");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Document document0 = new Document(element0);
      DocType docType0 = new DocType("po");
      document0.setDocType(docType0);
      jDOMNodePointer0.setValue(document0);
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("G", "G", "G");
      Locale locale0 = Locale.US;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(jDOMNodePointer0);
      assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "lang");
      jDOMNodePointer0.setValue((Object) null);
      assertFalse(jDOMNodePointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      Comment comment0 = new Comment("gH~m\"0(LcJ0/[");
      jDOMNodePointer0.setValue(comment0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.CHINA;
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("a", "yx9k4E");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue(processingInstruction0);
      assertEquals("yx9k4E", processingInstruction0.getValue());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CDATA cDATA0 = new CDATA("a");
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "=?NRJD5nu*OT<iGy#)V");
      jDOMNodePointer0.setValue(cDATA0);
      assertNull(jDOMNodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      jDOMNodePointer0.setValue(processingInstructionTest0);
      assertFalse(jDOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.setValue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<Integer, Element> hashMap0 = new HashMap<Integer, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Comment comment0 = new Comment("LVp_4[w");
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "[");
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("LVp_4[w", object0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Element element0 = new Element("GJuNP0O6SJW", "GJuNP0O6SJW", "GJuNP0O6SJW");
      EntityRef entityRef0 = new EntityRef("vht", "<<unknown namespace>>");
      Element element1 = element0.addContent((Content) entityRef0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, (String) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("Fa", "Fa", "Fa");
      Locale locale0 = Locale.JAPAN;
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "[");
      jDOMNodePointer0.setValue(document0);
      jDOMNodePointer0.getValue();
      assertEquals(1, element0.getContentSize());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CDATA cDATA0 = new CDATA("a");
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      Element element1 = element0.setContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, (String) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertEquals("a", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Element> linkedList0 = new LinkedList<Element>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, (String) null);
      Object object0 = jDOMNodePointer0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Element element0 = new Element("l");
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CDATA cDATA0 = new CDATA("a");
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      element0.setContent((Content) cDATA0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "lang");
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Element> linkedList0 = new LinkedList<Element>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, (String) null);
      boolean boolean0 = jDOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("a", "a", "a");
      Locale locale0 = Locale.KOREAN;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
      jDOMNodePointer0.setValue("a");
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Element element0 = new Element("la9H", "la9H", "la9H");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "la9H");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
      assertEquals(1, int0);
      assertEquals("la9H:la9H", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Element element0 = new Element("newEncode");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "newEncode");
      QName qName0 = jDOMNodePointer0.getName();
      NodePointer nodePointer0 = jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
      assertEquals("newEncode", qName0.toString());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
      JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer("xml", locale0);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JXPath internal error: compareChildNodes called for 
         //
         verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      String string0 = jDOMNodePointer0.getNamespaceURI("9c92d?}UZih@'bfJ:P");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Element element0 = new Element("l");
      Locale locale0 = Locale.KOREAN;
      Document document0 = new Document(element0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("UNKNOWN()", locale0, "[");
      String string0 = jDOMNodePointer0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI("]");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "&;]4");
      jDOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver0 = jDOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<Integer, Element> hashMap0 = new HashMap<Integer, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = jDOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        jDOMNodePointer0.createChild((JXPathContext) null, qName0, (-2054189551), (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.KOREA;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0, "R,`0");
      jDOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      String string0 = jDOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<Integer, Element> hashMap0 = new HashMap<Integer, Element>();
      ProcessingInstruction processingInstruction0 = new ProcessingInstruction("q", hashMap0);
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
      QName qName0 = new QName("J`S&CezD7", "<<unknown namespace>>");
      NodeIterator nodeIterator0 = jDOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Element> linkedList0 = new LinkedList<Element>();
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(linkedList0, locale0, (String) null);
      NodeIterator nodeIterator0 = jDOMNodePointer0.namespaceIterator();
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "m.VB^y+e");
      boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CDATA cDATA0 = new CDATA("[)cZKZ");
      Locale locale0 = Locale.FRANCE;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      int int0 = jDOMNodePointer0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0);
      Object object0 = jDOMNodePointer0.getImmediateNode();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      // Undeclared exception!
      try { 
        jDOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Element element0 = new Element("a");
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, (String) null);
      NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("l8m$E]#");
      assertFalse(nodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CDATA cDATA0 = new CDATA("");
      Locale locale0 = Locale.ROOT;
      JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
      boolean boolean0 = jDOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }
}
