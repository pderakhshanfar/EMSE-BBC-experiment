* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-50
* Going to generate test cases for class: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer
* Starting Client-0
* Connecting to master process on port 20062
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-19/target/classes
  - subjects/buggy-versions/JxPath-19/src/java
  - subjects/buggy-versions/JxPath-19/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-19/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-19/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-19/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-19/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-19/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-19/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-19/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-19/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-19/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.model.dom.DOMNodePointer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2018
* Using seed 2499118263
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 449 / 2018
[MASTER] 00:55:44.088 [logback-1] WARN  TestUsageChecker - class org.apache.xerces.dom.CharacterDataImpl$1 looks like an anonymous class, ignoring it (although reflection says false) CharacterDataImpl$1
[MASTER] 00:56:13.662 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 00:59:48.782 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 601s and 2837 generations, 1229912 statements, best individual has fitness: 427.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 336
* Number of covered goals: 287
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 305
* Number of covered goals: 255
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 878
* Number of covered goals: 712
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 120
* Number of covered goals: 56
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 37
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 305
* Number of covered goals: 255
* Generated 161 tests with total length 808
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
[MASTER] 01:06:05.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:06.121 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:06.405 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:06.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:07.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:07.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:07.042 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
QName qName0 = new QName("0", "/");
HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "0");
VariablePointer variablePointer0 = new VariablePointer(qName0);
NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLDocumentImpl0);

[MASTER] 01:06:07.310 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:07.569 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:07.801 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:08.021 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:08.232 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:08.450 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:08.653 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:09.191 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:09.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:09.648 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:09.888 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:10.111 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:10.323 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:10.534 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:10.717 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:10.881 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:11.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:11.273 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:11.472 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:11.726 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:11.976 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:12.192 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:12.388 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:12.655 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:12.897 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:13.125 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:13.324 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:13.556 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:13.770 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:13.977 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:14.228 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:06:15.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:15.365 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
QName qName0 = new QName("0");
BasicVariables basicVariables0 = new BasicVariables();
VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLDocumentImpl0);

[MASTER] 01:06:17.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:17.145 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("(hj1e2?&BKS0", "t2A<3S:o");
DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
Locale locale0 = Locale.KOREAN;
NodePointer.newNodePointer(qName0, deferredDocumentImpl0, locale0);

[MASTER] 01:06:23.652 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 01:06:23.652 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Locale locale0 = Locale.ENGLISH;
XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration((SymbolTable) null);
DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
Document document0 = dOMASBuilderImpl0.parseURI("http://www.w3.org/XML/1998/namespace");
DOMNodePointer dOMNodePointer0 = new DOMNodePointer(document0, locale0);
Object object0 = dOMNodePointer0.getValue();
assertNotNull(object0);


[MASTER] 01:06:28.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:28.643 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
Locale locale0 = Locale.TAIWAN;
DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
QName qName0 = dOMNodePointer0.getName();
AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "$Y+ ", "<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
NodePointer.newNodePointer(qName0, attrNSImpl0, locale0);

[MASTER] 01:06:34.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:34.532 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "]");
Locale locale0 = Locale.ITALY;
DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableSectionElementImpl0, locale0, "]");
NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
NodePointer.newChildNodePointer(dOMNodePointer0, (QName) null, nodeNameTest0);

[MASTER] 01:06:35.333 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:35.334 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLUListElementImpl0, (Locale) null, "http://www.w3.org/2000/xmlns/");
QName qName0 = new QName((String) null, "http://www.w3.org/2000/xmlns/");
NodePointer.newChildNodePointer(dOMNodePointer0, qName0, ".'?%O?C\u0001?%XPH|:=/X");

[MASTER] 01:06:45.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 01:06:45.981 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
Locale locale0 = Locale.CANADA_FRENCH;
DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "S=HkZYiZ EAmy$", "<<unknown namespace>>", "org.apache.commons.beanutils.DynaBean");
HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "LUwC+Q.wcSMrx#*J`");
NodePointer.newNodePointer(qName0, hTMLMetaElementImpl0, locale0);

* Permissions denied during test execution: 
  - java.net.SocketPermission: 
         resolve www.w3.org: 1
* Writing tests to file
* Writing JUnit test case 'DOMNodePointer_ESTest' to results/JxPath-19/org.apache.commons.jxpath.ri.model.dom.DOMNodePointer/BBC-F0-opt-50/tests/9
* Done!

* Computation finished
