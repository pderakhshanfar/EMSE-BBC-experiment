/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 20:18:06 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.commons.jxpath.util.TypeConverter;
import org.apache.commons.jxpath.util.TypeUtils;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLBRElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDListElementImpl;
import org.apache.html.dom.HTMLDivElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFieldSetElementImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLHeadElementImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLHtmlElementImpl;
import org.apache.html.dom.HTMLInputElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLMapElementImpl;
import org.apache.html.dom.HTMLMetaElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLParamElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLQuoteElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLTableCaptionElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.wml.dom.WMLAElementImpl;
import org.apache.wml.dom.WMLBigElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLEmElementImpl;
import org.apache.wml.dom.WMLFieldsetElementImpl;
import org.apache.wml.dom.WMLGoElementImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLOptgroupElementImpl;
import org.apache.wml.dom.WMLOptionElementImpl;
import org.apache.wml.dom.WMLSelectElementImpl;
import org.apache.wml.dom.WMLUElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DOMInputSourceImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.impl.XMLErrorReporter;
import org.apache.xerces.parsers.CachingParserPool;
import org.apache.xerces.parsers.DOMASBuilderImpl;
import org.apache.xerces.parsers.IntegratedParserConfiguration;
import org.apache.xerces.parsers.StandardParserConfiguration;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.DOMErrorHandlerWrapper;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.html.HTMLElement;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.CHINA;
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0);
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      DOMInputSourceImpl dOMInputSourceImpl0 = new DOMInputSourceImpl("ISINDEX", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      Document document0 = dOMASBuilderImpl0.parse(dOMInputSourceImpl0);
      Locale locale2 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(document0, locale2);
      dOMNodePointer0.getValue();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.CHINA;
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration(symbolTable0);
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      DOMInputSourceImpl dOMInputSourceImpl0 = new DOMInputSourceImpl("ISINDEX", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      Document document0 = dOMASBuilderImpl0.parse(dOMInputSourceImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(document0, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, document0);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
          PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
          Attr attr0 = pSVIDocumentImpl0.createAttributeNS("XfW'ps[,?s", "7aYI9I-=2I(FiyV", "frame");
          DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
          Locale locale0 = Locale.UK;
          QName qName0 = new QName("kyw?Gf");
          WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl((WMLDocumentImpl) null, "http://www.w3.org/XML/1998/namespace");
          AttrNSImpl attrNSImpl0 = new AttrNSImpl();
          // Undeclared exception!
          try { 
            NodePointer.newNodePointer(qName0, attrNSImpl0, locale0);
           //  fail("Expecting exception: NoClassDefFoundError");
           // Unstable assertion
          } catch(NoClassDefFoundError e) {
             //
             // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
             //
             verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "p", "p", "LU");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      String string0 = "y}v1@<H.";
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "y}v1@<H.");
      wMLOptionElementImpl0.setXmlLang("p");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOptionElementImpl0, locale0);
      dOMNodePointer0.isLanguage("\"");
      dOMNodePointer0.getLanguage();
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) "y}v1@<H.");
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "xmlns");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "xmlns");
      wMLOptionElementImpl0.setXmlLang("preserve");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOptionElementImpl0, locale0);
      dOMNodePointer0.isLanguage("[G;");
      Locale locale1 = Locale.GERMAN;
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      // Undeclared exception!
      try { 
        attrNSImpl0.removeChild(documentTypeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.AttrImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R7zFr`R`YeU!DL943|");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "Cc&LGVP>CPyb@H1h", "Cc&LGVP>CPyb@H1h", "k*P_dX\"`l&PWG^=");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      documentTypeImpl0.getSystemId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v%0/,`ziT(");
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.VariablePointerFactory");
      wMLDocumentImpl0.getTextContent();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, wMLOptionElementImpl0);
      documentTypeImpl0.getNodeType();
      dOMNodePointer0.printPointerChain();
      wMLOptionElementImpl0.getPreviousSibling();
      DOMNodePointer.findEnclosingAttribute(deferredDocumentImpl0, ":Aq\"awE1D3");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      TypeUtils.setTypeConverter(typeConverter0);
      wMLOptionElementImpl0.setXmlLang("preserve");
      boolean boolean0 = dOMNodePointer0.isLanguage("[G;");
      assertFalse(boolean0);
      
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.setValue(hTMLTableCellElementImpl0);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      QName qName0 = dOMNodePointer0.getName();
      String string0 = dOMNodePointer0.asPath();
      assertEquals("", string0);
      
      dOMNodePointer0.attributeIterator(qName0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "xmlns");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "xmlns");
      wMLOptionElementImpl0.setXmlLang("preserve");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOptionElementImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.isLanguage("[G;");
      assertFalse(boolean0);
      
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "preserve");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "[G;");
      dOMNodePointer1.setValue((Object) null);
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      QName qName0 = dOMNodePointer0.getName();
      assertEquals("xmlns", qName0.toString());
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, wMLDocumentImpl0);
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('[G;')", string0);
      
      QName qName1 = new QName("value", "l/E`P1YU{MYExqv8E");
      dOMNodePointer1.attributeIterator(qName1);
      assertEquals(1, dOMNodePointer1.getLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      QName qName0 = new QName("*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("$&H%n6", "n4/:sD>2N1cbQWr", "$&H%n6");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "/");
      Locale locale0 = Locale.JAPAN;
      QName qName0 = new QName("The attribute \"", "*");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("$&H%n6", "n4/:sD>2N1cbQWr", "$&H%n6");
      boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      QName qName0 = new QName((String) null, "3t#");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "$");
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "$");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      TextImpl textImpl0 = new TextImpl(pSVIDocumentImpl0, "$");
      boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null, "S[I*");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      dOMNodePointer1.printPointerChain();
      assertFalse(dOMNodePointer1.isContainer());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Locale locale0 = Locale.ITALIAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xmlns:");
      QName qName0 = new QName("");
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, locale0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("x>lns:", "x>lns:", "x>lns:");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      Locale locale0 = Locale.CANADA_FRENCH;
      QName qName0 = dOMNodePointer0.getName();
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl((WMLDocumentImpl) null, "http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        nodePointer0.attributeIterator(qName0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/@");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLSelectElementImpl0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.setNamespaceContextPointer(dOMNodePointer0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-33);
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte) (-56);
      byteArray0[6] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      namespaceResolver0.seal();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      hTMLTableElementImpl0.getAttributeNodeNS("http://www.w3.org/2000/xmlns/", "l-");
      dOMNodePointer0.setValue(hTMLTableElementImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.childIterator(processingInstructionTest0, false, (NodePointer) null);
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      dOMNodePointer0.getNamespaceResolver();
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CANADA_FRENCH;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, ":jK4Lr[~[1hO.W#'7", ":jK4Lr[~[1hO.W#'7", ":jK4Lr[~[1hO.W#'7");
      QName qName0 = new QName(":jK4Lr[~[1hO.W#'7");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, pSVIElementNSImpl0);
      dOMNodePointer0.getNamespaceResolver();
      String string0 = DOMNodePointer.getPrefix(pSVIElementNSImpl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "cIE,b6K", "cIE,b6K", "org.apache.html.dom.HTMLLabelElementImpl");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "/processing-instruction('");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      dOMNodePointer0.printPointerChain();
      // Undeclared exception!
      dOMNodePointer1.asPath();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "v[6Ptna8[7\"dEoQJ", "v[6Ptna8[7\"dEoQJ", "v[6Ptna8[7\"dEoQJ");
      QName qName0 = new QName("xmlns:");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "c|%U+{Tjy.]&m~#GK^");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.jxpath.JXPathContext");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.jxpath.JXPathContext");
      deferredDocumentImpl0.getUserData("Q(r Lm");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(deferredDocumentImpl0, "org.apache.commons.jxpath.JXPathContext");
      deferredDocumentImpl0.createDeferredComment("[");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(elementDefinitionImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getReadOnly();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "(/[Cs9Da}Cu3di|l");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, (Locale) null, (String) null);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) null);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.TMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodePointer nodePointer0 = dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.namespacePointer((String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "L=KW(", (String) null, "org.apache.html.dom.TMLTableElementImpl");
      Node node0 = hTMLDocumentImpl0.appendChild(documentTypeImpl0);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      nodePointer0.setValue(documentTypeImpl0);
      nodePointer0.getValue();
      String string1 = DOMNodePointer.getPrefix(node0);
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      dOMNodePointer0.setValue((Object) null);
      assertEquals(Integer.MIN_VALUE, dOMNodePointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "xml:spa", "xml:spa", "xml:spa");
      QName qName0 = new QName("org.apache.wml.dom.WMLRefreshElementImpl");
      Node node0 = pSVIElementNSImpl0.cloneNode(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0, "xml:spa");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "TQ");
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("TQ", "gzvx");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(variablePointer0, qName0, hTMLDocumentImpl0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("xml", "org.apache.commons.jxpath.ri.model.beans.PropertyPointer", "org.apache.commons.jxpath.ri.model.beans.PropertyPointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/", "Unknown namespace prefix: ");
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null);
      Locale.lookup(vector0, list0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(processingInstructionImpl0, (Locale) null);
      QName qName0 = new QName("xml", "/J>w`ljV0\"K>Q");
      vector0.trimToSize();
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl((WMLDocumentImpl) null, "Z#.$N/,mqv\"");
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, wMLBigElementImpl0, (Locale) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("xml", "org.apache.commons.jxpath.ri.model.beans.PropertyPointer", "org.apache.commons.jxpath.ri.model.beans.PropertyPointer");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "http://www.w3.org/2000/xmlns/", "Unknown namespace prefix: ");
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null);
      Locale.lookup(vector0, list0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(processingInstructionImpl0, (Locale) null);
      QName qName0 = new QName("xml", "/J>w`ljV0\"K>Q");
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl((WMLDocumentImpl) null, "Z#.$N/,mqv\"");
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, wMLBigElementImpl0, (Locale) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "TQ");
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      dOMNodePointer0.getDefaultNamespaceURI();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Attr attr0 = pSVIDocumentImpl0.createAttributeNS("http://www.w3.org/2000/xmlns/", "xml", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attr0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHeadElementImpl0, locale0);
      dOMNodePointer2.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      QName qName0 = new QName("TQ", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.setReadOnly(true, false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "xml:space", "xml:space", "xml:space");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("xml:space");
      assertNull(string0);
      
      String string1 = DOMNodePointer.getPrefix(pSVIElementNSImpl0);
      assertEquals("xml", string1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "id('", "id('", "id('");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "id('");
      QName qName0 = new QName("id('", "id('");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, qName0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.lookup(vector0, (Collection<Locale>) null);
      hTMLDocumentImpl0.setReadOnly(true, true);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "'$u)", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
      dOMNodePointer2.printPointerChain();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale.getISOCountries();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleKeys();
      Locale locale1 = null;
      locale0.getDisplayScript((Locale) null);
      Locale locale2 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale2);
      hTMLDocumentImpl1.setReadOnly(true, false);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXb[OJmj:3 9O");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, (String) null);
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "6Fj$qk8cpk~CU\"", "QXb[OJmj:3 9O", "m2?Pp@+Y~myR1<SxE");
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl(wMLDocumentImpl0, ":X[\"80G^");
      QName qName0 = new QName("x7)1*/q%+)hc}lS");
      wMLUElementImpl0.hasAttribute("Cannot remove root DOM node");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "m2?Pp@+Y~myR1<SxE");
      DOMNodePointer.testNode((Node) wMLUElementImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = Locale.CANADA;
      assertEquals("", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      QName qName0 = new QName("[*4ivAP?RP2", "[*4ivAP?RP2");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "java.util.Locale@0000000004", "http://www.w3.org/2000/xmlns/", "\"nD9yxtx)v1~f*M&O.");
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer1, qName0, attrNSImpl0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "K;m,u:zjKN");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, (Locale) null);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>", "PARAM");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      // Undeclared exception!
      dOMNodePointer1.printPointerChain();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(coreDocumentImpl0, ",w:", ",w:", "org.apache.wml.dom.WMLPElementImpl");
      DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      pSVIElementNSImpl0.getNodeType();
      DOMNodePointer.findEnclosingAttribute(coreDocumentImpl0, ",w:");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = "xml:lang";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "xml:lang");
      dOMNodePointer0.asPath();
      pSVIElementNSImpl0.setNodeValue("id('xml:lang')");
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(coreDocumentImpl0, ",w:", "org.apache.xerces.dom.CommentImpl@0000000003");
      try { 
        processingInstructionImpl0.insertBefore(pSVIElementNSImpl0, pSVIElementNSImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.NodeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      hTMLDocumentImpl0.setReadOnly(true, true);
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      QName qName0 = new QName("", "");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      TextImpl textImpl0 = new TextImpl(pSVIDocumentImpl0, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, (Locale) null);
      WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl((WMLDocumentImpl) null, "<<unknown namespace>>");
      dOMNodePointer0.setValue(wMLGoElementImpl0);
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHeadElementImpl0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
      
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(element0, locale0);
      QName qName0 = dOMNodePointer2.getName();
      dOMNodePointer0.attributeIterator(qName0);
      assertEquals("http:http://www.w3.org/XML/1998/namespace", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl((WMLDocumentImpl) null, "xml:lang");
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLUElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getLanguage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "start");
      dOMNodePointer0.getNamespaceURI("start");
      String string0 = dOMNodePointer0.getNamespaceURI("start");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, (String) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      String string0 = locale0.getDisplayName();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      assertFalse(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayName();
      TextImpl textImpl0 = new TextImpl();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.createNodeIterator((Node) textImpl0, 4, nodeFilter0, false);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "]", "]");
      processingInstructionImpl0.isDefaultNamespace("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "]");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("ismap");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, textImpl0);
      dOMNodePointer1.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer1.getValue();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, textImpl0);
      dOMNodePointer2.printPointerChain();
      assertEquals(Integer.MIN_VALUE, dOMNodePointer2.getIndex());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      textImpl0.getReadOnly();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = new Locale("u");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.getRootNode();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, textImpl0);
      dOMNodePointer1.isLanguage("http://www.w3.org/2000/xmlns/");
      dOMNodePointer1.getNamespaceResolver();
      QName qName0 = dOMNodePointer1.getName();
      DOMNodePointer.getLocalName(textImpl0);
      dOMNodePointer0.getValue();
      DOMNodePointer.getPrefix(textImpl0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.lookup(linkedList0, list1);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /text()[1]/text()[1]/@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "HTMLFontElementImpl", "HTMLFontElementImpl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale1);
      dOMNodePointer0.printPointerChain();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertFalse(namespaceResolver0.isSealed());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "HTMLHtmlElementImpl", "HTMLHtmlElementImpl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayName();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      documentImpl0.createNodeIterator((Node) processingInstructionImpl0, (-1800049271), nodeFilter0, false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
      dOMNodePointer0.printPointerChain();
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator((QName) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "HTMLHtmlElementImpl", "HTMLHtmlElementImpl");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      CommentImpl commentImpl0 = new CommentImpl(documentImpl0, "R_Ete");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      ProcessingInstructionTest processingInstructionTest1 = new ProcessingInstructionTest("HTMLHtmlElementImpl");
      boolean boolean1 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest1);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "HTMLHtmlElementImpl", "HTMLHtmlElementImpl");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayName();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      documentImpl0.createNodeIterator((Node) processingInstructionImpl0, (-1800049271), nodeFilter0, false);
      processingInstructionImpl0.isDefaultNamespace("HTMLHtmlElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "HTMLHtmlElementImpl");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("English (United Kingdom)");
      dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer0.getValue();
      QName qName0 = null;
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.isLanguage("English (United Kingdom)");
      dOMNodePointer0.isLanguage("English (United Kingdom)");
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((JXPathContext) null, (Object) nodeNameTest0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(documentImpl0, "HTMLFontElementImpl", "HTMLFontElementImpl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleKeys();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "");
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale1);
      dOMNodePointer0.printPointerChain();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(64);
      boolean boolean0 = DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
      
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("HTMLFontElementImpl", object0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "'o;a;Q}X?Ha_4gxD-");
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "'o;a;Q}X?Ha_4gxD-");
      Locale locale0 = Locale.forLanguageTag("'o;a;Q}X?Ha_4gxD-");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.lookupNamespaceURI("5");
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "5");
      QName qName0 = new QName("5", "5");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "5");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLMetaElementImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPAN;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.printPointerChain();
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "Xp<xd");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0, "}J_SjC2bzCRDs|EHi.:");
      QName qName0 = new QName("6HdG,PY+", "}J_SjC2bzCRDs|EHi.:");
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, ",h?(So\"jAnR531Pc9'");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(58);
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0, "/");
      QName qName0 = new QName("{", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "F97+&+MEH5en7[[d/!");
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.apache.wml.dom.WMLWmlElementImpl");
      hTMLDocumentImpl0.getNamespaceURI();
      dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer0.printPointerChain();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1750);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeTypeTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "0e8MtHS*3", "0e8MtHS*3", "0e8MtHS*3");
      documentTypeImpl0.isEqualNode(deferredDocumentImpl0);
      deferredDocumentImpl0.getUserData();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElementNS("0e8MtHS*3", "0e8MtHS*3", "0e8MtHS*3");
      Locale locale0 = Locale.CHINESE;
      locale0.clone();
      locale0.getUnicodeLocaleAttributes();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      dOMNodePointer0.getNamespaceURI();
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(deferredDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "kArZ3");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      DOMNodePointer.testNode((Node) hTMLHeadElementImpl0, (NodeTest) nodeTypeTest0);
      hTMLDocumentImpl0.getAsync();
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.FRENCH;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.lookup(vector0, linkedList0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHeadElementImpl0, (Locale) null, "x>iB");
      QName qName0 = new QName("id('", "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) linkedList0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "sxk");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sxk");
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLMetaElementImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLMetaElementImpl0);
      dOMNodePointer2.printPointerChain();
      String string0 = dOMNodePointer1.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      Locale locale0 = Locale.GERMANY;
      DocumentImpl documentImpl0 = new DocumentImpl();
      EntityImpl entityImpl0 = new EntityImpl(documentImpl0, "HTQ");
      Node node0 = entityImpl0.cloneNode(true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
      entityImpl0.getNamespaceURI();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityImpl0);
      dOMNodePointer0.printPointerChain();
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "sxk");
      Locale locale0 = new Locale("HTMLObjectElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      boolean boolean0 = dOMNodePointer0.isLanguage("HTMLObjectElementImpl");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "<^+t5wb;~D'mX&");
      QName qName1 = new QName("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      VariablePointer variablePointer1 = new VariablePointer(qName1);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(variablePointer1, hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer3.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer3.createChild((JXPathContext) null, qName1, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1729771150));
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, ";}djaF");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("')");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("http://www.w3.org/2000/xmlns/");
      JXPathContext jXPathContext0 = null;
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "<<unknown namespace>>");
      dOMNodePointer0.namespaceIterator();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // DOM002 Illegal character
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "onenterbackward");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI("d$Ni-t2zm{%LuD");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHeadElementImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHeadElementImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer2.printPointerChain();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, hTMLHeadElementImpl0);
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer4.compareChildNodePointers(dOMNodePointer0, dOMNodePointer3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1220));
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDocumentElement();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "r");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("http://www.w3.org/XML/1998/namespace");
      JXPathContext jXPathContext0 = null;
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "r");
      dOMNodePointer0.namespaceIterator();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "%=3_p");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, cDATASectionImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "p_'");
      dOMNodePointer1.equals(basicVariables0);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLScriptElementImpl0, locale1);
      dOMNodePointer0.printPointerChain();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("java.util.Locale@0000000008");
      DocumentFragment documentFragment0 = hTMLDocumentImpl0.createDocumentFragment();
      DOMNodePointer.testNode((Node) documentFragment0, (NodeTest) processingInstructionTest0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(documentFragment0, locale1);
      // Undeclared exception!
      try { 
        dOMNodePointer1.setValue(dOMNodePointer2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      BasicVariables basicVariables0 = new BasicVariables();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(cDATASectionImpl0, locale0);
      dOMNodePointer1.getValue();
      String string0 = DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      assertEquals("#document", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      basicVariables0.undeclareVariable("]");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "%=3_p");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, cDATASectionImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, " ;jF}.+%UF/V:9Jx'd");
      dOMNodePointer0.equals("Factory could not create a child node for path: ");
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "F");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(commentImpl0, locale1);
      dOMNodePointer2.namespaceIterator();
      dOMNodePointer2.printPointerChain();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "in%gQ{pt:D`\"|R;.y");
      // Undeclared exception!
      try { 
        dOMNodePointer1.compareChildNodePointers(variablePointer0, dOMNodePointer2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'Factory could not create a child node for path: '
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0, "fK-urnQOvnD2x&c0:_");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer1.getBaseValue();
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      dOMNodePointer2.printPointerChain();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, hTMLDocumentImpl1);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) null);
      assertTrue(boolean0);
      
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer3, dOMNodePointer3);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createDocumentFragment();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDocumentElement();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sk");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("sk");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("sk");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "sk");
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 170);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "%=3_p");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, cDATASectionImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, " ;jF}.+%UF/V:9Jx'd");
      dOMNodePointer0.equals("Factory could not create a child node for path: ");
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "F");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(commentImpl0, locale1);
      dOMNodePointer2.printPointerChain();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("CM");
      DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) processingInstructionTest0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(commentImpl0, locale1);
      // Undeclared exception!
      try { 
        dOMNodePointer3.setValue("Factory could not create a child node for path: ");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
         //
         verifyException("org.apache.xerces.dom.NodeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("Factory could not create a child node for path: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "%=3_p");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, cDATASectionImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, " ;jF}.+%UF/V:9Jx'd");
      dOMNodePointer0.equals("Factory could not create a child node for path: ");
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "3},0VCB");
      dOMNodePointer1.setValue(hTMLPreElementImpl0);
      dOMNodePointer0.getNamespaceURI();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "3},0VCB");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) hTMLTableSectionElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) hTMLHeadElementImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("$NV");
      hTMLDocumentImpl0.cloneNode(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "$NV");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLAppletElementImpl0);
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "$NV");
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer0.asPath();
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, "$$NV", locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sk");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(processingInstructionImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer1.getName();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, ">RhK5G03Bt4!=mp");
      QName qName0 = new QName("xmlns", "Argument className was null.");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 91, (Object) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) hTMLHeadElementImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("$NV");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "$NV");
      HTMLDocumentImpl hTMLDocumentImpl1 = (HTMLDocumentImpl)hTMLDocumentImpl0.cloneNode(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLMapElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      QName qName1 = dOMNodePointer0.getName();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl1, "<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLMapElementImpl", (String) null, "zo");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "org.apache.commons.jxpath.ri.axes.InitialContext");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName1, (-491), (Object) wMLSelectElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "node()");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "~m: $qJT^1kO:}^f", "<<unknown namespace>>", "t`yk");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer1.getImmediateNode();
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("t`yk");
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, "t`yk", (Locale) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
      DOMNodePointer.testNode((Node) hTMLHeadElementImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("$NV");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "$NV");
      hTMLDocumentImpl0.cloneNode(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLMapElementImpl");
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, hTMLAppletElementImpl0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "b8|cW\"k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "Lv`F/", "Lv`F/");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, (Locale) null);
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer.getPrefix(documentTypeImpl0);
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(pSVIDocumentImpl0, (Locale) null, ")");
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      QName qName0 = dOMNodePointer3.getName();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "readonly");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) hTMLFrameElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl((HTMLDocumentImpl) null, "@Z#D~='dq*~");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("a`[PX");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("@Z#D~='dq*~");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "E$Sky|)?gLF");
      String string0 = "[Namespace:";
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("[Namespace:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "[Namespace:");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.isLanguage("-pn1IKI`");
      dOMNodePointer0.isCollection();
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Djv9Z/xxy@:3[jR;0");
      Locale.getISOCountries();
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "WFX/P^");
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl((HTMLDocumentImpl) null, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        variablePointer0.createPath((JXPathContext) null, (Object) hTMLTableRowElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "xmlns");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAElementImpl wMLAElementImpl0 = new WMLAElementImpl(wMLDocumentImpl0, "xmlns");
      deferredDocumentImpl0.needsSyncChildren(true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "06 j");
      Locale locale0 = new Locale("N", "06 j", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI("xml");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      dOMNodePointer1.printPointerChain();
      DOMErrorHandlerWrapper dOMErrorHandlerWrapper0 = new DOMErrorHandlerWrapper();
      DOMErrorHandlerWrapper dOMErrorHandlerWrapper1 = new DOMErrorHandlerWrapper(dOMErrorHandlerWrapper0);
      Node node0 = dOMErrorHandlerWrapper0.fCurrentNode;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("N");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        elementDefinitionImpl0.replaceChild(documentTypeImpl0, wMLDocumentImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "D*,D(\"{vTo");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      documentTypeImpl0.needsSyncChildren(true);
      Locale locale1 = new Locale("U", "z/cr QM7<*ppH");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale1);
      QName qName0 = dOMNodePointer0.getName();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path id('D*,D(&quot;{vTo')/@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("6}n{Rh{_ocfn");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "6}n{Rh{_ocfn");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      Locale locale1 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      QName qName0 = dOMNodePointer0.getName();
      HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, hTMLFrameElementImpl0);
      dOMNodePointer2.getPointerByID((JXPathContext) null, "?v23P0@");
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale1, "E\"Qe#=n9(5");
      dOMNodePointer0.namespaceIterator();
      // Undeclared exception!
      try { 
        dOMNodePointer2.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "xmlns");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAElementImpl wMLAElementImpl0 = new WMLAElementImpl(wMLDocumentImpl0, "xmlns");
      deferredDocumentImpl0.needsSyncChildren(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      documentTypeImpl0.needsSyncChildren(true);
      Locale locale0 = new Locale("P={\"-N&WvZJLT", "P={\"-N&WvZJLT");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLAElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      wMLAElementImpl0.addEventListener("org.apache.wml.dom.WMLStrongElementImpl", eventListener0, true);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      wMLDocumentImpl0.createNodeIterator((Node) wMLAElementImpl0, (-1451159546), nodeFilter0, false);
      dOMNodePointer0.namespacePointer("Factory ");
      dOMNodePointer0.getLanguage();
      DOMNodePointer.getNamespaceURI((Node) wMLAElementImpl0);
      QName qName1 = new QName("Factory ", "http://www.w3.org/2000/xmlns/");
      NodeIterator nodeIterator0 = dOMNodePointer0.attributeIterator(qName1);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer1.getNamespaceURI("32Vh)lg)j\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLElement0);
      dOMNodePointer2.getLanguage();
      dOMNodePointer2.printPointerChain();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer1.getImmediateNode();
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      dOMNodePointer3.getValue();
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "t*zBu");
      dOMNodePointer4.compareChildNodePointers(dOMNodePointer3, dOMNodePointer2);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "xml");
      NodeIterator nodeIterator0 = dOMNodePointer1.attributeIterator(qName0);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "D*,D(\"{vTo");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "N");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI("k");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLMapElementImpl0);
      dOMNodePointer1.printPointerChain();
      DOMErrorHandlerWrapper dOMErrorHandlerWrapper0 = new DOMErrorHandlerWrapper();
      DOMErrorHandlerWrapper dOMErrorHandlerWrapper1 = new DOMErrorHandlerWrapper(dOMErrorHandlerWrapper0);
      Node node0 = dOMErrorHandlerWrapper1.fCurrentNode;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, (Node) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("`w9C9Pna/-mpF|5m[K");
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer2.setAttribute(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "Q}jux_U3/oyss", (String) null);
      documentTypeImpl0.getPreviousSibling();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      String string0 = "Unknown namespace prefix: ";
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "Unknown namespace prefix: ");
      // Undeclared exception!
      try { 
        dOMNodePointer1.setValue(wMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "sxk");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl1, ">#niM}M//h(K?j");
      HTMLDocumentImpl hTMLDocumentImpl2 = (HTMLDocumentImpl)dOMNodePointer0.getBaseValue();
      String string0 = dOMNodePointer0.getNamespaceURI("sxk");
      assertNull(string0);
      
      dOMNodePointer0.printPointerChain();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("SXK");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl2, (NodeTest) processingInstructionTest0);
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      Locale locale0 = new Locale("0n661b(c,RCQ", "0n661b(c,RCQ", "0n661b(c,RCQ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
      locale0.getUnicodeLocaleKeys();
      dOMNodePointer0.getNamespaceURI("k");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      locale0.clone();
      Locale locale1 = Locale.UK;
      // Undeclared exception!
      try { 
        dOMNodePointer0.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createDocumentFragment();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sk");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("sk");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("sk");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "sk");
      dOMNodePointer0.namespaceIterator();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "xmlns");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLAElementImpl wMLAElementImpl0 = new WMLAElementImpl(wMLDocumentImpl0, "xmlns");
      FileSystemHandling.shouldAllThrowIOExceptions();
      documentTypeImpl0.needsSyncChildren(true);
      Locale locale0 = new Locale("P={\"-N&WvZJLT", "P={\"-N&WvZJLT");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLAElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      wMLAElementImpl0.addEventListener("$Zhn", eventListener0, false);
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      dOMNodePointer0.namespacePointer("/");
      dOMNodePointer0.getLanguage();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) deferredDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createDocumentFragment();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sk");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.UK;
      QName qName0 = new QName("sk");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      Boolean boolean0 = new Boolean("sk");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer0.getPointerByID((JXPathContext) null, "sk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "`U^S#wsYbl.");
      dOMNodePointer0.namespaceIterator();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.FRANCE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "xml:space", "xml:space", "xml:space");
      QName qName0 = new QName("xml:space");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0, "xml:space");
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      assertFalse(nodePointer0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXb[OJmj:3 9O");
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "QXb[OJmj:3 9O");
      hTMLLinkElementImpl0.getElementsByTagNameNS("(Y|-A}qafq7", "FY?l[egIv[E2YDO");
      dOMNodePointer0.getLength();
      dOMNodePointer0.equals(hTMLLinkElementImpl0);
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLLinkElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl1, "HTQ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = new QName("profile", "HTQ");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer.testNode((Node) hTMLHeadElementImpl0, (NodeTest) nodeNameTest0);
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl1, "6W@bEE~NJ[D");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      Locale locale0 = new Locale("0n661b(c,RCQ", "0n661b(c,RCQ", "0n661b(c,RCQ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
      locale0.getUnicodeLocaleKeys();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "}/ ", (String) null, "}/ ");
      dOMNodePointer0.getImmediateNode();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      nodeTypeTest0.toString();
      DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeTypeTest0);
      DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, "C3m40R:SW$c5");
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      QName qName0 = new QName("/>0oZ:yK/.P", ";`C");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer.testNode((Node) hTMLHtmlElementImpl0, (NodeTest) nodeNameTest0);
      DOMNodePointer.findEnclosingAttribute(hTMLHtmlElementImpl0, "HTQ");
      BasicVariables basicVariables0 = new BasicVariables();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(91);
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, nodeTypeTest0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "HTQ");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      String string0 = dOMNodePointer1.getNamespaceURI("t*zBu");
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLHtmlElementImpl0);
      String string1 = dOMNodePointer2.getLanguage();
      assertNull(string1);
      
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      dOMNodePointer1.getImmediateNode();
      String string2 = DOMNodePointer.getPrefix(hTMLHeadElementImpl0);
      assertNull(string2);
      
      dOMNodePointer1.getValue();
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer3, dOMNodePointer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("&M<yw&,g", "&M<yw&,g", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl((HTMLDocumentImpl) null, "[");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableCaptionElementImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "w1yp$2K|:6gK", "C3m40R:SW$c5", "w1yp$2K|:6gK");
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0);
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      assertNull(string0);
      
      dOMNodePointer2.getValue();
      String string1 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals("6gK", string1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer1.isLanguage("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer1.isCollection();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLElement0, locale0, (String) null);
      QName qName0 = dOMNodePointer2.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xml:lang");
      Locale.getISOCountries();
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      DOMNodePointer.findEnclosingAttribute(hTMLElement0, "<<unknown namespace>>");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}+mQ8#]!~E9.MUX`.b");
      dOMNodePointer2.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer2.isLanguage("HTQ");
      dOMNodePointer1.namespaceIterator();
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "HTQ");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("HTQ");
      hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.isLanguage("1n%|");
      boolean boolean0 = dOMNodePointer0.isCollection();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
      Locale.getISOCountries();
      boolean boolean1 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean1);
      
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLHtmlElementImpl0, "<<unknown namespace>>");
      assertNull(string0);
      
      boolean boolean2 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertEquals("HTQ", nodeNameTest0.toString());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
      
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("hm0BJAx4AC");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(variablePointer0, cDATASectionImpl0);
      dOMNodePointer2.printPointerChain();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      dOMNodePointer2.getImmediateNode();
      DOMNodePointer.getPrefix(cDATASectionImpl0);
      dOMNodePointer0.getValue();
      String string1 = DOMNodePointer.getLocalName(cDATASectionImpl0);
      assertEquals("#cdata-section", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      String string0 = "&M<Hw&,g";
      hTMLDocumentImpl1.createAttributeNS("&M<Hw&,g", "&M<Hw&,g", ")2@09RMK)^!,,p");
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0, "&M<Hw&,g");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl1);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      dOMNodePointer2.getNamespaceResolver();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl1, "http://www.w3.org/2000/xmlns/");
      hTMLLegendElementImpl0.normalize();
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(nodePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("&M<yw&,g", "&M<yw&,g", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      hTMLDocumentImpl0.open();
      dOMNodePointer0.getNamespaceResolver();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      hTMLLegendElementImpl0.normalize();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl1, "<<unknown namespace>>");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.printPointerChain();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((NodePointer) null, hTMLMapElementImpl0);
      DOMNodePointer.getLocalName(attr0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration();
      Locale locale0 = standardParserConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLMapElementImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = null;
      try {
        hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "6Ru.?lm");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHtmlElementImpl0);
      dOMNodePointer0.getBaseValue();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLHtmlElementImpl0);
      dOMNodePointer1.printPointerChain();
      Locale locale1 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      dOMNodePointer2.getImmediateNode();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      QName qName1 = new QName("xmlns", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Element element0 = wMLDocumentImpl0.createElement("http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      dOMNodePointer3.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "HTQ");
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "]");
      dOMNodePointer2.setValue(wMLBigElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer2.getPointerByID((JXPathContext) null, (String) null);
      dOMNodePointer3.getNamespaceResolver();
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer2, nullPointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.getBaseValue();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLLegendElementImpl0.normalize();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "KD7qc7xowmo@", "#Zrg1c3'", " implementing HTML element ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "N:lZP+[VG_o;X.)");
      dOMNodePointer0.setValue(wMLOptgroupElementImpl0);
      String string0 = DOMNodePointer.getPrefix(hTMLLegendElementImpl0);
      assertNotNull(string0);
      assertEquals("HTTP", string0);
      
      XMLErrorReporter xMLErrorReporter0 = new XMLErrorReporter();
      xMLErrorReporter0.getLocale();
      locale0.getDisplayLanguage();
      dOMNodePointer0.getValue();
      dOMNodePointer0.printPointerChain();
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLOptgroupElementImpl0, (Locale) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(deferredDocumentImpl0, "<<unknown namespace>>");
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "Tg+^");
      HTMLBRElementImpl hTMLBRElementImpl0 = new HTMLBRElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      boolean boolean0 = dOMNodePointer1.equals(hTMLBRElementImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("&M<yw&,g", "&M<yw&,g", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      hTMLDocumentImpl0.open();
      dOMNodePointer0.getNamespaceResolver();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      dOMNodePointer0.printPointerChain();
      Locale locale0 = Locale.KOREAN;
      Element element0 = hTMLDocumentImpl0.getDocumentElement();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "-");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, "-");
      dOMNodePointer2.getImmediateNode();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      processingInstructionTest0.toString();
      boolean boolean0 = dOMNodePointer2.isCollection();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(element0, locale0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "B1 d#1}K1PS{D", "#y", "Xa+E#m");
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "Xa+E#m");
      hTMLQuoteElementImpl0.item(Integer.MIN_VALUE);
      boolean boolean1 = dOMNodePointer3.equals(hTMLQuoteElementImpl0);
      assertTrue(boolean1 == boolean0);
      
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('-')", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.hasAttributes();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXb[OJmj:3 9O");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("QXb[OJm]:d3 9O");
      DOMNodePointer.testNode((Node) hTMLLinkElementImpl0, (NodeTest) processingInstructionTest0);
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLLinkElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      String string0 = "sxk";
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "sxk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "sxk");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl1, ">#niM}M//h(K?j");
      dOMNodePointer0.getBaseValue();
      // Undeclared exception!
      try { 
        dOMNodePointer2.getPointerByID((JXPathContext) null, "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale1);
      String string0 = dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
      assertNull(string0);
      
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer0.getImmediateNode();
      QName qName1 = new QName("Z4fxZBd.>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeTypeTest0);
      dOMNodePointer1.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl1, "BbDB;)OLdoi$G<-x");
      dOMNodePointer0.setValue(hTMLLIElementImpl0);
      assertTrue(dOMNodePointer0.equals((Object)dOMNodePointer1));
      
      dOMNodePointer2.getPointerByID((JXPathContext) null, "g%S/Gh<Gl^}'");
      boolean boolean0 = dOMNodePointer0.equals("Z4fxZBd.>");
      assertFalse(boolean0);
      
      dOMNodePointer1.namespaceIterator();
      assertFalse(dOMNodePointer0.equals((Object)dOMNodePointer2));
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "6Ru.?lm");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHtmlElementImpl0);
      dOMNodePointer1.getBaseValue();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLHtmlElementImpl0);
      dOMNodePointer1.printPointerChain();
      Locale locale1 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      dOMNodePointer2.getImmediateNode();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      QName qName1 = new QName("xmlns", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      Element element0 = wMLDocumentImpl0.createElement("http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
      dOMNodePointer3.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "HTQ");
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      WMLBigElementImpl wMLBigElementImpl0 = new WMLBigElementImpl(wMLDocumentImpl0, "]");
      dOMNodePointer2.setValue(wMLBigElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer2.getPointerByID((JXPathContext) null, (String) null);
      assertFalse(nullPointer0.isCollection());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("1TO_ZSl'lRrgz}`'|?");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      hTMLLegendElementImpl0.getOwnerDocument();
      QName qName0 = new QName("P\"q", "MLc'[4qrVo,h,");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, (String) null);
      dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      
      String string1 = DOMNodePointer.getLocalName(hTMLLegendElementImpl0);
      assertEquals("", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      HTMLHtmlElementImpl hTMLHtmlElementImpl1 = (HTMLHtmlElementImpl)dOMNodePointer0.getBaseValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHtmlElementImpl1);
      dOMNodePointer1.printPointerChain();
      Locale locale1 = Locale.KOREAN;
      Locale locale2 = Locale.TAIWAN;
      Locale locale3 = new Locale("cDhhFC3Vp[|h8|Y,-");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHtmlElementImpl1, locale3);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      dOMNodePointer0.getValue();
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "LPOQPx]j{wcn|~!");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, elementDefinitionImpl0);
      dOMNodePointer2.printPointerChain();
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLHtmlElementImpl0, locale1);
      dOMNodePointer4.getImmediateNode();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) elementDefinitionImpl0, (NodeTest) nodeNameTest1);
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl1, "/");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl1, "java.util.Locale@0000000013");
      dOMNodePointer3.setValue(hTMLHeadElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer3.getPointerByID((JXPathContext) null, "http://www.w3.org/2000/xmlns/");
      assertEquals(Integer.MIN_VALUE, nullPointer0.getIndex());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "r");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, "H(W/wO~#~;O.W6J:j");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLWmlElementImpl0, locale0);
      QName qName0 = new QName("D0UG9%:", "H(W/wO~#~;O.W6J:j");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) null);
      Locale locale1 = Locale.UK;
      QName qName1 = new QName("/>0oZ:yK/.P");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      locale0.getDisplayVariant(locale1);
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) null);
      dOMNodePointer0.getValue();
      dOMNodePointer0.isLanguage("D0UG9%:");
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLHtmlElementImpl0, "http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      HTMLHtmlElementImpl hTMLHtmlElementImpl1 = (HTMLHtmlElementImpl)dOMNodePointer0.getBaseValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHtmlElementImpl1);
      dOMNodePointer1.printPointerChain();
      Locale locale1 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHtmlElementImpl1, locale1);
      dOMNodePointer1.getImmediateNode();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      QName qName1 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLHtmlElementImpl1, (NodeTest) nodeNameTest1);
      dOMNodePointer2.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = null;
      try {
        hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      String string0 = "5P";
      QName qName0 = new QName("5P");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.CANADA_FRENCH;
      locale1.getUnicodeLocaleKeys();
      locale1.getDisplayScript(locale1);
      Locale locale2 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
      dOMNodePointer0.getValue();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "R+]hiBaUZ>(");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getImmediateNode();
      QName qName1 = new QName("");
      String string1 = "~kIMg=U";
      QName qName2 = new QName("~kIMg=U", "D.nc.9eH*uj`gKk1");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName2);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.needsSyncChildren(false);
      Locale.getISOCountries();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale1);
      dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
      QName qName1 = new QName("<<unknown namespace>>", ">RhK5G03Bt4!=mp");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) processingInstructionTest0);
      Locale locale2 = Locale.UK;
      QName qName2 = new QName("bx=\"E4P-E'TpT`|");
      QName qName3 = new QName("<<unknown namespace>>", "bx=\"E4P-E'TpT`|");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName3);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) processingInstructionTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale2, "U(%/hqxC?*f\"Lq|");
      dOMNodePointer1.getValue();
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(nodeNameTest0, false, dOMNodePointer1);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.needsSyncChildren(false);
      Locale.getISOCountries();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale1);
      dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer0.getImmediateNode();
      QName qName1 = new QName("Z4fxZBd.>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeTypeTest0);
      dOMNodePointer1.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl1, "BbDB;)OLdoi$G<-x");
      dOMNodePointer0.setValue(hTMLLIElementImpl0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer2.getPointerByID((JXPathContext) null, "g%S/Gh<Gl^}'");
      assertFalse(nullPointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0, (String) null);
      locale0.getUnicodeLocaleKeys();
      Locale locale2 = Locale.US;
      locale1.getDisplayScript(locale2);
      dOMNodePointer0.getNamespaceURI(")TYsk.'Pa6x<`y2r3");
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.printPointerChain();
      Locale locale3 = new Locale("r");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHtmlElementImpl0, locale3);
      dOMNodePointer1.getImmediateNode();
      QName qName0 = null;
      try {
        qName0 = new QName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      HTMLElement hTMLElement0 = hTMLDocumentImpl1.getHead();
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      QName qName0 = new QName("lrg}u'P*CKh|ym~HtN", "lrg}u'P*CKh|ym~HtN");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.UK;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale1);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl1, "lrg}u'P*CKh|ym~HtN");
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl1, "lrg}u'P*CKh|ym~HtN");
      boolean boolean1 = dOMNodePointer0.equals(dOMNodePointer1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      dOMNodePointer0.attributeIterator(qName0);
      HTMLLegendElementImpl hTMLLegendElementImpl1 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.setValue("");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "xmlns:");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI(">#niM}M//h(K?j");
      DOMNodePointer.getPrefix(hTMLLegendElementImpl0);
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.getName();
      dOMNodePointer0.getLength();
      dOMNodePointer0.getName();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "IN[im");
      hTMLTextAreaElementImpl0.getForm();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      QName qName0 = new QName("/>0oZ:yK/.P", ";`C");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer1.getImmediateNode();
      QName qName1 = new QName("e");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest2 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLHtmlElementImpl0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.setValue(qName1);
      assertFalse(dOMNodePointer0.isContainer());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale.getISOCountries();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      Locale locale1 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale1);
      dOMNodePointer0.getNamespaceURI(">RhK5G03Bt4!=mp");
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer0.getImmediateNode();
      QName qName1 = new QName("Z4fxZBd.>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeTypeTest0);
      dOMNodePointer1.getValue();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl1, "BbDB;)OLdoi$G<-x");
      dOMNodePointer0.setValue(hTMLLIElementImpl0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodePointer nodePointer0 = dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      locale0.getDisplayLanguage();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.namespacePointer((String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "L-=KW(", (String) null, "org.apache.html.dom.HTMLTableElementImpl");
      hTMLDocumentImpl0.appendChild(documentTypeImpl0);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
      try { 
        nodePointer0.setValue(documentTypeImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      coreDocumentImpl0.setUserData((Object) hTMLDocumentImpl0);
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "d9KLe7A1'/2%m4DI");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("d9KLe7A1'/2%m4DI");
      processingInstructionTest0.toString();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "Q.\"7^=,g*}a");
      dOMNodePointer0.equals(locale0);
      QName qName0 = new QName("]");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: ]
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale.getISOCountries();
      QName qName0 = new QName("t3\u0003^UBWL(_;I");
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, hTMLDocumentImpl0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl(coreDocumentImpl0, "lib", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
      attrNSImpl0.isDefaultNamespace("lib");
      attrNSImpl0.getLastChild();
      coreDocumentImpl0.load("http://www.w3.org/XML/1998/namespace");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = attrNSImpl0.cloneNode(true);
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI(node0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.AttrNSImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("");
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      HTMLHeadElementImpl hTMLHeadElementImpl0 = (HTMLHeadElementImpl)dOMNodePointer0.getBaseValue();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "fJ");
      dOMNodePointer1.isLeaf();
      QName qName0 = new QName((String) null, "lrg}u'P*CKh|ym~HtN");
      hTMLElement0.getLang();
      QName qName1 = new QName("|0y]/cLYG&AOkOS", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLHeadElementImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer2.getValue();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, dOMNodePointer2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: lrg}u'P*CKh|ym~HtN
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXb[OJmj:3 9O");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("QXb[OJmj:3 9O");
      processingInstructionTest0.toString();
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xml:space");
      dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "HTMLTableElementImpl");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest1);
      dOMNodePointer0.asPath();
      String string0 = DOMNodePointer.findEnclosingAttribute(coreDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W<cwY~=8Y@6JN");
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl((HTMLDocumentImpl) null, "lrg}u'P*CKh|ym~HtN");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, locale0);
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer((QName) null, dOMNodePointer0, locale0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.hasAttributes();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXb[OJmj:3 9O");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("QXb[OJmj:d3 9O");
      processingInstructionTest0.toString();
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.equals("processing-instruction('QXb[OJmj:d3 9O')");
      dOMNodePointer0.getLength();
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "L-=KW(", "http://www.w3.org/XML/1998/namespace", "-BOeXt_");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getDocumentElement();
      wMLDocumentImpl0.getTextContent();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "I<[vVy");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0, "J");
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sxk");
      Node node0 = null;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLDocumentImpl1);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, "<<unknown namespace>>");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, ":Vg(v/");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      DOMNodePointer.getPrefix(hTMLMetaElementImpl0);
      dOMNodePointer1.getNamespaceResolver();
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "zZ:irL\"@g4OQr9~");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(entityReferenceImpl0, locale0, "");
      // Undeclared exception!
      try { 
        dOMNodePointer1.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      List<String> list0 = new LinkedList<String>();
      NodePointer nodePointer0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("Ksl60");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Locale locale1 = new Locale("j4LhTqzE[Gu99ZpV$g5", "5P", "iT1AH< tIx");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale1, "<<unknown namespace>>");
      locale0.getUnicodeLocaleKeys();
      locale1.getDisplayScript(locale1);
      dOMNodePointer0.getNamespaceURI("");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer((Node) null, (Locale) null, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer2.printPointerChain();
      dOMNodePointer1.getImmediateNode();
      dOMNodePointer0.getBaseValue();
      QName qName0 = new QName("<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, ":w#F,p(AkPx", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "HEAD");
      // Undeclared exception!
      try { 
        dOMNodePointer2.setValue(wMLMetaElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodePointer nodePointer0 = dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      dOMNodePointer0.isLeaf();
      nodePointer0.namespacePointer(" 7*~DvBZ0p jvr");
      nodePointer0.getNamespaceURI(" 7*~DvBZ0p jvr");
      QName qName0 = new QName("Exception trying to set value with xpath ", (String) null);
      nodePointer0.attributeIterator(qName0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "YqHh_o2aOk;)%P", "org.apache.html.dom.HTMLTableElementImpl", "Unknown namespace prefix: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      locale0.getDisplayLanguage();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl1, "id(");
      HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) hTMLFontElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "sxk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "sxk");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      String string0 = "xml";
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, (String) null);
      String string1 = ">#niM}M//h(K?j";
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl1, ">#niM}M//h(K?j");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer1.getNamespaceURI("sxk");
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix(entityReferenceImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Locale locale1 = new Locale("j4LhTqzE[Gu99ZpV$g5", "5P", "iT1AH< tIx");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale1, "<<unknown namespace>>");
      locale0.getUnicodeLocaleKeys();
      Locale locale2 = Locale.FRENCH;
      locale2.getDisplayScript(locale1);
      dOMNodePointer0.getNamespaceURI("");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer((Node) null, (Locale) null, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer2.printPointerChain();
      dOMNodePointer1.getImmediateNode();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer((Node) null, locale1);
      // Undeclared exception!
      try { 
        dOMNodePointer3.printPointerChain();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) null);
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getBaseValue();
      QName qName0 = new QName("", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      
      dOMNodePointer0.getValue();
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      
      String string1 = DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      assertNotNull(string1);
      assertEquals("#document", string1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTaleElementImp");
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodePointer nodePointer0 = dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      dOMNodePointer0.isLeaf();
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "I^m2?[8");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "Cg0");
      dOMNodePointer0.equals((Object) null);
      nodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI((String) null);
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(entityReferenceImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "aW-CE5~wiS1jf|");
      hTMLButtonElementImpl0.getForm();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer2.getNamespaceResolver();
      dOMNodePointer1.getName();
      QName qName0 = null;
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "Cg0");
      dOMNodePointer1.testNode((NodeTest) nodeNameTest0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLMapElementImpl0, locale0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      Locale locale1 = new Locale("5P", "", "5P");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Z");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "Z");
      Locale locale2 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale2, "$N1");
      locale2.getUnicodeLocaleKeys();
      String string0 = locale0.getDisplayScript(locale1);
      dOMNodePointer0.getNamespaceURI("");
      dOMNodePointer0.printPointerChain();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLCardElementImpl0, locale0);
      QName qName0 = new QName("");
      QName qName1 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      QName qName2 = new QName("I):=iq3{Xj5@C99C&", "I):=iq3{Xj5@C99C&");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) wMLCardElementImpl0, (NodeTest) nodeNameTest0);
      Object object0 = dOMNodePointer1.getValue();
      assertTrue(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLQuoteElementImpl hTMLQuoteElementImpl0 = new HTMLQuoteElementImpl(hTMLDocumentImpl0, "The Element cannot be added as a descendent of itself");
      Locale locale0 = Locale.KOREA;
      hTMLDocumentImpl0.getAttributes();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLQuoteElementImpl0, locale0, "The Element cannot be added as a descendent of itself");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = "Lz!&q]90`+g6Wa1";
      hTMLDocumentImpl0.getHead();
      dOMNodePointer0.getNamespaceURI("Lz!&q]90`+g6Wa1");
      hTMLQuoteElementImpl0.getAttributeNode("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        hTMLQuoteElementImpl0.setAttributeNode((Attr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl1, "sxk");
      hTMLInputElementImpl0.getForm();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "sxk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale0, "sxk");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl1, (String) null);
      String string0 = ">#niM}M//h(K?j";
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl1, ">#niM}M//h(K?j");
      dOMNodePointer0.equals(hTMLInputElementImpl0);
      dOMNodePointer0.getBaseValue();
      dOMNodePointer1.getNamespaceURI("sxk");
      dOMNodePointer0.getDefaultNamespaceURI();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      dOMNodePointer3.getNamespaceResolver();
      QName qName0 = dOMNodePointer3.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xml");
      // Undeclared exception!
      try { 
        dOMNodePointer1.testNode((NodeTest) nodeTypeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      hTMLLegendElementImpl0.cloneNode(false);
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.setValue("");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest1);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      Locale locale1 = new Locale("", "5P", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale1, "xmlns");
      locale1.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
      
      dOMNodePointer0.printPointerChain();
      dOMNodePointer0.getImmediateNode();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.getBaseValue();
      QName qName0 = new QName("S#=\"l1FP06HiJ$");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      QName qName1 = new QName((String) null, "xmlns");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      Object object0 = dOMNodePointer1.getValue();
      assertFalse(object0.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      String string0 = "?L";
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      QName qName0 = new QName("H(W/wO~#~;O.W6J:j");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "SELECT");
      hTMLInputElementImpl0.getForm();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      String string0 = "J";
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: H(W/wO~#~;O.W6J:j
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "L-=KW(", "http://www.w3.org/XML/1998/namespace", "-BOeXt_");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "I<[vVy");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(wMLDocumentImpl0, "L-=KW(");
      dOMNodePointer0.equals((Object) null);
      dOMNodePointer0.getBaseValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIDocumentImpl0);
      dOMNodePointer1.getNamespaceURI("j4LhTqzE[Gu99ZpV$g5");
      dOMNodePointer1.getBaseValue();
      dOMNodePointer1.getDefaultNamespaceURI();
      dOMNodePointer0.getNamespaceResolver();
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "L-=KW(", "http://www.w3.org/XML/1998/namespace", "-BOeXt_");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.getDocumentElement();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "I<[vVy");
      String string0 = "J";
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0, "J");
      dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      dOMNodePointer1.getName();
      dOMNodePointer1.remove();
      // Undeclared exception!
      try { 
        dOMNodePointer1.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(58);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLEmElementImpl wMLEmElementImpl0 = new WMLEmElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) wMLEmElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "";
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      dOMNodePointer0.attributeIterator(qName0);
      HTMLLegendElementImpl hTMLLegendElementImpl1 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.setValue("");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sys");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sys");
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      dOMNodePointer0.getNamespaceURI("1n%|");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      hTMLMetaElementImpl0.setId("<.5W/^4qU");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.UK;
      QName qName1 = new QName("sys");
      QName qName2 = new QName("1n%|", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName2);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest1);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      String string1 = dOMNodePointer0.getNamespaceURI("org.apache.html.dom.HTMLOptGroupElementImpl");
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/@");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLSelectElementImpl0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      namespaceResolver0.setNamespaceContextPointer(dOMNodePointer0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      hTMLTableElementImpl0.getAttributeNodeNS("http://www.w3.org/2000/xmlns/", "l-");
      dOMNodePointer0.setValue(hTMLTableElementImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.childIterator(processingInstructionTest0, false, (NodePointer) null);
      DOMNodePointer.getLocalName(hTMLDocumentImpl0);
      NamespaceResolver namespaceResolver1 = dOMNodePointer0.getNamespaceResolver();
      assertSame(namespaceResolver1, namespaceResolver0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "QXK[OJmj:3 9O";
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "QXK[OJmj:3 9O");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0, "QXK[OJmj:3 9O");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      QName qName1 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: QXK[OJMJ
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.FRANCE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "sxk");
      hTMLInputElementImpl0.getForm();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "HTM012 Argument 'index' is negative.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sxk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLMetaElementImpl0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(deferredDocumentImpl0, "xml");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer1.equals(hTMLMapElementImpl0);
      dOMNodePointer1.getBaseValue();
      dOMNodePointer0.getNamespaceURI((String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("&M<yw&,g", "&M<yw&,g", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      hTMLDocumentImpl0.open();
      HTMLFieldSetElementImpl hTMLFieldSetElementImpl0 = new HTMLFieldSetElementImpl(hTMLDocumentImpl0, "RImG%B;t`xv)j");
      hTMLFieldSetElementImpl0.getTypeNamespace();
      hTMLFieldSetElementImpl0.getPreviousSibling();
      hTMLFieldSetElementImpl0.getForm();
      hTMLDocumentImpl0.getUserData((Node) attr0, (String) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.createElement("");
      HTMLFieldSetElementImpl hTMLFieldSetElementImpl1 = new HTMLFieldSetElementImpl(hTMLDocumentImpl1, "SF\"m6&I");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLFieldSetElementImpl1, (Locale) null);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLFieldSetElementImpl0);
      dOMNodePointer2.namespacePointer("3\"3n~Z= p");
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      dOMNodePointer1.getLength();
      dOMNodePointer1.getNamespaceResolver();
      dOMNodePointer1.isLeaf();
      dOMNodePointer1.getNamespaceURI((String) null);
      dOMNodePointer2.getLanguage();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      dOMNodePointer1.getNamespaceURI();
      assertEquals("HTTP://WWW.W3.ORG/XML/1998/NAMESPACE", qName0.toString());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      coreDocumentImpl0.getNodeName();
      coreDocumentImpl0.getReadOnly();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(coreDocumentImpl0, "", "", "'>rl<W2g>\"=<KU");
      pSVIAttrNSImpl0.getOwnerElement();
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Locale.getISOCountries();
      dOMNodePointer0.isLanguage("@UnB9k");
      dOMNodePointer0.isCollection();
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) locale0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      QName qName0 = new QName("H(W/wO~#~;O.W6J:j");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "SELECT");
      hTMLInputElementImpl0.getForm();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "SELECT");
      dOMNodePointer0.equals(entityReferenceImpl0);
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getNamespaceURI("H(W/wO~#~;O.W6J:j");
      dOMNodePointer0.getBaseValue();
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.getNamespaceResolver();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "_oy?x'E|F");
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      HTMLFieldSetElementImpl hTMLFieldSetElementImpl0 = new HTMLFieldSetElementImpl(hTMLDocumentImpl0, "RImG%B;t`xv)j");
      hTMLFieldSetElementImpl0.getTypeNamespace();
      hTMLFieldSetElementImpl0.getPreviousSibling();
      hTMLFieldSetElementImpl0.getForm();
      hTMLDocumentImpl0.getUserData((Node) null, "Q");
      Element element0 = hTMLDocumentImpl0.createElement("Q");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("Q");
      NamespaceResolver namespaceResolver0 = new NamespaceResolver();
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      nodePointer0.getLength();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      dOMNodePointer0.getLanguage();
      String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(55);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl1, "sxk");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sxk");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      dOMNodePointer0.getNamespaceURI("1n%|");
      dOMNodePointer0.getValue();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.printPointerChain();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLMetaElementImpl0, (Locale) null);
      dOMNodePointer2.getImmediateNode();
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl1, (NodeTest) nodeTypeTest0);
      Object object0 = dOMNodePointer2.getValue();
      dOMNodePointer0.setValue(set0);
      assertFalse(set0.contains(object0));
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W<cwY~=8Y@6JN");
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl((HTMLDocumentImpl) null, "lrg}u'P*CKh|ym~HtN");
      Locale locale0 = Locale.GERMAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "<<unknown namespace>>", "[^gV<bhM7w?ci", "w1y2KJ|:6gK");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(pSVIDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      NodePointer nodePointer0 = dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.namespacePointer((String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "L-=KW(", (String) null, "org.apache.html.dom.HTMLTableElementImpl");
      QName qName0 = new QName("L-=KW(");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      documentTypeImpl0.addEventListener("http://www.w3.org/XML/1998/namespace", (EventListener) null, true);
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) nodeNameTest0);
      dOMNodePointer0.getValue();
      nodePointer0.setValue((Object) null);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) nodePointer0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.FRANCE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLInputElementImpl hTMLInputElementImpl0 = new HTMLInputElementImpl(hTMLDocumentImpl0, "sxk");
      hTMLInputElementImpl0.getForm();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "HTM012 Argument 'index' is negative.");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0, "sxk");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLMetaElementImpl0);
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(deferredDocumentImpl0, "xml");
      HTMLMapElementImpl hTMLMapElementImpl0 = new HTMLMapElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer1.equals(hTMLMapElementImpl0);
      dOMNodePointer1.getBaseValue();
      dOMNodePointer0.getNamespaceURI((String) null);
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      dOMNodePointer2.getNamespaceResolver();
      QName qName0 = dOMNodePointer2.getName();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Cannot replace the root object");
      QName qName1 = new QName("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName1);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest1);
      // Undeclared exception!
      try { 
        dOMNodePointer1.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      locale0.getUnicodeLocaleAttributes();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.getImmediateNode();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.setTitle("org.apache.html.dom.HTMLTableElementImpl");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.getValuePointer();
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.namespacePointer("6e^-'0kFd");
      QName qName0 = new QName((String) null, "6e^-'0kFd");
      dOMNodePointer0.attributeIterator(qName0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "L-=KW(", (String) null, "-G%wC`T j_)n:r");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      locale0.getDisplayLanguage();
      WMLUElementImpl wMLUElementImpl0 = new WMLUElementImpl(wMLDocumentImpl0, (String) null);
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) hTMLHeadingElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      NodePointer nodePointer0 = null;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Attr attr0 = hTMLDocumentImpl0.createAttributeNS("&M<yw&,g", "&M<yw&,g", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attr0);
      hTMLDocumentImpl0.open();
      dOMNodePointer0.getNamespaceResolver();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      hTMLLegendElementImpl0.normalize();
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(hTMLLegendElementImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // DOM008 Not found
         //
         verifyException("org.apache.xerces.dom.AttrImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "";
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLegendElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      hTMLLegendElementImpl0.cloneNode(false);
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.setValue("");
      TypeConverter typeConverter0 = mock(TypeConverter.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "rygKF##_pc^");
      dOMNodePointer0.setAttribute(true);
      dOMNodePointer0.getLength();
      dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) coreDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = null;
      String string0 = "C^xbmUV1Z/";
      WMLFieldsetElementImpl wMLFieldsetElementImpl0 = new WMLFieldsetElementImpl((WMLDocumentImpl) null, "C^xbmUV1Z/");
      Locale locale0 = Locale.KOREA;
      wMLFieldsetElementImpl0.normalize();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLFieldsetElementImpl0, locale0);
      dOMNodePointer0.isActual();
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLMetaElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, hTMLMetaElementImpl0);
      QName qName1 = dOMNodePointer1.getName();
      assertEquals("HTTP://WWW.W3.ORG/XML/1998/NAMESPACE", qName1.toString());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Variables variables0 = null;
      Node node0 = null;
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      NodePointer nodePointer0 = dOMNodePointer0.getImmediateValuePointer();
      nodePointer0.isActual();
      QName qName0 = new QName("<<unknown namespace>>");
      nodePointer0.namespacePointer("g");
      String string0 = "option";
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "option");
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) null, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = null;
      Locale locale0 = new Locale("I):=iq3{Xj5@C99C&", "0n661b(c,RCQ", "I):=iq3{Xj5@C99C&");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "I):=iq3{Xj5@C99C&");
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      dOMNodePointer0.getNamespaceURI("");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = null;
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl((HTMLDocumentImpl) null, "");
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) hTMLHeadElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getElementById("");
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      Locale locale0 = Locale.PRC;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = null;
      String string0 = "`N[xE4k[_z2;fd}9^";
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl((HTMLDocumentImpl) null, "`N[xE4k[_z2;fd}9^");
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDListElementImpl0, locale0, "4*");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      SymbolTable symbolTable0 = new SymbolTable(0);
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      CachingParserPool.ShadowedGrammarPool cachingParserPool_ShadowedGrammarPool0 = new CachingParserPool.ShadowedGrammarPool(xMLGrammarPoolImpl0);
      IntegratedParserConfiguration integratedParserConfiguration0 = new IntegratedParserConfiguration(symbolTable0, cachingParserPool_ShadowedGrammarPool0);
      Locale locale0 = integratedParserConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      String string0 = dOMNodePointer0.getNamespaceURI("|0y]/cLYG&AOkOS");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      String string0 = "2cAvz61`,j3O_";
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "2cAvz61`,j3O_");
      hTMLTextAreaElementImpl0.getForm();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Node node0 = hTMLDocumentImpl0.cloneNode(true);
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
      dOMNodePointer0.hashCode();
      // Undeclared exception!
      try { 
        locale0.getUnicodeLocaleType("<<unknown namespace>>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ill-formed Unicode locale key: <<unknown namespace>>
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.FRANCE;
      String string0 = "disabled";
      deferredDocumentImpl0.createDeferredProcessingInstruction("c0o%pHN?+Ilr", "disabled");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      dOMNodePointer0.getValuePointer();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) deferredDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "H");
      hTMLDocumentImpl0.hasAttributes();
      HTMLElement hTMLElement0 = hTMLTableRowElementImpl0.insertCell(0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLElement0);
      dOMNodePointer0.getLength();
      dOMNodePointer0.namespacePointer((String) null);
      HTMLParamElementImpl hTMLParamElementImpl0 = new HTMLParamElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) hTMLParamElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHtmlElementImpl hTMLHtmlElementImpl0 = new HTMLHtmlElementImpl(hTMLDocumentImpl0, "r");
      Locale locale0 = Locale.CHINESE;
      hTMLDocumentImpl0.getElementsByName("r");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLHtmlElementImpl0, locale0);
      dOMNodePointer0.getBaseValue();
      boolean boolean0 = dOMNodePointer0.isLeaf();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLFieldSetElementImpl hTMLFieldSetElementImpl0 = new HTMLFieldSetElementImpl(hTMLDocumentImpl0, "xM}~r");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("processing-instruction");
      DOMNodePointer.testNode((Node) hTMLFieldSetElementImpl0, (NodeTest) processingInstructionTest0);
      hTMLDocumentImpl0.getHead();
      String string0 = "Y@<E[3{qa%D:y::w4-N";
      QName qName0 = new QName("Y@<E[3{qa%D:y::w4-N");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) "xM}~r");
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }
}
