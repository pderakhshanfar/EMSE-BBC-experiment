/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 21:14:36 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.XmlTreeBuilder;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("noframes", "noframes");
      Element element0 = document0.createElement("noframes");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Document.createShell("n}dr;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("n}dr;&.", document0, "n}dr;&.", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.getActiveFormattingElement("org.jsoup.nodes.Element$NodeList");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
      assertEquals(0, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = new Document("{");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("{", document0, "{", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Document document1 = (Document)htmlTreeBuilder0.removeLastFormattingElement();
      assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.push(document0);
      boolean boolean0 = htmlTreeBuilder0.inListItemScope("o&'J:Bcted9'bhrWq: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = new Document("~_");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("org.jsoup.select.StructuralEvaluator$Parent", (Element) null, "c}yL", parser0);
      htmlTreeBuilder0.push(document0);
      htmlTreeBuilder0.insertOnStackAfter(document0, (Element) null);
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      htmlTreeBuilder0.push(document0);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToClose(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      parser0.setTreeBuilder(htmlTreeBuilder0);
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InFrameset;
      htmlTreeBuilder0.error(htmlTreeBuilderState0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InRow;
      htmlTreeBuilder0.transition(htmlTreeBuilderState0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.setFormElement((FormElement) null);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.newPendingTableCharacters();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.markInsertionMode();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.generateImpliedEndTags();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.framesetOk(true);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      htmlTreeBuilder0.push(document0);
      htmlTreeBuilder0.replaceOnStack(document0, document0);
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = new Document("~_");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("html", document0, "~_", parser0);
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      String string0 = htmlTreeBuilder0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      htmlTreeBuilder0.state();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "utton", parser0);
      Tag tag0 = Tag.valueOf("tbody");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "tfoot", attributes0);
      htmlTreeBuilder0.pushActiveFormattingElements(pseudoTextElement0);
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertEquals("tfoot", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = new Document("{");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("{", document0, "{", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.reconstructFormattingElements();
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertEquals(1, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "SNkSYp!N5WT;8<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5WT;8<H%IU", document0, "SNkSYp!N5WT;8<H%IU", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      Token.Comment token_Comment0 = new Token.Comment();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterBody;
      boolean boolean0 = htmlTreeBuilder0.process(token_Comment0, htmlTreeBuilderState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("ir`C-han;$o/K<$+M", document0, "ir`C-han;$o/K<$+M", parser0);
      Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
      Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InCaption;
      boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("object", (Element) null, "object", parser0);
      Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
      Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
      boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("col", (Element) null, "col", parser0);
      htmlTreeBuilder0.push((Element) null);
      Element element0 = htmlTreeBuilder0.pop();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      htmlTreeBuilder0.push(document0);
      htmlTreeBuilder0.insertInFosterParent(document0);
      assertEquals(1, document0.siblingIndex());
      
      Element element0 = htmlTreeBuilder0.pop();
      assertEquals(1, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      htmlTreeBuilder0.push(document0);
      Element element0 = htmlTreeBuilder0.pop();
      assertFalse(element0.isBlock());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      Element element0 = htmlTreeBuilder0.pop();
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.originalState();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      boolean boolean0 = htmlTreeBuilder0.onStack(formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      boolean boolean0 = htmlTreeBuilder0.onStack(document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      Element element0 = htmlTreeBuilder0.lastFormattingElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("frame", (Element) null, "frame", parser0);
      assertEquals(1, list0.size());
      
      Element element0 = new Element("style");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.lastFormattingElement();
      assertNotNull(element1);
      assertEquals(0, element1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Document.createShell("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.lastFormattingElement();
      assertFalse(element0.isBlock());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("tr", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "32{&aGqa!", attributes0);
      boolean boolean0 = htmlTreeBuilder0.isSpecial(pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "&Y");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5WT;8<H%IU", document0, "&Y", parser0);
      assertEquals(1, list0.size());
      
      Tag tag0 = Tag.valueOf("header");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "footer", attributes0);
      htmlTreeBuilder0.pushActiveFormattingElements(pseudoTextElement0);
      boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      Tag tag0 = Tag.valueOf("5W");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "4U!dfkpd4?T", attributes0);
      boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;18<H%IU", "SNkSYp!N5WT;18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5WT;18<H%IU", document0, "SNkSYp!N5WT;18<H%IU", parser0);
      boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("+(DycV1", (Element) null, "+(DycV1", parser0);
      htmlTreeBuilder0.insertStartTag("ctml");
      Element element0 = htmlTreeBuilder0.insertStartTag("+(DycV1");
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
      assertEquals(0, element0.siblingIndex());
      assertEquals("button", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment("caption", document0, "caption", parser0);
      CharacterReader characterReader0 = new CharacterReader("noscript");
      ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("caption", attributes0);
      Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
      assertEquals("caption", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("swhl<ct");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("SNkSYp!N5Wy18<H%IU", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      CharacterReader characterReader0 = new CharacterReader("swhl<ct");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("SNkSYp!N5Wy18<H%IU", attributes0);
      Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
      assertEquals("SNkSYp!N5Wy18<H%IU", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SfkSYp!N5Wy18<H%IU", "SfkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SfkSYp!N5Wy18<H%IU", document0, "SfkSYp!N5Wy18<H%IU", parser0);
      boolean boolean0 = htmlTreeBuilder0.inTableScope("html");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("org.jsoup.select.Evaluator$Attribute", (Element) null, "org.jsoup.select.Evaluator$Attribute", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.inTableScope("?P5=L$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("table");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "table", attributes0);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.push(pseudoTextElement0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "li";
      stringArray0[1] = "table";
      boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      assertEquals(1, list0.size());
      
      String[] stringArray0 = new String[5];
      stringArray0[2] = ":matchesOwn(%s)";
      stringArray0[3] = ":matchesOwn(%s)";
      stringArray0[4] = ":matchesOwn(%s)";
      boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      String[] stringArray0 = new String[0];
      boolean boolean0 = htmlTreeBuilder0.inScope("button", stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("ul", document0, "InFrameset", parser0);
      String[] stringArray0 = new String[2];
      boolean boolean0 = htmlTreeBuilder0.inScope("5s: 5(L.{Gv_:d_J 0", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("+(DycV1", (Element) null, "+(DycV1", parser0);
      Element element0 = htmlTreeBuilder0.insertStartTag("ctml");
      assertEquals(1, element0.siblingIndex());
      
      boolean boolean0 = htmlTreeBuilder0.inScope("ctml");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = new Document("scrits");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("scrits", document0, "scrits", parser0);
      assertEquals(1, list0.size());
      
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("scrits", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag1, true);
      boolean boolean0 = htmlTreeBuilder0.inListItemScope("scrits");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("table");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "header", attributes0);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.push(pseudoTextElement0);
      boolean boolean0 = htmlTreeBuilder0.inButtonScope("table");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("~_");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("html", document0, "~_", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.popStackToBefore("org.jsoup.parser.Parser");
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("th", "th");
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("th", document0, "th", parser0);
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;18<H%IU", "SNkSYp!N5WT;18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5WT;18<H%IU", document0, "SNkSYp!N5WT;18<H%IU", parser0);
      List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("", (Element) null, "frameset", parser0);
      Element element0 = htmlTreeBuilder0.getHeadElement();
      assertEquals("frameset", element0.baseUri());
      assertEquals(0, element0.siblingIndex());
      assertEquals(0, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Element element0 = new Element("+QRhcV1");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.setHeadElement(element0);
      Element element1 = htmlTreeBuilder0.getHeadElement();
      assertEquals("+QRhcV1", element1.nodeName());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("col", (Element) null, "col", parser0);
      Element element0 = htmlTreeBuilder0.getFromStack("coml");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("table");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "header", attributes0);
      htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      htmlTreeBuilder0.push(pseudoTextElement0);
      Element element0 = htmlTreeBuilder0.getFromStack("table");
      assertFalse(element0.hasParent());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "utton", parser0);
      CharacterReader characterReader0 = new CharacterReader("swhl<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("utton", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Token.Character token_Character0 = tokeniser0.charPending;
      htmlTreeBuilder0.insert(token_Character0);
      Element element0 = htmlTreeBuilder0.getFromStack("utton");
      assertEquals("utton", element0.nodeName());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Token.Comment token_Comment0 = tokeniser0.commentPending;
      htmlTreeBuilder0.insert(token_Comment0);
      FormElement formElement0 = htmlTreeBuilder0.getFormElement();
      assertEquals(1, formElement0.childNodeSize());
      assertEquals("button", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("3,O1xbZ<Df|6K>M");
      htmlTreeBuilder0.initialiseParse(stringReader0, ">tgSc+GSt*MCJh>T", parser0);
      Document document0 = htmlTreeBuilder0.getDocument();
      assertFalse(document0.hasParent());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      Document document1 = htmlTreeBuilder0.getDocument();
      assertFalse(document1.isBlock());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertEquals("button", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "AttributeName");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("utton", document0, "", parser0);
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Element element0 = new Element("th");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("th", element0, "th", parser0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("th", attributes0);
      Element element1 = htmlTreeBuilder0.insert(token_StartTag1);
      htmlTreeBuilder0.pushActiveFormattingElements(element1);
      Element element2 = htmlTreeBuilder0.getActiveFormattingElement("th");
      assertTrue(element2.hasParent());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("1-", (Element) null, "yKAKs@?", parser0);
      Document document0 = new Document("q<");
      Document document1 = document0.normalise();
      htmlTreeBuilder0.pushActiveFormattingElements(document1);
      Document document2 = (Document)htmlTreeBuilder0.getActiveFormattingElement("#root");
      assertFalse(document2.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", (Element) null, "frameset", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.framesetOk();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.framesetOk();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("object", (Element) null, "object", parser0);
      htmlTreeBuilder0.push((Element) null);
      htmlTreeBuilder0.push((Element) null);
      Element element0 = htmlTreeBuilder0.aboveOnStack((Element) null);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = new Document("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.push(document0);
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      CDataNode cDataNode0 = new CDataNode("5VvYz!32l9?");
      Attributes attributes0 = cDataNode0.attributes();
      token_StartTag0.nameAttr("<#S4?Ua", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Element element0 = htmlTreeBuilder0.aboveOnStack(formElement0);
      assertNotNull(element0);
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("", (Element) null, "", parser0);
      htmlTreeBuilder0.push((Element) null);
      Element element0 = htmlTreeBuilder0.aboveOnStack((Element) null);
      assertNotNull(element0);
      
      htmlTreeBuilder0.replaceOnStack((Element) null, element0);
      assertEquals(1, element0.siblingIndex());
      assertEquals("body", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.resetInsertionMode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeLastFormattingElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeFromStack((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("+ULG DwF3+", "+ULG DwF3+");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.reconstructFormattingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTableBody;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilderState$13", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      CharacterReader characterReader0 = new CharacterReader("");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("E+czay", attributes0);
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHtml;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_StartTag1, htmlTreeBuilderState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.Character;
      token_Comment0.type = token_TokenType0;
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_Comment0, htmlTreeBuilderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_StartTag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parse("e\"j]%", "");
      htmlTreeBuilder0.parseFragment("", document0, "", parser0);
      Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      CDataNode cDataNode0 = new CDataNode("body");
      Attributes attributes0 = cDataNode0.attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", attributes0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_StartTag1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Document.createShell("SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.TokenType token_TokenType0 = Token.TokenType.Character;
      token_StartTag0.type = token_TokenType0;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_StartTag0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToClose("@W$:Vy7\"g1,v$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToBefore("?I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      StringReader stringReader0 = new StringReader("");
      Document document0 = xmlTreeBuilder0.parse(stringReader0, "");
      Elements elements0 = document0.siblingElements();
      htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      document0.appendTo(document0);
      // Undeclared exception!
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("details");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.parseFragment("details", document0, "select", (Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("CkP+");
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.parseFragment("&`xVa&59Uoc#)52X;k", document0, (String) null, parser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.onStack((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.lastFormattingElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.isSpecial((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertStartTag(",[$zGi{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertStartTag("pre");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("embed");
      FormElement formElement0 = new FormElement(tag0, "e{bed", attributes0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertOnStackAfter(formElement0, formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      htmlTreeBuilder0.popStackToBefore(":matchesOwn(%s)");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "R^y]Dq");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("}9L+VH14!,9<O;Cb", document0, "e@D{eR}dh}tT^5fG;", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertForm((Token.StartTag) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert((Token.StartTag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.Character token_Character0 = new Token.Character();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_Character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("inC5t", (Element) null, "inC5t", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      PipedReader pipedReader0 = new PipedReader();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.initialiseParse(pipedReader0, "compact", (Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      PipedReader pipedReader0 = new PipedReader(100);
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.initialiseParse(pipedReader0, "area", parser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inSelectScope("menu");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope("tbody", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope("9#5.Z:F.li;{H;n'y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inButtonScope("uFk?i7ywca-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.getFromStack("2XnBM\u0003|8=D{gip");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.getActiveFormattingElement((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InColumnGroup;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("menu", (Element) null, "]_/vtWn%HHP)euq+r`", parser0);
      Attributes attributes0 = new Attributes();
      htmlTreeBuilder0.popStackToClose(":ei");
      CharacterReader characterReader0 = new CharacterReader("menu");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("0t@N+9w8KK{7#A2O-Si", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, true);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack(formElement0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("O", (Element) null, "O", parser0);
      htmlTreeBuilder0.popStackToClose("wbr");
      htmlTreeBuilder0.resetInsertionMode();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<![CDATA[", "SNkSYp!N5Wy18<H%IU");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.selfClosing = true;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_StartTag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("table");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "table", attributes0);
      htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      htmlTreeBuilder0.push(pseudoTextElement0);
      htmlTreeBuilder0.insertInFosterParent(pseudoTextElement0);
      htmlTreeBuilder0.insertInFosterParent(pseudoTextElement0);
      assertEquals(1, pseudoTextElement0.siblingIndex());
      assertEquals(0, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("numeric reference with no numerals", (Element) null, "object", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      Element element0 = htmlTreeBuilder0.getActiveFormattingElement((String) null);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Document.createShell("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      htmlTreeBuilder0.pushActiveFormattingElements(formElement0);
      htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", (Element) null, "TreeBuilder{currentToken=", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3OxbZ<Df|6K>M", "3OxbZ<Df|6K>M");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment("P8Y5w/Gqfg{V^yh:", document0, "U*dGZHO5tz5=T'MX)", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = new Document("5`");
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("5`", document0, "5`", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.processStartTag("noscript");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.reconstructFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("f9@wId)3W'j=ezy", (Element) null, "\"=]'=|nEPK0h}4E", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      Document document0 = htmlTreeBuilder0.doc;
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.reconstructFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Document.createShell("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      ParseSettings parseSettings0 = htmlTreeBuilder0.settings;
      Tag tag0 = Tag.valueOf("rt", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "CommentEndBang", (Attributes) null);
      PseudoTextElement pseudoTextElement1 = new PseudoTextElement(tag0, "ry{ :WDS", (Attributes) null);
      pseudoTextElement0.attr("frameset", true);
      htmlTreeBuilder0.pushActiveFormattingElements(pseudoTextElement0);
      htmlTreeBuilder0.pushActiveFormattingElements(pseudoTextElement1);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("th", "th");
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("th", document0, "th", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      assertEquals(0, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkYp!N5y18<H%", "SNkYp!N5y18<H%");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("jIv;dtff.@b", document0, "SNkYp!N5y18<H%", parser0);
      ParseSettings parseSettings0 = htmlTreeBuilder0.settings;
      Tag tag0 = Tag.valueOf("SNkYp!N5y18<H%", parseSettings0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "rt", (Attributes) null);
      htmlTreeBuilder0.pushActiveFormattingElements(pseudoTextElement0);
      htmlTreeBuilder0.reconstructFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;18<H%IU", "SNkSYp!N5WT;18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5WT;18<H%IU", document0, "SNkSYp!N5WT;18<H%IU", parser0);
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      htmlTreeBuilder0.generateImpliedEndTags("marquee");
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      htmlTreeBuilder0.insertStartTag("menu");
      htmlTreeBuilder0.generateImpliedEndTags("menu");
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.generateImpliedEndTags("marquee");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      htmlTreeBuilder0.insertStartTag("menu");
      boolean boolean0 = htmlTreeBuilder0.inSelectScope("menu");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parse("e\"j]%", "");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", document0, "", parser0);
      assertTrue(list0.isEmpty());
      
      boolean boolean0 = htmlTreeBuilder0.inSelectScope("coml");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("object");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("cMDt<U>%setPD&8vS", document0, "object", parser0);
      htmlTreeBuilder0.popStackToClose("object");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inSelectScope("h9$p )3k,,G*>6<`'`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Should not be reachable
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      boolean boolean0 = htmlTreeBuilder0.inButtonScope("html");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      htmlTreeBuilder0.insert(document0);
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("button", attributes0);
      boolean boolean0 = htmlTreeBuilder0.process(token_StartTag1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("+(DycV1", (Element) null, "+(DycV1", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.inScope("ctml");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("+(DycV1", (Element) null, "+(DycV1", parser0);
      htmlTreeBuilder0.insertStartTag("ctml");
      htmlTreeBuilder0.resetInsertionMode();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Tag tag0 = Tag.valueOf("html", (ParseSettings) null);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "]p>cwpU", attributes0);
      pseudoTextElement0.append("thead");
      assertEquals(2, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("frameset", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "zzkO_S", attributes0);
      Element element0 = pseudoTextElement0.append("org.jsoup.parser.TreeBuilder");
      assertEquals(0, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      CDataNode cDataNode0 = new CDataNode(";m&}9Q%x");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "head", attributes0);
      pseudoTextElement0.append("HzBj[(xiH[*jbq-b*_");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("colgroup", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "J^~B[rrYX~m^({", attributes0);
      Element element0 = pseudoTextElement0.append("J^~B[rrYX~m^({");
      assertEquals(0, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("caption", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mOlyvzwQe'AOM", (Attributes) null);
      pseudoTextElement0.append("SNkSYp!N5Wy18<H%IU");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseSettings parseSettings0 = htmlTreeBuilder0.settings;
      Tag tag0 = Tag.valueOf("tfoot", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "$Y?", attributes0);
      pseudoTextElement0.append("mduU");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("thead", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "o", attributes0);
      pseudoTextElement0.append("SNkSYp!N5Wy18<H%IU");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("tbody", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "4U!dfkpd4?T", attributes0);
      pseudoTextElement0.append("template");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Tag tag0 = Tag.valueOf("tr");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "tr", attributes0);
      pseudoTextElement0.append("tr");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Tag tag0 = Tag.valueOf("td");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "select", attributes0);
      pseudoTextElement0.append("address");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("select", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "_", attributes0);
      pseudoTextElement0.append("`KL)^>6mIlt:'YP5Rs");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "SNkSYp!N5WT;8<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("rt", document0, "SNkSYp!N5WT;8<H%IU", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
      assertFalse(document0.hasParent());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Document document0 = Document.createShell("O");
      htmlTreeBuilder0.parseFragment("O", document0, ":has", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      token_StartTag0.nameAttr("button", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertOnStackAfter(document0, formElement0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      htmlTreeBuilder0.insert(document0);
      token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      Element element0 = htmlTreeBuilder0.aboveOnStack(document0);
      assertNotNull(element0);
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Document.createShell("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack(document0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      htmlTreeBuilder0.push(document0);
      htmlTreeBuilder0.clearStackToTableRowContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Element element0 = new Element("object");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("thead", element0, "tr", parser0);
      htmlTreeBuilder0.insertStartTag("thead");
      htmlTreeBuilder0.clearStackToTableBodyContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Document.createShell("n}dr]M;&.");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("n}dr]M;&.", document0, "n}dr]M;&.", parser0);
      htmlTreeBuilder0.clearStackToTableContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("org.jsoup.select.Evaluator$Attribute", (Element) null, "org.jsoup.select.Evaluator$Attribute", parser0);
      htmlTreeBuilder0.popStackToBefore("menu");
      htmlTreeBuilder0.clearStackToTableRowContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, ":matchesOwn(%s)", parser0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "html";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "SNkSYp!N5Wy18<H%IU", parser0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "SNkSYp!N5Wy18<H%IU";
      stringArray0[1] = "SNkSYp!N5Wy18<H%IU";
      stringArray0[2] = "menu";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkYp!N5y18<H%", "SNkYp!N5y18<H%");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("jIv;dtff.@b", document0, "SNkYp!N5y18<H%", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.popStackToClose("jIv;dtff.@b");
      boolean boolean0 = htmlTreeBuilder0.processStartTag("rt");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("eutu%afv{![x&)j8", document0, "eutu%afv{![x&)j8", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.push(document0);
      boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = new Document("~_");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("662OK{m_Bp\"~-", document0, "EUtu%afV{![X&)j8", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Element element0 = new Element("hfead");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("hfead", element0, "hfead", parser0);
      htmlTreeBuilder0.setFosterInserts(true);
      Element element1 = htmlTreeBuilder0.insertStartTag("Ftml");
      assertEquals(1, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "AttributeName");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("utton", document0, "", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("SNkSYp!N5WT;8<H%IU");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, (-275));
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("SNkSYp!N5WT;8<H%IU", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
      assertEquals("", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("table");
      parser0.setTrackErrors(365);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "header", attributes0);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;18<H%IU", "SNkSYp!N5WT;18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.maybeSetBaseUri(document0);
      assertEquals("SNkSYp!N5WT;18<H%IU", document0.location());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Tag tag0 = Tag.valueOf("A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "A2", attributes0);
      htmlTreeBuilder0.parseFragment("!{!", formElement0, "rp", parser0);
      FormElement formElement1 = htmlTreeBuilder0.getFormElement();
      assertEquals("A2", formElement1.baseUri());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Tag tag0 = Tag.valueOf("plaintext");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "table", attributes0);
      pseudoTextElement0.append("hJ~+UeH");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("-]y?R/J*E/o=z");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("noscript");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "h4", attributes0);
      pseudoTextElement0.append("h4");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = new Document("~_");
      Parser parser0 = Parser.xmlParser();
      Element element0 = document0.createElement("script");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("org.jsoup.parser.HtmlTreeBuilder", element0, "~_", parser0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Tag tag0 = Tag.valueOf("style");
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "SNkSYp!N5Wy18<H%IU", attributes0);
      pseudoTextElement0.append("[3f_^Z!4>YL-cK");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Tag tag0 = Tag.valueOf("title");
      CDataNode cDataNode0 = new CDataNode("wbr");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "title", attributes0);
      pseudoTextElement0.append("K6]H}\"WG");
      assertEquals(1, pseudoTextElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inTableScope("e5gfiA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.Comment token_Comment0 = tokeniser0.commentPending;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_Comment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5WT;8<H%IU", "SNkSYp!N5WT;8<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.push(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.getDocument();
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.state();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      FormElement formElement0 = htmlTreeBuilder0.getFormElement();
      assertNull(formElement0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkSYp!N5Wy18<H%IU", "SNkSYp!N5Wy18<H%IU");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("SNkSYp!N5Wy18<H%IU", document0, "button", parser0);
      assertEquals(1, list0.size());
      
      CharacterReader characterReader0 = new CharacterReader("sw1l<ct");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("button", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag0, true);
      boolean boolean0 = htmlTreeBuilder0.process(token_StartTag1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("table", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "header", attributes0);
      htmlTreeBuilder0.parseFragment("table", pseudoTextElement0, "li", parser0);
      htmlTreeBuilder0.push(pseudoTextElement0);
      htmlTreeBuilder0.popStackToBefore("table");
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<html>\n <head />\n <body>\n  O\n </body>\n</html>", "VEYQxLC&C8");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inListItemScope("o&'J:Bcted9'bhrWq: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Document.createShell("SNkSYnp!N5Wy18H%I");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("SNkSYnp!N5Wy18H%I", document0, "SNkSYnp!N5Wy18H%I", parser0);
      htmlTreeBuilder0.processEndTag((String) null);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("th", "th");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("th", document0, "th", parser0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("th", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag1, true);
      FormElement formElement0 = htmlTreeBuilder0.getFormElement();
      assertEquals(0, formElement0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = htmlTreeBuilder0.getHeadElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = new Document("eutu%afv{![x&)j8");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("SNkYp!N5y18<H%", "SNkYp!N5y18<H%");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("jIv;dtff.@b", document0, "SNkYp!N5y18<H%", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.reconstructFormattingElements();
      htmlTreeBuilder0.lastFormattingElement();
  }
}
