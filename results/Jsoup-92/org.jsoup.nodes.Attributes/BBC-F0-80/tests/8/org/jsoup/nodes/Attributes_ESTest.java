/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 15:33:16 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Iterator;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Attributes$1", "Must be false");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes0.equals(attributes1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      Attributes attributes1 = new Attributes();
      attributes1.equals(attributes0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[@x__O|2CH", ".g3MB!0&I5*u");
      Attribute attribute0 = new Attribute(".g3MB!0&I5*u", "[@x__O|2CH", attributes1);
      attributes1.put(attribute0);
      attributes0.removeIgnoreCase(".g3MB!0&I5*u");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[@x__O|2CH", ".g3MB!0&I5*u");
      Attributes attributes2 = attributes1.put("Nqzd9^(", true);
      Attribute attribute0 = new Attribute(".g3MB!0&I5*u", "[@x__O|2CH", attributes1);
      Attributes attributes3 = attributes0.put("^h/b 0txp?-", true);
      Attributes attributes4 = attributes2.put(attribute0);
      attributes4.put("AfterDoctypeSystemIdentifier", "Nqzd9^(");
      attributes3.addAll(attributes0);
      assertEquals(5, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("01", "org.jsoup.parser.XmlTreeBuilder");
      attributes0.toString();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      int int0 = attributes0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Iterator<Attribute> iterator0 = attributes0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("", "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.jsoup.nodes.Attributes";
      attributes0.keys = stringArray0;
      int int0 = attributes0.indexOfKey("org.jsoup.nodes.Attributes");
      assertEquals(1, attributes0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("5O0/~2dPcC;eh6", "FzBaj<");
      attributes0.putIgnoreCase("<fDV", "data-");
      int int0 = attributes0.indexOfKey("<fDV");
      assertEquals(2, attributes0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      int int0 = attributes0.indexOfKey("U");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.html();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes");
      attributes0.getIgnoreCase("org.jsoup.nodes.Attributes");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = Attributes.checkNotNull(" org.jsoup.nodes.attributes$1=\"must be false\"");
      assertEquals(" org.jsoup.nodes.attributes$1=\"must be false\"", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = Attributes.checkNotNull("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("br", false);
      Attribute attribute0 = Attribute.createFromEncoded("br", " 5IQiT?");
      Attributes attributes2 = attributes0.put(attribute0);
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        attributes2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("hx9FsA", "hx9FsA");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = new Attribute(";,N%j#(]DR:", "_u<SXubd!v&u<H}6", attributes1);
      Attributes attributes2 = attributes1.put(attribute0);
      attributes1.vals = null;
      // Undeclared exception!
      try { 
        attributes2.removeIgnoreCase(";,N%j#(]DR:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.removeIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put(")]W*Jp=xn4_j6lh\"Uz", ")]W*Jp=xn4_j6lh\"Uz");
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.removeIgnoreCase(")]W*Jp=xn4_j6lh\"Uz");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("w", "w");
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes1.remove("W&F>zkdFV]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.remove((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("h3Tt)fX'U__", "h3Tt)fX'U__");
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      // Undeclared exception!
      try { 
        attributes1.remove("h3Tt)fX'U__");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("9", ".h");
      attributes1.vals = null;
      // Undeclared exception!
      try { 
        attributes0.putIgnoreCase(";", ", state=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.putIgnoreCase((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("9", "9");
      String[] stringArray0 = new String[2];
      attributes1.vals = stringArray0;
      Attribute attribute0 = Attribute.createFromEncoded("^Q", ".h");
      attributes1.put(attribute0);
      // Undeclared exception!
      try { 
        attributes1.putIgnoreCase(";", ", state=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      Attribute attribute0 = Attribute.createFromEncoded("h5", "h5");
      // Undeclared exception!
      try { 
        attributes0.put(attribute0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      attributes0.keys = stringArray0;
      Attribute attribute0 = Attribute.createFromEncoded("", "");
      // Undeclared exception!
      try { 
        attributes0.put(attribute0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes0.put("TF", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.put((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("$21^", "fx");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.put("}", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.vals = null;
      // Undeclared exception!
      try { 
        attributes0.put("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.put((String) null, "a!&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[9];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.put("", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("Qwc", "Y>fUl%5");
      attributes0.put(attribute0);
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes0.normalize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("hx9FsA", "hx9FsA");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.normalize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("id", "");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        attributes1.indexOfKey("id");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.indexOfKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("*D-", "autofocus");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.indexOfKey("!b7S");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded(":_X%JGjyAri)", "m");
      attributes0.put(attribute0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "m");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        attributes0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("DyPF1<!Q", "");
      attributes0.put(attribute0);
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        attributes0.html((Appendable) charBuffer0, (Document.OutputSettings) null);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" org.jsoup.nodes.Attributes=\"org.jsoup.nodes.Attributes\" org.jsoup.nodes.Attributes$Dataset$EntrySet=\":a*Qph*?b#18S{@\"");
      // Undeclared exception!
      try { 
        attributes0.html((Appendable) mockPrintWriter0, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("x", "x");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        attributes0.html((Appendable) null, document_OutputSettings0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put(" org.jsoup.nodes.attributes$1=\"must be false\"", "org.jsoup.nodes.Attributes$Dataset");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        attributes0.html((Appendable) pipedWriter0, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", "");
      attributes1.vals = null;
      // Undeclared exception!
      try { 
        attributes0.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("v\"31Xhm>o", (String) null);
      Attributes attributes1 = attributes0.put("wHeY0x7J8;sW", "3H(}3*");
      Attribute attribute0 = new Attribute("6qP\"TtSX", "org.jsoup.nodes.Attributes", attributes1);
      Attributes attributes2 = attributes0.put(attribute0);
      String[] stringArray0 = new String[2];
      attributes2.vals = stringArray0;
      // Undeclared exception!
      try { 
        attributes2.html();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("w", "w");
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes1.hasKeyIgnoreCase("v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.hasKeyIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("hx9FsA", "hx9FsA");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.hasKeyIgnoreCase("org.jsoup.nodes.Attributes$Dataset");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("br", false);
      Attribute attribute0 = Attribute.createFromEncoded("br", " 5IQiT?");
      Attributes attributes2 = attributes0.put(attribute0);
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        attributes2.hasKey("e!goPKch*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.hasKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("*-", "auto]ocxs");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes1.hasKey("noshade");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("01", "org.jsoup.parser.XmlTreeBuilder");
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        attributes1.getIgnoreCase("org.jsoup.nodes.Attributes$Dataset$EntrySet");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.getIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes$1", "?o^g:p(a{w-z");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes0.getIgnoreCase("Tag cannot be self closing; not a void tag");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("w", "w");
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes0.get("v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.get((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[@x__O|2CH", ".g3MB!0&I5*u");
      Attributes attributes2 = attributes1.put("Nqzd9^(", true);
      Attribute attribute0 = new Attribute(".g3MB!0&I5*u", "[@x__O|2CH", attributes1);
      attributes0.put("^h/b 0txp?-", true);
      Attributes attributes3 = attributes2.put(attribute0);
      Attributes attributes4 = attributes3.put("AfterDoctypeSystemIdentifier", "Nqzd9^(");
      String[] stringArray0 = new String[4];
      attributes4.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes2.get("5");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("C9&z H7[re-7", ",Ep)@OnxtdMtl(<a$(V");
      attributes0.put(attribute0);
      Attributes attributes1 = attributes0.clone();
      attributes1.keys = null;
      // Undeclared exception!
      try { 
        attributes1.asList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      // Undeclared exception!
      try { 
        attributes0.asList();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("hx9FsA", "hx9FsA");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
      try { 
        attributes1.asList();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.addAll((Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.parser.ParseErrorList", "org.jsoup.parser.ParseErrorList");
      Attributes attributes2 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded("[@x__o|2ch", "[@x__o|2ch");
      String[] stringArray0 = new String[9];
      attributes1.keys = stringArray0;
      Attributes attributes3 = attributes2.put(attribute0);
      // Undeclared exception!
      try { 
        attributes1.addAll(attributes3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("hx9FsA", "g HKn\"\"");
      attributes0.put(attribute0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes0.html((Appendable) charArrayWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("v\"31Xhm>o", (String) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(6);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes0.html((Appendable) charArrayWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.remove("#root");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[@x__O|2CH", ".g3MB!0&I5*u");
      attributes0.normalize();
      attributes1.putIgnoreCase("[@x__O|2CH", "Nqzd9^(");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("9", "9");
      attributes0.put("9", ".h");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[@x__O|2CH", ".g3MB!0&I5*u");
      attributes1.put("Nqzd9^(", true);
      Attributes attributes2 = attributes0.put("^h/b 0txp?-", true);
      attributes2.addAll(attributes0);
      assertEquals(3, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      int int0 = attributes0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      assertTrue(attributes1.equals((Object)attributes0));
      
      String[] stringArray0 = new String[7];
      attributes1.keys = stringArray0;
      boolean boolean0 = attributes1.equals(attributes0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("#", (String) null);
      Attributes attributes1 = new Attributes();
      Attributes attributes2 = attributes0.put(attribute0);
      boolean boolean0 = attributes2.equals(attributes1);
      assertEquals(1, attributes0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals(attributes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Mx}_RvB5k;|$!3mUF6&", true);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attributes1.html((Appendable) charArrayWriter0, document_OutputSettings1);
      assertEquals(1, attributes0.size());
      assertEquals(" Mx}_RvB5k;|$!3mUF6&=\"\"", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", true);
      attributes0.html();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("br", true);
      attributes1.asList();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put(".h", true);
      boolean boolean0 = attributes0.hasKeyIgnoreCase(".h");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKeyIgnoreCase("v");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("psP", "(US{<;a^@LQ]*>_S");
      Attributes attributes1 = attributes0.put(attribute0);
      boolean boolean0 = attributes1.hasKey("psP");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKey("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("O\".|'$E?8");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(".g3MB!0&I5*u", "[@x__O|2CH", attributes0);
      attributes0.put(attribute0);
      attributes0.putIgnoreCase("data-", ".g3MB!0&I5*u");
      attributes0.removeIgnoreCase(".g3MB!0&I5*u");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.getIgnoreCase("org.jsoup.nodes.Attributes");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.get("w");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("Qwc", "Y>fUl%5");
      attributes0.put(attribute0);
      attributes0.putIgnoreCase("Qwc", "Qwc");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      attributes0.put("!Rlf]k/*", "");
      Attribute attribute0 = new Attribute("WopQ", "g5Uo]Bb1D.+9");
      attributes0.put(attribute0);
      attributes0.clone();
      // Undeclared exception!
      try { 
        attributes0.addAll(attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hashCode();
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.addAll(attributes0);
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.put((Attribute) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("w", "w");
      attributes0.get("w");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Map<String, String> map0 = attributes0.dataset();
      boolean boolean0 = attributes0.equals(map0);
      assertFalse(boolean0);
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.toString();
  }
}
