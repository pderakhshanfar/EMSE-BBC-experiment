* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.csv.CSVRecord
* Starting Client-0
* Connecting to master process on port 5582
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVRecord
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 2728824293
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 98 / 234
[MASTER] 23:03:33.664 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:03:33.665 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:03:33.665 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 23:05:05.446 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
* Search finished after 601s and 6695 generations, 3375665 statements, best individual has fitness: 27.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 33
* Number of covered goals: 32
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 59
* Number of covered goals: 58
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 44
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Generated 46 tests with total length 220
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 23:13:38.098 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1633648418053/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1633648418053/org/apache/commons/csv/CSVRecord_22_tmp__ESTest_scaffolding.java]]
[MASTER] 23:13:38.098 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.098 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.102 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:13:38.103 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1633648418053/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 23:13:38 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_22_tmp__ESTest extends CSVRecord_22_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       Integer integer0 = new Integer(0);
25:       hashMap0.put("DWQ_b|+|N", integer0);
26:       String[] stringArray0 = new String[2];
27:       stringArray0[0] = "DWQ_b|+|N";
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "t5", 0);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.get("DWQ_b|+|N");
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_22_1633648418053/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 23:13:38 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_22_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 23:13:38.103 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
Integer integer0 = new Integer(0);
hashMap0.put("DWQ_b|+|N", integer0);
String[] stringArray0 = new String[2];
stringArray0[0] = "DWQ_b|+|N";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "t5", 0);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.get("DWQ_b|+|N");

[MASTER] 23:13:38.131 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1633648418104/org/apache/commons/csv/CSVRecord_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1633648418104/org/apache/commons/csv/CSVRecord_23_tmp__ESTest_scaffolding.java]]
[MASTER] 23:13:38.131 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.131 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.131 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:13:38.132 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1633648418104/org/apache/commons/csv/CSVRecord_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 23:13:38 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_23_tmp__ESTest extends CSVRecord_23_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       Integer integer0 = new Integer(0);
25:       hashMap0.put("DWQ_b|+|N", integer0);
26:       String[] stringArray0 = new String[2];
27:       stringArray0[0] = "DWQ_b|+|N";
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "t5", 0);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.isSet("DWQ_b|+|N");
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_23_1633648418104/org/apache/commons/csv/CSVRecord_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 23:13:38 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_23_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 23:13:38.132 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
Integer integer0 = new Integer(0);
hashMap0.put("DWQ_b|+|N", integer0);
String[] stringArray0 = new String[2];
stringArray0[0] = "DWQ_b|+|N";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "t5", 0);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.isSet("DWQ_b|+|N");

[MASTER] 23:13:38.223 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_26_1633648418192/org/apache/commons/csv/CSVRecord_26_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_26_1633648418192/org/apache/commons/csv/CSVRecord_26_tmp__ESTest_scaffolding.java]]
[MASTER] 23:13:38.223 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.223 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.224 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:13:38.224 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 32
[MASTER] 23:13:38.224 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_26_1633648418192/org/apache/commons/csv/CSVRecord_26_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 23:13:38 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_26_tmp__ESTest extends CSVRecord_26_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       String[] stringArray0 = new String[4];
25:       Integer integer0 = new Integer(1);
26:       hashMap0.put((String) null, integer0);
27:       stringArray0[1] = "";
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "No header mapping was specified, the record values can't be accessed by name", (-525L));
29:       Map<String, Integer> map0 = cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.putIn(map0);
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_26_1633648418192/org/apache/commons/csv/CSVRecord_26_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 23:13:38 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_26_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_26_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_26_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 23:13:38.225 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
String[] stringArray0 = new String[4];
Integer integer0 = new Integer(1);
hashMap0.put((String) null, integer0);
stringArray0[1] = "";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "No header mapping was specified, the record values can't be accessed by name", (-525L));
Map<String, Integer> map0 = cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.putIn(map0);

[MASTER] 23:13:38.322 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_29_1633648418289/org/apache/commons/csv/CSVRecord_29_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_29_1633648418289/org/apache/commons/csv/CSVRecord_29_tmp__ESTest_scaffolding.java]]
[MASTER] 23:13:38.322 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.322 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:13:38.323 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:13:38.323 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_29_1633648418289/org/apache/commons/csv/CSVRecord_29_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Oct 07 23:13:38 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_29_tmp__ESTest extends CSVRecord_29_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       String[] stringArray0 = new String[9];
24:       stringArray0[0] = "1=G)m!Q5qeX..\"A*;!";
25:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
26:       Integer integer0 = new Integer(0);
27:       hashMap0.put("?ndW}*B3GtM3xoE'+", integer0);
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "1=G)m!Q5qeX..\"A*;!", 3491L);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.toMap();
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_29_1633648418289/org/apache/commons/csv/CSVRecord_29_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Oct 07 23:13:38 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_29_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_29_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_29_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 23:13:38.323 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
String[] stringArray0 = new String[9];
stringArray0[0] = "1=G)m!Q5qeX..\"A*;!";
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
Integer integer0 = new Integer(0);
hashMap0.put("?ndW}*B3GtM3xoE'+", integer0);
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "1=G)m!Q5qeX..\"A*;!", 3491L);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.toMap();

[MASTER] 23:13:38.982 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.046 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.095 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.192 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.274 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.318 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.368 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.409 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.447 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.521 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.568 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.602 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.658 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.699 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.740 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.782 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.822 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.859 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.899 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.937 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:39.974 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.050 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.104 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.140 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.176 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.213 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.247 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.285 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.320 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.386 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.419 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.453 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.486 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.522 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.562 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:40.814 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:41.050 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CSVRecord_ESTest' to results/Csv-9/org.apache.commons.csv.CSVRecord/BBC-F0-opt-30/tests/3
* Done!

* Computation finished
