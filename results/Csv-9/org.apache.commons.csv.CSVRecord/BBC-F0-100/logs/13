* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.csv.CSVRecord
* Starting Client-0
* Connecting to master process on port 11377
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVRecord
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 3762274607
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 98 / 234
[MASTER] 16:05:24.555 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 16:05:24.556 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 16:05:24.556 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 16:05:52.597 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I15 Branch 10 IF_ICMPGE L161 - true: 95,0,0| Number of FF evals: 977
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I5 Branch 9 IFEQ L161 - false: 52,0,0| Number of FF evals: 2682
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.get(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 2 IFNONNULL L95 - false: 346,0,0| Number of FF evals: 1301
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I15 Branch 10 IF_ICMPGE L161 - false: 95,0,0| Number of FF evals: 1607
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.get(Ljava/lang/Enum;)Ljava/lang/String;: root-Branch: 623260,572166,0| Number of FF evals: 315590
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.get(Ljava/lang/Enum;)Ljava/lang/String;: Line 67: 623260,572166,0| Number of FF evals: 315594
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isMapped(Ljava/lang/String;)Z: I9 Branch 7 IFLE L150 - false: 9,0,0| Number of FF evals: 3246
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isMapped(Ljava/lang/String;)Z: I15 Branch 8 IFEQ L150 - false: 12,0,0| Number of FF evals: 3246
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVRecord.isConsistent()Z: I4 Branch 4 IFNULL L139 - true: 8,0,0| Number of FF evals: 70
* Search finished after 601s and 6279 generations, 3587043 statements, best individual has fitness: 28.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 33
* Number of covered goals: 32
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 59
* Number of covered goals: 58
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 44
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Generated 45 tests with total length 215
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
[MASTER] 16:15:28.242 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1628266528214/org/apache/commons/csv/CSVRecord_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1628266528214/org/apache/commons/csv/CSVRecord_21_tmp__ESTest_scaffolding.java]]
[MASTER] 16:15:28.242 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.242 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.244 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 16:15:28.245 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1628266528214/org/apache/commons/csv/CSVRecord_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 16:15:28 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_21_tmp__ESTest extends CSVRecord_21_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       String[] stringArray0 = new String[3];
25:       stringArray0[0] = "fo";
26:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "GFmK6gR9Z,Mu^O", (-1L));
27:       Integer integer0 = new Integer(0);
28:       hashMap0.put("", integer0);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.isSet("");
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_21_1628266528214/org/apache/commons/csv/CSVRecord_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 16:15:28 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_21_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 16:15:28.245 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
String[] stringArray0 = new String[3];
stringArray0[0] = "fo";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "GFmK6gR9Z,Mu^O", (-1L));
Integer integer0 = new Integer(0);
hashMap0.put("", integer0);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.isSet("");

[MASTER] 16:15:28.293 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_24_1628266528278/org/apache/commons/csv/CSVRecord_24_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_24_1628266528278/org/apache/commons/csv/CSVRecord_24_tmp__ESTest_scaffolding.java]]
[MASTER] 16:15:28.293 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.293 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.293 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 16:15:28.294 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_24_1628266528278/org/apache/commons/csv/CSVRecord_24_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 16:15:28 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_24_tmp__ESTest extends CSVRecord_24_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       Integer integer0 = Integer.getInteger("@IO~*TkSb@n-", 5);
25:       hashMap0.put("9a-9R", integer0);
26:       String[] stringArray0 = new String[6];
27:       stringArray0[5] = "+.i4zP<gZx`+'h";
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "i3?BQ;(gEmXm/^W7\" ", 98L);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.putIn((HashMap<String, String>) null);
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_24_1628266528278/org/apache/commons/csv/CSVRecord_24_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 16:15:28 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_24_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_24_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_24_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 16:15:28.294 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
Integer integer0 = Integer.getInteger("@IO~*TkSb@n-", 5);
hashMap0.put("9a-9R", integer0);
String[] stringArray0 = new String[6];
stringArray0[5] = "+.i4zP<gZx`+'h";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "i3?BQ;(gEmXm/^W7\" ", 98L);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.putIn((HashMap<String, String>) null);

[MASTER] 16:15:28.343 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_27_1628266528328/org/apache/commons/csv/CSVRecord_27_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_27_1628266528328/org/apache/commons/csv/CSVRecord_27_tmp__ESTest_scaffolding.java]]
[MASTER] 16:15:28.343 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.343 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 16:15:28.343 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 16:15:28.344 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_27_1628266528328/org/apache/commons/csv/CSVRecord_27_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 16:15:28 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_27_tmp__ESTest extends CSVRecord_27_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       Integer integer0 = Integer.getInteger("@IO~*TkSb@n-", 5);
25:       hashMap0.put("9a-9R", integer0);
26:       String[] stringArray0 = new String[6];
27:       stringArray0[5] = "+.i4zP<gZx`+'h";
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "i3?BQ;(gEmXm/^W7\" ", 98L);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.toMap();
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_27_1628266528328/org/apache/commons/csv/CSVRecord_27_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 16:15:28 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVRecord_27_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_27_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVRecord"
70:     );
71:   } 
72: 
73:   private static void resetClasses() {
74:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_27_tmp__ESTest_scaffolding.class.getClassLoader()); 
75: 
76:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
77:       "org.apache.commons.csv.CSVRecord"
78:     );
79:   }
80: }

[MASTER] 16:15:28.344 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
Integer integer0 = Integer.getInteger("@IO~*TkSb@n-", 5);
hashMap0.put("9a-9R", integer0);
String[] stringArray0 = new String[6];
stringArray0[5] = "+.i4zP<gZx`+'h";
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "i3?BQ;(gEmXm/^W7\" ", 98L);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.toMap();

[MASTER] 16:15:28.839 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:28.875 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:28.901 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:28.927 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:28.955 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:28.979 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.015 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.044 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.072 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.148 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.191 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.211 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.257 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.280 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.302 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.324 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.382 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.411 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.460 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.482 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.504 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.530 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.584 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.610 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.629 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.649 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.689 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.712 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.755 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.781 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.807 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.857 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:29.883 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:30.018 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:15:30.146 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CSVRecord_ESTest' to results/Csv-9/org.apache.commons.csv.CSVRecord/BBC-F0-100/tests/13
* Done!

* Computation finished
