* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.csv.CSVRecord
* Starting Client-0
* Connecting to master process on port 16801
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-9/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVRecord
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 161436897
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 98 / 234
[MASTER] 23:44:05.590 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 23:44:05.602 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 23:44:05.602 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 23:44:13.321 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I15 Branch 10 IF_ICMPGE L161 - true: 123
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I5 Branch 9 IFEQ L161 - false: 85
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isSet(Ljava/lang/String;)Z: I15 Branch 10 IF_ICMPGE L161 - false: 87
Number of times BBC is called for org.apache.commons.csv.CSVRecord.get(Ljava/lang/Enum;)Ljava/lang/String;: root-Branch: 359117
Number of times BBC is called for org.apache.commons.csv.CSVRecord.get(Ljava/lang/Enum;)Ljava/lang/String;: Line 67: 359117
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isMapped(Ljava/lang/String;)Z: I9 Branch 7 IFLE L150 - false: 13
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isMapped(Ljava/lang/String;)Z: I15 Branch 8 IFEQ L150 - false: 15
Number of times BBC is called for org.apache.commons.csv.CSVRecord.isConsistent()Z: I11 Branch 5 IF_ICMPNE L139 - false: 4
Number of times BBC is called in total: 718561
* Search finished after 601s and 3617 generations, 1837004 statements, best individual has fitness: 26.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 33
* Number of covered goals: 32
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 59
* Number of covered goals: 58
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 44
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 93%
* Total number of goals: 15
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 34
* Number of covered goals: 33
* Generated 45 tests with total length 218
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 63%
* Compiling and checking tests
[MASTER] 23:54:12.239 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_22_1627602852195/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_22_1627602852195/org/apache/commons/csv/CSVRecord_22_tmp__ESTest_scaffolding.java]]
[MASTER] 23:54:12.239 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:54:12.239 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:54:12.243 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:54:12.244 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_22_1627602852195/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 23:54:12 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_22_tmp__ESTest extends CSVRecord_22_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       String[] stringArray0 = new String[7];
25:       stringArray0[1] = "";
26:       Integer integer0 = new Integer(1);
27:       hashMap0.put("", integer0);
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "b", 0L);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       HashMap<String, String> hashMap1 = new HashMap<String, String>();
31:       // Undeclared exception!
32:       try { 
33:         cSVRecord0.putIn(hashMap1);
34:         fail("Expecting exception: ClassCastException");
35:       
36:       } catch(ClassCastException e) {
37:          //
38:          // java.lang.String cannot be cast to java.lang.Integer
39:          //
40:          verifyException("org.apache.commons.csv.CSVRecord", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_22_1627602852195/org/apache/commons/csv/CSVRecord_22_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 23:54:12 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class CSVRecord_22_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_22_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.apache.commons.csv.CSVRecord"
82:     );
83:   } 
84: 
85:   private static void resetClasses() {
86:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_22_tmp__ESTest_scaffolding.class.getClassLoader()); 
87: 
88:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
89:       "org.apache.commons.csv.CSVRecord"
90:     );
91:   }
92: }

[MASTER] 23:54:12.244 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
String[] stringArray0 = new String[7];
stringArray0[1] = "";
Integer integer0 = new Integer(1);
hashMap0.put("", integer0);
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "b", 0L);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
HashMap<String, String> hashMap1 = new HashMap<String, String>();
cSVRecord0.putIn(hashMap1);

[MASTER] 23:54:12.377 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1627602852341/org/apache/commons/csv/CSVRecord_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1627602852341/org/apache/commons/csv/CSVRecord_25_tmp__ESTest_scaffolding.java]]
[MASTER] 23:54:12.377 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-9/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:54:12.377 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-9/target/classes
[MASTER] 23:54:12.378 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method putIn in class org.apache.commons.csv.CSVRecord cannot be applied to given types;
  required: M
  found: java.util.Map<java.lang.String,java.lang.Integer>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Map<java.lang.String,java.lang.Integer>
    upper bound(s): java.util.Map<java.lang.String,java.lang.String>: 29
[MASTER] 23:54:12.378 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1627602852341/org/apache/commons/csv/CSVRecord_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 23:54:12 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import java.util.Map;
13: import org.apache.commons.csv.CSVRecord;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVRecord_25_tmp__ESTest extends CSVRecord_25_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
24:       String[] stringArray0 = new String[7];
25:       stringArray0[1] = "";
26:       Integer integer0 = new Integer(1);
27:       hashMap0.put("", integer0);
28:       CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "b", 0L);
29:       cSVRecord0.putIn((Map<String, Integer>) hashMap0);
30:       // Undeclared exception!
31:       try { 
32:         cSVRecord0.toMap();
33:         fail("Expecting exception: ClassCastException");
34:       
35:       } catch(ClassCastException e) {
36:          //
37:          // java.lang.String cannot be cast to java.lang.Integer
38:          //
39:          verifyException("org.apache.commons.csv.CSVRecord", e);
40:       }
41:   }
42: }
RegularFileObject[/tmp/EvoSuite_25_1627602852341/org/apache/commons/csv/CSVRecord_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 23:54:12 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class CSVRecord_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVRecord"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVRecord_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.apache.commons.csv.CSVRecord"
82:     );
83:   } 
84: 
85:   private static void resetClasses() {
86:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVRecord_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
87: 
88:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
89:       "org.apache.commons.csv.CSVRecord"
90:     );
91:   }
92: }

[MASTER] 23:54:12.379 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
String[] stringArray0 = new String[7];
stringArray0[1] = "";
Integer integer0 = new Integer(1);
hashMap0.put("", integer0);
CSVRecord cSVRecord0 = new CSVRecord(stringArray0, hashMap0, "b", 0L);
cSVRecord0.putIn((Map<String, Integer>) hashMap0);
cSVRecord0.toMap();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'CSVRecord_ESTest' to results/Csv-9/org.apache.commons.csv.CSVRecord/BBC-F0-50/tests/8
* Done!

* Computation finished
