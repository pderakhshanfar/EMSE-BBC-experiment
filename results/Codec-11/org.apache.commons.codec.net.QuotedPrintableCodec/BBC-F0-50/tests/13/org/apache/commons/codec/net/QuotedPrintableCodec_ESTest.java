/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 29 21:04:04 GMT 2021
 */

package org.apache.commons.codec.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.UnsupportedEncodingException;
import java.util.BitSet;
import org.apache.commons.codec.net.QuotedPrintableCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuotedPrintableCodec_ESTest extends QuotedPrintableCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[8] = (byte)61;
      try { 
        QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid quoted-printable encoding
         //
         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)68;
      byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-3), (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)70;
      try { 
        quotedPrintableCodec0.decode(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid URL encoding: not a valid digit (radix 16): 0
         //
         verifyException("org.apache.commons.codec.net.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("org.apache.commons.codec.EncoderException");
      String string0 = quotedPrintableCodec0.encode("", "UTF-16");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("#ATR8%s(S");
      assertEquals("#ATR8%s(S", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("org.apache.commons.codec.DecoderException");
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("UTF-16BE", "UTF-16BE");
      assertEquals("\u5554\u462D\u3136\u4245", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("", "UTF-8");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("UTF-16BE");
      String string0 = quotedPrintableCodec0.decode("?#.");
      assertEquals("\u3F23\uFFFD", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.encode("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      try { 
        quotedPrintableCodec0.encode("V=nyr-*'L>k74e8", "#ATR8%s(S");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.encode("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("UTF-16BE");
      quotedPrintableCodec0.encode((Object) "UTF-16BE");
      quotedPrintableCodec0.encode((Object) "=00U=00T=00F=00-=001=006=00B=00E");
      quotedPrintableCodec0.encode((Object) "=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00U=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00T=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00F=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00-=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=001=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=006=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00B=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00E");
      quotedPrintableCodec0.encode((Object) "=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00U=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00T=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00F=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00-=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=001=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=006=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00B=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00E");
      Object object0 = quotedPrintableCodec0.encode((Object) "=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00U=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00T=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00F=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00-=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=001=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=006=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00B=00=3D=000=000=00=3D=003=00D=00=3D=000=000=000=00=3D=000=000=000=00=3D=000=000=00E");
      // Undeclared exception!
      quotedPrintableCodec0.encode(object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.encode((Object) "org.apache.commons.codec.binary.StringUtils");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.decode("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      try { 
        quotedPrintableCodec0.decode("", "WBjVF78{f");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("xfME5ofn0>?/@");
      try { 
        quotedPrintableCodec0.decode("org.apache.commons.codec.net.QuotedPrintableCodec");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // xfME5ofn0>?/@
         //
         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.decode("}-n&Zoh`{a<h0Ft");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      // Undeclared exception!
      try { 
        quotedPrintableCodec0.decode((Object) "4rK%[Sy({;IK-_:e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode("UTF-8", "UTF-8");
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("*{\"Oq.");
      try { 
        quotedPrintableCodec0.encode(" cannot be quoted-printable decoded");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // *{\"Oq.
         //
         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = QuotedPrintableCodec.decodeQuotedPrintable((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)97;
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable((BitSet) null, byteArray0);
      assertEquals(10, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)97, (byte)61, (byte)48, (byte)48, (byte)61, (byte)48, (byte)48, (byte)61, (byte)48, (byte)48}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitSet bitSet0 = new BitSet(0);
      byte[] byteArray0 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, (byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      String string0 = quotedPrintableCodec0.getDefaultCharset();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode((String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = new Object();
      try { 
        quotedPrintableCodec0.decode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Objects of type java.lang.Object cannot be quoted-printable decoded
         //
         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
      Object object0 = quotedPrintableCodec0.decode((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = quotedPrintableCodec0.decode((Object) "f_PTT54b{3LM");
      assertNotNull(object0);
      assertEquals("f_PTT54b{3LM", object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = new Object();
      try { 
        quotedPrintableCodec0.encode(object0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Objects of type java.lang.Object cannot be quoted-printable encoded
         //
         verifyException("org.apache.commons.codec.net.QuotedPrintableCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      Object object0 = quotedPrintableCodec0.encode((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("org.apache.commons.codec.binary.StringUtils");
      String string0 = quotedPrintableCodec0.decode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode((String) null, "x*RYjoYHo|h5^{");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.encode((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("V=nyr-*'L>k74e8");
      try { 
        quotedPrintableCodec0.decode("V=nyr-*'L>k74e8", "V=nyr-*'L>k74e8");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid URL encoding: not a valid digit (radix 16): 110
         //
         verifyException("org.apache.commons.codec.net.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("(INEZ[|c");
      byte[] byteArray0 = quotedPrintableCodec0.decode((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)100;
      byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
      assertArrayEquals(new byte[] {(byte)100}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-52);
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
      assertEquals(12, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = quotedPrintableCodec0.encode((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
      String string0 = quotedPrintableCodec0.decode("");
      assertEquals("", string0);
      assertNotNull(string0);
  }
}
