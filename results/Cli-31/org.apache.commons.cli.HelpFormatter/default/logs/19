* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 19119
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-31/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1153
* Using seed 4151967586
* Starting evolution
* Initial Number of Goals in DynaMOSA = 401 / 1153
[MASTER] 23:42:52.177 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:42:58.084 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.apache.commons.cli.HelpFormatter.printHelp(ILjava/lang/String;Ljava/lang/String;Lorg/apache/commons/cli/Options;Ljava/lang/String;)V
* Search finished after 304s and 281 generations, 105223 statements, best individual has fitness: 122.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 205
* Number of covered goals: 204
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 154
* Number of covered goals: 140
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 48
* Number of covered goals: 48
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 514
* Number of covered goals: 478
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 67%
* Total number of goals: 46
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 154
* Number of covered goals: 140
* Generated 102 tests with total length 327
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:49:06.929 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8193333333333334% of time used, but only 8/102 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
[MASTER] 23:49:48.565 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.util.concurrent.ExecutionException: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
[MASTER] 23:49:48.566 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("arg", helpFormatter0.getArgName());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals("\n", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotNull(helpFormatter0);

StringBuffer stringBuffer0 = new StringBuffer("PL");
assertEquals("PL", stringBuffer0.toString());
assertEquals(2, stringBuffer0.length());
assertNotNull(stringBuffer0);

Options options0 = new Options();
assertNotNull(options0);

Options options1 = options0.addOption("PL", true, "usage: ");
assertNotNull(options1);
assertSame(options0, options1);
assertSame(options1, options0);

StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 2057, options1, 2827, 213);
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("arg", helpFormatter0.getArgName());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals("\n", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals(43, stringBuffer0.length());
assertEquals(43, stringBuffer1.length());
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertNotNull(stringBuffer1);
assertSame(stringBuffer0, stringBuffer1);
assertSame(options0, options1);
assertSame(options1, options0);
assertSame(stringBuffer1, stringBuffer0);

helpFormatter0.renderOptions(stringBuffer1, 2518, options1, 2518, 2827);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 37
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-31/org.apache.commons.cli.HelpFormatter/default/tests/19
* Done!

* Computation finished
