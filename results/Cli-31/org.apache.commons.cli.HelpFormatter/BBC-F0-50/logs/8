* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 9963
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-31/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1153
* Using seed 2727747423
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 401 / 1153
[MASTER] 17:00:13.734 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 602s and 162 generations, 71742 statements, best individual has fitness: 139.0
* Minimizing test suite
[MASTER] 17:11:30.663 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 205
* Number of covered goals: 203
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 154
* Number of covered goals: 137
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 55
* Number of covered goals: 55
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 514
* Number of covered goals: 476
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 65%
* Total number of goals: 46
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 154
* Number of covered goals: 137
* Generated 123 tests with total length 1919
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:12:34.231 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 17:12:54.911 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:12:54.974 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:12:55.030 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:12:55.070 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:12:55.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 17:12:57.719 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_156_tmp__ESTest.test0(HelpFormatter_156_tmp__ESTest.java:46)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 17:12:57.720 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
helpFormatter0.getArgName();
Options options0 = new Options();
options0.getMatchingOptions("org.apache.commons.cli.AlreadySelectedException");
helpFormatter0.printHelp("B{eR3UMdOR", "arg", options0, "B{eR3UMdOR", false);
helpFormatter0.setDescPadding(0);
helpFormatter0.setOptPrefix("2(;H+e9.<;");
helpFormatter0.setSyntaxPrefix("efY3K4k#FU6w^)b");
Option option0 = new Option("", "", false, "2(;H+e9.<;");
Options options1 = options0.addOption(option0);
options1.hasShortOption("5`\u0001G<wFe+FGP]M^Md");
OptionGroup optionGroup0 = new OptionGroup();
optionGroup0.setSelected(option0);
options0.getOptions();
helpFormatter0.printHelp("org.apache.commons.cli.AlreadySelectedException", options0);
options1.toString();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
PrintWriter printWriter0 = mockPrintWriter0.append('|');
helpFormatter0.printUsage(printWriter0, (-1), "5`\u0001G<wFe+FGP]M^Md", options1);

[MASTER] 17:13:11.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_193_tmp__ESTest.test0(HelpFormatter_193_tmp__ESTest.java:33)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 17:13:11.985 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
HelpFormatter helpFormatter0 = new HelpFormatter();
String string0 = helpFormatter0.createPadding(3134);
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
Object[] objectArray0 = new Object[3];
objectArray0[0] = (Object) "";
objectArray0[1] = (Object) "";
objectArray0[2] = (Object) mockFileOutputStream0;
PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
Options options0 = new Options();
Option option0 = new Option("", "arg", true, "\"S5sV7zr^<nQl|1pL");
Options options1 = options0.addOption(option0);
Options options2 = options1.addOption("arg", "", true, "");
helpFormatter0.printHelp(printWriter0, 3134, string0, string0, options2, 80, 3134, "bgT^4: E", true);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-31/org.apache.commons.cli.HelpFormatter/BBC-F0-50/tests/8
* Done!

* Computation finished
