* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.cli.HelpFormatter
* Starting Client-0
* Connecting to master process on port 21321
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-31/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.HelpFormatter
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1153
* Using seed 1878161075
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 401 / 1153
[MASTER] 18:15:18.342 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 602s and 207 generations, 82459 statements, best individual has fitness: 129.0
* Minimizing test suite
[MASTER] 18:26:33.249 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 205
* Number of covered goals: 204
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 154
* Number of covered goals: 141
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 514
* Number of covered goals: 481
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 46
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 40
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 154
* Number of covered goals: 138
* Generated 115 tests with total length 1730
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:27:17.961 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.69005% of time used, but only 21/115 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 18:27:52.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:27:52.150 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:27:52.207 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:28:00.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.cli.HelpFormatter_176_tmp__ESTest.test0(HelpFormatter_176_tmp__ESTest.java:59)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 18:28:00.794 [logback-1] WARN  JUnitAnalyzer - Failing test:
 HelpFormatter helpFormatter0 = new HelpFormatter();
assertNotNull(helpFormatter0);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals("\n", helpFormatter0.getNewLine());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);

helpFormatter0.defaultNewLine = "7l-kQ|eO?1KBf%(.YDt";
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());

FileDescriptor fileDescriptor0 = new FileDescriptor();
assertNotNull(fileDescriptor0);
assertFalse(fileDescriptor0.valid());

MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
assertNotNull(mockFileOutputStream0);

MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
assertNotNull(mockPrintWriter0);

Object[] objectArray0 = new Object[4];
objectArray0[0] = (Object) null;
objectArray0[1] = (Object) mockPrintWriter0;
objectArray0[2] = (Object) mockPrintWriter0;
objectArray0[3] = (Object) null;
PrintWriter printWriter0 = mockPrintWriter0.format((Locale) null, "-", objectArray0);
assertEquals(4, objectArray0.length);
assertNotNull(printWriter0);
assertFalse(fileDescriptor0.valid());
assertSame(mockPrintWriter0, printWriter0);
assertSame(printWriter0, mockPrintWriter0);

helpFormatter0.printWrapped(printWriter0, 37, "-");
assertEquals(4, objectArray0.length);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertFalse(fileDescriptor0.valid());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertSame(mockPrintWriter0, printWriter0);
assertSame(printWriter0, mockPrintWriter0);

String string0 = helpFormatter0.getLongOptPrefix();
assertNotNull(string0);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals("--", string0);

String string1 = helpFormatter0.getLongOptSeparator();
assertNotNull(string1);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertFalse(string1.equals((Object)string0));
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals(" ", string1);

Options options0 = new Options();
assertNotNull(options0);

String string2 = helpFormatter0.getLongOptPrefix();
assertNotNull(string2);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertFalse(string2.equals((Object)string1));
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertEquals("--", string2);

helpFormatter0.printOptions(mockPrintWriter0, 37, options0, 37, 37);
assertEquals("arg", helpFormatter0.getArgName());
assertEquals(3, helpFormatter0.getDescPadding());
assertEquals(74, helpFormatter0.getWidth());
assertEquals("--", helpFormatter0.getLongOptPrefix());
assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
assertEquals("7l-kQ|eO?1KBf%(.YDt", helpFormatter0.getNewLine());
assertEquals(1, helpFormatter0.getLeftPadding());
assertEquals("-", helpFormatter0.getOptPrefix());
assertEquals(" ", helpFormatter0.getLongOptSeparator());
assertFalse(fileDescriptor0.valid());
assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
assertEquals(3, helpFormatter0.defaultDescPad);
assertEquals(74, helpFormatter0.defaultWidth);
assertEquals(1, HelpFormatter.DEFAULT_LEFT_PAD);
assertEquals(74, HelpFormatter.DEFAULT_WIDTH);
assertEquals(1, helpFormatter0.defaultLeftPad);
assertSame(mockPrintWriter0, printWriter0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'HelpFormatter_ESTest' to results/Cli-31/org.apache.commons.cli.HelpFormatter/BBC-F0-opt-70/tests/8
* Done!

* Computation finished
