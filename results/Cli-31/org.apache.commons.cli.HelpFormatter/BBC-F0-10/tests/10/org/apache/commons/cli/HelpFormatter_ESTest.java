/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 20:39:57 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "";
      helpFormatter0.getLongOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 1, 1, "\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      Option option0 = new Option("arg", " q]  ");
      optionGroup0.addOption(option0);
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.printHelp("C&{>]zS", " q]  ", options0, "C&{>]zS", true);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      helpFormatter0.setWidth((-2023));
      Option option0 = new Option("arg", " q]  ");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("ndhgp=?-N", "C&{>]zS", options1, "ndhgp=?-N", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 957;
      String string0 = "*ay=>";
      Options options0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("*ay=>", (Options) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 1;
      helpFormatter0.createPadding(44);
      helpFormatter0.getLeftPadding();
      helpFormatter0.findWrapPos("                                            ", 1, 1);
      helpFormatter0.setDescPadding(9);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "usage: ");
      Options options0 = new Options();
      helpFormatter0.renderOptions(stringBuffer0, 1, options0, 1, 1);
      int int0 = 0;
      String string0 = "HM/}&K+}6:'wAcQ0=Q";
      // Undeclared exception!
      try { 
        options0.addOption(" ", true, "--");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(false);
      Option option0 = new Option("arg", " q]  ");
      optionGroup0.addOption(option0);
      helpFormatter0.setDescPadding((-1));
      options0.addOptionGroup(optionGroup0);
      options0.addOption("", false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("C&{>]zS", " q]  ", options0, "C&{>]zS", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      PrintWriter printWriter0 = null;
      OptionGroup optionGroup0 = new OptionGroup();
      String string0 = "   ";
      Option option0 = new Option("arg", "   ");
      optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        helpFormatter0.printOptions((PrintWriter) null, (-2919), options1, 44, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = null;
      int int0 = (-8);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("*A6{>nRKvmS.zpiYR");
      Locale locale0 = Locale.forLanguageTag(" ");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "arg", objectArray0);
      Options options0 = new Options();
      Options options1 = options0.addOption("", (String) null, false, "EcFJtdfO~/");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, 2312, "EcFJtdfO~/", "*A6{>nRKvmS.zpiYR", options1, (-8), (-704), "UW");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      boolean boolean0 = true;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      PrintWriter printWriter0 = null;
      String string0 = "";
      String string1 = "-";
      // Undeclared exception!
      try { 
        helpFormatter1.printOptions((PrintWriter) null, 103, options1, 3, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.rtrim((String) null);
      helpFormatter0.getSyntaxPrefix();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(" ", "-");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // -
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(1);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, (-1780), (Options) null, 29, 29);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultDescPad = (-2529);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      StringBuffer stringBuffer0 = new StringBuffer("-");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, ", ");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 860, "   ");
      Options options0 = new Options();
      helpFormatter0.printHelp("   ", options0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 54, (String) null, options0);
      helpFormatter0.getNewLine();
      helpFormatter0.getLongOptSeparator();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.setLeftPadding((-763));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(81, "' was specified but an optin from this group ", "ZT$ 7H$$!YWG~E0v", options0, " ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "N";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 63, "N", "", options0, 1116, (-2192), "arg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      helpFormatter0.setLongOptSeparator("=Z#7wm8O7?0(;:;");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Options options0 = new Options();
      Options options1 = options0.addOption((String) null, true, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter1, 3, "=Z#7wm8O7?0(;:;", "=Z#7wm8O7?0(;:;", options1, 3, 3, "e|sjic,(S<aF(8", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      Option option0 = new Option("arg", "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      Options options3 = options2.addOption("", " ] [ long ", true, "*;8");
      Options options4 = options3.addOptionGroup(optionGroup0);
      OptionGroup optionGroup1 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("Z;D%yq");
      mockPrintWriter1.print((double) 74);
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2), " ] [ long ", options4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      String string0 = null;
      options0.addOption((String) null, true, "g^YMBpLxUee*}PY");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 1611, 169, "org.apache.commons.cli.HelpFormatter$OptionComparator");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(31, "' was specified but an option from this group ", "K", (Options) null, "' was specified but an option from this group ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_WIDTH;
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      helpFormatter0.printHelp(44, "nm4FsBLPY%VBlK^", "", options0, "");
      helpFormatter0.getOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, 1, 44);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-515), "j1OXpc&wCQF");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "!):";
      Options options0 = null;
      helpFormatter0.setOptPrefix("!):");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("!):", "!):", (Options) null, "!):");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "-");
      options1.addOption((String) null, " ", false, "AqK`U+5&$~(0");
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, " [ARG]", "Aw2w", options1, 4688, 0, "A CloneNotSupportedException was thrown: ", true);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.defaultWidth = 1;
      helpFormatter1.setSyntaxPrefix("");
      helpFormatter1.setLongOptSeparator("-");
      PrintWriter printWriter0 = null;
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter1.printUsage((PrintWriter) null, 1, " :: ", options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, " ");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" o\"");
      mockPrintWriter0.print(1.0);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 63, "Y@u&DI/6l", options1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3584, "arg", "", options0, 74, 1, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      Options options0 = new Options();
      Option option0 = new Option("arg", "", false, "org.apache.commons.cli.HelpFormatter");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!S~ oW%");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 113, "");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim((String) null);
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 113, "--");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 10, "", options1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.defaultWidth = 1;
      helpFormatter1.setSyntaxPrefix("");
      helpFormatter1.setLongOptSeparator("-");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("arg", "org.apache.commons.cli.ParseException");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((PrintWriter) null, 948, "C&{>]zS", "<0X?cV(,a1Y9oOc", options1, 92, 74, " ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine(">");
      helpFormatter0.setLongOptPrefix((String) null);
      helpFormatter0.setNewLine(">");
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("");
      Options options0 = new Options();
      options0.addOption("", true, "");
      Object object0 = new Object();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 3, ")5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E3YCneHn");
      PrintWriter printWriter0 = mockPrintWriter0.printf("arg", (Object[]) null);
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 108, "8S\">:HD,DivS>_Dr*9", options1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Options options2 = options0.addOption((String) null, false, "--");
      helpFormatter1.printUsage(printWriter0, 74, "", options2);
      helpFormatter1.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.Option");
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "_a921W)CWUBU<", (String) null, options1, 3, (-2219), "_a921W)CWUBU<", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      helpFormatter0.setLongOptSeparator("_a921W)CWUBU<");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText((StringBuffer) null, 3, 999, " ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) null, 0, "", options0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      String string0 = "_a921W)CWUBU<";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      int int0 = 28;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 28, (String) null, "_a921W)CWUBU<", options0, 28, 3, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      options0.addOption("", true, " ");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      helpFormatter0.renderOptions(stringBuffer0, 7, options0, 373, 1);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 1, (-466), "\n");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      helpFormatter0.getArgName();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("arg", true, "-");
      Option option0 = new Option("", "org.apache.commons.cli.HelpFormatter", false, "");
      Options options3 = options2.addOption(option0);
      Options options4 = options3.addOption((String) null, "/C6;cyUKjU2BT^**;a4", true, "\n");
      helpFormatter0.printHelp("org.apache.commons.cli.HelpFormatter", options4);
      Options options5 = new Options();
      options5.hasShortOption("fRm&6|C{");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-713), "", "[T]r_W&^{f(", options5, "<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      String string0 = "t@L";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t@L");
      Options options0 = new Options();
      int int0 = 34;
      int int1 = (-3648);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 34, "t@L", "t@L", options0, 34, (-3648), "org.apache.commons.cli.AlreadySelectedException", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
      StringBuffer stringBuffer0 = new StringBuffer("");
      Options options0 = new Options();
      options0.addOption("", false, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.renderOptions(stringBuffer0, 373, options1, 373, 373);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.renderWrappedText(stringBuffer0, 2, 373, "   ");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.Option");
      Options options0 = new Options();
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getOptPrefix();
      helpFormatter0.printOptions(mockPrintWriter0, 356, options0, 356, 8);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.Option");
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      helpFormatter1.printHelp((PrintWriter) mockPrintWriter0, 0, "--", "arg", options0, 3, 3, "usage: ", false);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.sparato";
      helpFormatter0.defaultSyntaxPrefix = ">";
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.sparato");
      Options options0 = new Options();
      options0.addOption("", true, "--");
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">");
      mockPrintWriter0.printf("Y@u&DI/6l", (Object[]) null);
      Options options1 = new Options();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 108, "", options0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      StringBuffer stringBuffer0 = new StringBuffer(74);
      char[] charArray0 = new char[7];
      charArray0[0] = 'V';
      charArray0[1] = '';
      charArray0[2] = 'x';
      charArray0[3] = 'k';
      stringBuffer0.append(charArray0, 1, 3);
      charArray0[4] = 'K';
      charArray0[5] = 'o';
      charArray0[6] = ']';
      stringBuffer0.append(charArray0);
      stringBuffer0.append(0L);
      helpFormatter0.renderWrappedText(stringBuffer0, 2827, (-2230), "--");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("--", "--", (Options) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.sparato";
      helpFormatter0.defaultSyntaxPrefix = ">";
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.sparato");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options0.addOptionGroup(optionGroup0);
      helpFormatter0.renderOptions(stringBuffer0, 74, options1, 31, 13);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("Q.SR|o", "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      StringBuffer stringBuffer1 = new StringBuffer("org.apache.commons.cli.ParseException");
      mockPrintWriter0.append((CharSequence) stringBuffer1);
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 3, "-");
      helpFormatter1.printHelp("'r=8RscKQqR((cH@^X", "", options2, "Q.SR|o", true);
      helpFormatter1.findWrapPos("#WL'MHBWojT", 99, 2424);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("hIl;UosqZOK");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("uORwhpBL");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("GYv");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 8, (String) null, "", options0, 0, 73, " | ", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("bjq2@\"LR#kK?^)6");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "bjq2@\"LR#kK?^)6";
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "org.apache.commons.cli.Option";
      objectArray0[3] = (Object) helpFormatter0;
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) "bjq2@\"LR#kK?^)6";
      mockPrintWriter0.printf("arg", objectArray0);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2764), "Q'uiW?Xr", options0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      Options options0 = new Options();
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter1.getSyntaxPrefix();
      StringBuffer stringBuffer1 = new StringBuffer(" ");
      Options options1 = new Options();
      options0.addOption("", true, "");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) null, 98, "\n", "", options2, 74, 74, "|", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.cli.Option");
      Options options0 = new Options();
      helpFormatter0.renderOptions((StringBuffer) null, 1305, options0, 8, 71);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer(1305);
      helpFormatter0.renderWrappedText(stringBuffer0, 6, 1, "arg");
      helpFormatter0.createPadding(3);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptPrefix("");
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("t.qv2ZW@");
      helpFormatter1.printHelp(647, "arg", "9Y}", options0, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 28, "_a921W)CWUBU<", "}", options0, 28, 64, "}", false);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      helpFormatter0.setLongOptSeparator("_a921W)CWUBU<");
      helpFormatter0.getOptPrefix();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(526, "0{_V2", "-", (Options) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 60;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("line.separator", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.sparato";
      helpFormatter0.defaultSyntaxPrefix = ">";
      String string0 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.sparato");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      helpFormatter0.renderOptions(stringBuffer0, 74, options1, 31, 13);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      MockFile mockFile0 = new MockFile("Q.SR|o", "usage: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      StringBuffer stringBuffer1 = new StringBuffer("org.apache.commons.cli.ParseException");
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) stringBuffer1);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      PrintWriter printWriter1 = mockPrintWriter1.append('~');
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp(printWriter1, 3, "Q.SR|o", "]", options0, 32, 11, ">", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      helpFormatter0.setArgName("");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("arg");
      helpFormatter1.printHelp(13, "\n", "-", options0, "usage: ");
      helpFormatter1.getDescPadding();
      helpFormatter0.getLeftPadding();
      helpFormatter1.rtrim("K`,GxBTU*UD%J,");
      helpFormatter1.rtrim("-");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("-");
      helpFormatter0.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption(" | ");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) options0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      PrintWriter printWriter1 = mockPrintWriter1.append((CharSequence) "-");
      helpFormatter0.printHelp(printWriter1, 2820, " | ", "", options0, 1886, 32, "", true);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("hIl;UosqZOK");
      int int0 = 16;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter1.renderWrappedText(stringBuffer0, 1, 16, "j &W},;, R&yXzgv");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("gAS$`*;");
      Option option0 = new Option("", (String) null);
      Options options1 = options0.addOption(option0);
      options1.hasOption("mIg!vNxD/");
      helpFormatter0.printHelp(647, "Cannot add value, list full.", "gAS$`*;", options1, "87FA+$=;mp9Jjb@w0");
      helpFormatter0.printHelp("LnRoiMK9Mi{d0Ip8v", options0);
      helpFormatter0.getDescPadding();
      helpFormatter0.printHelp(647, "mIg!vNxD/", "yG-E^s/qN03", options1, "", false);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      helpFormatter0.setArgName("");
      Options options0 = new Options();
      options0.hasShortOption("arg");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      helpFormatter0.getDescPadding();
      helpFormatter0.findWrapPos("", 3, 3);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = HelpFormatter.DEFAULT_DESC_PAD;
      helpFormatter0.setArgName("");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getArgName();
      Options options0 = new Options();
      options0.hasShortOption((String) null);
      helpFormatter1.printHelp(13, "\n", "-", options0, "usage: ");
      helpFormatter1.getDescPadding();
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qe?!{3V9&?b=BfSM-N");
      mockPrintWriter0.println((-2300L));
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "'?");
      mockPrintWriter0.println((double) 3);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 9, 9, "");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      int int0 = 860;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">W ?#@+I D");
      Locale locale0 = Locale.GERMAN;
      String string0 = "";
      Object[] objectArray0 = new Object[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      objectArray0[0] = (Object) "87FA+$=;mp9Jjb@w0";
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      helpFormatter0.printUsage(printWriter0, 4096, "gAS$`*;");
      Options options0 = new Options();
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 32, "NO_ARGS_ALLOWED", "m.$~9a'/g}NJAFlZD", options0, 34, 4776, "", true);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          HelpFormatter helpFormatter0 = new HelpFormatter();
          MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
          // Undeclared exception!
          helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "\n");
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 860, "   ");
      Options options0 = new Options();
      helpFormatter0.printHelp("   ", options0, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("-");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter1, 54, (String) null, options0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      String string0 = "Cannot add value, list full.";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasOption("");
      String string1 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "", options0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      Options options0 = new Options();
      Option option0 = new Option("arg", "", false, "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!S~ oW%");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 113, "");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.rtrim((String) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("gAS$`*;");
      Option option0 = new Option("", (String) null);
      Options options1 = options0.addOption(option0);
      helpFormatter0.printHelp(647, "Cannot add value, list full.", "gAS$`*;", options1, "87FA+$=;mp9Jjb@w0");
      helpFormatter0.printHelp("LnRoiMK9Mi{d0Ip8v", options0);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("usage: ");
      helpFormatter0.printHelp(817, "nwkdtQI@c`:", "", options0, "NEhyXCJ7M|bN]/");
      helpFormatter0.printHelp(")EOk\"V4\"-I|Y%0'", options0);
      helpFormatter0.getOptionComparator();
      File file0 = MockFile.createTempFile("NEhyXCJ7M|bN]/", "rS$iw");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "", "8i+_?f|?.vup|", (Options) null, 817, 13, "nwkdtQI@c`:", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setNewLine("87FA+$=;mp9Jjb@w0");
      helpFormatter0.setNewLine("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("87FA+$=;mp9Jjb@w0");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 9, "Cm))a5gY~-:fQ");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("gAS$`*;");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      StringBuffer stringBuffer0 = new StringBuffer(1305);
      optionGroup0.toString();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 647, options1, 31, 3108);
      helpFormatter0.renderWrappedText(stringBuffer1, 13, 4890, "<x\";");
      helpFormatter0.getNewLine();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName(">gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption(">gAS$`*;");
      helpFormatter0.printHelp(654, "org.apache.commons.cli.HelpFormatter", "", options0, "");
      helpFormatter0.printHelp("d/0#XbT@jh.O;/V", options0);
      helpFormatter0.getDescPadding();
      helpFormatter0.getWidth();
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = " | ";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      Options options0 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp(0, "U'\"", " | ", options0, "");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      Options options0 = new Options();
      options0.hasShortOption("--");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.printHelp(3, "--", "--", options0, "arg");
      helpFormatter0.printHelp("I)>1{#e", options0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) "";
      String string0 = ">";
      helpFormatter0.setNewLine(">");
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) mockPrintWriter0;
      objectArray0[7] = (Object) "";
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      Options options0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(printWriter0, (-2), "-", "", (Options) null, (-2), 2222, (String) null, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      helpFormatter1.getOptPrefix();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter0.setArgName("-");
      helpFormatter2.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("qX*i_E:R");
      helpFormatter0.setOptPrefix((String) null);
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((-2311), "9Y}", "org.apache.commons.cli.Option", options0, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("gAS$`*;");
      helpFormatter0.printHelp(647, "org.apache.commons.cli.HelpFormatter", "", options0, "");
      helpFormatter0.printHelp("d/0#XbT@jh.O;/V", options0);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      helpFormatter1.getOptPrefix();
      HelpFormatter helpFormatter2 = new HelpFormatter();
      helpFormatter0.setArgName("KF7F");
      helpFormatter1.getArgName();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("");
      helpFormatter0.setArgName((String) null);
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("");
      helpFormatter0.printHelp(647, "NO_ARGS_ALLOWED", "U;L^oZ", options0, "NO_ARGS_ALLOWED");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      Options options0 = new Options();
      Option option0 = new Option("arg", "", false, "");
      Options options1 = options0.addOption(option0);
      OptionGroup optionGroup0 = new OptionGroup();
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NO_ARGS_ALLOWED");
      Options options3 = options2.addOption("", false, "");
      helpFormatter0.printHelp(">", "9u", options3, "UDlCQ");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      Options options4 = new Options();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      String string0 = "";
      HelpFormatter helpFormatter1 = new HelpFormatter();
      String string1 = "";
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      int int0 = 647;
      Options options0 = new Options();
      options0.hasShortOption("t.qv2ZW@");
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp("", (String) null, options0, "v@_MQL", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 74, options0, 1293, (-1856));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, lis1 full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OAs`~|{");
      PrintWriter printWriter0 = mockPrintWriter0.append('i');
      mockPrintWriter0.print(false);
      helpFormatter0.printUsage(printWriter0, 647, "2t~d");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "NO_ARGS_ALLOWED";
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      String string1 = HelpFormatter.DEFAULT_SYNTAX_PREFIX;
      helpFormatter0.getSyntaxPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.separator");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      options0.addOptionGroup(optionGroup0);
      // Undeclared exception!
      helpFormatter0.renderOptions(stringBuffer0, 0, options1, 31, 13);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      helpFormatter0.setArgName("n3:");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("\n");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1, "", "", options0, "8&^U}q&`=nc#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.setArgName("gAS$`*;");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "Cannot add value, list full.");
      StringWriter stringWriter2 = stringWriter1.append('j');
      char[] charArray0 = new char[9];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      charArray0[4] = 'j';
      charArray0[5] = 'j';
      charArray0[6] = 'j';
      charArray0[7] = 'j';
      charArray0[8] = 'j';
      stringWriter0.write(charArray0);
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 647, 0, "87FA+$=;mp9Jjb@w0");
      helpFormatter0.getLeftPadding();
      MockFile mockFile0 = new MockFile("usage: ", "e74!q3L)B'.x");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockFile0.setReadOnly();
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 623, "gAS$`*;", "z(M^z0`_p-[lBCBz", options0, 2, 9, "fj:JiIBevgk");
      helpFormatter0.setDescPadding(934);
      helpFormatter0.setLongOptPrefix("");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("3D5O)~ Jt]dBz");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.getOptPrefix();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options0.getOptionGroups();
      helpFormatter0.getLeftPadding();
      MockFile mockFile0 = new MockFile("--", "org.apache.commons.cli.AlreadySelectedException");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, ",", "line.separator", options2, 0, 0, "line.separator");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("--");
      helpFormatter0.setNewLine("%_PF$+vW[!EiM?-g");
      helpFormatter0.setLongOptSeparator("lj7F3-z+$ivX[");
      helpFormatter0.createPadding(0);
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos("]", 0, (-908));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.helpOptions();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "-");
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      helpFormatter1.renderWrappedText(stringBuffer0, 92, (-2360), "usage: ");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("arg");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      StringBuffer stringBuffer1 = helpFormatter1.renderOptions(stringBuffer0, 1, options1, 1, 3);
      helpFormatter1.renderWrappedText(stringBuffer1, 3, 74, "usage: ");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.setArgName("");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("t.qv2ZW@");
      helpFormatter1.printHelp(647, "arg", "9Y}", options0, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 117, 3, "");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasShortOption("]");
      String string0 = "[ Options: [ short ";
      int int0 = 13;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(13, "]", "[ Options: [ short ", options0, "tvB.kLZZe@BiOm}-I6c");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 844;
      helpFormatter0.defaultLeftPad = 3475;
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 46, "arg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.separator");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      options1.addOptionGroup(optionGroup0);
      options0.getOptionGroups();
      int int0 = 0;
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "--");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getOptionComparator();
      PrintWriter printWriter0 = null;
      int int0 = (-1199);
      String string0 = "";
      String string1 = "";
      Options options0 = new Options();
      boolean boolean0 = false;
      Options options1 = options0.addOption("arg", "-", false, "");
      String string2 = "~&K@$C8l';\\Rwk)W";
      // Undeclared exception!
      try { 
        options1.addOption("~&K@$C8l';Rwk)W", false, "-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '~&K@$C8l';Rwk)W' contains an illegal character : '~'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultWidth = 0;
      helpFormatter0.createPadding(1238);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
      stringBuffer0.replace(0, 0, " ");
      String string0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, 870, 1238, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding((-2));
      String string0 = "Hz]}BSC2!akTu*;jd";
      MockFile mockFile0 = new MockFile("Hz]}BSC2!akTu*;jd", "Hz]}BSC2!akTu*;jd");
      MockFile mockFile1 = new MockFile(mockFile0, "arg");
      boolean boolean0 = true;
      mockFile1.setReadable(true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      int int0 = 0;
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "usage: ", 0, 0);
      // Undeclared exception!
      helpFormatter0.printUsage(printWriter0, 0, "Hz]}BSC2!akTu*;jd");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.createPadding(1);
      helpFormatter0.getNewLine();
      String string0 = "";
      String string1 = ">";
      MockFile mockFile0 = new MockFile("\n");
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1906), " ", " ", options0, "\n", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "yG&e,h|#iJViTjE&Kw";
      Options options0 = new Options();
      String string1 = "arg";
      boolean boolean0 = false;
      String string2 = "W]j6pl";
      Options options1 = options0.addOption("arg", false, "W]j6pl");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(1, "yG&e,h|#iJViTjE&Kw", "yG&e,h|#iJViTjE&Kw", options1, "arg");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 2092;
      helpFormatter0.getArgName();
      MockFile mockFile0 = new MockFile("]\"e_hBbFq \"Sh", "Ol3yJQd*");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "Ol3yJQd*";
      objectArray0[1] = (Object) "]\"e_hBbFq \"Sh";
      objectArray0[2] = (Object) "]\"e_hBbFq \"Sh";
      Object object0 = new Object();
      objectArray0[3] = object0;
      Object object1 = new Object();
      objectArray0[4] = object1;
      PrintWriter printWriter0 = mockPrintWriter0.format(" ", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 2092, "z0d7BPg9Cmm>#8eq5X");
      helpFormatter0.rtrim("");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine("NO_ARGS_ALLOWED");
      helpFormatter0.setNewLine("");
      helpFormatter0.defaultNewLine = "line.separator";
      helpFormatter0.defaultSyntaxPrefix = ">";
      helpFormatter0.getOptPrefix();
      helpFormatter0.getLongOptPrefix();
      StringBuffer stringBuffer0 = new StringBuffer("line.separator");
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "--");
      OptionGroup optionGroup0 = new OptionGroup();
      Options options2 = options1.addOptionGroup(optionGroup0);
      options0.getOptionGroups();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 0, options2, 0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.setOptionComparator(comparator0);
      int int0 = 2678;
      String string0 = null;
      String string1 = "%.G&Ex#Idf~iW6";
      Options options0 = new Options();
      String string2 = "-!msP4Sm f";
      boolean boolean0 = false;
      Option option0 = null;
      try {
        option0 = new Option("-!msP4Sm f", false, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '-!msP4Sm f' contains an illegal character : '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "87FA+$=;mp9Jjb@w0";
      helpFormatter0.setNewLine("Cannot add value, list full.");
      helpFormatter0.defaultLongOptPrefix = "";
      helpFormatter0.setArgName("#?2i?uZ(S'");
      helpFormatter0.getArgName();
      Options options0 = new Options();
      options0.hasShortOption("I6GU($C");
      helpFormatter0.printHelp(647, "#?2i?uZ(S'", "#?2i?uZ(S'", options0, "(%IH{");
      helpFormatter0.printHelp("1_Y", options0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLongOptPrefix = "org.apache.commons.cli.HelpFormatter";
      helpFormatter0.defaultWidth = 0;
      helpFormatter0.getLeftPadding();
      Options options0 = new Options();
      Option option0 = new Option((String) null, (String) null, false, (String) null);
      Options options1 = options0.addOption(option0);
      Options options2 = options1.addOption((String) null, false, "arg");
      Options options3 = options2.addOption((String) null, "-", false, "3#mCkt/M:VJP`.");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" | ");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "OAs`~|{");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator) null);
      MockFile mockFile0 = new MockFile("Y.", "Y.");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      String string0 = "";
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockFile0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      PrintStream printStream0 = mockPrintStream1.printf("", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, false);
      int int0 = (-1443);
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "--", 3, (-1443));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('6');
      boolean boolean0 = false;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, false);
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf("--", objectArray0);
      int int0 = (-3961);
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage(printWriter0, (-3961), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptSeparator();
      int int0 = (-1569);
      String string0 = "rIhSKZd3\\_6OED";
      helpFormatter0.setNewLine("rIhSKZd3_6OED");
      String string1 = "Kc:l9P";
      helpFormatter0.defaultArgName = "Kc:l9P";
      helpFormatter0.setLongOptSeparator("org.apache.commons.cli.HelpFormatter$1");
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1569));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      helpFormatter0.optionComparator = comparator0;
      helpFormatter0.setSyntaxPrefix("");
      int int0 = (-561);
      helpFormatter0.setWidth((-561));
      helpFormatter0.setDescPadding(0);
      helpFormatter0.getLongOptSeparator();
      String string0 = "U:m";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("O3cXef:0", "U:m");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // U:m
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      int int1 = 2499;
      helpFormatter0.setWidth(2499);
      helpFormatter0.setDescPadding(0);
      int int2 = 0;
      String string0 = "org.apache.commons.cli.ParseException";
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 687, 0, "org.apache.commons.cli.ParseException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.helpOptions();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      charArray0[1] = '*';
      charArray0[2] = 'y';
      mockPrintWriter0.println(charArray0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, 2218, "Cannot add value, list full.");
      helpFormatter0.printHelp("Cannot add value, list full.", "Cannot add value, list full.", options0, ":X6jdt B%40.rynS");
      int int0 = helpFormatter0.getLeftPadding();
      assertEquals(1, int0);
      
      helpFormatter0.getSyntaxPrefix();
      assertEquals(1, helpFormatter0.getLeftPadding());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.setWidth((-1));
      int int0 = 0;
      String string0 = null;
      String string1 = "";
      Options options0 = new Options();
      String string2 = "[";
      Option option0 = null;
      try {
        option0 = new Option("[", "AX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '['
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("PRS9`");
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setLongOptSeparator("Jty86!;v_");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("arg", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1513;
      helpFormatter0.setDescPadding(1513);
      String string0 = "6-22-$E5L";
      helpFormatter0.setNewLine("6-22-$E5L");
      Options options0 = null;
      boolean boolean0 = false;
      Options options1 = new Options();
      options1.helpOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-416), "6-22-$E5L", "x>lDhF", options1, "6-22-$E5L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-1), (String) null, "LhvE+[+(-Bkz", options0, (String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      String string0 = null;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) helpFormatter0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) helpFormatter0;
      objectArray0[7] = (Object) helpFormatter0;
      objectArray0[8] = (Object) mockPrintWriter0;
      // Undeclared exception!
      try { 
        mockPrintWriter0.format((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
