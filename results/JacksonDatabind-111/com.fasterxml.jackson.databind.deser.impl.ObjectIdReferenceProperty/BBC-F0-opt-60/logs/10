* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty
* Starting Client-0
* Connecting to master process on port 16113
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-111/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 209
* Using seed 3073135178
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 132 / 209
[MASTER] 09:17:05.706 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 09:17:05.830 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 09:17:06.221 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 09:17:09.175 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 09:17:18.917 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<T> : Type points to itself
[MASTER] 09:17:18.933 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 09:17:19.696 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 09:17:23.333 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 09:17:49.710 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 09:18:31.982 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 09:23:00.279 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.module.SimpleModule due to org.evosuite.ga.ConstructionFailedException: Error: VariableReference: Statement 16, type java.util.HashMap<java.lang.Class<java.lang.Class<com.fasterxml.jackson.databind.JsonNode>>, com.fasterxml.jackson.databind.JsonDeserializer<java.io.ByteArrayInputStream>> is not assignable to java.util.Map<java.lang.Class<?>, com.fasterxml.jackson.databind.JsonDeserializer<?>>
[MASTER] 09:24:28.788 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.module.SimpleModule due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.filter.FilteringParserDelegate due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.json.ReaderBasedJsonParser due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.PipedReader due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 601s and 3835 generations, 1124019 statements, best individual has fitness: 63.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 43
* Number of covered goals: 34
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 24
* Number of covered goals: 17
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 92%
* Total number of goals: 13
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 59
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 69%
* Total number of goals: 16
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 24
* Number of covered goals: 17
* Generated 37 tests with total length 334
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 09:27:22.333 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 09:27:59.425 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 09:27:59.428 [logback-1] WARN  JUnitAnalyzer - Failing test:
 PropertyName propertyName0 = PropertyName.USE_DEFAULT;
PlaceholderForType placeholderForType0 = new PlaceholderForType((-1093));
AnnotationMap annotationMap0 = new AnnotationMap();
PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, placeholderForType0, propertyName0, (TypeDeserializer) null, annotationMap0, (AnnotatedParameter) null, (-1093), (Object) null, propertyMetadata0);
ObjectIdInfo objectIdInfo0 = ObjectIdInfo.empty();
creatorProperty0.setFallbackSetter(creatorProperty0);
ObjectIdReferenceProperty objectIdReferenceProperty0 = new ObjectIdReferenceProperty(creatorProperty0, objectIdInfo0);
objectIdReferenceProperty0.fixAccess((DeserializationConfig) null);

* Writing tests to file
* Writing JUnit test case 'ObjectIdReferenceProperty_ESTest' to results/JacksonDatabind-111/com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty/BBC-F0-opt-60/tests/10
* Done!

* Computation finished
