/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 07 20:02:20 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import com.fasterxml.jackson.databind.deser.impl.SetterlessProperty;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder;
import com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.ser.BeanSerializer;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.CollectionType;
import com.fasterxml.jackson.databind.type.MapLikeType;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SetterlessProperty_ESTest extends SetterlessProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<BeanSerializer> class0 = BeanSerializer.class;
      JavaType[] javaTypeArray0 = new JavaType[8];
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ArrayType arrayType0 = typeFactory0.constructArrayType(class0);
      javaTypeArray0[0] = (JavaType) arrayType0;
      Class<MapType> class1 = MapType.class;
      Class<Integer> class2 = Integer.class;
      List<JavaType> list0 = arrayType0.getInterfaces();
      TypeBindings typeBindings0 = TypeBindings.create(class2, list0);
      CollectionType collectionType0 = CollectionType.construct(class1, typeBindings0, javaTypeArray0[0], javaTypeArray0, javaTypeArray0[0]);
      Class<String> class3 = String.class;
      ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class3, typeBindings0);
      SimpleType simpleType0 = SimpleType.constructUnsafe(class1);
      ReferenceType referenceType0 = ReferenceType.upgradeFrom(resolvedRecursiveType0, simpleType0);
      PropertyName propertyName0 = PropertyName.construct("A-ye<@a=O", "A-ye<@a=O");
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, true, propertyName0);
      MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(resolvedRecursiveType0, resolvedRecursiveType0, referenceType0);
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(referenceType0, typeFactory0);
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(javaTypeArray0[1], classNameIdResolver0, "~9hp", true, collectionType0);
      AnnotationMap annotationMap0 = new AnnotationMap();
      SetterlessProperty setterlessProperty0 = null;
      try {
        setterlessProperty0 = new SetterlessProperty(pOJOPropertyBuilder0, mapLikeType0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.impl.SetterlessProperty", e);
      }
  }
}
