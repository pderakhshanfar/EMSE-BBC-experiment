/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 22:04:23 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.impl.SetterlessProperty;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.type.MapLikeType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SetterlessProperty_ESTest extends SetterlessProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JavaType javaType0 = TypeFactory.unknownType();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, (TypeFactory) null);
      MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(javaType0, javaType0, javaType0);
      AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(javaType0, classNameIdResolver0, "\";h*Vi;", true, mapLikeType0);
      Class<Integer> class0 = Integer.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      SetterlessProperty setterlessProperty0 = null;
      try {
        setterlessProperty0 = new SetterlessProperty((BeanPropertyDefinition) null, javaType0, asExternalTypeDeserializer0, annotationMap0, (AnnotatedMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.SettableBeanProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SetterlessProperty setterlessProperty0 = null;
      try {
        setterlessProperty0 = new SetterlessProperty((SetterlessProperty) null, (JsonDeserializer<?>) null, (NullValueProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JavaType javaType0 = TypeFactory.unknownType();
      ObjectMapper objectMapper0 = new ObjectMapper();
      Boolean boolean0 = new Boolean(true);
      objectMapper0.setDefaultMergeable(boolean0);
      ObjectReader objectReader0 = objectMapper0.readerForUpdating(javaType0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SetterlessProperty setterlessProperty0 = null;
      try {
        setterlessProperty0 = new SetterlessProperty((SetterlessProperty) null, (PropertyName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase", e);
      }
  }
}
