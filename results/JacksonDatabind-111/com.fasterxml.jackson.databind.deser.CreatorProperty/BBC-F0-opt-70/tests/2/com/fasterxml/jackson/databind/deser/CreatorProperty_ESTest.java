/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 08:11:58 GMT 2021
 */

package com.fasterxml.jackson.databind.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BasicDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BeanDeserializerBase;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;
import com.fasterxml.jackson.databind.introspect.AnnotationCollector;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.node.IntNode;
import com.fasterxml.jackson.databind.type.CollectionLikeType;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.Annotations;
import com.fasterxml.jackson.databind.util.ViewMatcher;
import java.io.IOException;
import java.io.PipedInputStream;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreatorProperty_ESTest extends CreatorProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "'", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
      try { 
        creatorProperty0.inject(defaultDeserializationContext_Impl0, "5:X5%Z`?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer(0);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "", integer0, "");
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      JsonDeserializer<JavaType> jsonDeserializer1 = (JsonDeserializer<JavaType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty1 = settableBeanProperty0.withValueDeserializer(jsonDeserializer1);
      assertTrue(settableBeanProperty1.hasValueDeserializer());
      assertEquals((-596), settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      PropertyName propertyName1 = propertyName0.withNamespace("Unexpected end-of-input when binding data into %s");
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "'", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName1);
      assertEquals((-596), settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      JsonDeserializer<JsonInclude.Include> jsonDeserializer0 = (JsonDeserializer<JsonInclude.Include>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      assertEquals((-596), settableBeanProperty0.getCreatorIndex());
      assertTrue(settableBeanProperty0.hasValueDeserializer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "OBJECT", true, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 0, "OBJECT", propertyMetadata0);
      creatorProperty0._ignorable = true;
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer((JsonDeserializer<?>) null);
      assertNotSame(settableBeanProperty0, creatorProperty0);
      assertTrue(settableBeanProperty0.isIgnorable());
      assertEquals(0, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "OBJECT", true, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 0, "OBJECT", propertyMetadata0);
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);
      creatorProperty0.setViews(classArray0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer((JsonDeserializer<?>) null);
      assertNotSame(settableBeanProperty0, creatorProperty0);
      assertEquals(0, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-4588), (Object) null, propertyMetadata0);
      creatorProperty0.assignIndex(0);
      JsonDeserializer<Annotation> jsonDeserializer0 = (JsonDeserializer<Annotation>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      assertEquals((-4588), settableBeanProperty0.getCreatorIndex());
      assertTrue(settableBeanProperty0.hasValueDeserializer());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-4588), (Object) null, propertyMetadata0);
      creatorProperty0.assignIndex(1389);
      JsonDeserializer<Annotation> jsonDeserializer0 = (JsonDeserializer<Annotation>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      assertEquals((-4588), settableBeanProperty0.getCreatorIndex());
      assertTrue(settableBeanProperty0.hasValueDeserializer());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "6n", false, (JavaType) null, jsonTypeInfo_As0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 367, pipedInputStream0, propertyMetadata0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withNullProvider((NullValueProvider) null);
      assertEquals(367, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PropertyName propertyName0 = BasicDeserializerFactory.UNWRAPPED_CREATOR_PARAM_NAME;
      Class<String> class0 = String.class;
      Class<Annotation> class1 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, annotationMap0, annotatedParameter0, 1562, class1, propertyMetadata0);
      creatorProperty0.markAsIgnorable();
      creatorProperty0.withNullProvider((NullValueProvider) null);
      assertTrue(creatorProperty0.isIgnorable());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "OBJECT", true, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 0, "OBJECT", propertyMetadata0);
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);
      creatorProperty0.setViews(classArray0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withNullProvider((NullValueProvider) null);
      assertEquals(0, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "Unexpected end-of-input when binding data into %s", integer0, "Unexpected end-of-input when binding data into %s");
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), "Unexpected end-of-input when binding data into %s", propertyMetadata0);
      JsonDeserializer<IntNode> jsonDeserializer0 = (JsonDeserializer<IntNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      SettableBeanProperty settableBeanProperty1 = settableBeanProperty0.withNullProvider((NullValueProvider) null);
      assertEquals((-596), settableBeanProperty0.getCreatorIndex());
      assertTrue(settableBeanProperty1.hasValueDeserializer());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PropertyName propertyName0 = BasicDeserializerFactory.UNWRAPPED_CREATOR_PARAM_NAME;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 139, (Object) null, propertyMetadata0);
      creatorProperty0._propertyIndex = 139;
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withNullProvider((NullValueProvider) null);
      assertEquals(139, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 0, "", propertyMetadata0);
      creatorProperty0._ignorable = true;
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      assertEquals(0, settableBeanProperty0.getCreatorIndex());
      assertTrue(settableBeanProperty0.isIgnorable());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PropertyName propertyName0 = new PropertyName("");
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, (TypeFactory) null);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 673, (Object) null, propertyMetadata0);
      ViewMatcher viewMatcher0 = ViewMatcher.construct((Class<?>[]) null);
      creatorProperty0._viewMatcher = viewMatcher0;
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      assertEquals(673, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      Class<String> class0 = String.class;
      Class<Annotation> class1 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, annotationMap0, annotatedParameter0, 1562, class1, propertyMetadata0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      assertEquals(1562, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      String string0 = "@?~f\\uPkr3)";
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, string0, false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 0);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 0, propertyMetadata0, propertyMetadata0);
      creatorProperty0.assignIndex(0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      assertEquals(0, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      String string0 = "@?~f\\uPkr3)";
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, string0, false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 1);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 1, propertyMetadata0, propertyMetadata0);
      creatorProperty0.assignIndex(1);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      assertEquals(1, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "'", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      creatorProperty0.getMember();
      assertEquals((-596), creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "'", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      creatorProperty0.getInjectableValueId();
      assertEquals((-596), creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "h+^n=REDIKm", false, (JavaType) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 256, (Object) null, propertyMetadata0);
      int int0 = creatorProperty0.getCreatorIndex();
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      Class<String> class0 = String.class;
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[7];
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[1] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[2] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[3] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[4] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[5] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[6] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, (String) null, integer0, "'");
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "", false, (JavaType) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), beanProperty_Bogus0, propertyMetadata0);
      int int0 = creatorProperty0.getCreatorIndex();
      assertEquals((-596), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
      ReferenceType referenceType0 = ReferenceType.upgradeFrom(placeholderForType0, placeholderForType0);
      AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(referenceType0, (TypeIdResolver) null, "4lb\"a;;D'n4UKo\u0007", true, referenceType0);
      AnnotationMap annotationMap0 = new AnnotationMap();
      Class<Integer> class0 = Integer.class;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, referenceType0, (PropertyName) null, asExternalTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-3059), class0, propertyMetadata0);
      CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
      // Undeclared exception!
      try { 
        creatorProperty1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.SettableBeanProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", false, (JavaType) null);
      Class<String> class0 = String.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, (-1348), asArrayTypeDeserializer0, propertyMetadata0);
      CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
      SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
      // Undeclared exception!
      try { 
        creatorProperty1.setAndReturn(simpleObjectIdResolver0, "']");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.SettableBeanProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, (-45));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, (-45), propertyMetadata0, propertyMetadata0);
      CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
      creatorProperty0._fallbackSetter = (SettableBeanProperty) creatorProperty1;
      JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.CUSTOM;
      // Undeclared exception!
      try { 
        creatorProperty0.set(jsonInclude_Include0, annotatedParameter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.SettableBeanProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", true, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, 2923, (Object) null, propertyMetadata0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      try { 
        creatorProperty0.inject(deserializationContext0, (Object) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Property '' (type com.fasterxml.jackson.databind.deser.CreatorProperty) has no injectable value id configured
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct((Boolean) null, "Unexpected end-of-input when binding data into %s", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      try { 
        creatorProperty0.findInjectableValue(defaultDeserializationContext_Impl0, (Object) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Property '' (type com.fasterxml.jackson.databind.deser.CreatorProperty) has no injectable value id configured
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PropertyName propertyName0 = BasicDeserializerFactory.UNWRAPPED_CREATOR_PARAM_NAME;
      CreatorProperty creatorProperty0 = null;
      try {
        creatorProperty0 = new CreatorProperty((CreatorProperty) null, propertyName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CreatorProperty creatorProperty0 = null;
      try {
        creatorProperty0 = new CreatorProperty((CreatorProperty) null, (JsonDeserializer<?>) null, (NullValueProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, (String) null, false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      Integer integer0 = new Integer(7);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, integer0, propertyMetadata0);
      creatorProperty0.setFallbackSetter(creatorProperty0);
      // Undeclared exception!
      try { 
        creatorProperty0.deserializeAndSet((JsonParser) null, (DeserializationContext) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.SettableBeanProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "Unexpected end-of-input when binding data into %s", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      // Undeclared exception!
      try { 
        creatorProperty0.findInjectableValue((DeserializationContext) null, jsonFormat_Features0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.CreatorProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      String string0 = "@?~f\\uPkr3)";
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, string0, false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 1);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 1, propertyMetadata0, propertyMetadata0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      creatorProperty0._fallbackSetter = settableBeanProperty0;
      try { 
        creatorProperty0.set((Object) null, propertyMetadata0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No fallback setter/field defined for creator property ''
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      Class<Annotation> class0 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[1];
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "'", integer0, (String) null);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-596), (Object) null, propertyMetadata0);
      creatorProperty0.getAnnotation(class0);
      assertEquals((-596), creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", false, (JavaType) null);
      Class<String> class0 = String.class;
      Class<Annotation> class1 = Annotation.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, 0, jsonFormat_Feature0, propertyMetadata0);
      creatorProperty0.getAnnotation(class1);
      assertEquals(0, creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      PropertyName propertyName0 = beanProperty_Bogus0.getFullName();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "Unexpected end-of-input when binding data into %s", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;
      JsonFormat.Feature[] jsonFormat_FeatureArray0 = new JsonFormat.Feature[5];
      jsonFormat_FeatureArray0[0] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[1] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[2] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[3] = jsonFormat_Feature0;
      jsonFormat_FeatureArray0[4] = jsonFormat_Feature0;
      JsonFormat.Features jsonFormat_Features0 = JsonFormat.Features.construct(jsonFormat_FeatureArray0, jsonFormat_FeatureArray0);
      Boolean boolean0 = jsonFormat_Features0.get(jsonFormat_Feature0);
      Integer integer0 = new Integer((-596));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "", integer0, "Unexpected end-of-input when binding data into %s");
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2834, integer0, propertyMetadata0);
      // Undeclared exception!
      try { 
        creatorProperty0.findInjectableValue((DeserializationContext) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.deser.CreatorProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "'", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, propertyMetadata0, propertyMetadata0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withName(propertyName0);
      creatorProperty0.setFallbackSetter(settableBeanProperty0);
      assertEquals(2382, settableBeanProperty0.getCreatorIndex());
      
      creatorProperty0.fixAccess((DeserializationConfig) null);
      assertEquals(2382, creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "'", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, propertyMetadata0, propertyMetadata0);
      creatorProperty0.fixAccess((DeserializationConfig) null);
      assertEquals(2382, creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      String string0 = "@?~f\\uPkr3)";
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, string0, true, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 1);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, 1, propertyMetadata0, propertyMetadata0);
      JsonDeserializer<Object> jsonDeserializer0 = SettableBeanProperty.MISSING_VALUE_DESERIALIZER;
      SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
      assertSame(settableBeanProperty0, creatorProperty0);
      assertEquals(1, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "'", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, propertyMetadata0, propertyMetadata0);
      creatorProperty0.isIgnorable();
      assertEquals(2382, creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<JsonInclude.Include> class0 = JsonInclude.Include.class;
      CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, class0);
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(collectionLikeType0, typeFactory0);
      JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXISTING_PROPERTY;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(collectionLikeType0, classNameIdResolver0, "7\"Doe?Oj[dJP0]YesT", false, collectionLikeType0, jsonTypeInfo_As0);
      Class<Annotation> class1 = Annotation.class;
      AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class0, (Annotation) null, class1, (Annotation) null);
      IntNode intNode0 = IntNode.valueOf(0);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, collectionLikeType0, (PropertyName) null, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 0, intNode0, propertyMetadata0);
      int int0 = creatorProperty0.getCreatorIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PropertyName propertyName0 = BeanDeserializerBase.TEMP_PROPERTY_NAME;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, (String) null, false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      Integer integer0 = new Integer(7);
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, integer0, propertyMetadata0);
      try { 
        creatorProperty0.deserializeAndSet((JsonParser) null, (DeserializationContext) null, (Object) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No fallback setter/field defined for creator property '#temporary-name'
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
      ReferenceType referenceType0 = ReferenceType.upgradeFrom(placeholderForType0, placeholderForType0);
      AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(referenceType0, (TypeIdResolver) null, "4lb\"a;;D'n4UKo\u0007", true, referenceType0);
      AnnotationMap annotationMap0 = new AnnotationMap();
      Class<Integer> class0 = Integer.class;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, referenceType0, (PropertyName) null, asExternalTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-3059), class0, propertyMetadata0);
      String string0 = creatorProperty0.toString();
      assertEquals((-3059), creatorProperty0.getCreatorIndex());
      assertEquals("[creator property, name ''; inject id 'class java.lang.Integer']", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", false, (JavaType) null);
      Class<String> class0 = String.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, 2923, propertyName0, propertyMetadata0);
      Object object0 = creatorProperty0.getInjectableValueId();
      assertEquals(2923, creatorProperty0.getCreatorIndex());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "'", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2382, propertyMetadata0, propertyMetadata0);
      creatorProperty0.markAsIgnorable();
      boolean boolean0 = creatorProperty0.isIgnorable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.NO_NAME;
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, (TypeIdResolver) null, "']", false, (JavaType) null);
      Class<String> class0 = String.class;
      AnnotationMap annotationMap0 = AnnotationMap.of(class0, (Annotation) null);
      AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, (TypeResolutionContext) null, annotationMap0, 2923);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asArrayTypeDeserializer0, annotationMap0, annotatedParameter0, 2923, propertyName0, propertyMetadata0);
      AnnotatedMember annotatedMember0 = creatorProperty0.getMember();
      assertNotNull(annotatedMember0);
      assertEquals(2923, creatorProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, (TypeDeserializer) null, annotationMap0, (AnnotatedParameter) null, 255, propertyMetadata0, propertyMetadata0);
      try { 
        creatorProperty0.deserializeSetAndReturn((JsonParser) null, (DeserializationContext) null, annotationMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No fallback setter/field defined for creator property ''
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PropertyName propertyName0 = new PropertyName("");
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, (TypeFactory) null);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 673, (Object) null, propertyMetadata0);
      JsonDeserializer<Module> jsonDeserializer0 = (JsonDeserializer<Module>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
      SettableBeanProperty settableBeanProperty0 = creatorProperty1.withName(propertyName0);
      assertEquals(673, settableBeanProperty0.getCreatorIndex());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PropertyName propertyName0 = new PropertyName("");
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, (TypeFactory) null);
      AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "", false, (JavaType) null);
      AnnotationMap annotationMap0 = new AnnotationMap();
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
      CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 673, (Object) null, propertyMetadata0);
      try { 
        creatorProperty0.setAndReturn((Object) null, asPropertyTypeDeserializer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No fallback setter/field defined for creator property ''
         //
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
      }
  }
}
