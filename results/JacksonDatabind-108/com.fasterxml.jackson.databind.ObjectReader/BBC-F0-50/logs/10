* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.fasterxml.jackson.databind.ObjectReader
* Starting Client-0
* Connecting to master process on port 10845
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonDatabind-108/target/classes
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.10.0-SNAPSHOT/jackson-annotations-2.10.0-20190519.085045-3.jar
  - defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.10.0-SNAPSHOT/jackson-core-2.10.0-20190518.180547-60.jar
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.databind.ObjectReader
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2286
* Using seed 3617504987
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 1328 / 2286
[MASTER] 11:29:40.010 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.ext.DOMDeserializer<T>.DocumentDeserializer : Type points to itself
[MASTER] 11:29:40.011 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.ext.DOMDeserializer<T>.NodeDeserializer : Type points to itself
[MASTER] 11:29:40.012 [logback-2] ERROR TestCluster - Failed to check cache for java.util.concurrent.ConcurrentHashMap<K, V> : Type points to itself
[MASTER] 11:29:40.239 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Vector<E> : Type points to itself
[MASTER] 11:29:42.560 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonDeserializer<T> : Type points to itself
[MASTER] 11:29:44.097 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 11:29:46.019 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.JsonSerializer<T> : Type points to itself
[MASTER] 11:29:58.824 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 11:29:59.450 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.introspect.AnnotatedConstructor due to org.evosuite.ga.ConstructionFailedException: Have no generator for java.lang.reflect.Constructor<java.io.InputStream> canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 11:29:59.774 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:29:59.806 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 11:30:00.191 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 11:30:00.277 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.cfg.BaseSettings due to org.evosuite.ga.ConstructionFailedException: Invalid generic instance
[MASTER] 11:30:14.266 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Class<T> : Type points to itself
[MASTER] 11:30:23.583 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.introspect.SimpleMixInResolver due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:30:25.673 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.DeserializationConfig due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:31:41.180 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.annotation.ObjectIdGenerator<T> : Type points to itself
[MASTER] 11:33:15.870 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.ser.BeanSerializerBuilder due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:33:31.961 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 11:33:57.839 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:36:02.619 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.BiFunction<T, U, R> : Type points to itself
[MASTER] 11:36:23.233 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:37:12.425 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 11:37:49.207 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.type.ResolvedRecursiveType due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.module.SimpleModule due to org.evosuite.ga.ConstructionFailedException: Error: VariableReference: Statement 42, type java.util.ArrayList<com.fasterxml.jackson.databind.JsonSerializer<com.fasterxml.jackson.databind.node.LongNode>> is not assignable to java.util.List<com.fasterxml.jackson.databind.JsonSerializer<?>>
[MASTER] 11:38:21.218 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> : Invalid generic instance
[MASTER] 11:38:21.218 [logback-2] ERROR TestCluster - Failed to check cache for com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<T> : Type points to itself
[MASTER] 11:38:31.794 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.databind.SerializationConfig due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 604s and 353 generations, 157422 statements, best individual has fitness: 779.0
* Minimizing test suite
[MASTER] 11:40:52.428 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 421
* Number of covered goals: 383
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 271
* Number of covered goals: 231
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 225
* Number of covered goals: 225
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 83%
* Total number of goals: 412
* Number of covered goals: 342
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 659
* Number of covered goals: 281
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 126
* Number of covered goals: 125
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 77%
* Total number of goals: 126
* Number of covered goals: 97
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 271
* Number of covered goals: 230
* Generated 390 tests with total length 6933
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:41:40.380 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6702% of time used, but only 84/390 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 11:42:31.316 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_374_1629286951195/com/fasterxml/jackson/databind/ObjectReader_374_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_374_1629286951195/com/fasterxml/jackson/databind/ObjectReader_374_tmp__ESTest_scaffolding.java]]
[MASTER] 11:42:31.316 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/JacksonDatabind-108/target/classes:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.10.0-SNAPSHOT/jackson-annotations-2.10.0-20190519.085045-3.jar:defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.10.0-SNAPSHOT/jackson-core-2.10.0-20190518.180547-60.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-108/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.10.0-SNAPSHOT/jackson-annotations-2.10.0-20190519.085045-3.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.10.0-SNAPSHOT/jackson-core-2.10.0-20190518.180547-60.jar
[MASTER] 11:42:31.316 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/JacksonDatabind-108/target/classes:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-annotations/2.10.0-SNAPSHOT/jackson-annotations-2.10.0-20190519.085045-3.jar:/experiment/defects4j/framework/projects/JacksonDatabind/lib/com/fasterxml/jackson/core/jackson-core/2.10.0-SNAPSHOT/jackson-core-2.10.0-20190518.180547-60.jar
[MASTER] 11:42:31.320 [logback-2] ERROR JUnitAnalyzer - Diagnostic: no suitable constructor found for ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class<com.fasterxml.jackson.databind.type.ReferenceType>,java.lang.Class<com.fasterxml.jackson.annotation.ObjectIdGenerator>,java.lang.Class<com.fasterxml.jackson.annotation.ObjectIdResolver>)
    constructor com.fasterxml.jackson.databind.introspect.ObjectIdInfo.ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class<?>,java.lang.Class<? extends com.fasterxml.jackson.annotation.ObjectIdGenerator<?>>,java.lang.Class<? extends com.fasterxml.jackson.annotation.ObjectIdResolver>) is not applicable
      (argument mismatch; java.lang.Class<com.fasterxml.jackson.annotation.ObjectIdGenerator> cannot be converted to java.lang.Class<? extends com.fasterxml.jackson.annotation.ObjectIdGenerator<?>>)
    constructor com.fasterxml.jackson.databind.introspect.ObjectIdInfo.ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class<?>,java.lang.Class<? extends com.fasterxml.jackson.annotation.ObjectIdGenerator<?>>,boolean) is not applicable
      (argument mismatch; java.lang.Class<com.fasterxml.jackson.annotation.ObjectIdGenerator> cannot be converted to java.lang.Class<? extends com.fasterxml.jackson.annotation.ObjectIdGenerator<?>>): 154
[MASTER] 11:42:31.320 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 11:42:31.322 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_374_1629286951195/com/fasterxml/jackson/databind/ObjectReader_374_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Wed Aug 18 11:42:31 GMT 2021
4:  */
5: 
6: package com.fasterxml.jackson.databind;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import com.fasterxml.jackson.annotation.ObjectIdGenerator;
13: import com.fasterxml.jackson.annotation.ObjectIdResolver;
14: import com.fasterxml.jackson.core.JsonParser;
15: import com.fasterxml.jackson.core.JsonToken;
16: import com.fasterxml.jackson.core.type.TypeReference;
17: import com.fasterxml.jackson.databind.InjectableValues;
18: import com.fasterxml.jackson.databind.ObjectMapper;
19: import com.fasterxml.jackson.databind.ObjectReader;
20: import com.fasterxml.jackson.databind.PropertyName;
21: import com.fasterxml.jackson.databind.cfg.ContextAttributes;
22: import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
23: import com.fasterxml.jackson.databind.node.BooleanNode;
24: import com.fasterxml.jackson.databind.node.JsonNodeType;
25: import com.fasterxml.jackson.databind.node.LongNode;
26: import com.fasterxml.jackson.databind.type.ReferenceType;
27: import java.net.URI;
28: import java.net.URL;
29: import java.util.concurrent.ConcurrentHashMap;
30: import java.util.function.Consumer;
31: import org.evosuite.runtime.EvoRunner;
32: import org.evosuite.runtime.EvoRunnerParameters;
33: import org.evosuite.runtime.ViolatedAssumptionAnswer;
34: import org.evosuite.runtime.mock.java.io.MockFile;
35: import org.evosuite.runtime.mock.java.net.MockURI;
36: import org.junit.runner.RunWith;
37: 
38: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
39: public class ObjectReader_374_tmp__ESTest extends ObjectReader_374_tmp__ESTest_scaffolding {
40: 
41:   @Test(timeout = 4000)
42:   public void test0()  throws Throwable  {
43:       ObjectMapper objectMapper0 = new ObjectMapper();
44:       assertEquals(0, objectMapper0.mixInCount());
45:       assertNotNull(objectMapper0);
46:       
47:       ConcurrentHashMap<String, Object> concurrentHashMap0 = new ConcurrentHashMap<String, Object>();
48:       assertTrue(concurrentHashMap0.isEmpty());
49:       assertNotNull(concurrentHashMap0);
50:       
51:       InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(concurrentHashMap0);
52:       assertTrue(concurrentHashMap0.isEmpty());
53:       assertNotNull(injectableValues_Std0);
54:       
55:       ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std0);
56:       assertEquals(0, objectMapper0.mixInCount());
57:       assertTrue(concurrentHashMap0.isEmpty());
58:       assertNotNull(objectReader0);
59:       
60:       String string0 = "";
61:       LongNode longNode0 = LongNode.valueOf((-1L));
62:       assertFalse(longNode0.isArray());
63:       assertEquals(JsonNodeType.NUMBER, longNode0.getNodeType());
64:       assertEquals((short) (-1), longNode0.shortValue());
65:       assertFalse(longNode0.isBigDecimal());
66:       assertFalse(longNode0.booleanValue());
67:       assertEquals(0, longNode0.size());
68:       assertNull(longNode0.textValue());
69:       assertTrue(longNode0.isLong());
70:       assertTrue(longNode0.canConvertToLong());
71:       assertEquals((-1L), longNode0.longValue());
72:       assertEquals((-1.0), longNode0.doubleValue(), 0.01);
73:       assertFalse(longNode0.isShort());
74:       assertFalse(longNode0.isInt());
75:       assertEquals(JsonParser.NumberType.LONG, longNode0.numberType());
76:       assertTrue(longNode0.isIntegralNumber());
77:       assertEquals((-1), longNode0.intValue());
78:       assertFalse(longNode0.isObject());
79:       assertEquals(JsonToken.VALUE_NUMBER_INT, longNode0.asToken());
80:       assertFalse(longNode0.isNaN());
81:       assertFalse(longNode0.isBigInteger());
82:       assertFalse(longNode0.isFloatingPointNumber());
83:       assertFalse(longNode0.isFloat());
84:       assertFalse(longNode0.isDouble());
85:       assertFalse(longNode0.isMissingNode());
86:       assertTrue(longNode0.canConvertToInt());
87:       assertTrue(longNode0.isEmpty());
88:       assertEquals((-1.0F), longNode0.floatValue(), 0.01F);
89:       assertNotNull(longNode0);
90:       
91:       InjectableValues.Std injectableValues_Std1 = injectableValues_Std0.addValue("", (Object) longNode0);
92:       assertFalse(concurrentHashMap0.isEmpty());
93:       assertFalse(longNode0.isArray());
94:       assertEquals(JsonNodeType.NUMBER, longNode0.getNodeType());
95:       assertEquals((short) (-1), longNode0.shortValue());
96:       assertFalse(longNode0.isBigDecimal());
97:       assertFalse(longNode0.booleanValue());
98:       assertEquals(0, longNode0.size());
99:       assertNull(longNode0.textValue());
100:       assertTrue(longNode0.isLong());
101:       assertTrue(longNode0.canConvertToLong());
102:       assertEquals((-1L), longNode0.longValue());
103:       assertEquals((-1.0), longNode0.doubleValue(), 0.01);
104:       assertFalse(longNode0.isShort());
105:       assertFalse(longNode0.isInt());
106:       assertEquals(JsonParser.NumberType.LONG, longNode0.numberType());
107:       assertTrue(longNode0.isIntegralNumber());
108:       assertEquals((-1), longNode0.intValue());
109:       assertFalse(longNode0.isObject());
110:       assertEquals(JsonToken.VALUE_NUMBER_INT, longNode0.asToken());
111:       assertFalse(longNode0.isNaN());
112:       assertFalse(longNode0.isBigInteger());
113:       assertFalse(longNode0.isFloatingPointNumber());
114:       assertFalse(longNode0.isFloat());
115:       assertFalse(longNode0.isDouble());
116:       assertFalse(longNode0.isMissingNode());
117:       assertTrue(longNode0.canConvertToInt());
118:       assertTrue(longNode0.isEmpty());
119:       assertEquals((-1.0F), longNode0.floatValue(), 0.01F);
120:       assertNotNull(injectableValues_Std1);
121:       assertSame(injectableValues_Std0, injectableValues_Std1);
122:       assertSame(injectableValues_Std1, injectableValues_Std0);
123:       
124:       ObjectReader objectReader1 = objectReader0.with((ContextAttributes) null);
125:       assertEquals(0, objectMapper0.mixInCount());
126:       assertFalse(concurrentHashMap0.isEmpty());
127:       assertNotNull(objectReader1);
128:       assertFalse(objectReader1.equals((Object)objectReader0));
129:       assertSame(injectableValues_Std0, injectableValues_Std1);
130:       assertNotSame(objectReader0, objectReader1);
131:       assertNotSame(objectReader1, objectReader0);
132:       
133:       PropertyName propertyName0 = new PropertyName("");
134:       assertNull(propertyName0.getNamespace());
135:       assertFalse(propertyName0.hasNamespace());
136:       assertTrue(propertyName0.isEmpty());
137:       assertEquals("", propertyName0.getSimpleName());
138:       assertFalse(propertyName0.hasSimpleName());
139:       assertNotNull(propertyName0);
140:       
141:       Class<ReferenceType> class0 = ReferenceType.class;
142:       Class<ObjectIdGenerator> class1 = ObjectIdGenerator.class;
143:       Class<ObjectIdResolver> class2 = ObjectIdResolver.class;
144:       ContextAttributes contextAttributes0 = objectReader1.getAttributes();
145:       assertEquals(0, objectMapper0.mixInCount());
146:       assertFalse(concurrentHashMap0.isEmpty());
147:       assertNull(contextAttributes0);
148:       assertFalse(objectReader0.equals((Object)objectReader1));
149:       assertFalse(objectReader1.equals((Object)objectReader0));
150:       assertSame(injectableValues_Std0, injectableValues_Std1);
151:       assertNotSame(objectReader0, objectReader1);
152:       assertNotSame(objectReader1, objectReader0);
153:       
154:       ObjectIdInfo objectIdInfo0 = new ObjectIdInfo(propertyName0, class0, class1, class2);
155:       assertNull(propertyName0.getNamespace());
156:       assertFalse(propertyName0.hasNamespace());
157:       assertTrue(propertyName0.isEmpty());
158:       assertEquals("", propertyName0.getSimpleName());
159:       assertFalse(propertyName0.hasSimpleName());
160:       assertFalse(objectIdInfo0.getAlwaysAsId());
161:       assertNotNull(objectIdInfo0);
162:       
163:       // Undeclared exception!
164:       try { 
165:         concurrentHashMap0.forEachKey((-1L), (Consumer<? super String>) null);
166:         fail("Expecting exception: NullPointerException");
167:       
168:       } catch(NullPointerException e) {
169:          //
170:          // no message in exception (getMessage() returned null)
171:          //
172:          verifyException("java.util.concurrent.ConcurrentHashMap", e);
173:       }
174:   }
175: }
RegularFileObject[/tmp/EvoSuite_374_1629286951195/com/fasterxml/jackson/databind/ObjectReader_374_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Wed Aug 18 11:42:31 GMT 2021
5:  */
6: 
7: package com.fasterxml.jackson.databind;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class ObjectReader_374_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.fasterxml.jackson.databind.ObjectReader"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ObjectReader_374_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.fasterxml.jackson.databind.JsonNode$1",
70:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember",
71:       "com.fasterxml.jackson.databind.MappingIterator",
72:       "com.fasterxml.jackson.core.JsonFactoryBuilder",
73:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
74:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
75:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
76:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
77:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
78:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
79:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
80:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
81:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
82:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
83:       "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
84:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider",
85:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
86:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
87:       "com.fasterxml.jackson.core.async.ByteArrayFeeder",
88:       "com.fasterxml.jackson.databind.type.MapLikeType",
89:       "com.fasterxml.jackson.databind.util.LinkedNode",
90:       "com.fasterxml.jackson.databind.type.MapType",
91:       "com.fasterxml.jackson.databind.annotation.JsonTypeResolver",
92:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
93:       "com.fasterxml.jackson.databind.ObjectWriter",
94:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
95:       "com.fasterxml.jackson.databind.type.TypeBase",
96:       "com.fasterxml.jackson.core.util.BufferRecyclers",
97:       "com.fasterxml.jackson.databind.node.TextNode",
98:       "com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty",
99:       "com.fasterxml.jackson.core.util.Instantiatable",
100:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
101:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
102:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase",
103:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
104:       "com.fasterxml.jackson.annotation.Nulls",
105:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
106:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId",
107:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
108:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
109:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
110:       "com.fasterxml.jackson.databind.node.DecimalNode",
111:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
112:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
113:       "com.fasterxml.jackson.databind.deser.Deserializers",
114:       "com.fasterxml.jackson.databind.util.Annotations",
115:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
116:       "com.fasterxml.jackson.databind.deser.KeyDeserializers",
117:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
118:       "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
119:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer",
120:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
121:       "com.fasterxml.jackson.core.FormatFeature",
122:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
123:       "com.fasterxml.jackson.core.TreeNode",
124:       "com.fasterxml.jackson.databind.node.NumericNode",
125:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
126:       "com.fasterxml.jackson.databind.module.SimpleSerializers",
127:       "com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase",
128:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
129:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
130:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
131:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers",
132:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
133:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
134:       "com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer",
135:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
136:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
137:       "com.fasterxml.jackson.databind.BeanProperty$Std",
138:       "com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler",
139:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
140:       "com.fasterxml.jackson.annotation.JsonSetter",
141:       "com.fasterxml.jackson.core.util.JsonParserSequence",
142:       "com.fasterxml.jackson.databind.util.Converter",
143:       "com.fasterxml.jackson.databind.ser.std.FileSerializer",
144:       "com.fasterxml.jackson.core.SerializableString",
145:       "com.fasterxml.jackson.databind.deser.ValueInstantiators",
146:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
147:       "com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo",
148:       "com.fasterxml.jackson.core.Versioned",
149:       "com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember",
150:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
151:       "com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer",
152:       "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
153:       "com.fasterxml.jackson.annotation.JsonAlias",
154:       "com.fasterxml.jackson.core.util.RequestPayload",
155:       "com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer",
156:       "com.fasterxml.jackson.databind.JsonSerializable",
157:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
158:       "com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty",
159:       "com.fasterxml.jackson.databind.BeanDescription",
160:       "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
161:       "com.fasterxml.jackson.databind.ext.DOMDeserializer",
162:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
163:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
164:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
165:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
166:       "com.fasterxml.jackson.core.Base64Variant",
167:       "com.fasterxml.jackson.databind.exc.IgnoredPropertyException",
168:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
169:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
170:       "com.fasterxml.jackson.databind.annotation.JsonNaming",
171:       "com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer",
172:       "com.fasterxml.jackson.annotation.JsonEnumDefaultValue",
173:       "com.fasterxml.jackson.core.io.MergedStream",
174:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer",
175:       "com.fasterxml.jackson.databind.SequenceWriter",
176:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
177:       "com.fasterxml.jackson.annotation.JsonPropertyOrder",
178:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer",
179:       "com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator",
180:       "com.fasterxml.jackson.databind.type.SimpleType",
181:       "com.fasterxml.jackson.databind.ser.ContextualSerializer",
182:       "com.fasterxml.jackson.databind.DeserializationConfig",
183:       "com.fasterxml.jackson.databind.MapperFeature",
184:       "com.fasterxml.jackson.core.util.InternCache",
185:       "com.fasterxml.jackson.core.TSFBuilder",
186:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
187:       "com.fasterxml.jackson.databind.Module$SetupContext",
188:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
189:       "com.fasterxml.jackson.databind.util.ClassUtil",
190:       "com.fasterxml.jackson.databind.node.ContainerNode",
191:       "com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer",
192:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
193:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
194:       "com.fasterxml.jackson.databind.RuntimeJsonMappingException",
195:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
196:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
197:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
198:       "com.fasterxml.jackson.annotation.JsonPropertyDescription",
199:       "com.fasterxml.jackson.databind.jsonschema.SchemaAware",
200:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
201:       "com.fasterxml.jackson.annotation.JacksonAnnotationsInside",
202:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
203:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
204:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
205:       "com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer",
206:       "com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
207:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor",
208:       "com.fasterxml.jackson.core.Base64Variants",
209:       "com.fasterxml.jackson.databind.node.InternalNodeMapper",
210:       "com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer",
211:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
212:       "com.fasterxml.jackson.databind.ser.std.IterableSerializer",
213:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
214:       "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter",
215:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
216:       "com.fasterxml.jackson.core.io.IOContext",
217:       "com.fasterxml.jackson.core.PrettyPrinter",
218:       "com.fasterxml.jackson.databind.util.RawValue",
219:       "com.fasterxml.jackson.core.base.GeneratorBase",
220:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
221:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
222:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
223:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy",
224:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
225:       "com.fasterxml.jackson.databind.node.NullNode",
226:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
227:       "com.fasterxml.jackson.annotation.JacksonInject$Value",
228:       "com.fasterxml.jackson.core.util.Separators",
229:       "com.fasterxml.jackson.databind.ser.BeanSerializerModifier",
230:       "com.fasterxml.jackson.databind.jsontype.NamedType",
231:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
232:       "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder",
233:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer",
234:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
235:       "com.fasterxml.jackson.core.json.JsonWriteContext",
236:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
237:       "com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer",
238:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator",
239:       "com.fasterxml.jackson.annotation.JacksonInject",
240:       "com.fasterxml.jackson.core.io.UTF8Writer",
241:       "com.fasterxml.jackson.databind.BeanProperty",
242:       "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers",
243:       "com.fasterxml.jackson.core.Version",
244:       "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring",
245:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
246:       "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
247:       "com.fasterxml.jackson.core.io.InputDecorator",
248:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext",
249:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat",
250:       "com.fasterxml.jackson.annotation.JsonTypeId",
251:       "com.fasterxml.jackson.core.base.ParserBase",
252:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
253:       "com.fasterxml.jackson.databind.node.BinaryNode",
254:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
255:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
256:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
257:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
258:       "com.fasterxml.jackson.core.JsonGenerator",
259:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
260:       "com.fasterxml.jackson.databind.ser.Serializers",
261:       "com.fasterxml.jackson.databind.type.ClassStack",
262:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer",
263:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
264:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
265:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
266:       "com.fasterxml.jackson.databind.type.ClassKey",
267:       "com.fasterxml.jackson.core.JsonEncoding",
268:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
269:       "com.fasterxml.jackson.core.JsonGenerationException",
270:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
271:       "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
272:       "com.fasterxml.jackson.core.TreeCodec",
273:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
274:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
275:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer",
276:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
277:       "com.fasterxml.jackson.databind.ser.std.EnumSetSerializer",
278:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
279:       "com.fasterxml.jackson.core.type.WritableTypeId",
280:       "com.fasterxml.jackson.databind.introspect.Annotated",
281:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD",
282:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
283:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
284:       "com.fasterxml.jackson.databind.util.TokenBuffer",
285:       "com.fasterxml.jackson.core.JsonParser$NumberType",
286:       "com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer",
287:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
288:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
289:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
290:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
291:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating",
292:       "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
293:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
294:       "com.fasterxml.jackson.databind.node.LongNode",
295:       "com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing",
296:       "com.fasterxml.jackson.databind.deser.CreatorProperty",
297:       "com.fasterxml.jackson.databind.module.SimpleModule",
298:       "com.fasterxml.jackson.databind.cfg.PackageVersion",
299:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
300:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer",
301:       "com.fasterxml.jackson.core.io.NumberOutput",
302:       "com.fasterxml.jackson.annotation.JsonAnyGetter",
303:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
304:       "com.fasterxml.jackson.core.type.TypeReference",
305:       "com.fasterxml.jackson.core.JsonParseException",
306:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
307:       "com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
308:       "com.fasterxml.jackson.annotation.JsonRootName",
309:       "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
310:       "com.fasterxml.jackson.databind.exc.ValueInstantiationException",
311:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
312:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
313:       "com.fasterxml.jackson.annotation.JsonBackReference",
314:       "com.fasterxml.jackson.databind.ObjectMapper$3",
315:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
316:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
317:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
318:       "com.fasterxml.jackson.databind.ser.std.MapSerializer",
319:       "com.fasterxml.jackson.annotation.JsonAnySetter",
320:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$1",
321:       "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
322:       "com.fasterxml.jackson.databind.util.RootNameLookup",
323:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
324:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
325:       "com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer",
326:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
327:       "com.fasterxml.jackson.databind.JsonMappingException",
328:       "com.fasterxml.jackson.core.io.OutputDecorator",
329:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
330:       "com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer",
331:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
332:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer",
333:       "com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer",
334:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
335:       "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
336:       "com.fasterxml.jackson.databind.util.BeanUtil",
337:       "com.fasterxml.jackson.databind.DatabindContext",
338:       "com.fasterxml.jackson.databind.node.ObjectNode",
339:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
340:       "com.fasterxml.jackson.core.JsonParser$Feature",
341:       "com.fasterxml.jackson.core.JsonPointer",
342:       "com.fasterxml.jackson.annotation.JsonMerge",
343:       "com.fasterxml.jackson.core.io.SerializedString",
344:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
345:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer",
346:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
347:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
348:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
349:       "com.fasterxml.jackson.annotation.PropertyAccessor",
350:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
351:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
352:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
353:       "com.fasterxml.jackson.databind.deser.ContextualDeserializer",
354:       "com.fasterxml.jackson.databind.ser.std.ArraySerializerBase",
355:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
356:       "com.fasterxml.jackson.databind.cfg.HandlerInstantiator",
357:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
358:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes",
359:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
360:       "com.fasterxml.jackson.databind.annotation.JsonValueInstantiator",
361:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer",
362:       "com.fasterxml.jackson.databind.ext.Java7Support",
363:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber",
364:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
365:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
366:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
367:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
368:       "com.fasterxml.jackson.annotation.JsonProperty",
369:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
370:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
371:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
372:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
373:       "com.fasterxml.jackson.databind.node.NodeCursor",
374:       "com.fasterxml.jackson.databind.util.AccessPattern",
375:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
376:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
377:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
378:       "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
379:       "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
380:       "com.fasterxml.jackson.core.json.JsonReadFeature",
381:       "com.fasterxml.jackson.databind.deser.std.UUIDDeserializer",
382:       "com.fasterxml.jackson.databind.type.TypeFactory",
383:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
384:       "com.fasterxml.jackson.databind.type.ArrayType",
385:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
386:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader",
387:       "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer",
388:       "com.fasterxml.jackson.databind.util.Named",
389:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
390:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
391:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
392:       "com.fasterxml.jackson.core.format.InputAccessor$Std",
393:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
394:       "com.fasterxml.jackson.databind.type.CollectionType",
395:       "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
396:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
397:       "com.fasterxml.jackson.core.StreamWriteFeature",
398:       "com.fasterxml.jackson.annotation.JsonAutoDetect",
399:       "com.fasterxml.jackson.core.StreamReadFeature",
400:       "com.fasterxml.jackson.core.format.InputAccessor",
401:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
402:       "com.fasterxml.jackson.databind.node.ValueNode",
403:       "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer",
404:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
405:       "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer",
406:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
407:       "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
408:       "com.fasterxml.jackson.databind.node.JsonNodeCreator",
409:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
410:       "com.fasterxml.jackson.core.async.NonBlockingInputFeeder",
411:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
412:       "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
413:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
414:       "com.fasterxml.jackson.core.JsonLocation",
415:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
416:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
417:       "com.fasterxml.jackson.databind.node.IntNode",
418:       "com.fasterxml.jackson.databind.node.FloatNode",
419:       "com.fasterxml.jackson.databind.type.TypeParser",
420:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
421:       "com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer",
422:       "com.fasterxml.jackson.core.ObjectCodec",
423:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
424:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
425:       "com.fasterxml.jackson.core.json.JsonReadContext",
426:       "com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer",
427:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
428:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
429:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
430:       "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer",
431:       "com.fasterxml.jackson.databind.KeyDeserializer",
432:       "com.fasterxml.jackson.core.util.BufferRecycler",
433:       "com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer",
434:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring",
435:       "com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator",
436:       "com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer",
437:       "com.fasterxml.jackson.annotation.ObjectIdResolver",
438:       "com.fasterxml.jackson.databind.DeserializationContext",
439:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
440:       "com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer",
441:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
442:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy",
443:       "com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer",
444:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
445:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
446:       "com.fasterxml.jackson.databind.node.DoubleNode",
447:       "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
448:       "com.fasterxml.jackson.databind.util.EnumResolver",
449:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
450:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
451:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
452:       "com.fasterxml.jackson.databind.type.ReferenceType",
453:       "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer",
454:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
455:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
456:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
457:       "com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer",
458:       "com.fasterxml.jackson.databind.Module",
459:       "com.fasterxml.jackson.annotation.JsonView",
460:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
461:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
462:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
463:       "com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter",
464:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
465:       "com.fasterxml.jackson.databind.InjectableValues$Std",
466:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
467:       "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
468:       "com.fasterxml.jackson.annotation.JsonGetter",
469:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
470:       "com.fasterxml.jackson.databind.DeserializationFeature",
471:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
472:       "com.fasterxml.jackson.databind.node.POJONode",
473:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer",
474:       "com.fasterxml.jackson.annotation.JacksonAnnotation",
475:       "com.fasterxml.jackson.databind.ObjectReader",
476:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
477:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer",
478:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
479:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
480:       "com.fasterxml.jackson.databind.util.LRUMap",
481:       "com.fasterxml.jackson.databind.JsonDeserializer",
482:       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
483:       "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition",
484:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
485:       "com.fasterxml.jackson.annotation.JsonRawValue",
486:       "com.fasterxml.jackson.core.util.DefaultIndenter",
487:       "com.fasterxml.jackson.databind.introspect.MemberKey",
488:       "com.fasterxml.jackson.databind.node.ArrayNode",
489:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
490:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
491:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy",
492:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
493:       "com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter",
494:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
495:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
496:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
497:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
498:       "com.fasterxml.jackson.core.io.CharacterEscapes",
499:       "com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer",
500:       "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer",
501:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
502:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
503:       "com.fasterxml.jackson.core.type.ResolvedType",
504:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
505:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
506:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
507:       "com.fasterxml.jackson.databind.annotation.JsonSerialize",
508:       "com.fasterxml.jackson.annotation.JsonIgnore",
509:       "com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator",
510:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
511:       "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey",
512:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader",
513:       "com.fasterxml.jackson.databind.jsontype.TypeIdResolver",
514:       "com.fasterxml.jackson.databind.util.ConstantValueInstantiator",
515:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker",
516:       "com.fasterxml.jackson.core.JsonParser",
517:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
518:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
519:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
520:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
521:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double",
522:       "com.fasterxml.jackson.core.JsonProcessingException",
523:       "com.fasterxml.jackson.core.JsonStreamContext",
524:       "com.fasterxml.jackson.core.format.MatchStrength",
525:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
526:       "com.fasterxml.jackson.core.io.UTF32Reader",
527:       "com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer",
528:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
529:       "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value",
530:       "com.fasterxml.jackson.annotation.JsonCreator",
531:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
532:       "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
533:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
534:       "com.fasterxml.jackson.core.TokenStreamFactory",
535:       "com.fasterxml.jackson.core.filter.TokenFilter",
536:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
537:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
538:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
539:       "com.fasterxml.jackson.databind.util.ArrayIterator",
540:       "com.fasterxml.jackson.core.io.CharTypes",
541:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
542:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
543:       "com.fasterxml.jackson.databind.ser.std.InetAddressSerializer",
544:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
545:       "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer",
546:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
547:       "com.fasterxml.jackson.core.exc.InputCoercionException",
548:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
549:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
550:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers",
551:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
552:       "com.fasterxml.jackson.databind.JsonSerializer",
553:       "com.fasterxml.jackson.databind.JsonNode",
554:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
555:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
556:       "com.fasterxml.jackson.databind.ser.ResolvableSerializer",
557:       "com.fasterxml.jackson.databind.PropertyName",
558:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
559:       "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer",
560:       "com.fasterxml.jackson.core.util.VersionUtil",
561:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
562:       "com.fasterxml.jackson.databind.json.JsonMapper",
563:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
564:       "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer",
565:       "com.fasterxml.jackson.core.io.NumberInput",
566:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
567:       "com.fasterxml.jackson.databind.ser.impl.StringArraySerializer",
568:       "com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer",
569:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
570:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD",
571:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
572:       "com.fasterxml.jackson.annotation.JsonManagedReference",
573:       "com.fasterxml.jackson.databind.deser.impl.InnerClassProperty",
574:       "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
575:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
576:       "com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase",
577:       "com.fasterxml.jackson.core.io.JsonEOFException",
578:       "com.fasterxml.jackson.databind.MappingJsonFactory",
579:       "com.fasterxml.jackson.databind.InjectableValues",
580:       "com.fasterxml.jackson.databind.node.TreeTraversingParser$1",
581:       "com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer",
582:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
583:       "com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer",
584:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
585:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
586:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
587:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
588:       "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
589:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
590:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
591:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
592:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
593:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
594:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
595:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
596:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
597:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
598:       "com.fasterxml.jackson.databind.JavaType",
599:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
600:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
601:       "com.fasterxml.jackson.databind.node.JsonNodeType",
602:       "com.fasterxml.jackson.databind.deser.NullValueProvider",
603:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
604:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
605:       "com.fasterxml.jackson.core.util.TextBuffer",
606:       "com.fasterxml.jackson.databind.annotation.JsonAppend",
607:       "com.fasterxml.jackson.annotation.JacksonAnnotationValue",
608:       "com.fasterxml.jackson.annotation.JsonFilter",
609:       "com.fasterxml.jackson.core.JsonFactory",
610:       "com.fasterxml.jackson.databind.util.NameTransformer",
611:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
612:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
613:       "com.fasterxml.jackson.databind.node.MissingNode",
614:       "com.fasterxml.jackson.databind.node.ShortNode",
615:       "com.fasterxml.jackson.databind.node.BooleanNode",
616:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD",
617:       "com.fasterxml.jackson.databind.util.StdDateFormat",
618:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
619:       "com.fasterxml.jackson.databind.deser.impl.ValueInjector",
620:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
621:       "com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer",
622:       "com.fasterxml.jackson.databind.SerializationConfig",
623:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
624:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy",
625:       "com.fasterxml.jackson.databind.PropertyMetadata",
626:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
627:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
628:       "com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer",
629:       "com.fasterxml.jackson.annotation.JsonValue",
630:       "com.fasterxml.jackson.databind.deser.ResolvableDeserializer",
631:       "com.fasterxml.jackson.core.json.DupDetector",
632:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
633:       "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer",
634:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
635:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
636:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
637:       "com.fasterxml.jackson.databind.util.TypeKey",
638:       "com.fasterxml.jackson.databind.ser.FilterProvider",
639:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
640:       "com.fasterxml.jackson.annotation.JsonFormat",
641:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
642:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
643:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
644:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
645:       "com.fasterxml.jackson.databind.type.TypeModifier",
646:       "com.fasterxml.jackson.annotation.JsonTypeInfo",
647:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
648:       "com.fasterxml.jackson.annotation.JsonUnwrapped",
649:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
650:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector",
651:       "com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty",
652:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver",
653:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
654:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
655:       "com.fasterxml.jackson.databind.deser.SettableAnyProperty",
656:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
657:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
658:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
659:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
660:       "com.fasterxml.jackson.core.JsonFactory$Feature",
661:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
662:       "com.fasterxml.jackson.databind.ser.SerializerCache",
663:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
664:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
665:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
666:       "com.fasterxml.jackson.databind.type.TypeBindings",
667:       "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
668:       "com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator",
669:       "com.fasterxml.jackson.databind.SerializerProvider",
670:       "com.fasterxml.jackson.core.JsonToken",
671:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
672:       "com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer",
673:       "com.fasterxml.jackson.annotation.JsonIdentityInfo",
674:       "com.fasterxml.jackson.core.JsonGenerator$Feature",
675:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable",
676:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
677:       "com.fasterxml.jackson.databind.ObjectMapper",
678:       "com.fasterxml.jackson.core.exc.StreamReadException",
679:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
680:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
681:       "com.fasterxml.jackson.databind.cfg.ConfigFeature",
682:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
683:       "com.fasterxml.jackson.core.FormatSchema",
684:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
685:       "com.fasterxml.jackson.annotation.JsonInclude",
686:       "com.fasterxml.jackson.databind.SerializationFeature",
687:       "com.fasterxml.jackson.databind.ser.PropertyFilter",
688:       "com.fasterxml.jackson.annotation.JsonIgnoreType",
689:       "com.fasterxml.jackson.core.json.JsonWriteFeature",
690:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector"
691:     );
692:   } 
693: 
694:   private static void resetClasses() {
695:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ObjectReader_374_tmp__ESTest_scaffolding.class.getClassLoader()); 
696: 
697:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
698:       "com.fasterxml.jackson.core.TreeCodec",
699:       "com.fasterxml.jackson.core.ObjectCodec",
700:       "com.fasterxml.jackson.core.type.ResolvedType",
701:       "com.fasterxml.jackson.databind.JavaType",
702:       "com.fasterxml.jackson.databind.type.TypeBindings",
703:       "com.fasterxml.jackson.databind.type.TypeBase",
704:       "com.fasterxml.jackson.databind.type.SimpleType",
705:       "com.fasterxml.jackson.databind.ObjectReader",
706:       "com.fasterxml.jackson.databind.MapperFeature",
707:       "com.fasterxml.jackson.core.util.VersionUtil",
708:       "com.fasterxml.jackson.core.Version",
709:       "com.fasterxml.jackson.databind.cfg.PackageVersion",
710:       "com.fasterxml.jackson.databind.util.ClassUtil",
711:       "com.fasterxml.jackson.databind.PropertyName",
712:       "com.fasterxml.jackson.core.JsonToken",
713:       "com.fasterxml.jackson.databind.DeserializationFeature",
714:       "com.fasterxml.jackson.core.JsonParser$Feature",
715:       "com.fasterxml.jackson.databind.AnnotationIntrospector",
716:       "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
717:       "com.fasterxml.jackson.databind.ext.Java7Support",
718:       "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
719:       "com.fasterxml.jackson.databind.util.LRUMap",
720:       "com.fasterxml.jackson.databind.cfg.BaseSettings",
721:       "com.fasterxml.jackson.databind.type.TypeParser",
722:       "com.fasterxml.jackson.databind.type.TypeFactory",
723:       "com.fasterxml.jackson.databind.util.StdDateFormat",
724:       "com.fasterxml.jackson.core.Base64Variant",
725:       "com.fasterxml.jackson.core.Base64Variants",
726:       "com.fasterxml.jackson.databind.ObjectMapper",
727:       "com.fasterxml.jackson.core.TokenStreamFactory",
728:       "com.fasterxml.jackson.core.io.SerializedString",
729:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
730:       "com.fasterxml.jackson.core.JsonFactory",
731:       "com.fasterxml.jackson.databind.MappingJsonFactory",
732:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
733:       "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo",
734:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
735:       "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
736:       "com.fasterxml.jackson.databind.jsontype.SubtypeResolver",
737:       "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver",
738:       "com.fasterxml.jackson.databind.util.RootNameLookup",
739:       "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver",
740:       "com.fasterxml.jackson.databind.introspect.ClassIntrospector",
741:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations",
742:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector",
743:       "com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver",
744:       "com.fasterxml.jackson.databind.introspect.Annotated",
745:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators",
746:       "com.fasterxml.jackson.databind.introspect.AnnotatedClass",
747:       "com.fasterxml.jackson.databind.BeanDescription",
748:       "com.fasterxml.jackson.databind.introspect.BasicBeanDescription",
749:       "com.fasterxml.jackson.databind.introspect.BasicClassIntrospector",
750:       "com.fasterxml.jackson.databind.cfg.ConfigOverrides",
751:       "com.fasterxml.jackson.annotation.JsonInclude$Include",
752:       "com.fasterxml.jackson.annotation.JsonInclude$Value",
753:       "com.fasterxml.jackson.annotation.Nulls",
754:       "com.fasterxml.jackson.annotation.JsonSetter$Value",
755:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
756:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std",
757:       "com.fasterxml.jackson.annotation.JsonFormat$Shape",
758:       "com.fasterxml.jackson.annotation.JsonFormat$Features",
759:       "com.fasterxml.jackson.annotation.JsonFormat$Value",
760:       "com.fasterxml.jackson.databind.cfg.MapperConfig",
761:       "com.fasterxml.jackson.databind.cfg.ConfigOverride",
762:       "com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty",
763:       "com.fasterxml.jackson.databind.cfg.MapperConfigBase",
764:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
765:       "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
766:       "com.fasterxml.jackson.core.util.DefaultIndenter",
767:       "com.fasterxml.jackson.core.util.Separators",
768:       "com.fasterxml.jackson.core.PrettyPrinter",
769:       "com.fasterxml.jackson.databind.SerializationConfig",
770:       "com.fasterxml.jackson.databind.cfg.ContextAttributes",
771:       "com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl",
772:       "com.fasterxml.jackson.databind.SerializationFeature",
773:       "com.fasterxml.jackson.databind.DeserializationConfig",
774:       "com.fasterxml.jackson.databind.node.JsonNodeFactory",
775:       "com.fasterxml.jackson.databind.DatabindContext",
776:       "com.fasterxml.jackson.databind.JsonSerializer",
777:       "com.fasterxml.jackson.databind.ser.std.StdSerializer",
778:       "com.fasterxml.jackson.databind.ser.impl.FailingSerializer",
779:       "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer",
780:       "com.fasterxml.jackson.databind.SerializerProvider",
781:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
782:       "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl",
783:       "com.fasterxml.jackson.databind.ser.std.NullSerializer",
784:       "com.fasterxml.jackson.databind.ser.SerializerCache",
785:       "com.fasterxml.jackson.databind.DeserializationContext",
786:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext",
787:       "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl",
788:       "com.fasterxml.jackson.databind.deser.DeserializerFactory",
789:       "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
790:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers",
791:       "com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig",
792:       "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
793:       "com.fasterxml.jackson.databind.deser.DeserializerCache",
794:       "com.fasterxml.jackson.databind.ser.SerializerFactory",
795:       "com.fasterxml.jackson.databind.ser.std.StdScalarSerializer",
796:       "com.fasterxml.jackson.databind.ser.std.StringSerializer",
797:       "com.fasterxml.jackson.databind.ser.std.ToStringSerializer",
798:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
799:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base",
800:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer",
801:       "com.fasterxml.jackson.core.JsonParser$NumberType",
802:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer",
803:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer",
804:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer",
805:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer",
806:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer",
807:       "com.fasterxml.jackson.databind.ser.std.BooleanSerializer",
808:       "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
809:       "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
810:       "com.fasterxml.jackson.databind.ser.std.CalendarSerializer",
811:       "com.fasterxml.jackson.databind.ser.std.DateSerializer",
812:       "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers",
813:       "com.fasterxml.jackson.databind.ser.std.UUIDSerializer",
814:       "com.fasterxml.jackson.databind.ser.BasicSerializerFactory",
815:       "com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig",
816:       "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
817:       "com.fasterxml.jackson.core.TSFBuilder",
818:       "com.fasterxml.jackson.core.JsonFactoryBuilder",
819:       "com.fasterxml.jackson.core.util.BufferRecycler",
820:       "com.fasterxml.jackson.core.io.IOContext",
821:       "com.fasterxml.jackson.core.JsonGenerator",
822:       "com.fasterxml.jackson.core.base.GeneratorBase",
823:       "com.fasterxml.jackson.core.io.CharTypes",
824:       "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
825:       "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
826:       "com.fasterxml.jackson.core.JsonStreamContext",
827:       "com.fasterxml.jackson.core.json.JsonWriteContext",
828:       "com.fasterxml.jackson.databind.JsonSerializable$Base",
829:       "com.fasterxml.jackson.databind.JsonNode",
830:       "com.fasterxml.jackson.databind.node.BaseJsonNode",
831:       "com.fasterxml.jackson.databind.node.ContainerNode",
832:       "com.fasterxml.jackson.databind.node.ArrayNode",
833:       "com.fasterxml.jackson.databind.node.ObjectNode",
834:       "com.fasterxml.jackson.databind.node.ValueNode",
835:       "com.fasterxml.jackson.databind.node.NumericNode",
836:       "com.fasterxml.jackson.databind.node.FloatNode",
837:       "com.fasterxml.jackson.databind.node.POJONode",
838:       "com.fasterxml.jackson.databind.type.ClassStack",
839:       "com.fasterxml.jackson.databind.type.TypeBindings$AsKey",
840:       "com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash",
841:       "com.fasterxml.jackson.databind.type.MapLikeType",
842:       "com.fasterxml.jackson.databind.type.MapType",
843:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector",
844:       "com.fasterxml.jackson.databind.InjectableValues",
845:       "com.fasterxml.jackson.databind.InjectableValues$Std",
846:       "com.fasterxml.jackson.core.io.CharacterEscapes",
847:       "com.fasterxml.jackson.core.JsonpCharacterEscapes",
848:       "com.fasterxml.jackson.databind.node.BinaryNode",
849:       "com.fasterxml.jackson.core.util.BufferRecyclers",
850:       "com.fasterxml.jackson.core.JsonParser",
851:       "com.fasterxml.jackson.core.base.ParserMinimalBase",
852:       "com.fasterxml.jackson.core.base.ParserBase",
853:       "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
854:       "com.fasterxml.jackson.core.util.TextBuffer",
855:       "com.fasterxml.jackson.core.json.JsonReadContext",
856:       "com.fasterxml.jackson.core.JsonProcessingException",
857:       "com.fasterxml.jackson.databind.JsonMappingException",
858:       "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
859:       "com.fasterxml.jackson.core.JsonLocation",
860:       "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
861:       "com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector",
862:       "com.fasterxml.jackson.databind.util.ArrayIterator",
863:       "com.fasterxml.jackson.databind.JsonDeserializer",
864:       "com.fasterxml.jackson.databind.deser.std.StdDeserializer",
865:       "com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer",
866:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer",
867:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1",
868:       "com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector",
869:       "com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair",
870:       "com.fasterxml.jackson.databind.ext.OptionalHandlerFactory",
871:       "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer",
872:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer",
873:       "com.fasterxml.jackson.databind.deser.std.JdkDeserializers",
874:       "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
875:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector",
876:       "com.fasterxml.jackson.databind.introspect.CollectorBase",
877:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector",
878:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector",
879:       "com.fasterxml.jackson.databind.introspect.MemberKey",
880:       "com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector",
881:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder",
882:       "com.fasterxml.jackson.databind.introspect.AnnotatedMember",
883:       "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams",
884:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
885:       "com.fasterxml.jackson.databind.introspect.AnnotationMap",
886:       "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap",
887:       "com.fasterxml.jackson.databind.util.BeanUtil",
888:       "com.fasterxml.jackson.annotation.PropertyAccessor",
889:       "com.fasterxml.jackson.annotation.JsonAutoDetect$1",
890:       "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition",
891:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty",
892:       "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type",
893:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder",
894:       "com.fasterxml.jackson.core.util.InternCache",
895:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked",
896:       "com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector",
897:       "com.fasterxml.jackson.databind.util.ClassUtil$Ctor",
898:       "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor",
899:       "com.fasterxml.jackson.databind.introspect.AnnotatedParameter",
900:       "com.fasterxml.jackson.databind.type.ArrayType",
901:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$9",
902:       "com.fasterxml.jackson.annotation.JsonProperty$Access",
903:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$10",
904:       "com.fasterxml.jackson.annotation.JsonCreator$Mode",
905:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate",
906:       "com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param",
907:       "com.fasterxml.jackson.databind.deser.impl.CreatorCollector$StdTypeConstructor",
908:       "com.fasterxml.jackson.databind.deser.ValueInstantiator",
909:       "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator",
910:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder",
911:       "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value",
912:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4",
913:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5",
914:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6",
915:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7",
916:       "com.fasterxml.jackson.databind.PropertyMetadata",
917:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2",
918:       "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap",
919:       "com.fasterxml.jackson.databind.deser.BeanDeserializerBase",
920:       "com.fasterxml.jackson.databind.deser.BeanDeserializer",
921:       "com.fasterxml.jackson.databind.util.LinkedNode",
922:       "com.fasterxml.jackson.annotation.JsonFormat$Feature",
923:       "com.fasterxml.jackson.databind.deser.ValueInstantiators$Base",
924:       "com.fasterxml.jackson.databind.util.ArrayBuilders",
925:       "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std",
926:       "com.fasterxml.jackson.core.filter.TokenFilterContext",
927:       "com.fasterxml.jackson.core.JsonPointer",
928:       "com.fasterxml.jackson.core.filter.TokenFilter",
929:       "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter",
930:       "com.fasterxml.jackson.core.type.TypeReference",
931:       "com.fasterxml.jackson.databind.type.PlaceholderForType",
932:       "com.fasterxml.jackson.databind.type.CollectionLikeType",
933:       "com.fasterxml.jackson.databind.type.ReferenceType",
934:       "com.fasterxml.jackson.core.json.JsonReadFeature",
935:       "com.fasterxml.jackson.core.format.InputAccessor$Std",
936:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase",
937:       "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser",
938:       "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
939:       "com.fasterxml.jackson.databind.node.BooleanNode",
940:       "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
941:       "com.fasterxml.jackson.databind.deser.DataFormatReaders",
942:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader",
943:       "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match",
944:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
945:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer",
946:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer",
947:       "com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic",
948:       "com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder",
949:       "com.fasterxml.jackson.databind.introspect.AnnotatedField",
950:       "com.fasterxml.jackson.databind.type.CollectionType",
951:       "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase",
952:       "com.fasterxml.jackson.databind.deser.impl.FailingDeserializer",
953:       "com.fasterxml.jackson.databind.deser.SettableBeanProperty",
954:       "com.fasterxml.jackson.databind.deser.impl.MethodProperty",
955:       "com.fasterxml.jackson.databind.util.AccessPattern",
956:       "com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider",
957:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$8",
958:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1",
959:       "com.fasterxml.jackson.databind.deser.impl.SetterlessProperty",
960:       "com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase",
961:       "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
962:       "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std",
963:       "com.fasterxml.jackson.core.exc.StreamReadException",
964:       "com.fasterxml.jackson.core.JsonParseException",
965:       "com.fasterxml.jackson.core.json.DupDetector",
966:       "com.fasterxml.jackson.databind.node.TreeTraversingParser",
967:       "com.fasterxml.jackson.databind.node.NodeCursor",
968:       "com.fasterxml.jackson.databind.node.NodeCursor$RootCursor",
969:       "com.fasterxml.jackson.databind.node.JsonNodeType",
970:       "com.fasterxml.jackson.databind.json.JsonMapper",
971:       "com.fasterxml.jackson.core.util.MinimalPrettyPrinter",
972:       "com.fasterxml.jackson.databind.ObjectWriter",
973:       "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings",
974:       "com.fasterxml.jackson.databind.ObjectWriter$Prefetch",
975:       "com.fasterxml.jackson.databind.node.InternalNodeMapper",
976:       "com.fasterxml.jackson.core.io.SegmentedStringWriter",
977:       "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
978:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap",
979:       "com.fasterxml.jackson.databind.util.TypeKey",
980:       "com.fasterxml.jackson.databind.ser.std.SerializableSerializer",
981:       "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder",
982:       "com.fasterxml.jackson.databind.ser.PropertyBuilder",
983:       "com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3",
984:       "com.fasterxml.jackson.databind.BeanProperty$Std",
985:       "com.fasterxml.jackson.databind.ser.PropertyBuilder$1",
986:       "com.fasterxml.jackson.databind.ser.PropertyWriter",
987:       "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
988:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap",
989:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty",
990:       "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
991:       "com.fasterxml.jackson.databind.ser.BeanSerializer",
992:       "com.fasterxml.jackson.databind.ser.std.NumberSerializers$1",
993:       "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
994:       "com.fasterxml.jackson.core.io.JsonStringEncoder",
995:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult",
996:       "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single",
997:       "com.fasterxml.jackson.databind.AbstractTypeResolver",
998:       "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
999:       "com.fasterxml.jackson.core.util.JsonParserDelegate",
1000:       "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
1001:       "com.fasterxml.jackson.databind.deser.std.StringDeserializer",
1002:       "com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor",
1003:       "com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket",
1004:       "com.fasterxml.jackson.databind.deser.Deserializers$Base",
1005:       "com.fasterxml.jackson.databind.node.DecimalNode",
1006:       "com.fasterxml.jackson.databind.node.DoubleNode",
1007:       "com.fasterxml.jackson.core.json.JsonWriteFeature",
1008:       "com.fasterxml.jackson.databind.node.BigIntegerNode",
1009:       "com.fasterxml.jackson.databind.node.IntNode",
1010:       "com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor",
1011:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer",
1012:       "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
1013:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer",
1014:       "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla",
1015:       "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
1016:       "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler",
1017:       "com.fasterxml.jackson.databind.MappingIterator",
1018:       "com.fasterxml.jackson.databind.node.ShortNode",
1019:       "com.fasterxml.jackson.databind.exc.MismatchedInputException",
1020:       "com.fasterxml.jackson.databind.node.MissingNode",
1021:       "com.fasterxml.jackson.databind.ser.FilterProvider",
1022:       "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider",
1023:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter",
1024:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter",
1025:       "com.fasterxml.jackson.core.util.JsonParserSequence",
1026:       "com.fasterxml.jackson.databind.Module",
1027:       "com.fasterxml.jackson.databind.module.SimpleModule",
1028:       "com.fasterxml.jackson.databind.KeyDeserializer",
1029:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer",
1030:       "com.fasterxml.jackson.core.util.ByteArrayBuilder",
1031:       "com.fasterxml.jackson.core.io.DataOutputAsStream",
1032:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping",
1033:       "com.fasterxml.jackson.annotation.JsonTypeInfo$As",
1034:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder",
1035:       "com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder",
1036:       "com.fasterxml.jackson.annotation.JsonTypeInfo$Id",
1037:       "com.fasterxml.jackson.databind.ObjectMapper$3",
1038:       "com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1",
1039:       "com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase",
1040:       "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
1041:       "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
1042:       "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
1043:       "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer",
1044:       "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer",
1045:       "com.fasterxml.jackson.core.io.UTF32Reader",
1046:       "com.fasterxml.jackson.databind.node.NullNode",
1047:       "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier",
1048:       "com.fasterxml.jackson.databind.node.LongNode",
1049:       "com.fasterxml.jackson.core.io.MergedStream",
1050:       "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
1051:       "com.fasterxml.jackson.databind.node.TextNode",
1052:       "com.fasterxml.jackson.annotation.ObjectIdGenerator",
1053:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase",
1054:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy",
1055:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy",
1056:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy",
1057:       "com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy",
1058:       "com.fasterxml.jackson.databind.PropertyNamingStrategy",
1059:       "com.fasterxml.jackson.databind.deser.AbstractDeserializer",
1060:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer",
1061:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$Base",
1062:       "com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator",
1063:       "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers",
1064:       "com.fasterxml.jackson.databind.JsonMappingException$Reference",
1065:       "com.fasterxml.jackson.annotation.JsonAutoDetect$Value",
1066:       "com.fasterxml.jackson.databind.node.TreeTraversingParser$1",
1067:       "com.fasterxml.jackson.databind.BeanProperty$Bogus",
1068:       "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser",
1069:       "com.fasterxml.jackson.databind.introspect.VisibilityChecker$1",
1070:       "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base",
1071:       "com.fasterxml.jackson.databind.ext.NioPathDeserializer",
1072:       "com.fasterxml.jackson.databind.deser.std.EnumDeserializer",
1073:       "com.fasterxml.jackson.databind.util.EnumResolver",
1074:       "com.fasterxml.jackson.databind.util.CompactStringObjectMap",
1075:       "com.fasterxml.jackson.databind.deser.BeanDeserializer$1",
1076:       "com.fasterxml.jackson.databind.exc.InvalidTypeIdException",
1077:       "com.fasterxml.jackson.core.io.NumberInput",
1078:       "com.fasterxml.jackson.core.io.NumberOutput",
1079:       "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer",
1080:       "com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers",
1081:       "com.fasterxml.jackson.databind.util.RawValue",
1082:       "com.fasterxml.jackson.databind.type.TypeModifier",
1083:       "com.fasterxml.jackson.databind.module.SimpleDeserializers",
1084:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer",
1085:       "com.fasterxml.jackson.databind.JsonNode$1",
1086:       "com.fasterxml.jackson.databind.cfg.MutableConfigOverride",
1087:       "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
1088:       "com.fasterxml.jackson.core.exc.InputCoercionException",
1089:       "com.fasterxml.jackson.databind.deser.std.DateDeserializers",
1090:       "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers",
1091:       "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser",
1092:       "com.fasterxml.jackson.databind.module.SimpleValueInstantiators",
1093:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer",
1094:       "com.fasterxml.jackson.core.io.JsonEOFException",
1095:       "com.fasterxml.jackson.databind.ext.DOMSerializer",
1096:       "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer",
1097:       "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD",
1098:       "com.fasterxml.jackson.databind.util.TokenBuffer",
1099:       "com.fasterxml.jackson.databind.util.TokenBuffer$Segment",
1100:       "com.fasterxml.jackson.databind.util.TokenBuffer$Parser",
1101:       "com.fasterxml.jackson.databind.util.TokenBufferReadContext",
1102:       "com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer",
1103:       "com.fasterxml.jackson.databind.deser.impl.FieldProperty",
1104:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer",
1105:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer",
1106:       "com.fasterxml.jackson.databind.type.ClassKey",
1107:       "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
1108:       "com.fasterxml.jackson.databind.util.EnumValues",
1109:       "com.fasterxml.jackson.databind.jsontype.NamedType",
1110:       "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter",
1111:       "com.fasterxml.jackson.databind.deser.ValueInstantiator$Base",
1112:       "com.fasterxml.jackson.databind.BeanProperty",
1113:       "com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer",
1114:       "com.fasterxml.jackson.databind.ser.Serializers$Base",
1115:       "com.fasterxml.jackson.databind.module.SimpleSerializers",
1116:       "com.fasterxml.jackson.databind.exc.InvalidFormatException",
1117:       "com.fasterxml.jackson.annotation.OptBoolean",
1118:       "com.fasterxml.jackson.databind.ext.NioPathSerializer",
1119:       "com.fasterxml.jackson.databind.ser.ContainerSerializer",
1120:       "com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase",
1121:       "com.fasterxml.jackson.databind.ser.std.CollectionSerializer",
1122:       "com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer",
1123:       "com.fasterxml.jackson.databind.util.ObjectBuffer",
1124:       "com.fasterxml.jackson.databind.exc.PropertyBindingException",
1125:       "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
1126:       "com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer",
1127:       "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter",
1128:       "com.fasterxml.jackson.core.json.PackageVersion",
1129:       "com.fasterxml.jackson.databind.introspect.ObjectIdInfo",
1130:       "com.fasterxml.jackson.annotation.SimpleObjectIdResolver"
1131:     );
1132:   }
1133: }

[MASTER] 11:42:31.323 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ObjectMapper objectMapper0 = new ObjectMapper();
assertEquals(0, objectMapper0.mixInCount());
assertNotNull(objectMapper0);

ConcurrentHashMap<String, Object> concurrentHashMap0 = new ConcurrentHashMap<String, Object>();
assertTrue(concurrentHashMap0.isEmpty());
assertNotNull(concurrentHashMap0);

InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(concurrentHashMap0);
assertTrue(concurrentHashMap0.isEmpty());
assertNotNull(injectableValues_Std0);

ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std0);
assertEquals(0, objectMapper0.mixInCount());
assertTrue(concurrentHashMap0.isEmpty());
assertNotNull(objectReader0);

String string0 = "";
LongNode longNode0 = LongNode.valueOf((-1L));
assertFalse(longNode0.isArray());
assertEquals(JsonNodeType.NUMBER, longNode0.getNodeType());
assertEquals((short) (-1), longNode0.shortValue());
assertFalse(longNode0.isBigDecimal());
assertFalse(longNode0.booleanValue());
assertEquals(0, longNode0.size());
assertNull(longNode0.textValue());
assertTrue(longNode0.isLong());
assertTrue(longNode0.canConvertToLong());
assertEquals((-1L), longNode0.longValue());
assertEquals((-1.0), longNode0.doubleValue(), 0.01);
assertFalse(longNode0.isShort());
assertFalse(longNode0.isInt());
assertEquals(JsonParser.NumberType.LONG, longNode0.numberType());
assertTrue(longNode0.isIntegralNumber());
assertEquals((-1), longNode0.intValue());
assertFalse(longNode0.isObject());
assertEquals(JsonToken.VALUE_NUMBER_INT, longNode0.asToken());
assertFalse(longNode0.isNaN());
assertFalse(longNode0.isBigInteger());
assertFalse(longNode0.isFloatingPointNumber());
assertFalse(longNode0.isFloat());
assertFalse(longNode0.isDouble());
assertFalse(longNode0.isMissingNode());
assertTrue(longNode0.canConvertToInt());
assertTrue(longNode0.isEmpty());
assertEquals((-1.0F), longNode0.floatValue(), 0.01F);
assertNotNull(longNode0);

InjectableValues.Std injectableValues_Std1 = injectableValues_Std0.addValue("", (Object) longNode0);
assertFalse(concurrentHashMap0.isEmpty());
assertFalse(longNode0.isArray());
assertEquals(JsonNodeType.NUMBER, longNode0.getNodeType());
assertEquals((short) (-1), longNode0.shortValue());
assertFalse(longNode0.isBigDecimal());
assertFalse(longNode0.booleanValue());
assertEquals(0, longNode0.size());
assertNull(longNode0.textValue());
assertTrue(longNode0.isLong());
assertTrue(longNode0.canConvertToLong());
assertEquals((-1L), longNode0.longValue());
assertEquals((-1.0), longNode0.doubleValue(), 0.01);
assertFalse(longNode0.isShort());
assertFalse(longNode0.isInt());
assertEquals(JsonParser.NumberType.LONG, longNode0.numberType());
assertTrue(longNode0.isIntegralNumber());
assertEquals((-1), longNode0.intValue());
assertFalse(longNode0.isObject());
assertEquals(JsonToken.VALUE_NUMBER_INT, longNode0.asToken());
assertFalse(longNode0.isNaN());
assertFalse(longNode0.isBigInteger());
assertFalse(longNode0.isFloatingPointNumber());
assertFalse(longNode0.isFloat());
assertFalse(longNode0.isDouble());
assertFalse(longNode0.isMissingNode());
assertTrue(longNode0.canConvertToInt());
assertTrue(longNode0.isEmpty());
assertEquals((-1.0F), longNode0.floatValue(), 0.01F);
assertNotNull(injectableValues_Std1);
assertSame(injectableValues_Std0, injectableValues_Std1);
assertSame(injectableValues_Std1, injectableValues_Std0);

ObjectReader objectReader1 = objectReader0.with((ContextAttributes) null);
assertEquals(0, objectMapper0.mixInCount());
assertFalse(concurrentHashMap0.isEmpty());
assertNotNull(objectReader1);
assertFalse(objectReader1.equals((Object)objectReader0));
assertSame(injectableValues_Std0, injectableValues_Std1);
assertNotSame(objectReader0, objectReader1);
assertNotSame(objectReader1, objectReader0);

PropertyName propertyName0 = new PropertyName("");
assertNull(propertyName0.getNamespace());
assertFalse(propertyName0.hasNamespace());
assertTrue(propertyName0.isEmpty());
assertEquals("", propertyName0.getSimpleName());
assertFalse(propertyName0.hasSimpleName());
assertNotNull(propertyName0);

Class<ReferenceType> class0 = ReferenceType.class;
Class<ObjectIdGenerator> class1 = ObjectIdGenerator.class;
Class<ObjectIdResolver> class2 = ObjectIdResolver.class;
ContextAttributes contextAttributes0 = objectReader1.getAttributes();
assertEquals(0, objectMapper0.mixInCount());
assertFalse(concurrentHashMap0.isEmpty());
assertNull(contextAttributes0);
assertFalse(objectReader0.equals((Object)objectReader1));
assertFalse(objectReader1.equals((Object)objectReader0));
assertSame(injectableValues_Std0, injectableValues_Std1);
assertNotSame(objectReader0, objectReader1);
assertNotSame(objectReader1, objectReader0);

ObjectIdInfo objectIdInfo0 = new ObjectIdInfo(propertyName0, class0, class1, class2);
assertNull(propertyName0.getNamespace());
assertFalse(propertyName0.hasNamespace());
assertTrue(propertyName0.isEmpty());
assertEquals("", propertyName0.getSimpleName());
assertFalse(propertyName0.hasSimpleName());
assertFalse(objectIdInfo0.getAlwaysAsId());
assertNotNull(objectIdInfo0);

concurrentHashMap0.forEachKey((-1L), (Consumer<? super String>) null);

[MASTER] 11:42:36.144 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:42:50.442 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Writing tests to file
* Writing JUnit test case 'ObjectReader_ESTest' to results/JacksonDatabind-108/com.fasterxml.jackson.databind.ObjectReader/BBC-F0-50/tests/10
* Done!

* Computation finished
