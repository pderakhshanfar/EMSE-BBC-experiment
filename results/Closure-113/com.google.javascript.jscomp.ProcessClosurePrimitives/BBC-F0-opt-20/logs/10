* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: com.google.javascript.jscomp.ProcessClosurePrimitives
* Starting Client-0
* Connecting to master process on port 17841
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-113/build/classes
  - subjects/buggy-versions/Closure-113/lib/args4j.jar
  - subjects/buggy-versions/Closure-113/lib/guava.jar
  - subjects/buggy-versions/Closure-113/lib/json.jar
  - subjects/buggy-versions/Closure-113/lib/jsr305.jar
  - subjects/buggy-versions/Closure-113/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-113/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-113/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.ProcessClosurePrimitives
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1637
* Using seed 3547468562
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 361 / 1637
[MASTER] 10:34:37.400 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:34:37.400 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 10:35:58.430 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 10:37:27.205 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
* Search finished after 606s and 335 generations, 141211 statements, best individual has fitness: 1430.0
* Minimizing test suite
[MASTER] 10:45:43.324 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 15%
* Total number of goals: 472
* Number of covered goals: 69
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 15%
* Total number of goals: 350
* Number of covered goals: 51
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 8%
* Total number of goals: 441
* Number of covered goals: 34
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 14%
* Total number of goals: 350
* Number of covered goals: 50
* Generated 31 tests with total length 488
* Resulting test suite's coverage: 30% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 10:46:00.724 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:46:17.736 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:46:17.742 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.runners.model.TestTimedOutException: test timed out after 4000 milliseconds
[MASTER] 10:46:17.742 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
CompilerOptions compilerOptions0 = new CompilerOptions();
DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
PreprocessorSymbolTable preprocessorSymbolTable0 = defaultPassConfig0.getPreprocessorSymbolTable();
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, compilerOptions0.checkProvides);
ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
String string0 = "\\<{<Gy}";
Node node0 = compiler0.parseTestCode("<{<Gy}");
processClosurePrimitives0.process(node0, node0);
PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(compilerOptions0.preferLineBreakAtEndOfFile);
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, processClosurePrimitives0);
processClosurePrimitives0.visit(nodeTraversal0, node0, node0);
ProcessClosurePrimitives processClosurePrimitives1 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, compilerOptions0.checkUnreachableCode);
processClosurePrimitives1.getExportedVariableNames();
ProcessClosurePrimitives processClosurePrimitives2 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, compilerOptions0.brokenClosureRequiresLevel);
processClosurePrimitives2.hotSwapScript(node0, node0);
processClosurePrimitives1.hotSwapScript(node0, node0);
processClosurePrimitives0.getExportedVariableNames();

[MASTER] 10:46:20.823 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:46:20.823 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
defaultPassConfig0.getPreprocessorSymbolTable();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
CheckLevel checkLevel1 = CheckLevel.WARNING;
ProcessClosurePrimitives processClosurePrimitives1 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel1);
ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
compiler0.parseTestCode("com.google.common.collect.Sets$3");

[MASTER] 10:46:27.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.runners.model.TestTimedOutException: test timed out after 4000 milliseconds
[MASTER] 10:46:27.199 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
DefaultPassConfig defaultPassConfig0 = compiler0.ensureDefaultPassConfig();
defaultPassConfig0.getPreprocessorSymbolTable();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
ProcessClosurePrimitives processClosurePrimitives1 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
Node node0 = new Node(37);
String string0 = "map(";
compiler0.parseTestCode(string0);

[MASTER] 10:46:30.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: returns=NOT_IMPLEMENTED and returns=RETURN
[MASTER] 10:46:30.284 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("$oa6Yc,T1");
PreprocessorSymbolTable preprocessorSymbolTable0 = new PreprocessorSymbolTable(node0);
CheckLevel checkLevel0 = CheckLevel.OFF;
PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
node1.addChildrenToFront(node0);
node0.removeChildAfter(node1);
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, checkLevel0);
processClosurePrimitives0.process(node0, node0);

* Writing tests to file
* Writing JUnit test case 'ProcessClosurePrimitives_ESTest' to results/Closure-113/com.google.javascript.jscomp.ProcessClosurePrimitives/BBC-F0-opt-20/tests/10
* Done!

* Computation finished
