* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.ProcessClosurePrimitives
* Starting Client-0
* Connecting to master process on port 3242
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-113/build/classes
  - subjects/buggy-versions/Closure-113/lib/args4j.jar
  - subjects/buggy-versions/Closure-113/lib/guava.jar
  - subjects/buggy-versions/Closure-113/lib/json.jar
  - subjects/buggy-versions/Closure-113/lib/jsr305.jar
  - subjects/buggy-versions/Closure-113/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-113/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-113/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.ProcessClosurePrimitives
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1637
* Using seed 2746577046
* Starting evolution
* Initial Number of Goals in DynaMOSA = 361 / 1637
[MASTER] 19:48:02.348 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 19:48:06.485 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 19:48:06.485 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 19:48:21.688 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 19:51:33.391 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 601s and 592 generations, 238707 statements, best individual has fitness: 1421.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 15%
* Total number of goals: 472
* Number of covered goals: 72
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 15%
* Total number of goals: 350
* Number of covered goals: 54
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 89%
* Total number of goals: 9
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 8%
* Total number of goals: 441
* Number of covered goals: 35
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 44%
* Total number of goals: 9
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 15%
* Total number of goals: 350
* Number of covered goals: 52
* Generated 18 tests with total length 112
* Resulting test suite's coverage: 30% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 19:58:22.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: returns=NOT_IMPLEMENTED and returns=RETURN
[MASTER] 19:58:22.982 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.ERROR;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "goog.base");
processClosurePrimitives0.process(node0, node0);
assertTrue(compiler0.hasErrors());
assertEquals(0, compiler0.getWarningCount());


[MASTER] 19:58:31.638 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: returns=NOT_IMPLEMENTED and returns=RETURN
[MASTER] 19:58:31.639 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.ERROR;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "go=og.base");
processClosurePrimitives0.process(node0, node0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);


[MASTER] 19:58:44.212 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: returns=NOT_IMPLEMENTED and returns=RETURN
[MASTER] 19:58:44.213 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.rhino.jstype.TemplateType");
processClosurePrimitives0.process(node0, node0);
assertTrue(node0.hasOneChild());


[MASTER] 19:58:48.998 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: returns=NOT_IMPLEMENTED and returns=RETURN
[MASTER] 19:58:48.999 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
Node node0 = compiler0.parseTestCode("o=g.bae");
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, processClosurePrimitives0);
nodeTraversal0.traverseInnerNode(node0, node0, (Scope) null);
assertTrue(node0.hasOneChild());
assertEquals(1, node0.getChildCount());


[MASTER] 19:58:55.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 19:58:55.531 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
SyntheticAst syntheticAst0 = new SyntheticAst("msg.bad");
Node node0 = syntheticAst0.getAstRoot(compiler0);
Node node1 = new Node(0, node0, node0, node0);
node0.addChildrenToBack(node1);
PreprocessorSymbolTable preprocessorSymbolTable0 = new PreprocessorSymbolTable(node0);
CheckLevel checkLevel0 = CheckLevel.WARNING;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, preprocessorSymbolTable0, checkLevel0);
processClosurePrimitives0.process(node1, node1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 31
* Writing tests to file
* Writing JUnit test case 'ProcessClosurePrimitives_ESTest' to results/Closure-113/com.google.javascript.jscomp.ProcessClosurePrimitives/default/tests/18
* Done!

* Computation finished
