* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-80
* Going to generate test cases for class: com.google.javascript.jscomp.ProcessClosurePrimitives
* Starting Client-0
* Connecting to master process on port 20409
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-113/build/classes
  - subjects/buggy-versions/Closure-113/lib/args4j.jar
  - subjects/buggy-versions/Closure-113/lib/guava.jar
  - subjects/buggy-versions/Closure-113/lib/json.jar
  - subjects/buggy-versions/Closure-113/lib/jsr305.jar
  - subjects/buggy-versions/Closure-113/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-113/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-113/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.ProcessClosurePrimitives
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1637
* Using seed 1689016658
* Starting evolution
bbc usage percentage is: 80%
* Initial Number of Goals in DynaMOSA = 361 / 1637
[MASTER] 10:33:24.680 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 10:33:24.683 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 10:34:15.893 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 10:34:23.042 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
[MASTER] 10:34:23.620 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 10:35:32.723 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 604s and 696 generations, 311483 statements, best individual has fitness: 1449.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 14%
* Total number of goals: 472
* Number of covered goals: 65
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 13%
* Total number of goals: 350
* Number of covered goals: 47
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 88%
* Total number of goals: 8
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 6%
* Total number of goals: 441
* Number of covered goals: 27
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 44%
* Total number of goals: 9
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 13%
* Total number of goals: 350
* Number of covered goals: 47
* Generated 16 tests with total length 97
* Resulting test suite's coverage: 29% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 10:43:20.727 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:20.731 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:43:20.731 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseSyntheticCode("goog.base", "goog.base");

[MASTER] 10:43:37.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:43:37.504 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseSyntheticCode("goog.base", "goog.base");

[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
compiler0.parseTestCode("");

[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test14 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
Compiler compiler1 = new Compiler(mockPrintStream0);
Node node0 = compiler1.parseSyntheticCode("goog.base", "goog.base");
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
processClosurePrimitives0.process(node0, node0);

[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test10 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 10:43:41.587 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.ensureDefaultPassConfig();
CheckLevel checkLevel0 = CheckLevel.ERROR;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, processClosurePrimitives0);
ExploitAssigns exploitAssigns0 = new ExploitAssigns();
Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "go.base");
nodeTraversal0.traverse(node0);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);


[MASTER] 10:43:43.416 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:43:43.416 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
CheckLevel checkLevel0 = CheckLevel.OFF;
ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, (PreprocessorSymbolTable) null, checkLevel0);
PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
compiler0.parseSyntheticCode("$", "com.google.javascript.jscomp.DataFlowAnalysis$BranchedFlowState");

* Writing tests to file
* Writing JUnit test case 'ProcessClosurePrimitives_ESTest' to results/Closure-113/com.google.javascript.jscomp.ProcessClosurePrimitives/BBC-F0-opt-80/tests/4
* Done!
* Computation finished

