* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: org.apache.commons.jxpath.ri.model.beans.PropertyPointer
* Starting Client-0
* Connecting to master process on port 7344
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-21/target/classes
  - subjects/buggy-versions/JxPath-21/src/java
  - subjects/buggy-versions/JxPath-21/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-21/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-21/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.model.beans.PropertyPointer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 570
* Using seed 4083371416
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 248 / 570
[MASTER] 00:15:13.973 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 00:24:09.904 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 602s and 5730 generations, 1881288 statements, best individual has fitness: 224.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 60
* Number of covered goals: 48
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 59
* Number of covered goals: 41
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 97%
* Total number of goals: 36
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 258
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 92
* Number of covered goals: 37
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 21
* Number of covered goals: 18
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 59
* Number of covered goals: 41
* Generated 77 tests with total length 370
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
[MASTER] 00:24:45.927 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:46.198 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:46.433 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:46.438 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:24:46.438 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("tG=5|\"%c{HGw", "tG=5|\"%c{HGw");
VariablePointer variablePointer0 = new VariablePointer(qName0);
Class<List> class0 = List.class;
Class<Integer> class1 = Integer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
beanPropertyPointer0.getImmediateValuePointer();

[MASTER] 00:24:46.662 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:46.929 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:47.116 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:47.253 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:47.668 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:47.840 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:48.011 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:48.190 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:48.360 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:48.527 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:48.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.013 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.244 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.436 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.643 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.817 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:49.964 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.108 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.265 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.431 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.584 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.739 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:50.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:24:50.740 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BasicVariables basicVariables0 = new BasicVariables();
QName qName0 = new QName("PWhK4I[=~^g2q", "PWhK4I[=~^g2q");
VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
Class<Object> class0 = Object.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPropertyPointer0);
beanPropertyPointer0.compareChildNodePointers(nullPropertyPointer0, nullPropertyPointer0);

[MASTER] 00:24:50.920 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.077 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.387 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.552 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.686 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.914 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:24:51.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.apache.commons.jxpath.JXPathException: Cannot modify property: null.attribute; java.lang.NullPointerException
[MASTER] 00:24:51.915 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer1.setPropertyIndex(1);
beanPropertyPointer1.createPath((JXPathContext) null, (Object) jXPathBasicBeanInfo0);

[MASTER] 00:24:52.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:24:52.852 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BasicVariables basicVariables0 = new BasicVariables();
QName qName0 = new QName("+-YA5x8B", "+-YA5x8B");
VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
Class<Object> class0 = Object.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(variablePointer0, jXPathBasicBeanInfo0);
BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer1.getBean();

[MASTER] 00:24:54.679 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:24:54.680 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Object> class0 = Object.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
beanPropertyPointer0.isLeaf();

* Writing tests to file
* Writing JUnit test case 'PropertyPointer_ESTest' to results/JxPath-21/org.apache.commons.jxpath.ri.model.beans.PropertyPointer/BBC-F0-opt-60/tests/10
* Done!

* Computation finished
