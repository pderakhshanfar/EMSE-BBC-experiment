* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-80
* Going to generate test cases for class: org.apache.commons.jxpath.ri.model.beans.PropertyPointer
* Starting Client-0
* Connecting to master process on port 4378
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-21/target/classes
  - subjects/buggy-versions/JxPath-21/src/java
  - subjects/buggy-versions/JxPath-21/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/junit-3.8.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-21/target/lib/mockrunner-jdk1.3-j2ee1.3-0.4.jar
  - subjects/buggy-versions/JxPath-21/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-21/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-21/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.model.beans.PropertyPointer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 570
* Using seed 517161635
* Starting evolution
bbc usage percentage is: 80%
* Initial Number of Goals in DynaMOSA = 248 / 570
[MASTER] 23:56:15.213 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 23:56:15.218 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 601s and 5074 generations, 1655607 statements, best individual has fitness: 234.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 60
* Number of covered goals: 48
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 59
* Number of covered goals: 41
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 258
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 28%
* Total number of goals: 92
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 76%
* Total number of goals: 21
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 59
* Number of covered goals: 41
* Generated 77 tests with total length 335
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
[MASTER] 00:04:49.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:49.822 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:49.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:04:49.826 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
Class<NodePointer> class0 = NodePointer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer0.compareChildNodePointers(nullPropertyPointer0, nullPropertyPointer0);

[MASTER] 00:04:50.018 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:50.200 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:50.375 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:50.529 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:50.696 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:50.897 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.400 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.560 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.711 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.845 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:51.999 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.152 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.295 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.423 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.695 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.840 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:52.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:04:52.841 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
Class<NodePointer> class0 = NodePointer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer0.getImmediateValuePointer();

[MASTER] 00:04:52.978 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.133 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.275 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.407 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.692 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:53.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.apache.commons.jxpath.JXPathException: Cannot access property: null.actual; java.lang.NullPointerException
[MASTER] 00:04:53.830 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<VariablePointer> class0 = VariablePointer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer1.setPropertyIndex(0);
QName qName0 = beanPropertyPointer1.getName();
beanPropertyPointer1.createChild((JXPathContext) null, qName0, (-57));

[MASTER] 00:04:53.972 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.118 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.286 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.532 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.658 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:54.918 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.061 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.194 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.499 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.500 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:04:55.501 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<NodePointer> class0 = NodePointer.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPropertyPointer0, jXPathBasicBeanInfo0);
beanPropertyPointer1.getBean();

[MASTER] 00:04:55.655 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.803 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:55.950 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.203 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.461 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.605 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.730 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:56.865 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.023 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.210 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.355 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoClassDefFoundError
[MASTER] 00:04:57.356 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Object> class0 = Object.class;
JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
beanPropertyPointer0.isLeaf();

[MASTER] 00:04:57.486 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.613 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.740 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:57.913 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.042 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.184 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.313 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.452 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.570 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.695 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.803 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:58.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:59.109 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:59.251 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:59.399 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:59.554 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:04:59.703 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.337 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.474 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.608 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.736 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:00.866 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:01.003 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:01.140 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:01.569 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:05:02.022 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'PropertyPointer_ESTest' to results/JxPath-21/org.apache.commons.jxpath.ri.model.beans.PropertyPointer/BBC-F0-opt-80/tests/1
* Done!

* Computation finished
