* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.fasterxml.jackson.core.json.UTF8JsonGenerator
* Starting Client-0
* Connecting to master process on port 15504
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonCore-17/target/classes
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.core.json.UTF8JsonGenerator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2877
* Using seed 2694186728
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 783 / 2877
* Search finished after 604s and 74 generations, 67463 statements, best individual has fitness: 1329.0
* Minimizing test suite
[MASTER] 23:11:31.705 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 62%
* Total number of goals: 979
* Number of covered goals: 603
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 539
* Number of covered goals: 324
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 94
* Number of covered goals: 94
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 42%
* Total number of goals: 716
* Number of covered goals: 301
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 14
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 93%
* Total number of goals: 45
* Number of covered goals: 42
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 82%
* Total number of goals: 45
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 539
* Number of covered goals: 318
* Generated 228 tests with total length 4104
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
[MASTER] 23:12:51.432 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 23:13:14.595 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:14.792 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 23:13:17.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
com.fasterxml.jackson.core.json.UTF8JsonGenerator_242_tmp__ESTest.test0(UTF8JsonGenerator_242_tmp__ESTest.java:43)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 23:13:17.280 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
CharsToNameCanonicalizer.createRoot();
TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
SerializedString serializedString0 = new SerializedString("Q0Z.[s.H7si3GUh[7");
BufferRecycler bufferRecycler1 = new BufferRecycler();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
IOContext iOContext0 = new IOContext(bufferRecycler1, mockFileInputStream0, false);
JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_BE;
IOContext iOContext1 = iOContext0.withEncoding(jsonEncoding0);
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte)10;
byteArray0[1] = (byte) (-1);
byteArray0[2] = (byte)86;
byteArray0[3] = (byte) (-96);
byteArray0[4] = (byte)7;
byteArray0[5] = (byte)55;
byteArray0[6] = (byte) (-91);
byteArray0[7] = (byte)34;
UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext1, 3, (ObjectCodec) null, filterOutputStream0, byteArray0, 2, true);
uTF8JsonGenerator0.writeBinary((Base64Variant) null, byteArray0, 0, (int) (byte)55);

[MASTER] 23:13:26.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
com.fasterxml.jackson.core.json.UTF8JsonGenerator_276_tmp__ESTest.test0(UTF8JsonGenerator_276_tmp__ESTest.java:37)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 23:13:26.896 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
BufferRecycler bufferRecycler1 = new BufferRecycler();
FileDescriptor fileDescriptor0 = new FileDescriptor();
FileDescriptor fileDescriptor1 = new FileDescriptor();
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor1);
IOContext iOContext1 = new IOContext(bufferRecycler1, bufferRecycler1, false);
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-96);
byteArray0[1] = (byte) (-91);
byteArray0[2] = (byte)55;
UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) (-96), (ObjectCodec) null, mockFileOutputStream0, byteArray0, 44, true);
uTF8JsonGenerator0.writeBinary((Base64Variant) null, byteArray0, (int) (byte) (-91), 15);

[MASTER] 23:13:32.300 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
com.fasterxml.jackson.core.json.UTF8JsonGenerator_288_tmp__ESTest.test0(UTF8JsonGenerator_288_tmp__ESTest.java:40)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 23:13:32.300 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
CharsToNameCanonicalizer.createRoot();
TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
SerializedString serializedString0 = new SerializedString("Q0Z.[s.H7si3GUh[7");
BufferRecycler bufferRecycler1 = new BufferRecycler();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
IOContext iOContext0 = new IOContext(bufferRecycler1, mockFileInputStream0, false);
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte)10;
byteArray0[1] = (byte) (-1);
byteArray0[2] = (byte)86;
byteArray0[3] = (byte) (-96);
byteArray0[4] = (byte)7;
UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 3, false);
IOContext iOContext1 = new IOContext(bufferRecycler1, iOContext0, false);
uTF8JsonGenerator0.writeStartArray();
uTF8JsonGenerator0.writeNumber((short)1700);

[MASTER] 23:13:40.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
com.fasterxml.jackson.core.json.UTF8JsonGenerator_308_tmp__ESTest.test0(UTF8JsonGenerator_308_tmp__ESTest.java:40)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 23:13:40.697 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
CharsToNameCanonicalizer.createRoot();
TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
SerializedString serializedString0 = new SerializedString("Q0Z.[s.H7si3GUh[7");
BufferRecycler bufferRecycler1 = new BufferRecycler();
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
IOContext iOContext0 = new IOContext(bufferRecycler1, mockFileInputStream0, false);
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
byte[] byteArray0 = new byte[8];
byteArray0[0] = (byte)10;
byteArray0[1] = (byte) (-1);
byteArray0[2] = (byte)86;
byteArray0[3] = (byte) (-96);
byteArray0[4] = (byte)7;
byteArray0[5] = (byte)55;
byteArray0[6] = (byte) (-91);
byteArray0[7] = (byte)34;
BigInteger bigInteger0 = BigInteger.ONE;
BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
bigDecimal0.pow(3831);
UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1), (ObjectCodec) null, filterOutputStream0);
uTF8JsonGenerator0.writeNumber(bigDecimal0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'UTF8JsonGenerator_ESTest' to results/JacksonCore-17/com.fasterxml.jackson.core.json.UTF8JsonGenerator/BBC-F0-50/tests/15
* Done!

* Computation finished
