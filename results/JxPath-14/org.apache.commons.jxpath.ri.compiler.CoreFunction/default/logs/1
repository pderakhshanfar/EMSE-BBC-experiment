* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 17794
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 3905598382
* Starting evolution
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 10:25:14.182 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 10:29:33.288 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.apache.commons.jxpath.ri.axes.ChildContext canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 10:31:43.256 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl canUseFunctionalMocks=false, canBeMocked: true
Number of times BBC is called in total: 0
* Search finished after 601s and 1746 generations, 742006 statements, best individual has fitness: 347.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 344
* Number of covered goals: 317
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 355
* Number of covered goals: 328
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 97%
* Total number of goals: 173
* Number of covered goals: 168
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 616
* Number of covered goals: 552
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 40
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 355
* Number of covered goals: 328
* Generated 309 tests with total length 1709
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 66%
* Compiling and checking tests
[MASTER] 10:37:06.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:06.530 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
QName qName0 = new QName(", ");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[0] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
coreFunction0.compute((EvalContext) null);

[MASTER] 10:37:07.522 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:07.523 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
Constant constant0 = new Constant("");
expressionArray0[0] = (Expression) constant0;
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(constant0, expressionArray0[0]);
expressionArray0[1] = (Expression) coreOperationGreaterThanOrEqual0;
coreOperationGreaterThanOrEqual0.args = expressionArray0;
CoreFunction coreFunction0 = new CoreFunction(19, expressionArray0);
coreFunction0.computeContextDependent();

[MASTER] 10:37:08.077 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:08.078 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
coreFunction0.computeValue((EvalContext) null);

[MASTER] 10:37:08.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:08.804 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
QName qName0 = new QName(", ", ", ");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[0] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
coreFunction0.functionBoolean((EvalContext) null);

[MASTER] 10:37:09.290 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:09.290 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction(2649, expressionArray0);
coreFunction0.functionBoolean((EvalContext) null);

[MASTER] 10:37:11.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:11.435 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("]`pJ[6ZJzD*[/@4E");
Expression[] expressionArray0 = new Expression[4];
expressionArray0[0] = (Expression) constant0;
expressionArray0[1] = (Expression) constant0;
QName qName0 = new QName("yD^1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[2] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(363, expressionArray0);
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 10:37:13.253 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:13.254 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction((-1559), expressionArray0);
coreFunction0.functionContains((EvalContext) null);

[MASTER] 10:37:14.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:14.529 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction((-520), expressionArray0);
PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, coreOperationAdd0);
QName qName0 = new QName("9P>");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
AncestorContext ancestorContext0 = new AncestorContext(predicateContext0, false, nodeNameTest0);
ChildContext childContext0 = new ChildContext(ancestorContext0, nodeNameTest0, false, false);
ParentContext parentContext0 = new ParentContext(childContext0, nodeNameTest0);
coreFunction0.functionCount(parentContext0);

[MASTER] 10:37:15.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:15.811 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(coreOperationOr0, (Expression) null);
expressionArray0[0] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("\"substring\"");
DescendantContext descendantContext0 = new DescendantContext((EvalContext) null, false, processingInstructionTest0);
coreFunction0.functionFloor(descendantContext0);

[MASTER] 10:37:16.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:16.284 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Double double0 = Expression.ONE;
Constant constant0 = new Constant(double0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(constant0, constant0);
Step[] stepArray0 = new Step[0];
ExpressionPath expressionPath0 = new ExpressionPath(coreOperationGreaterThanOrEqual0, expressionArray0, stepArray0);
expressionArray0[0] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(1146, expressionArray0);
coreFunction0.functionFloor((EvalContext) null);

[MASTER] 10:37:17.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:17.525 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction(18, expressionArray0);
coreFunction0.functionID((EvalContext) null);

[MASTER] 10:37:18.489 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:37:18.490 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[6];
QName qName0 = new QName("i5uuRAMq", (String) null);
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(2137, expressionArray0);
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
ChildContext childContext0 = new ChildContext((EvalContext) null, nodeNameTest0, true, true);
SelfContext selfContext0 = new SelfContext(childContext0, nodeNameTest0);
coreFunction0.functionKey(selfContext0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 9
* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/default/tests/1
* Done!

* Computation finished
