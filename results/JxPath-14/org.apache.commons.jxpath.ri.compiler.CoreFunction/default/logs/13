* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 12878
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 587237494
* Starting evolution
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 10:31:06.007 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 604s and 1022 generations, 426767 statements, best individual has fitness: 413.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 344
* Number of covered goals: 290
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 355
* Number of covered goals: 313
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 98%
* Total number of goals: 155
* Number of covered goals: 152
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 616
* Number of covered goals: 533
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 40
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 355
* Number of covered goals: 313
* Generated 285 tests with total length 1445
* Resulting test suite's coverage: 79% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 59%
* Compiling and checking tests
[MASTER] 10:43:05.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:05.393 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
coreFunction0.compute((EvalContext) null);

[MASTER] 10:43:06.102 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:06.103 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Constant constant0 = new Constant("(]+,, 1");
Expression[] expressionArray0 = new Expression[2];
expressionArray0[0] = (Expression) constant0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[1] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
coreFunction0.computeContextDependent();

[MASTER] 10:43:06.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:06.663 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[2];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
Step step0 = new Step(40, processingInstructionTest0, expressionArray0);
stepArray0[0] = step0;
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[3] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction(7, expressionArray0);
coreFunction0.computeValue((EvalContext) null);

[MASTER] 10:43:07.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:07.245 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction((-14), expressionArray0);
coreFunction0.functionBoolean((EvalContext) null);

[MASTER] 10:43:08.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:08.456 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction(2, expressionArray0);
QName qName0 = new QName("ss");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeNameTest0);
ChildContext childContext0 = new ChildContext(attributeContext0, nodeNameTest0, false, false);
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext(childContext0, nodeNameTest0, false);
coreFunction0.functionCeiling(precedingOrFollowingContext0);

[MASTER] 10:43:09.426 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:09.427 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 10:43:10.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:10.283 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
QName qName0 = new QName("");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[0] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(10, expressionArray0);
coreFunction0.functionContains((EvalContext) null);

[MASTER] 10:43:11.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:11.071 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationAdd0, coreOperationAdd0);
expressionArray0[0] = (Expression) coreOperationSubtract0;
CoreFunction coreFunction0 = new CoreFunction((-778), expressionArray0);
coreFunction0.functionCount((EvalContext) null);

[MASTER] 10:43:11.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:11.640 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(2818, expressionArray0);
coreFunction0.functionCount((EvalContext) null);

[MASTER] 10:43:12.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:12.441 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
Constant constant0 = new Constant((String) null);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
Step[] stepArray0 = new Step[5];
ExpressionPath expressionPath0 = new ExpressionPath(coreOperationGreaterThan0, expressionArray0, stepArray0);
expressionArray0[0] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(18, expressionArray0);
coreFunction0.functionFalse((EvalContext) null);

[MASTER] 10:43:13.495 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:13.495 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
QName qName0 = new QName("org.apache.commons.jxpath.ri.axes.AncestorContext", "org.apache.commons.jxpath.ri.axes.AncestorContext");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction((-240), expressionArray0);
coreFunction0.functionFloor((EvalContext) null);

[MASTER] 10:43:13.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 10:43:13.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(coreOperationUnion0, coreOperationUnion0);
expressionArray0[0] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(41, expressionArray0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) coreOperationDivide0);
QName qName0 = new QName("Q9,;.~$\"\u0006^#", "Q9,;.~$\"\u0006^#");
Locale locale0 = Locale.JAPAN;
BeanPointer beanPointer0 = (BeanPointer)NodePointer.newNodePointer(qName0, jXPathContextReferenceImpl0, locale0);
RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, beanPointer0);
InitialContext initialContext0 = (InitialContext)rootContext0.getVariableContext(qName0);
coreFunction0.functionID(initialContext0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/default/tests/13
* Done!

* Computation finished
