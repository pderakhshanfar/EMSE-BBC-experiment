* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 12975
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 3951622711
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:19:31.694 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 604s and 130 generations, 63473 statements, best individual has fitness: 643.0
* Minimizing test suite
[MASTER] 08:30:44.780 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 344
* Number of covered goals: 243
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 355
* Number of covered goals: 275
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 113
* Number of covered goals: 113
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 62%
* Total number of goals: 616
* Number of covered goals: 385
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 82
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 40
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 355
* Number of covered goals: 273
* Generated 252 tests with total length 4227
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:31:48.947 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 08:32:07.466 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:32:10.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:10.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
EvalContext evalContext0 = null;
coreOperationOr0.toString();
coreFunction0.functionString((EvalContext) null);

[MASTER] 08:32:12.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:12.408 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
EvalContext evalContext0 = null;
coreOperationOr0.toString();
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 08:32:15.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:15.812 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
EvalContext evalContext0 = null;
coreOperationOr0.toString();
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 08:32:19.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:19.939 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
Step step0 = new Step(13, (NodeTest) null, expressionArray0);
Step step1 = new Step((-1836), (NodeTest) null, expressionArray0);
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(13);
coreFunction0.functionStartsWith((EvalContext) null);

[MASTER] 08:32:20.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:20.460 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(8, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.functionNot((EvalContext) null);

[MASTER] 08:32:22.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:22.525 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(8, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.functionNot((EvalContext) null);

[MASTER] 08:32:24.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:24.367 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
EvalContext evalContext0 = null;
coreOperationOr0.toString();
coreFunction0.functionStringLength((EvalContext) null);

[MASTER] 08:32:29.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:29.489 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
coreOperationOr0.toString();
CoreFunction coreFunction0 = new CoreFunction(32, expressionArray0);
coreFunction0.functionPosition((EvalContext) null);

[MASTER] 08:32:42.821 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:32:42.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:42.839 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1353;
Expression[] expressionArray0 = new Expression[2];
CoreFunction coreFunction0 = new CoreFunction((-2997), expressionArray0);
expressionArray0[0] = (Expression) coreFunction0;
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(expressionArray0[0], expressionArray0[0]);
expressionArray0[1] = (Expression) coreOperationDivide0;
CoreFunction coreFunction1 = new CoreFunction(1353, expressionArray0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual((Expression) null, coreFunction1);
EvalContext evalContext0 = null;
CoreFunction coreFunction2 = new CoreFunction(661, expressionArray0);
coreFunction1.computeValue((EvalContext) null);
coreFunction1.iterate((EvalContext) null);
coreFunction2.functionSubstringAfter((EvalContext) null);
coreFunction2.computeContextDependent();
CoreFunction coreFunction3 = new CoreFunction(int0, expressionArray0);
coreFunction2.functionName(evalContext0);
coreFunction2.functionID(evalContext0);

[MASTER] 08:32:43.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:43.133 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.shouldAllThrowIOExceptions();
Expression[] expressionArray0 = new Expression[5];
Constant constant0 = new Constant("");
expressionArray0[0] = (Expression) constant0;
Step[] stepArray0 = new Step[2];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("4%];cT_cxyr`W:`");
Step step0 = new Step(91, processingInstructionTest0, expressionArray0);
stepArray0[0] = step0;
Step step1 = new Step(91, processingInstructionTest0, expressionArray0);
stepArray0[1] = step1;
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
expressionArray0[1] = (Expression) expressionPath0;
Constant constant1 = new Constant("4%];cT_cxyr`W:`");
expressionArray0[2] = (Expression) constant1;
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[3] = (Expression) locationPath0;
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(constant0, constant1);
expressionArray0[4] = (Expression) nameAttributeTest0;
CoreFunction coreFunction0 = new CoreFunction(91, expressionArray0);
coreFunction0.functionLang((EvalContext) null);

[MASTER] 08:32:43.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:43.455 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationOr0, coreOperationOr0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(nameAttributeTest0, coreOperationOr0);
expressionArray0[0] = (Expression) coreOperationGreaterThan0;
QName qName0 = new QName("Oc>g");
VariableReference variableReference0 = new VariableReference(qName0);
expressionArray0[1] = (Expression) variableReference0;
Step[] stepArray0 = new Step[5];
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(21);
Step step0 = new Step((-1769), nodeTypeTest0, expressionArray0);
stepArray0[0] = step0;
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
Step step1 = new Step(3, processingInstructionTest0, expressionArray0);
stepArray0[1] = step1;
Step step2 = new Step(33, processingInstructionTest0, expressionArray0);
stepArray0[2] = step2;
Step step3 = new Step((-1769), processingInstructionTest0, expressionArray0);
stepArray0[3] = step3;
Step step4 = new Step(2685, processingInstructionTest0, expressionArray0);
stepArray0[4] = step4;
LocationPath locationPath0 = new LocationPath(true, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(nameAttributeTest0, coreOperationGreaterThan0);
expressionArray0[3] = (Expression) coreOperationSubtract0;
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(expressionArray0[1], expressionArray0[1]);
expressionArray0[4] = (Expression) coreOperationEqual0;
CoreFunction coreFunction0 = new CoreFunction(1956, expressionArray0);
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
EvalContext evalContext0 = expressionPath0.evalSteps((EvalContext) null);
coreFunction0.functionNormalizeSpace(evalContext0);

[MASTER] 08:32:44.240 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:44.242 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreOperationUnion0, coreOperationUnion0);
expressionArray0[0] = (Expression) coreOperationMultiply0;
Step[] stepArray0 = new Step[2];
QName qName0 = new QName("format-number", (String) null);
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
Step step0 = new Step(4279, nodeNameTest0, expressionArray0);
stepArray0[0] = step0;
Step step1 = new Step(442, nodeNameTest0, expressionArray0);
stepArray0[1] = step1;
LocationPath locationPath0 = new LocationPath(true, stepArray0);
expressionArray0[1] = (Expression) locationPath0;
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan((Expression) null, coreOperationUnion0);
expressionArray0[2] = (Expression) coreOperationGreaterThan0;
CoreOperationMod coreOperationMod0 = new CoreOperationMod(coreOperationUnion0, expressionArray0[1]);
expressionArray0[3] = (Expression) coreOperationMod0;
VariableReference variableReference0 = new VariableReference(qName0);
expressionArray0[4] = (Expression) variableReference0;
CoreFunction coreFunction0 = new CoreFunction(442, expressionArray0);
coreFunction0.functionFloor((EvalContext) null);

[MASTER] 08:32:45.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:45.231 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
QName qName0 = new QName("dN=G#\"J8R<e0f*1", "dN=G#\"J8R<e0f*1");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[2] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-3289), expressionArray0);
FileSystemHandling.createFolder((EvoSuiteFile) null);
EvalContext evalContext0 = null;
coreFunction0.functionFloor((EvalContext) null);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-70/tests/6
* Done!

* Computation finished
