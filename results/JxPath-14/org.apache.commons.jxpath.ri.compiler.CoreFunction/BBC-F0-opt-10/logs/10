* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 7173
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 4183243677
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:29:16.089 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:38:00.534 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 602s and 1123 generations, 413187 statements, best individual has fitness: 595.0
* Minimizing test suite
[MASTER] 08:40:19.683 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 344
* Number of covered goals: 265
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 81%
* Total number of goals: 355
* Number of covered goals: 288
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 170
* Number of covered goals: 170
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 616
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 88%
* Total number of goals: 40
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 81%
* Total number of goals: 355
* Number of covered goals: 288
* Generated 339 tests with total length 5380
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
[MASTER] 08:41:22.079 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 08:41:40.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:41:45.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:41:45.960 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
coreFunction0.getFunctionCode();
coreFunction0.computeContextDependent();

[MASTER] 08:41:46.251 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:41:46.252 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-119);
byteArray0[1] = (byte)4;
byteArray0[2] = (byte)112;
byteArray0[3] = (byte)27;
byteArray0[4] = (byte)92;
byteArray0[5] = (byte) (-39);
byteArray0[6] = (byte)11;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.getFunctionCode();
coreFunction0.functionRound((EvalContext) null);

[MASTER] 08:41:49.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:41:49.909 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreFunction0, expressionArray0[0]);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(expressionArray0[0], coreOperationLessThanOrEqual0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual1 = new CoreOperationLessThanOrEqual(coreOperationOr0, coreOperationOr0);
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreFunction0, coreOperationUnion0);
coreOperationGreaterThanOrEqual0.args = expressionArray0;
CoreOperationUnion coreOperationUnion1 = new CoreOperationUnion(expressionArray0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationOr0, coreOperationUnion0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationGreaterThanOrEqual0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual1 = new CoreOperationGreaterThanOrEqual(coreOperationUnion0, coreOperationUnion1);
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationLessThanOrEqual1, coreOperationGreaterThanOrEqual1);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual2 = new CoreOperationLessThanOrEqual(coreOperationUnion0, nameAttributeTest0);
CoreFunction coreFunction1 = new CoreFunction(29, expressionArray0);
coreFunction0.toString();
NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "last(ororg.apache.commons.jxpath.ri.compiler.CoreOperationOr@0000000001)");
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext((EvalContext) null, nodeNameTest0, true);
NodeSetContext nodeSetContext0 = new NodeSetContext(precedingOrFollowingContext0, (NodeSet) null);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(", ");
RootContext rootContext0 = new RootContext((JXPathContextReferenceImpl) null, (NodePointer) null);
AncestorContext ancestorContext0 = new AncestorContext(rootContext0, false, nodeNameTest0);
RootContext rootContext1 = ancestorContext0.getRootContext();
coreFunction0.functionLang(rootContext1);

[MASTER] 08:41:50.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:41:50.396 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
byte[] byteArray0 = new byte[7];
byteArray0[0] = (byte) (-119);
byteArray0[1] = (byte)4;
byteArray0[2] = (byte)112;
byteArray0[3] = (byte)27;
byteArray0[4] = (byte)92;
byteArray0[5] = (byte) (-39);
byteArray0[6] = (byte)11;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.getFunctionCode();
coreFunction0.functionRound((EvalContext) null);

[MASTER] 08:41:57.977 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:41:57.978 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationOr0, coreOperationAnd0);
CoreFunction coreFunction0 = new CoreFunction((-745), expressionArray0);
PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, coreOperationOr0);
EvalContext[] evalContextArray0 = new EvalContext[1];
evalContextArray0[0] = null;
UnionContext unionContext0 = new UnionContext(predicateContext0, evalContextArray0);
NodeSetContext nodeSetContext0 = new NodeSetContext(evalContextArray0[0], (NodeSet) null);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("sum");
DescendantContext descendantContext0 = new DescendantContext((EvalContext) null, false, processingInstructionTest0);
coreFunction0.functionNamespaceURI(descendantContext0);

[MASTER] 08:42:14.788 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:42:14.789 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.CoreOperationNegate", (String) null);
VariableReference variableReference0 = new VariableReference(qName0);
expressionArray0[0] = (Expression) variableReference0;
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(variableReference0, expressionArray0[0]);
expressionArray0[1] = (Expression) coreOperationGreaterThanOrEqual0;
CoreFunction coreFunction0 = new CoreFunction(200, expressionArray0);
Expression expression0 = coreFunction0.getArg1();
expressionArray0[2] = expression0;
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[3] = (Expression) coreOperationOr0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationAnd0, coreOperationGreaterThanOrEqual0);
int int0 = 6;
CoreFunction coreFunction1 = new CoreFunction(200, expressionArray0);
coreFunction1.iteratePointers((EvalContext) null);
Expression[] expressionArray1 = new Expression[14];
expressionArray1[0] = (Expression) variableReference0;
CoreFunction coreFunction2 = new CoreFunction(6, expressionArray1);
coreFunction1.computeContextDependent();

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-10/tests/10
* Done!

* Computation finished
