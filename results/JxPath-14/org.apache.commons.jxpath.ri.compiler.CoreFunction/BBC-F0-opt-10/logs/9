* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 18993
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 1015204555
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:27:40.009 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:29:09.843 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.apache.commons.jxpath.ri.axes.AncestorContext canUseFunctionalMocks=false, canBeMocked: true
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:32:59.664 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.RootContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:34:02.611 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.RootContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.model.VariablePointer due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 605s and 1241 generations, 530554 statements, best individual has fitness: 476.0
* Minimizing test suite
[MASTER] 08:38:48.782 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 344
* Number of covered goals: 280
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 355
* Number of covered goals: 307
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 154
* Number of covered goals: 154
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 616
* Number of covered goals: 497
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 40
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 355
* Number of covered goals: 307
* Generated 345 tests with total length 6431
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
[MASTER] 08:39:51.478 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 08:40:08.950 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:40:33.115 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:40:33.117 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte) (-43);
byteArray0[1] = (byte) (-24);
byteArray0[2] = (byte)78;
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+{'~w ");
Expression[] expressionArray0 = new Expression[1];
FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(4, expressionArray0);
PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, coreOperationOr0);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("+{'~w ");
NamespaceContext namespaceContext0 = new NamespaceContext(predicateContext0, processingInstructionTest0);
SelfContext selfContext0 = new SelfContext(namespaceContext0, processingInstructionTest0);
processingInstructionTest0.toString();
predicateContext0.getCurrentPosition();
predicateContext0.getCurrentPosition();
ChildContext childContext0 = new ChildContext(selfContext0, processingInstructionTest0, true, false);
childContext0.getContextNodeList();
processingInstructionTest0.toString();
coreFunction0.functionBoolean(childContext0);

[MASTER] 08:40:40.172 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:40:40.174 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
Constant constant0 = new Constant("Eb&I<N69isv,w:");
expressionArray0[1] = (Expression) constant0;
Step[] stepArray0 = new Step[6];
NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null, "");
Step step0 = new Step(0, nodeNameTest0, expressionArray0);
stepArray0[0] = step0;
Expression[] expressionArray1 = new Expression[3];
expressionArray1[0] = (Expression) constant0;
expressionArray1[1] = (Expression) coreOperationOr0;
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(constant0, coreOperationOr0);
expressionArray1[2] = (Expression) coreOperationSubtract0;
Step step1 = new Step(561, nodeNameTest0, expressionArray1);
stepArray0[1] = step1;
NodeNameTest nodeNameTest1 = new NodeNameTest((QName) null);
Step step2 = new Step(0, nodeNameTest1, expressionArray0);
stepArray0[2] = step2;
Step step3 = new Step(137, nodeNameTest1, expressionArray0);
stepArray0[3] = step3;
Step step4 = new Step(41, nodeNameTest1, expressionArray1);
stepArray0[4] = step4;
NodeNameTest nodeNameTest2 = new NodeNameTest((QName) null, "Eb&I<N69isv,w:");
Step step5 = new Step(2571, nodeNameTest2, expressionArray1);
stepArray0[5] = step5;
ExpressionPath expressionPath0 = new ExpressionPath(constant0, expressionArray0, stepArray0);
expressionArray0[2] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(561, expressionArray0);
coreFunction0.functionCount((EvalContext) null);

[MASTER] 08:40:46.787 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:40:46.788 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[7];
QName qName0 = new QName("sum");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(extensionFunction0, extensionFunction0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationLessThan0, extensionFunction0);
expressionArray0[0] = (Expression) coreOperationGreaterThan0;
ExtensionFunction extensionFunction1 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction1;
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(expressionArray0[1], coreOperationGreaterThan0);
expressionArray0[2] = (Expression) coreOperationEqual0;
Step[] stepArray0 = new Step[8];
NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1822));
Expression[] expressionArray1 = new Expression[4];
expressionArray1[0] = (Expression) extensionFunction0;
expressionArray1[1] = (Expression) coreOperationLessThan0;
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray1);
expressionArray1[2] = (Expression) coreOperationAdd0;
expressionArray1[3] = (Expression) coreOperationEqual0;
Step step0 = new Step((-1822), nodeTypeTest0, expressionArray1);
stepArray0[0] = step0;
Expression[] expressionArray2 = new Expression[1];
expressionArray2[0] = (Expression) coreOperationAdd0;
Step step1 = new Step((-1822), nodeTypeTest0, expressionArray2);
stepArray0[1] = step1;
Step step2 = new Step(5, nodeTypeTest0, expressionArray1);
stepArray0[2] = step2;
Step step3 = new Step((-30), nodeTypeTest0, expressionArray0);
stepArray0[3] = step3;
Step step4 = new Step((-1863), nodeTypeTest0, expressionArray2);
stepArray0[4] = step4;
Step step5 = new Step((-30), nodeTypeTest0, expressionArray1);
stepArray0[5] = step5;
Step step6 = new Step((-1822), nodeTypeTest0, expressionArray0);
stepArray0[6] = step6;
Step step7 = new Step(415, nodeTypeTest0, expressionArray0);
stepArray0[7] = step7;
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[2], expressionArray0, stepArray0);
expressionArray0[3] = (Expression) expressionPath0;
CoreOperationAdd coreOperationAdd1 = new CoreOperationAdd(expressionArray0);
expressionArray0[4] = (Expression) coreOperationAdd1;
ExtensionFunction extensionFunction2 = new ExtensionFunction(qName0, expressionArray1);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationAdd1, extensionFunction2);
expressionArray0[5] = (Expression) coreOperationLessThanOrEqual0;
CoreOperationLessThan coreOperationLessThan1 = new CoreOperationLessThan(coreOperationAdd1, extensionFunction0);
expressionArray0[6] = (Expression) coreOperationLessThan1;
CoreFunction coreFunction0 = new CoreFunction((-1822), expressionArray0);
coreFunction0.functionStartsWith((EvalContext) null);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-10/tests/9
* Done!

* Computation finished
