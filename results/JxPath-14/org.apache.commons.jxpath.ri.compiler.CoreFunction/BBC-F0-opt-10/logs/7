* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 17170
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 4261165975
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:19:38.108 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 604s and 500 generations, 207022 statements, best individual has fitness: 585.0
* Minimizing test suite
[MASTER] 08:30:45.616 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 344
* Number of covered goals: 274
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 355
* Number of covered goals: 298
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 157
* Number of covered goals: 157
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 616
* Number of covered goals: 415
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 82
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 40
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 355
* Number of covered goals: 296
* Generated 344 tests with total length 5731
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
[MASTER] 08:31:48.089 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 08:32:07.589 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:32:08.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:08.303 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[6];
QName qName0 = new QName("");
VariableReference variableReference0 = new VariableReference(qName0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(variableReference0, variableReference0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationSubtract0);
expressionArray0[0] = (Expression) coreOperationNegate0;
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[1] = (Expression) coreOperationUnion0;
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationSubtract0, coreOperationSubtract0);
expressionArray0[2] = (Expression) coreOperationGreaterThan0;
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[3] = (Expression) coreOperationAdd0;
CoreOperationNegate coreOperationNegate1 = new CoreOperationNegate(expressionArray0[2]);
expressionArray0[4] = (Expression) coreOperationNegate1;
CoreOperationGreaterThan coreOperationGreaterThan1 = new CoreOperationGreaterThan(expressionArray0[1], coreOperationAdd0);
expressionArray0[5] = (Expression) coreOperationGreaterThan1;
CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);
coreFunction0.getArg1();
coreFunction0.isContextDependent();

[MASTER] 08:32:18.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:18.947 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationOr0, coreOperationOr0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationGreaterThan0, coreOperationOr0);
expressionArray0[0] = (Expression) coreOperationLessThanOrEqual0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(extensionFunction0, extensionFunction0);
CoreOperationOr coreOperationOr1 = new CoreOperationOr(expressionArray0);
CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(extensionFunction0, coreOperationOr0);
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationOr0, coreOperationLessThan0);
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(extensionFunction0, expressionArray0[0]);
CoreFunction coreFunction0 = new CoreFunction((-3368), expressionArray0);
coreFunction0.toString();

[MASTER] 08:32:21.384 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:21.386 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
Expression[] expressionArray1 = new Expression[1];
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
Expression[] expressionArray2 = new Expression[7];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray2);
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationUnion0, expressionArray2[1]);
expressionArray2[4] = (Expression) coreOperationEqual0;
expressionArray2[5] = (Expression) extensionFunction0;
expressionArray2[6] = (Expression) coreOperationOr0;
ExtensionFunction extensionFunction1 = new ExtensionFunction((QName) null, expressionArray2);
expressionArray0[2] = (Expression) extensionFunction1;
CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction((-199), expressionArray2);
coreFunction0.functionNumber((EvalContext) null);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-10/tests/7
* Done!

* Computation finished
