* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 17501
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 1426410960
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 04:23:00.119 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 04:23:04.706 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFloor(Lorg/apache/commons/jxpath/ri/EvalContext;)Ljava/lang/Object;
* Search finished after 601s and 1064 generations, 471321 statements, best individual has fitness: 439.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 344
* Number of covered goals: 289
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 355
* Number of covered goals: 310
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 95%
* Total number of goals: 152
* Number of covered goals: 144
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 616
* Number of covered goals: 523
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 40
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 355
* Number of covered goals: 310
* Generated 272 tests with total length 1541
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 04:34:40.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:35:03.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:03.529 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[6];
QName qName0 = new QName("ry4_/DT?", "y$(\"m)T.JE");
VariableReference variableReference0 = new VariableReference(qName0);
Step[] stepArray0 = new Step[3];
ExpressionPath expressionPath0 = new ExpressionPath(variableReference0, expressionArray0, stepArray0);
expressionArray0[1] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
coreFunction0.compute((EvalContext) null);

[MASTER] 04:35:04.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:04.454 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[1];
QName qName0 = new QName("format-num8berformat-num8ber", "format-num8berformat-num8ber");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
Step step0 = new Step((byte)2, nodeNameTest0, expressionArray0);
stepArray0[0] = step0;
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction(14, expressionArray0);
coreFunction0.computeValue((EvalContext) null);

[MASTER] 04:35:05.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:05.156 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(930, expressionArray0);
coreFunction0.functionCeiling((EvalContext) null);

[MASTER] 04:35:05.902 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:05.902 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
QName qName0 = new QName("Ile7W{y(@M'S?JzFa", "Ile7W{y(@M'S?JzFa");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
ParentContext parentContext0 = new ParentContext((EvalContext) null, nodeNameTest0);
AttributeContext attributeContext0 = new AttributeContext(parentContext0, nodeNameTest0);
coreFunction0.functionConcat(attributeContext0);

[MASTER] 04:35:07.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:07.375 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[4];
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(50);
Step step0 = new Step(50, nodeTypeTest0, expressionArray0);
stepArray0[0] = step0;
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[4] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction(50, expressionArray0);
ParentContext parentContext0 = new ParentContext((EvalContext) null, nodeTypeTest0);
ChildContext childContext0 = new ChildContext(parentContext0, nodeTypeTest0, false, false);
coreFunction0.functionCount(childContext0);

[MASTER] 04:35:08.616 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:08.617 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction(4110, expressionArray0);
coreFunction0.functionFloor((EvalContext) null);

[MASTER] 04:35:10.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:10.412 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
Step[] stepArray0 = new Step[1];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("name");
Step step0 = new Step((byte)2, processingInstructionTest0, expressionArray0);
stepArray0[0] = step0;
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction((-3532), expressionArray0);
coreFunction0.functionLang((EvalContext) null);

[MASTER] 04:35:11.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:11.513 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[0];
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[0] = (Expression) locationPath0;
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(expressionArray0[0], expressionArray0[0]);
ExpressionPath expressionPath0 = new ExpressionPath(coreOperationNotEqual0, expressionArray0, stepArray0);
expressionArray0[2] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(9, expressionArray0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) expressionPath0);
QName qName0 = new QName("");
DecimalFormat decimalFormat0 = new DecimalFormat();
BeanPointer beanPointer0 = (BeanPointer)NodePointer.newChildNodePointer((NodePointer) null, qName0, decimalFormat0);
RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, beanPointer0);
BasicNodeSet basicNodeSet0 = new BasicNodeSet();
NodeSetContext nodeSetContext0 = new NodeSetContext(rootContext0, basicNodeSet0);
coreFunction0.functionLast(nodeSetContext0);

[MASTER] 04:35:12.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:12.246 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[0];
LocationPath locationPath0 = new LocationPath(false, stepArray0);
expressionArray0[0] = (Expression) locationPath0;
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(expressionArray0[0], expressionArray0[0]);
ExpressionPath expressionPath0 = new ExpressionPath(coreOperationNotEqual0, expressionArray0, stepArray0);
expressionArray0[2] = (Expression) expressionPath0;
CoreFunction coreFunction0 = new CoreFunction(9, expressionArray0);
coreFunction0.functionLocalName((EvalContext) null);

[MASTER] 04:35:13.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:13.219 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(18, expressionArray0);
coreFunction0.functionName((EvalContext) null);

[MASTER] 04:35:15.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:15.356 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[9];
QName qName0 = new QName(">aAp");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
coreFunction0.functionNormalizeSpace((EvalContext) null);

[MASTER] 04:35:18.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:18.294 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
QName qName0 = new QName("format-nm?e`");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(718, expressionArray0);
coreFunction0.functionNumber((EvalContext) null);

[MASTER] 04:35:20.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:20.671 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(4078, expressionArray0);
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("OT");
ChildContext childContext0 = new ChildContext((EvalContext) null, processingInstructionTest0, true, true);
coreFunction0.functionRound(childContext0);

[MASTER] 04:35:20.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:20.923 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[6];
QName qName0 = new QName("LQ");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
Step[] stepArray0 = new Step[5];
CoreFunction coreFunction0 = new CoreFunction(48, expressionArray0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl)JXPathContext.newContext((Object) stepArray0[2]);
InitialContext initialContext0 = (InitialContext)jXPathContextReferenceImpl0.getAbsoluteRootContext();
EvalContext[] evalContextArray0 = new EvalContext[2];
UnionContext unionContext0 = new UnionContext(initialContext0, evalContextArray0);
coreFunction0.functionRound(unionContext0);

[MASTER] 04:35:21.331 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:21.332 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(72, expressionArray0);
coreFunction0.functionStartsWith((EvalContext) null);

[MASTER] 04:35:24.346 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:24.347 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAnd0;
CoreFunction coreFunction0 = new CoreFunction((-745), expressionArray0);
coreFunction0.functionSubstring((EvalContext) null);

[MASTER] 04:35:25.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:25.280 [logback-1] WARN  JUnitAnalyzer - Failing test:
 QName qName0 = new QName("vFrsS`=6\"", "vFrsS`=6\"");
Expression[] expressionArray0 = new Expression[6];
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(1024, expressionArray0);
coreFunction0.functionSubstringAfter((EvalContext) null);

[MASTER] 04:35:25.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:25.577 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
Step[] stepArray0 = new Step[1];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("33");
Step step0 = new Step(2147483645, processingInstructionTest0, expressionArray0);
stepArray0[0] = step0;
LocationPath locationPath0 = new LocationPath(true, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction((byte) (-1), expressionArray0);
coreFunction0.functionSubstringBefore((EvalContext) null);

[MASTER] 04:35:26.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:35:26.003 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(coreOperationOr0, coreOperationOr0);
expressionArray0[0] = (Expression) coreOperationSubtract0;
CoreFunction coreFunction0 = new CoreFunction(18, expressionArray0);
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(18);
AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, false, nodeTypeTest0);
coreFunction0.functionSum(ancestorContext0);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-50/tests/22
* Done!

* Computation finished
