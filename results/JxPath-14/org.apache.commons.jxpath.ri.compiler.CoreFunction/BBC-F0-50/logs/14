* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 20402
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 3422635789
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 04:20:17.311 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 04:26:53.149 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.PredicateContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AttributeContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 601s and 1048 generations, 407079 statements, best individual has fitness: 479.0
* Minimizing test suite
[MASTER] 04:31:24.946 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 82%
* Total number of goals: 344
* Number of covered goals: 281
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 355
* Number of covered goals: 304
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 159
* Number of covered goals: 159
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 616
* Number of covered goals: 501
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 82
* Number of covered goals: 30
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 40
* Number of covered goals: 37
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 355
* Number of covered goals: 304
* Generated 333 tests with total length 5099
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 04:32:26.941 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 04:32:42.644 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 04:32:47.749 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:32:47.750 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
Float float0 = new Float((float) 0);
Constant constant0 = new Constant(float0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(constant0, constant0);
expressionArray0[0] = (Expression) coreOperationLessThanOrEqual0;
QName qName0 = new QName("");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(extensionFunction0, expressionArray0[1]);
expressionArray0[2] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);
coreFunction0.functionTrue((EvalContext) null);

[MASTER] 04:32:51.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:32:51.455 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
Float float0 = new Float((float) 0);
Constant constant0 = new Constant(float0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(constant0, constant0);
expressionArray0[0] = (Expression) coreOperationLessThanOrEqual0;
QName qName0 = new QName("");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(extensionFunction0, expressionArray0[1]);
expressionArray0[2] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);
coreFunction0.functionSubstringBefore((EvalContext) null);

[MASTER] 04:33:03.904 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:03.907 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvalContext evalContext0 = null;
Expression[] expressionArray0 = new Expression[7];
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, (Step[]) null);
expressionArray0[1] = (Expression) expressionPath0;
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(expressionArray0[1], expressionArray0[0]);
CoreFunction coreFunction0 = new CoreFunction(107, expressionArray0);
coreFunction0.functionNamespaceURI((EvalContext) null);

[MASTER] 04:33:06.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:06.133 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g7o>5':$ph~S");
Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(26, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction(3, expressionArray0);
coreFunction1.compute((EvalContext) null);

[MASTER] 04:33:07.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:07.087 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvalContext evalContext0 = null;
Expression[] expressionArray0 = new Expression[7];
CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply((Expression) null, (Expression) null);
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationMultiply0, coreOperationMultiply0);
expressionArray0[0] = (Expression) coreOperationEqual0;
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, (Step[]) null);
expressionArray0[1] = (Expression) expressionPath0;
QName qName0 = new QName("", "");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
ParentContext parentContext0 = new ParentContext((EvalContext) null, nodeNameTest0);
boolean boolean0 = true;
AncestorContext ancestorContext0 = new AncestorContext(parentContext0, true, nodeNameTest0);
JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ancestorContext0);
PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, coreOperationEqual0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl(jXPathContext0, predicateContext0, (Pointer) null);
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
coreFunction0.functionLang((EvalContext) null);

[MASTER] 04:33:09.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:09.803 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[2];
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual((Expression) null, (Expression) null);
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThanOrEqual0, coreOperationGreaterThanOrEqual0);
Step[] stepArray0 = new Step[2];
QName qName0 = new QName("", "");
NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
Step step0 = new Step(122, nodeNameTest0, expressionArray0);
stepArray0[0] = step0;
Step step1 = new Step(122, nodeNameTest0, expressionArray0);
stepArray0[1] = step1;
ExpressionPath expressionPath0 = new ExpressionPath(coreOperationNotEqual0, expressionArray0, stepArray0);
expressionArray0[0] = (Expression) expressionPath0;
CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreOperationGreaterThanOrEqual0, expressionArray0[0]);
expressionArray0[1] = (Expression) coreOperationMultiply0;
CoreFunction coreFunction0 = new CoreFunction(7, expressionArray0);
coreFunction0.compute((EvalContext) null);

[MASTER] 04:33:18.580 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:18.581 [logback-1] WARN  JUnitAnalyzer - Failing test:
 EvalContext[] evalContextArray0 = new EvalContext[2];
evalContextArray0[0] = null;
evalContextArray0[1] = null;
UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
BasicNodeSet basicNodeSet0 = new BasicNodeSet();
EvalContext evalContext0 = null;
NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
Expression[] expressionArray0 = new Expression[1];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
CoreFunction coreFunction0 = new CoreFunction(132, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction(1441792, expressionArray0);
coreFunction1.functionNamespaceURI(evalContextArray0[1]);

[MASTER] 04:33:21.375 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:21.377 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j-YYC1.fg38^X#-z{");
Expression[] expressionArray0 = new Expression[3];
CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);
expressionArray0[0] = (Expression) coreOperationUnion0;
Constant constant0 = new Constant("");
expressionArray0[1] = (Expression) constant0;
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[2] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction((-839), expressionArray0);
coreFunction0.getArgumentCount();
JXPathContext jXPathContext0 = JXPathContext.newContext((Object) coreFunction0);
JXPathContext jXPathContext1 = JXPathContext.newContext(jXPathContext0, (Object) "");
QName qName0 = new QName("true", "");
Integer integer0 = Integer.valueOf(1549);
Locale locale0 = Locale.ITALY;
NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, integer0, locale0);
JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl(jXPathContext1, expressionArray0[1], nodePointer0);
RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);
NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-839));
constant0.toString();
JXPathContext jXPathContext2 = JXPathContext.newContext((Object) expressionArray0[1]);
jXPathContext2.getFactory();
jXPathContextReferenceImpl0.setFactory((AbstractFactory) null);
ParentContext parentContext0 = new ParentContext(rootContext0, nodeTypeTest0);
coreFunction0.functionSubstring(parentContext0);

[MASTER] 04:33:21.948 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:21.949 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Double double0 = new Double((-2137.511231995205));
Constant constant0 = new Constant(double0);
CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(constant0, constant0);
EvalContext evalContext0 = null;
Expression[] expressionArray0 = new Expression[5];
expressionArray0[0] = (Expression) constant0;
expressionArray0[1] = (Expression) coreOperationLessThanOrEqual0;
expressionArray0[2] = (Expression) coreOperationLessThanOrEqual0;
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[3] = (Expression) coreOperationOr0;
expressionArray0[4] = (Expression) coreOperationLessThanOrEqual0;
CoreFunction coreFunction0 = new CoreFunction(58, expressionArray0);
coreOperationOr0.args = expressionArray0;
coreFunction0.computeContextDependent();

[MASTER] 04:33:23.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 04:33:23.924 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
CoreFunction coreFunction0 = new CoreFunction(3794, expressionArray0);
Expression expression0 = coreFunction0.getArg3();
expressionArray0[0] = null;
QName qName0 = new QName("EVNV!jiG};jyg");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(expression0, coreFunction0);
expressionArray0[2] = (Expression) coreOperationNotEqual0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[3] = (Expression) coreOperationAnd0;
CoreFunction coreFunction1 = new CoreFunction(7, expressionArray0);
EvalContext evalContext0 = null;
coreFunction1.computeValue((EvalContext) null);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-50/tests/14
* Done!

* Computation finished
