* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-50
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 7728
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 820126681
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:06:33.402 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:10:44.784 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.NamespaceResolver due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.InitialContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NodeSetContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.UnionContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 08:10:45.034 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.RootContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.UnionContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 08:10:48.418 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.RootContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
* Search finished after 602s and 1024 generations, 442787 statements, best individual has fitness: 413.0
* Minimizing test suite
[MASTER] 08:17:37.689 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 344
* Number of covered goals: 296
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 355
* Number of covered goals: 320
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 171
* Number of covered goals: 171
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 616
* Number of covered goals: 536
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 38%
* Total number of goals: 82
* Number of covered goals: 31
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 40
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 355
* Number of covered goals: 320
* Generated 338 tests with total length 5855
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:18:22.331 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7140333333333333% of time used, but only 134/338 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 08:18:43.886 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:18:57.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:18:57.345 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[1] = (Expression) coreOperationAnd0;
Step[] stepArray0 = new Step[5];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("The PI \"");
Expression[] expressionArray1 = new Expression[0];
Step step0 = new Step(13, processingInstructionTest0, expressionArray1);
stepArray0[0] = step0;
Step step1 = new Step(20, processingInstructionTest0, expressionArray0);
stepArray0[1] = step1;
Expression[] expressionArray2 = new Expression[4];
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray2, stepArray0);
expressionArray2[0] = (Expression) expressionPath0;
expressionArray2[1] = (Expression) coreOperationAnd0;
coreOperationAnd0.args = expressionArray0;
expressionArray2[2] = (Expression) coreOperationAnd0;
expressionArray2[3] = (Expression) coreOperationAnd0;
Step step2 = new Step(20, processingInstructionTest0, expressionArray2);
stepArray0[2] = step2;
Step step3 = new Step(2467, processingInstructionTest0, expressionArray2);
stepArray0[3] = step3;
Step step4 = new Step(13, processingInstructionTest0, expressionArray0);
stepArray0[4] = step4;
LocationPath locationPath0 = new LocationPath(true, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction(13, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 08:19:08.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:19:08.729 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);
expressionArray0[1] = (Expression) coreOperationAnd0;
Step[] stepArray0 = new Step[5];
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("The PI \"");
Expression[] expressionArray1 = new Expression[0];
Step step0 = new Step(13, processingInstructionTest0, expressionArray1);
stepArray0[0] = step0;
Step step1 = new Step(20, processingInstructionTest0, expressionArray0);
stepArray0[1] = step1;
Expression[] expressionArray2 = new Expression[4];
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray2, stepArray0);
expressionArray2[0] = (Expression) expressionPath0;
expressionArray2[1] = (Expression) coreOperationAnd0;
coreOperationAnd0.args = expressionArray0;
expressionArray2[2] = (Expression) coreOperationAnd0;
expressionArray2[3] = (Expression) coreOperationAnd0;
Step step2 = new Step(20, processingInstructionTest0, expressionArray2);
stepArray0[2] = step2;
Step step3 = new Step(2467, processingInstructionTest0, expressionArray2);
stepArray0[3] = step3;
Step step4 = new Step(13, processingInstructionTest0, expressionArray0);
stepArray0[4] = step4;
LocationPath locationPath0 = new LocationPath(true, stepArray0);
expressionArray0[2] = (Expression) locationPath0;
CoreFunction coreFunction0 = new CoreFunction(13, expressionArray0);
EvalContext evalContext0 = null;
coreFunction0.functionConcat((EvalContext) null);

[MASTER] 08:19:09.751 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:19:09.752 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
expressionArray0[0] = (Expression) coreOperationOr0;
CoreFunction coreFunction0 = new CoreFunction((-697), expressionArray0);
coreFunction0.getFunctionName();
coreFunction0.functionNot((EvalContext) null);

[MASTER] 08:19:10.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:19:10.083 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String string0 = "org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual";
Constant constant0 = new Constant("org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual");
Expression[] expressionArray0 = new Expression[6];
expressionArray0[0] = (Expression) constant0;
NameAttributeTest nameAttributeTest0 = new NameAttributeTest(constant0, constant0);
expressionArray0[1] = (Expression) nameAttributeTest0;
expressionArray0[2] = (Expression) constant0;
QName qName0 = new QName("", "org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[3] = (Expression) extensionFunction0;
expressionArray0[4] = (Expression) constant0;
expressionArray0[5] = (Expression) constant0;
CoreFunction coreFunction0 = new CoreFunction(426, expressionArray0);
coreFunction0.getFunctionCode();
Expression[] expressionArray1 = new Expression[2];
expressionArray1[0] = (Expression) nameAttributeTest0;
expressionArray1[1] = (Expression) nameAttributeTest0;
CoreFunction coreFunction1 = new CoreFunction(13, expressionArray1);
coreFunction1.getArgumentCount();
coreFunction0.getFunctionName();
coreFunction1.getArgumentCount();
EvalContext evalContext0 = null;
coreFunction0.functionFloor((EvalContext) null);

[MASTER] 08:19:21.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:19:21.932 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[4];
Short short0 = new Short((short)3);
assertEquals((short)3, (short)short0);
assertNotNull(short0);

Constant constant0 = new Constant(short0);
assertFalse(constant0.computeContextDependent());
assertFalse(constant0.isContextDependent());
assertNotNull(constant0);

expressionArray0[0] = (Expression) constant0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
assertTrue(extensionFunction0.computeContextDependent());
assertEquals(4, expressionArray0.length);
assertNotNull(extensionFunction0);

expressionArray0[1] = (Expression) extensionFunction0;
CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);
assertEquals("or", coreOperationOr0.getSymbol());
assertEquals(4, expressionArray0.length);
assertNotNull(coreOperationOr0);

expressionArray0[2] = (Expression) coreOperationOr0;
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
assertEquals("+", coreOperationAdd0.getSymbol());
assertEquals(4, expressionArray0.length);
assertNotNull(coreOperationAdd0);

expressionArray0[3] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction(29, expressionArray0);
assertEquals(29, coreFunction0.getFunctionCode());
assertEquals(4, coreFunction0.getArgumentCount());
assertEquals(4, expressionArray0.length);
assertNotNull(coreFunction0);

int int0 = coreFunction0.getFunctionCode();
assertEquals(29, int0);
assertEquals(29, coreFunction0.getFunctionCode());
assertEquals(4, coreFunction0.getArgumentCount());
assertEquals(4, expressionArray0.length);

EvalContext[] evalContextArray0 = new EvalContext[4];
evalContextArray0[0] = null;
evalContextArray0[1] = null;
evalContextArray0[2] = null;
evalContextArray0[3] = null;
UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
assertTrue(unionContext0.isChildOrderingRequired());
assertEquals(0, unionContext0.getPosition());
assertEquals(1, unionContext0.getDocumentOrder());
assertEquals(4, evalContextArray0.length);
assertNotNull(unionContext0);

coreFunction0.functionSubstring(unionContext0);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-50/tests/2
* Done!

* Computation finished
