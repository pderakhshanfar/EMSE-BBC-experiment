* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreFunction
* Starting Client-0
* Connecting to master process on port 15323
* Analyzing classpath: 
  - subjects/buggy-versions/JxPath-14/target/classes
  - subjects/buggy-versions/JxPath-14/src/java
  - subjects/buggy-versions/JxPath-14/target/lib/commons-beanutils-1.7.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/commons-logging-1.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jdom-1.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/jsp-api-2.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/junit-3.8.2.jar
  - subjects/buggy-versions/JxPath-14/target/lib/mockrunner-0.4.1.jar
  - subjects/buggy-versions/JxPath-14/target/lib/servletapi-2.4.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xerces-2.4.0.jar
  - subjects/buggy-versions/JxPath-14/target/lib/xml-apis-2.0.2.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreFunction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1832
* Using seed 3057207675
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 654 / 1832
[MASTER] 08:19:30.331 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 08:20:26.221 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.UnionContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.PredicateContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ChildContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 08:20:26.800 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.InitialContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AttributeContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ChildContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:23:37.094 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ChildContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.DescendantContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NodeSetContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:24:08.521 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NodeSetContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NamespaceContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.SelfContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.DescendantContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:24:13.661 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl canUseFunctionalMocks=false, canBeMocked: true
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 08:26:12.236 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ChildContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AncestorContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ParentContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.DescendantContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 602s and 1159 generations, 485115 statements, best individual has fitness: 474.0
* Minimizing test suite
[MASTER] 08:30:34.919 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 344
* Number of covered goals: 290
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 355
* Number of covered goals: 309
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 164
* Number of covered goals: 164
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 616
* Number of covered goals: 491
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 82
* Number of covered goals: 32
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 95%
* Total number of goals: 40
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 355
* Number of covered goals: 309
* Generated 353 tests with total length 6003
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:31:17.889 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68055% of time used, but only 135/353 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 08:31:38.542 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 08:31:40.469 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:31:40.471 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
QName qName0 = new QName("7k", "7k");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
extensionFunction0.toString();
expressionArray0[0] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
coreFunction0.getArgumentCount();
Step[] stepArray0 = new Step[8];
Step step0 = new Step(157, (NodeTest) null, expressionArray0);
stepArray0[0] = step0;
Step step1 = new Step(1, (NodeTest) null, expressionArray0);
stepArray0[1] = step1;
Step step2 = new Step(0, (NodeTest) null, expressionArray0);
stepArray0[2] = step2;
Step step3 = new Step((-2804), (NodeTest) null, expressionArray0);
stepArray0[3] = step3;
Step step4 = new Step(4297, (NodeTest) null, expressionArray0);
stepArray0[4] = step4;
Expression[] expressionArray1 = new Expression[3];
expressionArray1[0] = (Expression) coreFunction0;
expressionArray1[1] = (Expression) extensionFunction0;
expressionArray1[2] = (Expression) coreFunction0;
Step step5 = new Step(0, (NodeTest) null, expressionArray1);
stepArray0[5] = step5;
Step step6 = new Step(3853, (NodeTest) null, expressionArray0);
stepArray0[6] = step6;
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
Step step7 = new Step((-2804), nodeTypeTest0, expressionArray1);
stepArray0[7] = step7;
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
expressionPath0.createContextForStep((EvalContext) null, (-2940), nodeTypeTest0);
coreFunction0.functionNormalizeSpace((EvalContext) null);

[MASTER] 08:31:46.992 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:31:46.995 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[3];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(expressionArray0[0], expressionArray0[0]);
expressionArray0[1] = (Expression) coreOperationGreaterThanOrEqual0;
CoreOperationMod coreOperationMod0 = new CoreOperationMod(expressionArray0[0], expressionArray0[1]);
expressionArray0[2] = (Expression) coreOperationMod0;
CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);
NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
coreFunction0.getArg3();
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext((EvalContext) null, nodeNameTest0, true);
SelfContext selfContext0 = new SelfContext(precedingOrFollowingContext0, nodeNameTest0);
coreOperationMod0.isContextDependent();

[MASTER] 08:31:56.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:31:56.487 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Step[] stepArray0 = new Step[1];
EvalContext evalContext0 = null;
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("format-number");
DescendantContext descendantContext0 = new DescendantContext((EvalContext) null, false, processingInstructionTest0);
Expression[] expressionArray0 = new Expression[1];
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
expressionArray0[0] = (Expression) coreOperationAdd0;
CoreFunction coreFunction0 = new CoreFunction(2, expressionArray0);
coreFunction0.functionCount((EvalContext) null);

[MASTER] 08:32:01.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:01.539 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Long long0 = new Long((-1L));
Constant constant0 = new Constant(long0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(constant0, constant0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationDivide0);
Expression[] expressionArray0 = new Expression[8];
expressionArray0[0] = (Expression) coreOperationNegate0;
expressionArray0[1] = (Expression) coreOperationNegate0;
expressionArray0[2] = (Expression) coreOperationDivide0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[3] = (Expression) extensionFunction0;
expressionArray0[4] = (Expression) constant0;
CoreOperationMod coreOperationMod0 = new CoreOperationMod(expressionArray0[4], coreOperationDivide0);
expressionArray0[5] = (Expression) coreOperationMod0;
expressionArray0[6] = (Expression) constant0;
expressionArray0[7] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction(11, (Expression[]) null);
coreFunction0.getFunctionCode();
EvalContext evalContext0 = null;
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("|96q:NqVIe1j2Xr)");
DescendantContext descendantContext0 = new DescendantContext((EvalContext) null, false, processingInstructionTest0);
CoreFunction coreFunction2 = new CoreFunction(1830, expressionArray0);
ChildContext childContext0 = new ChildContext((EvalContext) null, processingInstructionTest0, false, false);
coreFunction0.functionNamespaceURI(childContext0);

[MASTER] 08:32:02.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:02.811 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Long long0 = new Long((-1L));
Constant constant0 = new Constant(long0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(constant0, constant0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationDivide0);
Expression[] expressionArray0 = new Expression[8];
expressionArray0[0] = (Expression) coreOperationNegate0;
expressionArray0[1] = (Expression) coreOperationNegate0;
expressionArray0[2] = (Expression) coreOperationDivide0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[3] = (Expression) extensionFunction0;
expressionArray0[4] = (Expression) constant0;
CoreOperationMod coreOperationMod0 = new CoreOperationMod(expressionArray0[4], coreOperationDivide0);
expressionArray0[5] = (Expression) coreOperationMod0;
expressionArray0[6] = (Expression) constant0;
expressionArray0[7] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction(11, (Expression[]) null);
coreFunction0.getFunctionCode();
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("|96q:NqVIe1j2Xr)");
ChildContext childContext0 = new ChildContext((EvalContext) null, processingInstructionTest0, true, true);
EvalContext[] evalContextArray0 = new EvalContext[3];
evalContextArray0[0] = null;
evalContextArray0[1] = null;
evalContextArray0[2] = null;
UnionContext unionContext0 = new UnionContext(childContext0, evalContextArray0);
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext(evalContextArray0[0], processingInstructionTest0, true);
coreFunction0.computeValue((EvalContext) null);

[MASTER] 08:32:04.753 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:04.755 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Long long0 = new Long((-1L));
Constant constant0 = new Constant(long0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(constant0, constant0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationDivide0);
Expression[] expressionArray0 = new Expression[8];
expressionArray0[0] = (Expression) coreOperationNegate0;
expressionArray0[1] = (Expression) coreOperationNegate0;
expressionArray0[2] = (Expression) coreOperationDivide0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[3] = (Expression) extensionFunction0;
expressionArray0[4] = (Expression) constant0;
expressionArray0[7] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
CoreFunction coreFunction1 = new CoreFunction(11, (Expression[]) null);
coreFunction0.getFunctionCode();
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("|96q:NqVIe1j2Xr)");
ChildContext childContext0 = new ChildContext((EvalContext) null, processingInstructionTest0, true, true);
EvalContext[] evalContextArray0 = new EvalContext[3];
evalContextArray0[0] = null;
evalContextArray0[1] = null;
evalContextArray0[2] = null;
UnionContext unionContext0 = new UnionContext(childContext0, evalContextArray0);
PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext(evalContextArray0[0], processingInstructionTest0, true);
coreFunction0.computeValue((EvalContext) null);

[MASTER] 08:32:08.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:08.724 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Long long0 = new Long((-1L));
Constant constant0 = new Constant(long0);
CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(constant0, constant0);
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationDivide0);
Expression[] expressionArray0 = new Expression[8];
expressionArray0[0] = (Expression) coreOperationNegate0;
expressionArray0[1] = (Expression) coreOperationNegate0;
expressionArray0[2] = (Expression) coreOperationDivide0;
ExtensionFunction extensionFunction0 = new ExtensionFunction((QName) null, expressionArray0);
expressionArray0[3] = (Expression) extensionFunction0;
expressionArray0[4] = (Expression) constant0;
expressionArray0[7] = (Expression) coreOperationDivide0;
CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
Expression[] expressionArray1 = null;
CoreFunction coreFunction1 = new CoreFunction(11, (Expression[]) null);
coreFunction0.getFunctionCode();
EvalContext evalContext0 = null;
ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("|96q:NqVIe1j2Xr)");
coreFunction0.functionString((EvalContext) null);

[MASTER] 08:32:12.546 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:12.548 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[1];
QName qName0 = new QName("7k", "7k");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
extensionFunction0.toString();
expressionArray0[0] = (Expression) extensionFunction0;
CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
coreFunction0.getArgumentCount();
Step[] stepArray0 = new Step[8];
Step step0 = new Step(1, (NodeTest) null, expressionArray0);
stepArray0[0] = step0;
Step step1 = new Step(1, (NodeTest) null, expressionArray0);
stepArray0[1] = step1;
stepArray0[2] = step1;
Step step2 = new Step((-2804), (NodeTest) null, expressionArray0);
stepArray0[3] = step2;
Step step3 = new Step(1, (NodeTest) null, expressionArray0);
stepArray0[4] = step3;
Expression[] expressionArray1 = new Expression[3];
expressionArray1[0] = (Expression) coreFunction0;
expressionArray1[1] = (Expression) extensionFunction0;
expressionArray1[2] = (Expression) coreFunction0;
Step step4 = new Step(0, (NodeTest) null, expressionArray1);
stepArray0[5] = step4;
Step step5 = new Step(3853, (NodeTest) null, expressionArray0);
stepArray0[6] = step5;
NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
Step step6 = new Step((-2804), nodeTypeTest0, expressionArray1);
stepArray0[7] = step6;
ExpressionPath expressionPath0 = new ExpressionPath(expressionArray0[0], expressionArray0, stepArray0);
expressionPath0.createContextForStep((EvalContext) null, (-2940), nodeTypeTest0);
coreFunction0.functionNormalizeSpace((EvalContext) null);

[MASTER] 08:32:15.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:32:15.882 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Expression[] expressionArray0 = new Expression[5];
QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.CoreOperationDivide");
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
expressionArray0[0] = (Expression) extensionFunction0;
CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(extensionFunction0);
expressionArray0[1] = (Expression) coreOperationNegate0;
VariableReference variableReference0 = new VariableReference(qName0);
expressionArray0[2] = (Expression) variableReference0;
Float float0 = new Float((-3471.186F));
Constant constant0 = new Constant(float0);
expressionArray0[3] = (Expression) constant0;
CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(expressionArray0[2], extensionFunction0);
expressionArray0[4] = (Expression) coreOperationEqual0;
CoreFunction coreFunction0 = new CoreFunction((-548), expressionArray0);
EvalContext evalContext0 = null;
EvalContext[] evalContextArray0 = new EvalContext[9];
evalContextArray0[0] = null;
evalContextArray0[1] = null;
evalContextArray0[2] = null;
evalContextArray0[3] = null;
evalContextArray0[4] = null;
evalContextArray0[5] = null;
evalContextArray0[6] = null;
NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-548));
coreFunction0.functionConcat(evalContextArray0[1]);

* Writing tests to file
* Writing JUnit test case 'CoreFunction_ESTest' to results/JxPath-14/org.apache.commons.jxpath.ri.compiler.CoreFunction/BBC-F0-opt-60/tests/6
* Done!

* Computation finished
