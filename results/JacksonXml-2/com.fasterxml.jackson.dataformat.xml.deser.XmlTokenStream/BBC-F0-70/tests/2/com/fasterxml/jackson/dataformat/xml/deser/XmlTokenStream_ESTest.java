/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 14:09:47 GMT 2021
 */

package com.fasterxml.jackson.dataformat.xml.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.api.ReaderConfig;
import com.ctc.wstx.dom.WstxDOMWrappingReader;
import com.ctc.wstx.io.InputBootstrapper;
import com.ctc.wstx.io.ReaderBootstrapper;
import com.ctc.wstx.io.SystemId;
import com.ctc.wstx.stax.WstxInputFactory;
import com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper;
import com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream;
import java.io.IOException;
import java.io.StringReader;
import java.util.NoSuchElementException;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.util.StreamReaderDelegate;
import javax.xml.transform.dom.DOMSource;
import org.codehaus.stax2.XMLStreamReader2;
import org.codehaus.stax2.ri.Stax2ReaderAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlTokenStream_ESTest extends XmlTokenStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, "2;Vw+");
      xmlTokenStream0._nextLocalName = "2;Vw+";
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name=2;Vw+ text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=2;Vw+)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, iIOMetadataNode0);
      xmlTokenStream0._textValue = "2;Vw+";
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name=2;Vw+ text=2;Vw+ repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0._attributeCount = 4;
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=4 nextAttr#=0 name=2;+ text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.repeatStartElement();
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1 attr#=0 nextAttr#=0 name=2;Vw+ text=null repeat?=1 wrapper=[Wrapper: ROOT, matching: 2;Vw+] repeatElement=1 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      xmlTokenStream0._currentState = 1000;
      String string0 = xmlTokenStream0.toString();
      assertEquals("(Token stream: state=1000 attr#=0 nextAttr#=0 name= text=null repeat?=0 wrapper=[null] repeatElement=0 nextName=null)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0._nextLocalName = "] repeatElement=";
      xmlTokenStream0._repeatElement = 3;
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected END_ELEMENT, got event of type 1
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, iIOMetadataNode0);
      xmlTokenStream0._repeatElement = 500;
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unrecognized type to repeat: 500
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("[`Cw$muV5u'kXF?OAN");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected END_ELEMENT, got event of type 1
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("KV_F`", "z", "Ng6{$nWWIoK]Z");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0, "BL)6vW%UN");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0._nextLocalName = "Unrecognized XML directive; expected CDATA or comment ('<![CDATA[' or '<!--').";
      xmlTokenStream0.next();
      xmlTokenStream0.skipEndElement();
      assertEquals("Ng6{$nWWIoK]Z", xmlTokenStream0.getText());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0._nextNamespaceURI = "org.codehaus.stax2.io.Stax2Source";
      xmlTokenStream0.skipEndElement();
      assertEquals("", xmlTokenStream0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "com.ctc.wstx.evt.WNotationDeclaration");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      xmlTokenStream0._nextAttributeIndex = 500;
      xmlTokenStream0.skipEndElement();
      assertEquals(5, XmlTokenStream.XML_TEXT);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("2;Vw+", "2;Vw+", "2;Vw+");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      Object object0 = new Object();
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.skipEndElement();
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      assertEquals(6, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, wstxDOMWrappingReader0);
      xmlTokenStream0.skipEndElement();
      xmlTokenStream0.next();
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipAttributes();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 6
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      String string0 = xmlTokenStream0.getNamespaceURI();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      xmlTokenStream0._currentState = 1000;
      int int0 = xmlTokenStream0.getCurrentToken();
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, readerConfig0.DEFAULT_MAX_ENTITY_COUNT);
      xmlTokenStream0._repeatElement = (-30);
      // Undeclared exception!
      try { 
        xmlTokenStream0.next();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unrecognized type to repeat: -30
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.repeatStartElement();
      int int0 = xmlTokenStream0.next();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "com.ctc.wstx.evt.WNotationDeclaration");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.getText();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      String string0 = xmlTokenStream0.getLocalName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(wstxDOMWrappingReader0, dOMSource0);
      xmlTokenStream1.next();
      xmlTokenStream1.next();
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Can not call next() after receiving END_DOCUMENT
         //
         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._repeatElement = 1;
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, iIOMetadataNode0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0.skipEndElement();
      xmlTokenStream1.next();
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected to find a tag, instead reached end of input
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      xmlTokenStream0._attributeCount = 1367;
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal attribute index 0; element <> has no attributes
         //
         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, dOMSource0);
      XmlTokenStream xmlTokenStream1 = new XmlTokenStream(streamReaderDelegate0, xmlTokenStream0);
      xmlTokenStream1.skipEndElement();
      xmlTokenStream1.next();
      // Undeclared exception!
      try { 
        xmlTokenStream0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Can not call next() after receiving END_DOCUMENT
         //
         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._nextAttributeIndex = (-2);
      // Undeclared exception!
      try { 
        xmlTokenStream0.next();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal attribute index -2; element <2;Vw+> has no attributes
         //
         verifyException("org.codehaus.stax2.ri.dom.DOMWrappingReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      XMLStreamReader2 xMLStreamReader2_0 = Stax2ReaderAdapter.wrapIfNecessary(streamReaderDelegate0);
      streamReaderDelegate0.setParent(xMLStreamReader2_0);
      XmlTokenStream xmlTokenStream0 = null;
      try {
        xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, (Object) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = null;
      try {
        xmlTokenStream0 = new XmlTokenStream((XMLStreamReader) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.next();
      int int0 = xmlTokenStream0.next();
      assertFalse(xmlTokenStream0.hasAttributes());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      int int0 = xmlTokenStream0.next();
      assertFalse(xmlTokenStream0.hasAttributes());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      ElementWrapper elementWrapper0 = ElementWrapper.matchingWrapper((ElementWrapper) null, "KvAV}|Bcx^]", "KvAV}|Bcx^]");
      xmlTokenStream0._currentWrapper = elementWrapper0;
      xmlTokenStream0.skipEndElement();
      xmlTokenStream0.getNamespaceURI();
      assertEquals("KvAV}|Bcx^]", xmlTokenStream0.getLocalName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._repeatElement = 3;
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected END_ELEMENT, got event of type 1
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0._repeatElement = 2;
      int int0 = xmlTokenStream0._handleRepeatElement();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0._repeatElement = 2;
      int int0 = xmlTokenStream0._handleRepeatElement();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      // Undeclared exception!
      try { 
        xmlTokenStream0._handleRepeatElement();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unrecognized type to repeat: 0
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, wstxDOMWrappingReader0);
      xmlTokenStream0._currentState = (-1773);
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected END_ELEMENT, got event of type 1
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, readerConfig0);
      xmlTokenStream0._currentState = 1000;
      xmlTokenStream0.skipEndElement();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0.skipEndElement();
      xmlTokenStream0.next();
      assertEquals(6, xmlTokenStream0.getCurrentToken());
      
      int int0 = xmlTokenStream0.next();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0._nextAttributeIndex = 7;
      xmlTokenStream0.convertToString();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      String string0 = xmlTokenStream0.convertToString();
      assertNull(string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.convertToString();
      xmlTokenStream0.skipAttributes();
      assertTrue(wstxDOMWrappingReader0.isEndElement());
      assertEquals(5, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      // Undeclared exception!
      try { 
        xmlTokenStream0.skipAttributes();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME (1) but 2
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "Ng6{$nWWIoK]Z");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      xmlTokenStream0.skipAttributes();
      assertFalse(xmlTokenStream0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.skipAttributes();
      assertEquals(6, XmlTokenStream.XML_END);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, "2;Vw+");
      xmlTokenStream0.repeatStartElement();
      xmlTokenStream0.repeatStartElement();
      assertNull(xmlTokenStream0.getText());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0._currentState = 1367;
      // Undeclared exception!
      try { 
        xmlTokenStream0.repeatStartElement();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state not XML_START_ELEMENT (1) but 1367
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      iIOMetadataNode0.setAttributeNS("", "", "Ng6{$nWWIoK]Z");
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, iIOMetadataNode0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertFalse(boolean0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, wstxDOMWrappingReader0);
      xmlTokenStream0.skipEndElement();
      boolean boolean0 = xmlTokenStream0.hasAttributes();
      assertFalse(wstxDOMWrappingReader0.isStartElement());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0.next();
      try { 
        xmlTokenStream0.skipEndElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected END_ELEMENT, got event of type 6
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(wstxDOMWrappingReader0, object0);
      xmlTokenStream0._repeatElement = 1;
      // Undeclared exception!
      try { 
        xmlTokenStream0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      WstxInputFactory wstxInputFactory0 = new WstxInputFactory();
      ReaderConfig readerConfig0 = wstxInputFactory0.createPrivateConfig();
      StringReader stringReader0 = new StringReader("");
      ReaderBootstrapper readerBootstrapper0 = ReaderBootstrapper.getInstance("", (SystemId) null, stringReader0, "org.codehaus.stax2.internNames");
      XMLStreamReader2 xMLStreamReader2_0 = wstxInputFactory0.createSR(readerConfig0, "r##@nlDK`iYUe^C", (InputBootstrapper) readerBootstrapper0, false, false);
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = null;
      try {
        xmlTokenStream0 = new XmlTokenStream(xMLStreamReader2_0, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got 7
         //
         verifyException("com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.getTokenLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      String string0 = xmlTokenStream0.getText();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      String string0 = xmlTokenStream0.getLocalName();
      assertNotNull(string0);
      assertEquals("2;Vw+", string0);
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, iIOMetadataNode0);
      xmlTokenStream0.getCurrentLocation();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.getXmlReader();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2;Vw+");
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createFullDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      Object object0 = new Object();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, object0);
      xmlTokenStream0.close();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StreamReaderDelegate streamReaderDelegate0 = new StreamReaderDelegate();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSource dOMSource0 = new DOMSource(iIOMetadataNode0);
      ReaderConfig readerConfig0 = ReaderConfig.createJ2MEDefaults();
      WstxDOMWrappingReader wstxDOMWrappingReader0 = WstxDOMWrappingReader.createFrom(dOMSource0, readerConfig0);
      streamReaderDelegate0.setParent(wstxDOMWrappingReader0);
      streamReaderDelegate0.nextTag();
      XmlTokenStream xmlTokenStream0 = new XmlTokenStream(streamReaderDelegate0, dOMSource0);
      xmlTokenStream0.closeCompletely();
      assertEquals(1, xmlTokenStream0.getCurrentToken());
  }
}
