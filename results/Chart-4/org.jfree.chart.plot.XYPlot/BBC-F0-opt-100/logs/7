* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-100
* Going to generate test cases for class: org.jfree.chart.plot.XYPlot
* Starting Client-0
* Connecting to master process on port 11039
* Analyzing classpath: 
  - subjects/buggy-versions/Chart-4/build
  - subjects/buggy-versions/Chart-4/lib/servlet.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.plot.XYPlot
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 5800
* Using seed 608695673
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 2064 / 5800
[MASTER] 14:55:22.878 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 14:55:22.931 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 14:55:37.572 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jfree.chart.plot.XYPlot.getRenderer(I)Lorg/jfree/chart/renderer/xy/XYItemRenderer;
[MASTER] 14:58:46.830 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 15:01:16.990 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
*C2*
*C2*
*C2*
[MASTER] 15:03:03.000 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
*C1*
*C1*
* Search finished after 606s and 149 generations, 90063 statements, best individual has fitness: 2319.0
* Minimizing test suite
[MASTER] 15:07:04.918 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
[MASTER] 15:07:04.919 [logback-1] WARN  TimeController - Phase MINIMIZATION lasted too long, 7 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 66%
* Total number of goals: 1743
* Number of covered goals: 1149
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 1077
* Number of covered goals: 622
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 83
* Number of covered goals: 83
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 742
* Number of covered goals: 532
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 717
* Number of covered goals: 220
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 222
* Number of covered goals: 218
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 96%
* Total number of goals: 222
* Number of covered goals: 214
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 55%
* Total number of goals: 1077
* Number of covered goals: 592
* Generated 341 tests with total length 5774
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:08:13.875 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6706% of time used, but only 32/341 tests minimized), falling back to using all assertions
[MASTER] 15:08:33.657 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 15:08:40.408 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 6 seconds more than allowed.
* Writing tests to file
* Writing JUnit test case 'XYPlot_ESTest' to results/Chart-4/org.jfree.chart.plot.XYPlot/BBC-F0-opt-100/tests/7
* Done!

* Computation finished
