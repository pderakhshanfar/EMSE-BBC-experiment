/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 29 15:49:54 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.ScrollPane;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BandedSampleModel;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.SampleModel;
import java.awt.image.WritableRaster;
import java.beans.PropertyChangeListener;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.net.MalformedURLException;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.JToolTip;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.plaf.basic.BasicEditorPaneUI;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthDesktopIconUI;
import javax.swing.plaf.synth.SynthTabbedPaneUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.JTextComponent;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.mock.javax.swing.MockSpinnerDateModel;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTick;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.MarkerAxisBand;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.ChartProgressListener;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.MultipleXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.needle.WindNeedle;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYCrosshairState;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.text.TextFragment;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.gantt.XYTaskDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultHeatMapDataset;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Boolean boolean0 = new Boolean(false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, false);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedDomainXYPlot0.getDomainAxis(0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawZeroDomainBaseline(graphics2D0, defaultCaret0);
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D_Float0, 0.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, defaultCaret0);
      String string0 = "Requires 'index' >= 0.";
      TimeSeries timeSeries0 = new TimeSeries(1.0F, "Requires 'index' >= 0.", "MMM-yyyy");
      int int0 = 127;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DateAxis dateAxis0 = new DateAxis();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Stroke stroke0 = thermometerPlot0.getThermometerStroke();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Paint paint0 = stackedAreaRenderer0.getBaseOutlinePaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 0, dateAxis0, stroke0, paint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 78, 3880.10546875, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0, false);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(2, (Marker) intervalMarker0, layer0, true);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Stack<DefaultXYItemRenderer> stack0 = new Stack<DefaultXYItemRenderer>();
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D0, stack0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      combinedDomainXYPlot0.setRenderer(288, (XYItemRenderer) clusteredXYBarRenderer0, true);
      combinedDomainXYPlot0.getRenderer(288);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxis((-631), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      Graphics2D graphics2D0 = null;
      MatrixSeries matrixSeries0 = new MatrixSeries("t+~m/ O", 589, 10);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYShapeRenderer0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      String string0 = "Null 'orientation' argument.";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Null 'orientation' argument.";
      stringArray0[1] = "Null 'orientation' argument.";
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 10);
      combinedRangeXYPlot0.zoomRangeAxes((double) 500, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1000.0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      TextAnchor textAnchor0 = TextAnchor.BASELINE_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((-471), (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.addRangeMarker((-471), (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Vector<XYDrawableAnnotation> vector0 = new Vector<XYDrawableAnnotation>();
      BufferedImage bufferedImage0 = new BufferedImage(10, 1839, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, (Rectangle2D) null, vector0);
      combinedDomainXYPlot0.getSeriesCount();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawQuadrants(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedRangeXYPlot2.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
      combinedRangeXYPlot1.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      ArrayList<LegendItemCollection> arrayList0 = new ArrayList<LegendItemCollection>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, 3490.442765745, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(568.24879239234, 568.24879239234);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, cyclicXYItemRenderer0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1.0F, 2.302585092994046, 0.05, (-4408.919));
      cyclicXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 620.2672770612);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, (ValueAxis) null, cyclicXYItemRenderer0);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(xYPlot0);
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      // Undeclared exception!
      try { 
        xYPlot0.addAnnotation((XYAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2076.2763671875, 2076.2763671875, ">t_p");
      cyclicNumberAxis0.setLabel("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10);
      cyclicNumberAxis0.equals(standardXYItemRenderer0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedRangeXYPlot0.getDomainGridlineStroke();
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1463, 10, (-1725.2781), 100.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale(10.0, 500, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, cyclicNumberAxis0);
      RectangleInsets rectangleInsets0 = paintScaleLegend0.getPadding();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Rectangle rectangle1 = new Rectangle(0, 1);
      Rectangle2D rectangle2D0 = rectangle0.createIntersection(rectangle1);
      Rectangle2D rectangle2D1 = rectangleInsets0.createOutsetRectangle(rectangle2D0, false, false);
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getDrawingSupplier();
      combinedDomainXYPlot0.setDrawingSupplier((DrawingSupplier) null, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.clone();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'object' argument.
         //
         verifyException("org.jfree.chart.util.ObjectUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-2662));
      xYPlot0.clearDomainMarkers(74);
      cyclicXYItemRenderer0.clone();
      xYPlot0.setDomainGridlineStroke(cyclicXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.getDataRange((ValueAxis) null);
      combinedDomainXYPlot0.getRangeCrosshairPaint();
      xYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Vector<DefaultHeatMapDataset> vector0 = new Vector<DefaultHeatMapDataset>();
      JList<DefaultHeatMapDataset> jList0 = new JList<DefaultHeatMapDataset>(vector0);
      jList0.indexToLocation(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes((double) 10, (-1.0), plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (10.5) <= upper (-1.05).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.zoomRangeAxes((double) 10, (double) 10, plotRenderingInfo0, (Point2D) point0);
      DateTitle dateTitle0 = new DateTitle();
      Stack<VectorRenderer> stack0 = new Stack<VectorRenderer>();
      combinedDomainXYPlot0.zoomDomainAxes(Double.NaN, Double.NaN, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = chartPanel0.getLocation();
      Point point1 = chartPanel0.translateJava2DToScreen(point0);
      combinedDomainXYPlot0.zoomDomainAxes((double) 0.5F, 2076.2763671875, plotRenderingInfo0, (Point2D) point1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.contains((-1054.72), (double) 1.0F, (-2508.56), (-4187.79));
      defaultCaret0.getMagicCaretPosition();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes((double) 0.0F, (-1344.75365552), plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.0) <= upper (-1411.991338296).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateDomainAxisSpace(graphics2D0, rectangle2D_Float0, (AxisSpace) null);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Float0, axisSpace0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.setDomainCrosshairValue(141.80313792);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDataset(10, (XYDataset) yIntervalSeriesCollection0);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) null, false);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JScrollPane jScrollPane0 = new JScrollPane();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Color color0 = Color.gray;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2022, 741);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = new Size2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, vectorRenderer0.DEFAULT_VALUE_LABEL_PAINT, numberAxis0.DEFAULT_AXIS_LINE_STROKE);
      RectangleAnchor rectangleAnchor0 = categoryMarker0.getLabelAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0, 1.0F, rectangleAnchor0);
      combinedDomainXYPlot0.drawDomainCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 0, numberAxis0, numberAxis0.DEFAULT_TICK_MARK_STROKE, vectorRenderer0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) logarithmicAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      JFreeChart jFreeChart1 = new JFreeChart("", jFreeChart0.DEFAULT_TITLE_FONT, categoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(10, 10, chartRenderingInfo0);
      chartRenderingInfo0.clear();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(448.275048176);
      area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      area0.createTransformedArea(affineTransform0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo0);
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedDomainXYPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      Stack<VectorRenderer> stack0 = new Stack<VectorRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.rendererChanged((RendererChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 2232.0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes(216.4630890844727, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.removeKeyListener((KeyListener) null);
      jTextPane0.modelToView(10);
      ArrayList<XYLineAnnotation> arrayList0 = new ArrayList<XYLineAnnotation>();
      combinedDomainXYPlot0.drawDomainTickBands((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
      xYPlot0.calculateDomainAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      JFreeChart jFreeChart1 = new JFreeChart("P\"o'", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart1.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      Vector<ExtendedCategoryAxis> vector0 = new Vector<ExtendedCategoryAxis>();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setBackgroundAlpha(500);
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, (ValueAxis) null, numberAxis0, vectorRenderer0);
      xYPlot0.getOrientation();
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.getSeriesCount();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      xYPlot0.equals(vectorRenderer0);
      xYPlot0.setDomainZeroBaselineVisible(true);
      xYPlot0.isDomainZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      Vector<ExtendedCategoryAxis> vector0 = new Vector<ExtendedCategoryAxis>();
      combinedRangeXYPlot0.drawDomainGridlines(graphics2D0, (Rectangle2D) null, vector0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      System.setCurrentTimeMillis(10);
      Stack<XYDataImageAnnotation> stack0 = new Stack<XYDataImageAnnotation>();
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, stack0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Color color0 = (Color)BarRenderer3D.DEFAULT_WALL_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1202.7480204, 1202.7480204, color0, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0, layer0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      combinedDomainXYPlot0.getRendererCount();
      combinedDomainXYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Marker marker0 = null;
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.addDomainMarker((-2136), (Marker) null, layer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      PeriodAxis periodAxis0 = new PeriodAxis("r\"=hR?# p+3@k*nU9`");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.panRangeAxes(0.05, plotRenderingInfo0, point2D_Float0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes((double) 500, plotRenderingInfo1, (Point2D) point2D_Float0, true);
      combinedDomainXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.getDomainAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-2971.809), 4207.0);
      combinedRangeXYPlot0.zoomRangeAxes(4207.0, plotRenderingInfo0, (Point2D) point2D_Double0, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 300.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(false);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.addRangeMarker(15, (Marker) categoryMarker0, layer0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3340, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot1.drawVerticalLine(graphics2D0, rectangle2D_Float0, 0.0F, numberAxis0.DEFAULT_AXIS_LINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot1.setDomainZeroBaselineVisible(true);
      combinedDomainXYPlot1.getAxisOffset();
      combinedDomainXYPlot0.getIndexOf((XYItemRenderer) null);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "9m2idNt$A<.IxriV");
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      xYShapeAnnotation0.clone();
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      System.setCurrentTimeMillis((-253L));
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      LogAxis logAxis0 = new LogAxis("Null 'stroke' argument.");
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, logAxis0, logAxis0, xYBarRenderer0);
      xYPlot0.getRendererForDataset(xYSeriesCollection0);
      xYPlot0.clearDomainAxes();
      xYPlot0.getDomainZeroBaselinePaint();
      XYCrosshairState xYCrosshairState0 = new XYCrosshairState();
      xYCrosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        xYPlot0.zoomRangeAxes((-2778.6407071), (PlotRenderingInfo) null, (Point2D) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Layer layer0 = Layer.BACKGROUND;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.add(xYPlot0, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      Point2D.Double point2D_Double0 = new Point2D.Double(10, 1679);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(3880.10546875, 2.5E10);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, xYPlot0.DEFAULT_OUTLINE_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      categoryMarker0.setPaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.addRangeMarker(1679, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(false);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Double point2D_Double0 = new Point2D.Double(10, 0.05);
      combinedRangeXYPlot0.zoomRangeAxes((double) 10, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.05, dateAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      AxisSpace axisSpace0 = new AxisSpace();
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) dateAxis0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Boolean boolean0 = new Boolean(true);
      IntervalMarker intervalMarker0 = new IntervalMarker((-870.967990625), 10, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addDomainMarker(470, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      combinedDomainXYPlot0.getRangeAxisLocation();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2309, Double.POSITIVE_INFINITY, (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, (PlotOrientation) null, (-1180.784445605), numberAxis3D0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, spiderWebPlot0.DEFAULT_LABEL_SHADOW_PAINT);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, 2063.409788, (double) 5, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Ht=/~tFbj-B;_aGV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, (PlotOrientation) null, 3668.0, numberAxis3D0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, xYPlot0.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 60.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      TimeSeries timeSeries0 = new TimeSeries(true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, (ValueAxis) null, cyclicXYItemRenderer0);
      cyclicXYItemRenderer0.clone();
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.setRangeZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer2 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(3, layer0);
      combinedDomainXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("ItemLabelAnchor.OUTSIDE8", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart1 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      chartRenderingInfo0.getPlotInfo();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D_Float0, plotOrientation0, 0.0F, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Boolean boolean0 = new Boolean(false);
      IntervalMarker intervalMarker0 = new IntervalMarker((-2960.0), (-2960.0), combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      combinedDomainXYPlot0.getRangeAxisLocation();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 41, (double) 10, (-2960.0), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, (PlotOrientation) null, 0.0F, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getBackgroundImage();
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(5, 10, (double) 1.0F, (-3727.8771993144), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, (PlotOrientation) null, 0.0, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setWeight((-765));
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 2.0, xYPlot0.DEFAULT_OUTLINE_STROKE, xYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      DefaultComboBoxModel<CandlestickRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<CandlestickRenderer>();
      JList<CandlestickRenderer> jList0 = new JList<CandlestickRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation((-2680));
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        xYPlot0.draw((Graphics2D) null, (Rectangle2D) null, (Point2D) null, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(1412, (Marker) null, layer1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getAxisOffset();
      xYPlot0.clearDomainAxes();
      xYPlot0.getDomainTickBandPaint();
      xYPlot0.getRendererCount();
      xYPlot0.canSelectByRegion();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.addProgressListener(chartPanel0);
      chartRenderingInfo0.clone();
      jFreeChart0.removeLegend();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.drawAxes((Graphics2D) null, rectangle2D0, rectangle2D0, plotRenderingInfo0);
      ArrayList<GradientPaint> arrayList0 = new ArrayList<GradientPaint>();
      xYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, arrayList0);
      xYPlot0.getRangeAxisCount();
      xYPlot0.isDomainCrosshairLockedOnData();
      xYPlot0.getFixedLegendItems();
      xYPlot0.getDomainMinorGridlinePaint();
      xYPlot0.clearSelection();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(420, layer0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LinkedList<XYShapeRenderer> linkedList0 = new LinkedList<XYShapeRenderer>();
      combinedDomainXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D_Double0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10, false, (XYToolTipGenerator) null);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(candlestickRenderer0.DEFAULT_STROKE);
      combinedDomainXYPlot0.getDomainAxis(4);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot2.setRangeAxis(1, (ValueAxis) null, false);
      combinedDomainXYPlot2.setRangeAxisLocation(4, axisLocation0, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot2.getQuadrantPaint((-3560));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-3560) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot0.panDomainAxes(1.0F, plotRenderingInfo0, point2D_Double0);
      combinedDomainXYPlot0.indexOf((XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.LocalizationBundle", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 462, 15, 498, 10, 462, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.panDomainAxes((-45.0), plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(465, 768, 270);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 270
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes(320.75622, 82.7667, plotRenderingInfo0, (Point2D) point0);
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, Double.NaN, 3573.9, 10.0, 300);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
      combinedRangeXYPlot0.getBackgroundImage();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedRangeXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      combinedRangeXYPlot0.zoomRangeAxes(Double.NaN, 3668.0, plotRenderingInfo0, (Point2D) point0);
      XYDataImageAnnotation xYDataImageAnnotation0 = null;
      try {
        xYDataImageAnnotation0 = new XYDataImageAnnotation((Image) null, Double.NaN, (-1559.9425398374), 1.0F, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.annotations.XYDataImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      combinedRangeXYPlot0.zoomRangeAxes((double) 0, (double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Locale locale0 = Locale.ITALIAN;
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      Layer layer0 = Layer.FOREGROUND;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(2);
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(true);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(3, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(1.0F);
      combinedDomainXYPlot0.setDataset(6, (XYDataset) defaultBoxAndWhiskerXYDataset0);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeRangeMarker(6, (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.CANADA_FRENCH;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      Vector<CandlestickRenderer> vector1 = new Vector<CandlestickRenderer>(vector0);
      combinedDomainXYPlot0.getSeriesCount();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(500, 2, 452, 4, 3);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      TextAnchor textAnchor1 = TextAnchor.CENTER_LEFT;
      DateTick dateTick0 = new DateTick(date0, "", textAnchor0, textAnchor1, (-418.2953793));
      combinedDomainXYPlot0.equals(textAnchor0);
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer(0);
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(false);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(4, layer0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 60.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      TimeSeries timeSeries0 = new TimeSeries(true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, (ValueAxis) null, cyclicXYItemRenderer0);
      cyclicXYItemRenderer0.clone();
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.setRangeZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      xYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.getDataRange(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Color color0 = Color.darkGray;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2, 1, "-RCcoF&u");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getQuadrantPaint(3);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      Color color1 = (Color)Axis.DEFAULT_TICK_LABEL_PAINT;
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, (Layer) null, false);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(655.4953);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRenderer(0);
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYErrorRenderer xYErrorRenderer1 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorStroke();
      ValueMarker valueMarker0 = new ValueMarker(255.794921875, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, xYErrorRenderer1.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, xYErrorRenderer1.DEFAULT_STROKE, 0.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      valueMarker0.setStroke(basicStroke0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) xYErrorRenderer1.ZERO);
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset(combinedDomainXYPlot1.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset1);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.05, dateAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      AxisSpace axisSpace0 = new AxisSpace();
      Stroke stroke0 = categoryPlot0.getRangeMinorGridlineStroke();
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) dateAxis0);
      Color color0 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
      combinedDomainXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, true);
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(2322, layer1);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 2, chartRenderingInfo0);
      chartRenderingInfo0.clear();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 0.5F);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area1.getBounds2D();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
      Color color0 = (Color)TextFragment.DEFAULT_PAINT;
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, color0);
      combinedDomainXYPlot0.clone();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawVerticalLine((Graphics2D) null, rectangle2D_Float0, 10, (Stroke) null, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(10, (XYDataset) yIntervalSeriesCollection0);
      combinedRangeXYPlot1.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      ValueMarker valueMarker0 = new ValueMarker(480.0);
      Layer layer0 = Layer.BACKGROUND;
      valueMarker0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis((-805));
      CategoryMarker categoryMarker0 = new CategoryMarker("%}84RM`6=j}@8vl", valueAxis0.DEFAULT_TICK_MARK_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      combinedDomainXYPlot0.isDomainGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisIndex((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)61;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      TimeSeries timeSeries0 = new TimeSeries(0.0F);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, cyclicXYItemRenderer0);
      cyclicXYItemRenderer0.clone();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.setDomainCrosshairVisible(true);
      xYPlot0.getDataRange(cyclicNumberAxis0);
      xYPlot0.getDomainAxis();
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      xYPlot0.equals(xIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getBackgroundImage();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      combinedRangeXYPlot0.isRangeGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesStroke(8);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getPlotType();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, vectorRenderer0);
      xYPlot0.getOrientation();
      xYPlot0.setDomainZeroBaselinePaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      Vector<CandlestickRenderer> vector1 = new Vector<CandlestickRenderer>(vector0);
      xYPlot0.getSeriesCount();
      combinedDomainXYPlot0.indexOf((XYDataset) null);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      combinedDomainXYPlot0.getDataset(10);
      int int0 = (-1488);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-1488), 10, (-3431));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -3431
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      Font font0 = AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      jFreeChart0.createBufferedImage(10, 10);
      BufferedImage bufferedImage0 = new BufferedImage(15, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
      combinedDomainXYPlot1.isRangeZeroBaselineVisible();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      defaultTableXYDataset0.getDomainBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("_%", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      DateAxis dateAxis0 = new DateAxis("");
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      LogAxis logAxis0 = new LogAxis();
      valueAxisArray0[2] = (ValueAxis) logAxis0;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setDomainAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainXYPlot0);
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, numberFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.5F, false, highLowItemLabelGenerator0);
      Paint paint0 = candlestickRenderer0.getItemPaint(10, 10, false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, paint0, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      Boolean boolean0 = new Boolean(true);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 0.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeAxisEdge(2);
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(candlestickRenderer0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2366.13, Double.POSITIVE_INFINITY, "");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.getRenderer();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesRenderingOrder();
      Point point0 = new Point();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      combinedDomainXYPlot0.setDomainAxis(2142258626, (ValueAxis) logarithmicAxis0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.CANADA_FRENCH;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      combinedDomainXYPlot0.getDomainAxisForDataset(0);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke((-1.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative width
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      xYPlot0.setAxisOffset(combinedRangeCategoryPlot0.DEFAULT_INSETS);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1272.1888, (-3942.886483), (-1599.5610308206));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = combinedRangeCategoryPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D0, axisSpace0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      RectangleEdge.coordinate(rectangle2D0, rectangleEdge0);
      RectangleEdge.coordinate(rectangle2D0, rectangleEdge0);
      axisSpace0.shrink(rectangle2D0, rectangle2D0);
      axisSpace1.ensureAtLeast(1517.7273471539, rectangleEdge0);
      xYPlot0.setFixedRangeAxisSpace(axisSpace1, false);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(10);
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-1), (XYItemRenderer) cyclicXYItemRenderer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      AxisSpace axisSpace0 = new AxisSpace();
      axisSpace0.setRight(3879.10546875);
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0, false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[0];
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      Integer integer0 = new Integer(10);
      combinedDomainXYPlot0.getDatasetRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairValue(0.0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setQuadrantOrigin(point0);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      Color color1 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesRenderingOrder();
      Point point0 = new Point();
      combinedRangeXYPlot0.setQuadrantOrigin(point0);
      combinedRangeXYPlot0.getDomainAxisLocation(218);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) integer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, valueAxis0, valueAxis0, xYStepRenderer0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getFrame();
      JFreeChart jFreeChart0 = new JFreeChart("", valueAxis0.DEFAULT_TICK_LABEL_FONT, thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 79, 0, 15, 1, 10, (-283), true, true, true, true, false, true, false);
      xYPlot0.select(0.05, (double) 500, rectangle2D0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      RoundRectangle2D.Float roundRectangle2D_Float1 = new RoundRectangle2D.Float(3, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float1.getBounds2D();
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-1244.0));
      cyclicNumberAxis0.resizeRange(300.0, 0.05);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-8);
      TimeSeries timeSeries0 = new TimeSeries(500, "%}84RM`6=j}@8vl", "%}84RM`6=j}@8vl");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, logAxis0, logAxis0, xYLineAndShapeRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYLineAndShapeRenderer0.clone();
      cyclicNumberAxis0.resizeRange((-444.1555184483341), 2952.422570859);
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
      xYPlot0.getDataRange(logAxis0);
      combinedDomainXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "y=vR,!qS%?i37K");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(0, (-1.0F), (RenderingHints) null);
      xYPlot1.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 2.0F);
      xYPlot1.getFixedRangeAxisSpace();
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, (-800.563762422), xYPlot1.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1031.316246477361, Double.POSITIVE_INFINITY);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, cyclicXYItemRenderer0);
      cyclicXYItemRenderer0.clone();
      Layer layer2 = Layer.BACKGROUND;
      xYPlot2.setRangeZeroBaselineStroke(cyclicNumberAxis1.DEFAULT_AXIS_LINE_STROKE);
      xYPlot1.setDomainGridlineStroke(cyclicNumberAxis1.DEFAULT_ADVANCE_LINE_STROKE);
      xYPlot2.setDomainCrosshairVisible(true);
      xYPlot2.getDataRange(cyclicNumberAxis1);
      xYPlot2.getRangeAxisEdge(2);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.getDatasetRenderingOrder();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, 10);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      cyclicNumberAxis0.resizeRange(10.0, (double) 1.0F);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot1.setDomainCrosshairVisible(false);
      xYPlot2.getDataRange(cyclicNumberAxis0);
      xYPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        xYPlot2.setRangeMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getPlotType();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      combinedDomainXYPlot0.setDomainAxis(0, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getPlotType();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      MeterPlot meterPlot0 = new MeterPlot();
      Range range0 = meterPlot0.getRange();
      range0.toString();
      ModuloAxis moduloAxis0 = new ModuloAxis("7[hCG+RF=b|rm!K", range0);
      NumberAxis numberAxis0 = new NumberAxis();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-784), (ValueAxis) numberAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Locale locale0 = Locale.ITALIAN;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeAxis(0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(274);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 274 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart1 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(15, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      LinkedList<Rectangle2D.Double> linkedList0 = new LinkedList<Rectangle2D.Double>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawRangeTickBands(graphics2D0, rectangle2D0, linkedList0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) logarithmicAxis0, true);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.setBackgroundImageAlignment(10);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(607);
      combinedDomainXYPlot0.setQuadrantPaint(3, candlestickRenderer0.DEFAULT_PAINT);
      combinedDomainXYPlot0.configureRangeAxes();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(1, 797, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDataset();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("^-:/e", 2.5E7, 3490.442765745, 500);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPointerAnnotation0, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1375), (-1375), 10, 2121, 4, 15, true, true, true, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(680, 420, chartRenderingInfo1);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, 2.0F, 200, 30.0);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double1.getBounds2D();
      dateAxis1.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D_Double0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.getRenderer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDomainAxis(10, (ValueAxis) null, false);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.configureRangeAxes();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.iterator();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(1.0F, 383, 10, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis1, false);
      combinedDomainXYPlot0.getDataset();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      combinedDomainXYPlot0.setRangeCrosshairValue(Double.POSITIVE_INFINITY, true);
      ChartRenderingInfo chartRenderingInfo2 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo1.equals(simpleTimeZone0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      combinedDomainXYPlot0.zoomDomainAxes(0.05, plotRenderingInfo0, (Point2D) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes((double) 500, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYPlot0.clearSelection();
      GeneralPath generalPath0 = new GeneralPath(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, (-2.147483648E9), xYDifferenceRenderer0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2871.3725689), (-37.8094781));
      cyclicNumberAxis0.resizeRange(0.0, (double) 10);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(467.0);
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYDifferenceRenderer0);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot0.setRangeZeroBaselineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_STROKE);
      xYPlot0.setDomainGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      xYPlot0.setDomainCrosshairVisible(false);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.0, 2.0F);
      xYPlot1.getDataRange(cyclicNumberAxis1);
      xYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getDomainAxisCount();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.getRenderer();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      LogAxis logAxis0 = new LogAxis("");
      combinedRangeXYPlot1.setDomainAxis(0, (ValueAxis) dateAxis0, true);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.getRangeMinorGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(81);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 81, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      combinedDomainXYPlot0.getRendererCount();
      Layer layer0 = Layer.BACKGROUND;
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      TimeSeries timeSeries0 = new TimeSeries(500, "l*3:!g", "");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 1.0F, "");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500);
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, numberAxis3D0, cyclicNumberAxis0, standardXYItemRenderer0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Area area0 = new Area(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = area0.getBounds();
      xYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 3880.10546875, dateAxis1, vectorRenderer0.DEFAULT_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      Vector<CandlestickRenderer> vector1 = new Vector<CandlestickRenderer>(vector0);
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRenderer();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 500 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 500, numberAxis0, vectorRenderer0.DEFAULT_OUTLINE_STROKE, numberAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getPlotType();
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      int int0 = 9;
      combinedRangeXYPlot0.getDomainMarkers(9, (Layer) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-2549), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      NumberAxis3D numberAxis3D1 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D1);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(false, 1.0F);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValueDataset0, defaultKeyedValueDataset0);
      MockDate mockDate0 = new MockDate();
      XYSeries xYSeries0 = new XYSeries(true, true, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      JFreeChart jFreeChart0 = new JFreeChart("{0pc8r^m%qW9R@c1!l", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-993), (-876), (-876), (-876), (-876), (-876), true, false, true, true, true, false);
      combinedDomainXYPlot0.setDomainGridlineStroke(numberAxis3D1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDataRange(numberAxis3D1);
      xYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0E-8, 0.05);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.zoomDomainAxes(385.25790156863, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(500, 500);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      LegendItemCollection legendItemCollection1 = candlestickRenderer0.getLegendItems();
      legendItemCollection0.addAll(legendItemCollection1);
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      combinedDomainXYPlot0.configureDomainAxes();
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) logAxis0);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis0, true);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(false);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "y=vR,!qS%?i37K");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(0, (-1.0F), (RenderingHints) null);
      xYPlot1.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 2.0F);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, (-800.563762422), xYPlot1.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1031.316246477361, Double.POSITIVE_INFINITY);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, cyclicXYItemRenderer0);
      cyclicNumberAxis1.setMarkerBand((MarkerAxisBand) null);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(cyclicNumberAxis1.DEFAULT_AXIS_LINE_STROKE);
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      cyclicXYItemRenderer0.setLegendItemURLGenerator(multipleXYSeriesLabelGenerator0);
      xYPlot1.setDomainGridlineStroke(cyclicNumberAxis1.DEFAULT_ADVANCE_LINE_STROKE);
      xYPlot2.setDomainCrosshairVisible(true);
      xYPlot2.getDataRange(cyclicNumberAxis1);
      xYPlot0.getIndexOf(xYBubbleRenderer0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logarithmicAxis0, logAxis0, xYBoxAndWhiskerRenderer0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      thermometerPlot0.setOutlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_STROKE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      logarithmicAxis0.setMinorTickCount(79);
      combinedDomainXYPlot0.clearRangeMarkers((-598));
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(false);
      xYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.setDomainAxis(893, (ValueAxis) null);
      combinedRangeXYPlot0.getRangeAxisCount();
      Font font0 = combinedRangeXYPlot0.getNoDataMessageFont();
      numberAxis0.setTickLabelFont(font0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "18eEFy3p";
      thermometerPlot0.setOutlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      stringArray0[1] = "org.jfree.chart.labels.AbstractPieItemLabelGenerator";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.labels.AbstractPieItemLabelGenerator", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      numberAxis0.setMinorTickCount(3);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(numberAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainAxis();
      combinedRangeXYPlot0.getPlotType();
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)CompassPlot.localizationResources;
      XYPlot.localizationResources = (ResourceBundle) propertyResourceBundle0;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-255.68721), 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathForRow(221);
      JTextArea jTextArea0 = new JTextArea();
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextArea0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds((-784), 10);
      fixedHeightLayoutCache0.getBounds((TreePath) null, (Rectangle) null);
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getBounds((TreePath) null, (Rectangle) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 521.1394265637642, 3879.10546875, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, (Rectangle2D) null);
      combinedDomainXYPlot0.getDomainCrosshairValue();
      Vector<DefaultKeyedValues2DDataset> vector0 = new Vector<DefaultKeyedValues2DDataset>();
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, (Rectangle2D) null, vector0);
      xYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 60.0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      cyclicNumberAxis0.setDownArrow(ellipse2D_Float0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, (ValueAxis) null, cyclicXYItemRenderer0);
      xYPlot0.getPlotType();
      cyclicXYItemRenderer0.clone();
      xYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.getDataRange(cyclicNumberAxis0);
      xYPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 0, numberAxis0, vectorRenderer0.DEFAULT_OUTLINE_STROKE, numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getPlotType();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, vectorRenderer0);
      PlotOrientation plotOrientation0 = xYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        xYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 1.0E-8, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      cyclicNumberAxis0.resizeRange(10.0, (double) 1.0F);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot1.setDomainCrosshairVisible(false);
      xYPlot2.getDataRange(cyclicNumberAxis0);
      xYPlot2.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.getHighlightPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainXYPlot0);
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, numberFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1016.1), true, highLowItemLabelGenerator0);
      Paint paint0 = candlestickRenderer0.getItemPaint(10, 10, true);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, paint0, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.configureRangeAxes();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Layer layer0 = Layer.BACKGROUND;
      SystemColor systemColor0 = SystemColor.control;
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYPlot0.clearSelection();
      GeneralPath generalPath0 = new GeneralPath(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Point point0 = null;
      try {
        point0 = new Point((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.daa.category.SldingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer1 = new XYBoxAndWhiskerRenderer(572.0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      TimeSeries timeSeries0 = new TimeSeries(logarithmicAxis0.DEFAULT_TICK_UNIT);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer1);
      xYPlot0.getQuadrantPaint(3);
      xYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(true);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYDifferenceRenderer0.setItemLabelAnchorOffset(1.0F);
      xYPlot0.clearSelection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBaseSectionOutlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getBaseSectionOutlineStroke();
      basicStroke0.getDashArray();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Layer layer0 = Layer.BACKGROUND;
      SystemColor systemColor0 = SystemColor.control;
      xYPlot0.getRangeMinorGridlineStroke();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Graphics2D graphics2D0 = null;
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      Hashtable<DeviationRenderer, XYDotRenderer> hashtable0 = new Hashtable<DeviationRenderer, XYDotRenderer>();
      JTree jTree0 = new JTree(hashtable0);
      Object[] objectArray0 = new Object[5];
      XYPlot xYPlot1 = (XYPlot)xYPlot0.clone();
      objectArray0[0] = (Object) xYPlot1;
      objectArray0[1] = (Object) jTree0;
      objectArray0[2] = (Object) multiTreeUI0;
      objectArray0[3] = (Object) combinedRangeCategoryPlot0;
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, true);
      hashtable0.put(deviationRenderer0, xYDotRenderer0);
      objectArray0[4] = (Object) systemColor0;
      TreePath treePath0 = new TreePath(objectArray0);
      // Undeclared exception!
      try { 
        multiTreeUI0.getPathBounds(jTree0, treePath0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.getDomainZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBaseSectionOutlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getBaseSectionOutlineStroke();
      basicStroke0.getDashArray();
      basicStroke0.getDashArray();
      xYPlot0.setRangeMinorGridlineStroke(ringPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        xYPlot0.setRangeAxis((-766), (ValueAxis) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      Rectangle2D.union(rectangle2D1, rectangle2D_Double0, rectangle2D1);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.draw(graphics2D1, rectangle2D0, (Point2D) null, plotState0, plotRenderingInfo0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(10, 200, (Paint) null, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BasicStroke basicStroke0 = new BasicStroke(0.3F);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.getRendererCount();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainMarkers((-1509), layer0);
      combinedRangeXYPlot0.setDomainAxis(1, (ValueAxis) numberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers((-16));
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("zc_4WIVA", spiderWebPlot0);
      combinedDomainXYPlot0.setDomainCrosshairPaint(spiderWebPlot0.DEFAULT_OUTLINE_PAINT);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 0.4, numberAxis0.DEFAULT_TICK_LABEL_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker((-3290.120917744436), jFreeChart0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0, layer1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1652, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, (AxisSpace) null);
      combinedDomainXYPlot0.clearDomainMarkers();
      combinedDomainXYPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView(10);
      ArrayList<XYLineAnnotation> arrayList0 = new ArrayList<XYLineAnnotation>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawDomainTickBands((Graphics2D) null, (Rectangle2D) null, arrayList0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      combinedDomainXYPlot0.getDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.clearRangeMarkers((-1));
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot1);
      combinedDomainXYPlot0.configureRangeAxes();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot1.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      combinedDomainXYPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomRangeAxes((double) 10, (double) 1.0F, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (10.5) <= upper (1.05).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes((-812.5373268), plotRenderingInfo0, (Point2D) point2D_Double0, false);
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis((-1268));
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantPaint(1870, valueAxis0.DEFAULT_TICK_MARK_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1870) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {3} - {4}", defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      JFreeChart jFreeChart1 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, 126, 574, 868, 15, 10, 0, false, true, true, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(467, 300, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      rectangle2D_Double1.getBounds2D();
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(126, 300);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainPannable(true);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.drawVerticalLine(graphics2D0, rectangle2D0, 1.0, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot1.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot1.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("wun", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(50, 495, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(3213, 495);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      xYPlot0.render(graphics2D0, rectangle0, 495, plotRenderingInfo0, categoryCrosshairState0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      NumberAxis numberAxis0 = new NumberAxis();
      numberAxis0.setAutoTickUnitSelection(false, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Font font0 = new Font("", 475, 488);
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, true, false);
      chartPanel0.getSelectionFillPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
      Font font0 = new Font("", 475, 475);
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, true, false);
      chartPanel0.getSelectionFillPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainXYPlot0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 232);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1223, 2175, 10, 10, 10, 487, false, false, false, false, true, false, false);
      combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      linkedList0.add(defaultTableXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0);
      combinedRangeXYPlot0.getRangeAxis(6);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.mapDatasetToDomainAxes(10, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Indices must be Integer instances.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[E3X");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[E3X");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[E3X");
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      DateAxis dateAxis0 = new DateAxis("4fm'N) >hZJ\"DM\"?");
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.setRangeAxis(valueAxisArray0[0]);
      fastScatterPlot0.getDomainGridlineStroke();
      xYPlot1.isDomainCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      BasicStroke basicStroke0 = new BasicStroke(0.5F);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(thermometerPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, numberAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot1.DEFAULT_OUTLINE_PAINT);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      combinedDomainXYPlot0.getRangeAxisLocation(0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot1.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBaseSectionOutlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
      ringPlot0.setShadowPaint(xYPlot0.DEFAULT_BACKGROUND_PAINT);
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getBaseSectionOutlineStroke();
      basicStroke0.getDashArray();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, ringPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 14, 10, 14, 2436, 14, (-2165), false, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 2759.058527574, 823.2606702, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      Hashtable<DefaultKeyedValuesDataset, DefaultPieDataset> hashtable0 = new Hashtable<DefaultKeyedValuesDataset, DefaultPieDataset>();
      JTree jTree0 = new JTree(hashtable0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      Rectangle rectangle0 = new Rectangle();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYPlot0.equals(xYBarRenderer0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedLegendItems();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[9];
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, customXYToolTipGenerator0);
      xYItemRendererArray0[0] = (XYItemRenderer) standardXYItemRenderer0;
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYErrorRenderer0;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYItemRendererArray0[2] = (XYItemRenderer) xYLineAndShapeRenderer0;
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) stackedXYAreaRenderer0;
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) xYStepRenderer0;
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) vectorRenderer0;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10, true, customXYToolTipGenerator0);
      xYItemRendererArray0[6] = (XYItemRenderer) candlestickRenderer0;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      xYItemRendererArray0[7] = (XYItemRenderer) highLowRenderer0;
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer(73);
      xYItemRendererArray0[8] = (XYItemRenderer) xYSplineRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRenderer((-675), (XYItemRenderer) highLowRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      combinedDomainXYPlot0.mapDatasetToRangeAxis(15, 924);
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset(200);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 200 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      // Undeclared exception!
      try { 
        xYPlot0.getDomainAxisForDataset(3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 3 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset((-1900573080));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -1900573080 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      combinedRangeXYPlot0.getDomainAxis((-1268));
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.getSeriesCount();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(10, 0, 0, 400, 2008);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      TextAnchor textAnchor0 = TextAnchor.BASELINE_CENTER;
      TextAnchor textAnchor1 = TextAnchor.BASELINE_LEFT;
      DateTick dateTick0 = new DateTick(date0, "0.0000", textAnchor1, textAnchor1, (-7033.124));
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedRangeXYPlot0.equals(point2D_Float0);
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer((-3538.7683));
      combinedRangeXYPlot0.getDomainAxisForDataset(2);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDomainMinorGridlinesVisible(true);
      combinedRangeXYPlot0.setDataset(193, (XYDataset) yIntervalSeriesCollection0);
      combinedRangeXYPlot1.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      dateAxis0.setTickMarksVisible(true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(3879.10546875, dateAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      AxisSpace axisSpace0 = new AxisSpace();
      categoryPlot0.setFixedRangeAxisSpace(axisSpace0);
      Stroke stroke0 = categoryPlot0.getRangeMinorGridlineStroke();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, jDBCCategoryDataset0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) dateAxis0);
      combinedDomainXYPlot0.setBackgroundPaint(dateAxis0.DEFAULT_AXIS_LINE_PAINT);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 6 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, defaultCaret0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainXYPlot0);
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator(dateFormat0, numberFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1016.1), true, highLowItemLabelGenerator0);
      Paint paint0 = candlestickRenderer0.getItemPaint(10, 10, false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, paint0, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      Boolean boolean0 = new Boolean(true);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 0.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(candlestickRenderer0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.getRangeAxisEdge();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(10, axisLocation0, true);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("}@qP0nT~s");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(1, (XYDataset) yIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBaseSectionOutlineStroke(xYDotRenderer0.DEFAULT_OUTLINE_STROKE);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(3493, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.configureDomainAxes();
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-135.07087), "d0C>");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-124);
      byteArray0[6] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRenderer(2138782157);
      ValueMarker valueMarker0 = null;
      try {
        valueMarker0 = new ValueMarker((-381.37826304), combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, (-169.325F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis();
      combinedRangeXYPlot0.setDataset((XYDataset) null);
      valueAxisArray0[2] = (ValueAxis) dateAxis1;
      dateAxis1.setTickUnit(dateAxis0.DEFAULT_DATE_TICK_UNIT);
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      dateAxis1.setTickLabelsVisible(true);
      valueAxisArray0[4] = (ValueAxis) dateAxis0;
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      ValueAxis[] valueAxisArray1 = new ValueAxis[2];
      valueAxisArray1[0] = (ValueAxis) dateAxis0;
      valueAxisArray1[1] = (ValueAxis) dateAxis1;
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray1);
      BasicListUI basicListUI0 = new BasicListUI();
      Vector<SystemColor> vector0 = new Vector<SystemColor>();
      JList<Color> jList0 = new JList<Color>(vector0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      int int0 = (-1162);
      // Undeclared exception!
      try { 
        debugGraphics0.fillRoundRect(467, 1142, 10, 10, (-1162), 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      cyclicNumberAxis1.setMarkerBand((MarkerAxisBand) null);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot1.setDomainCrosshairVisible(false);
      xYPlot2.getDataRange(cyclicNumberAxis0);
      xYPlot1.setQuadrantPaint(0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = Color.darkGray;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L}/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, true);
      xYPlot1.getRangeAxisCount();
      combinedRangeXYPlot0.getRangeAxisEdge();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2486.510695773588), 1.0F);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      xYPlot0.setDomainAxis((ValueAxis) cyclicNumberAxis0);
      xYPlot1.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYPlot0.equals(textAnchor0);
      xYPlot0.getRangeMinorGridlinePaint();
      xYPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainXYPlot0);
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      combinedRangeXYPlot0.equals(locale_Category0);
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      JList<XYSplineRenderer> jList0 = new JList<XYSplineRenderer>();
      jList0.indexToLocation((-107));
      combinedRangeXYPlot0.panRangeAxes((-385.6101474798), (PlotRenderingInfo) null, (Point2D) null);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.5E8, "$9Ncj$DFlw=P^b");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.setBackgroundImageAlignment(10);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot1.clearRangeMarkers((-2284));
      LogAxis logAxis0 = new LogAxis("$9Ncj$DFlw=P^b");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      LogAxis logAxis1 = new LogAxis();
      combinedDomainXYPlot2.getDomainAxisIndex(logAxis1);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot3.setQuadrantPaint(6, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (6) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "y=vR,!qS%?i37K");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(0, (-1.0F), (RenderingHints) null);
      xYPlot1.isRangeGridlinesVisible();
      JFreeChart jFreeChart0 = new JFreeChart("3rC~\"sP8B6a", xYPlot0);
      boolean boolean0 = false;
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot1.addDomainMarker(7, (Marker) categoryMarker0, layer0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 296, 2175, 4, (-499), 10, false, false, true, true, true, true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = null;
      try {
        generalPath0 = new GeneralPath(487);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
         //
         verifyException("java.awt.geom.Path2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      cyclicNumberAxis1.setMarkerBand((MarkerAxisBand) null);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot1.setDomainCrosshairVisible(false);
      xYPlot2.getDataRange(cyclicNumberAxis0);
      xYPlot1.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.plot.AbstractPieLabelDistributor");
      dateAxis0.setLabelURL("org.jfree.chart.plot.AbstractPieLabelDistributor");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setBackgroundPaint(dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("4");
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(72.0, choiceFormat0, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Paint paint0 = categoryAxis3D0.getTickMarkPaint();
      Paint paint1 = combinedDomainXYPlot0.getRangeCrosshairPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(numberTickUnit0, paint0, dateAxis0.DEFAULT_TICK_MARK_STROKE, paint1, dateAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker((int) (byte)30, (Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point point0 = new Point();
      DateTitle dateTitle0 = new DateTitle();
      combinedDomainXYPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      thermometerPlot0.setBackgroundImageAlignment(10);
      combinedDomainXYPlot1.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot1.getDomainAxisIndex(numberAxis0);
      combinedDomainXYPlot0.setQuadrantPaint(2, combinedDomainXYPlot1.DEFAULT_OUTLINE_PAINT);
      LogAxis logAxis0 = new LogAxis("VMK14`b1\"{P>5+wNx");
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      valueAxisArray0[1] = (ValueAxis) numberAxis0;
      valueAxisArray0[2] = (ValueAxis) numberAxis0;
      valueAxisArray0[3] = (ValueAxis) numberAxis0;
      valueAxisArray0[4] = (ValueAxis) logAxis0;
      valueAxisArray0[5] = (ValueAxis) numberAxis0;
      combinedDomainXYPlot1.setDomainAxes(valueAxisArray0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
      thermometerPlot0.setBackgroundImageAlignment(10);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.setQuadrantPaint(2, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.configureRangeAxes();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(10, 500, 6, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "y=vR,!qS%?i37K");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(0, (-1.0F), (RenderingHints) null);
      xYPlot1.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(500, 2.0F);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, (-800.563762422), xYPlot1.DEFAULT_OUTLINE_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1031.316246477361, Double.POSITIVE_INFINITY);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, cyclicXYItemRenderer0);
      cyclicNumberAxis1.setMarkerBand((MarkerAxisBand) null);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(cyclicNumberAxis1.DEFAULT_AXIS_LINE_STROKE);
      xYPlot1.setDomainGridlineStroke(cyclicNumberAxis1.DEFAULT_ADVANCE_LINE_STROKE);
      xYPlot2.setDomainCrosshairVisible(true);
      xYPlot2.getDataRange(cyclicNumberAxis1);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[0];
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      font0.getTransform();
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      xYPlot0.setOutlineStroke(basicStroke0);
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 620.2672770612);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, (ValueAxis) null, cyclicXYItemRenderer0);
      xYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(30.0, 2.302585092994046, 0.05, (-4408.919));
      cyclicXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      xYPlot0.getDataRange(cyclicNumberAxis0);
      xYPlot0.getRangeCrosshairPaint();
      xYPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultPolarItemRenderer0.getDrawingSupplier();
      xYPlot0.setDrawingSupplier((DrawingSupplier) null);
      xYPlot0.getDomainAxis(3);
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      xYPlot0.setRenderer(1322, (XYItemRenderer) highLowRenderer0, false);
      xYPlot0.getDomainZeroBaselineStroke();
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(1870, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1870) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxisForDataset(0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 2.35, valueAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(2.35, 1151.01493, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot1.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      combinedDomainXYPlot1.removeDomainMarker(10, (Marker) intervalMarker1, layer0, true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorPaint();
      combinedDomainXYPlot1.setDomainGridlinePaint(valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot1.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      thermometerPlot0.setBackgroundImageAlignment(10);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(2);
      combinedDomainXYPlot1.getDomainAxisIndex(numberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setQuadrantPaint((-5), combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-5) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(60.45633557961292);
      xYPlot0.isRangeMinorGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("c-", font0, combinedDomainCategoryPlot0, false);
      jFreeChart0.addProgressListener((ChartProgressListener) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2174, 3);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 1.0F, 1.0F, 1);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Null 'offset' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(vectorRenderer0);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedDomainXYPlot0.getDataset();
      JFreeChart jFreeChart0 = new JFreeChart("r\"=hR?# p+3@k*nU9`", combinedDomainXYPlot1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(40, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo1.getDataArea();
      LinkedList<Rectangle2D.Double> linkedList0 = new LinkedList<Rectangle2D.Double>();
      combinedDomainXYPlot1.drawRangeTickBands(graphics2D0, rectangle2D0, linkedList0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Point2D.Float point2D_Float1 = new Point2D.Float(0.0F, 0.0F);
      point2D_Float0.setLocation((Point2D) point2D_Float1);
      combinedDomainXYPlot1.panRangeAxes(448.275048176, plotRenderingInfo0, point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Stack<DefaultXYItemRenderer> stack0 = new Stack<DefaultXYItemRenderer>();
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D_Float0, stack0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.plot.AbstractPieLabelDistributor");
      dateAxis0.setLabelURL("org.jfree.chart.plot.AbstractPieLabelDistributor");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, defaultCaret0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.plot.AbstractPieLabelDistributor");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte) (-28);
      dateAxis0.setTickMarkInsideLength((byte)30);
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      dateAxis0.setLabelURL("org.jfree.chart.plot.AbstractPieLabelDistributor");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getRangeAxisCount();
      Locale locale0 = Locale.ITALIAN;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      valueMarker0.setLabelPaint(combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getRangeAxis(1770);
      combinedDomainXYPlot0.addDomainMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      JFreeChart jFreeChart0 = new JFreeChart("J7jD0&u", xYPlot0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart1 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(365, 365, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      LinkedList<Rectangle2D.Double> linkedList0 = new LinkedList<Rectangle2D.Double>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ArrayList<DefaultHeatMapDataset> arrayList0 = new ArrayList<DefaultHeatMapDataset>();
      combinedDomainXYPlot0.drawRangeTickBands(graphics2D0, rectangle2D0, arrayList0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
      combinedDomainXYPlot0.drawQuadrants(graphics2D0, rectangle2D0);
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      thermometerPlot0.setNoDataMessageFont(numberAxis0.DEFAULT_TICK_LABEL_FONT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(3, 10);
      combinedDomainXYPlot0.isNotify();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(waferMapDataset0, waferMapDataset0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 893.0, thermometerPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 10, 10, 10, false, false, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(489, 489, 2.302585092994046, 3490.442765745, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      rectangle0.grow(4, (-768));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle0, (List) null);
      combinedRangeXYPlot0.getDomainAxisEdge(221);
      combinedRangeXYPlot0.setDomainCrosshairValue((double) 1024, true);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      piePlot3D0.getBaseSectionOutlineStroke();
      combinedRangeXYPlot0.setRangeGridlineStroke(xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot0.setRangeGridlinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_CROSSHAIR_STROKE;
      combinedRangeXYPlot0.setRangeGridlineStroke(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      combinedDomainXYPlot0.configureDomainAxes();
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      xYPlot0.isRangeZoomable();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2464), 10);
      xYPlot0.isNotify();
      SystemColor systemColor0 = SystemColor.control;
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(systemColor0, waferMapDataset0);
      xYPlot0.datasetChanged(datasetChangeEvent0);
      String string0 = "Y=1Lhwc\"GH3";
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "Y=1Lhwc\"GH3");
      Second second0 = null;
      try {
        second0 = new Second((Date) null, simpleTimeZone0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      combinedRangeXYPlot0.setDomainGridlineStroke(basicStroke0);
      combinedRangeXYPlot0.getDomainGridlineStroke();
      combinedRangeXYPlot0.getDomainAxisCount();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.getRenderer();
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      LogAxis logAxis0 = new LogAxis("pA_|c3GIGteY:Xo%n");
      combinedRangeXYPlot0.setDomainAxis(81, (ValueAxis) logAxis0, false);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      double double0 = (-261.762084);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.setDomainAxis(893, (ValueAxis) null);
      combinedRangeXYPlot0.getRangeAxisCount();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "org.jfree.chart.labels.AbstractPieItemLabelGenerator";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.labels.AbstractPieItemLabelGenerator", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      numberAxis0.setMinorTickCount(3);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(numberAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainAxis();
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      Layer layer0 = Layer.FOREGROUND;
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D1);
      combinedDomainXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      xYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(60.45633557961292);
      xYPlot0.isRangeMinorGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("&5on!B?K\"\"");
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(valueAxisArray0[0]);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getDomainGridlineStroke();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0);
      Stroke stroke0 = spiderWebPlot0.getAxisLineStroke();
      combinedDomainXYPlot1.setRangeMinorGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.getRangeAxisLocation((-1));
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 10, 10, 10, false, false, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(489, 489, 2.302585092994046, 3490.442765745, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      rectangle0.grow(4, (-768));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle0, (List) null);
      combinedRangeXYPlot0.getDomainAxisEdge(221);
      combinedRangeXYPlot0.setDomainCrosshairValue((double) 1024, true);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      piePlot3D0.getBaseSectionOutlineStroke();
      combinedRangeXYPlot0.setRangeGridlineStroke(xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      combinedRangeXYPlot0.render(graphics2D0, rectangle0, 17, plotRenderingInfo0, categoryCrosshairState0);
      combinedRangeXYPlot0.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 2, chartRenderingInfo0);
      chartRenderingInfo0.clear();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 0.5F);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area1.getBounds2D();
      area1.createTransformedArea(affineTransform0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis1, false);
      combinedDomainXYPlot0.getDataset();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("^-:/e", 2.5E7, 3490.442765745, 500);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPointerAnnotation0, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1375), 200, 10, 2121, 4, 15, true, true, true, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(680, 420, chartRenderingInfo1);
      bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Rectangle2D rectangle2D0 = rectangle2D_Double1.getBounds2D();
      dateAxis1.DEFAULT_TICK_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      // Undeclared exception!
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D_Double0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.canSelectByRegion();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-2885.528831389006));
      Area area0 = new Area(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area1.getBounds2D();
      area0.createTransformedArea(affineTransform0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawAxes((Graphics2D) null, rectangle2D0, rectangle2D0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainXYPlot0);
      combinedDomainXYPlot0.setDomainCrosshairPaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      IntervalMarker intervalMarker0 = new IntervalMarker(865.103, (-157.9228));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle rectangle0 = new Rectangle(defaultCaret0);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, defaultCaret0);
      AxisSpace axisSpace1 = combinedDomainXYPlot0.calculateDomainAxisSpace(graphics2D0, defaultCaret0, axisSpace0);
      combinedDomainXYPlot0.calculateDomainAxisSpace(graphics2D0, rectangle0, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.setAutoPopulateSeriesShape(false);
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) highLowRenderer0, true);
      TextTitle textTitle0 = new TextTitle();
      textTitle0.clone();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.05, 10, 10, 1274.2157547803, 2.5E-6, textTitle0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedDomainXYPlot0.getDataset();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedRangeXYPlot0.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      Rectangle rectangle0 = new Rectangle();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.drawBackground((Graphics2D) null, rectangle2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.render((Graphics2D) null, rectangle2D_Float0, 497, plotRenderingInfo0, (CrosshairState) null);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
      combinedDomainXYPlot0.getRangeAxisLocation(0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 0.0F, 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D_Float0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 10, 10, 10, false, false, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("SAVE", xYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart("ZOOM_IN_BOTH", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart2.createBufferedImage(15, 300);
      RescaleOp rescaleOp0 = new RescaleOp(300, 0.5F, renderingHints0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      BufferedImage bufferedImage2 = colorConvertOp0.filter(bufferedImage0, bufferedImage1);
      Graphics2D graphics2D0 = bufferedImage2.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-538.5F), 3408.0F, (-1061.6844F), 768);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot2.getDataset();
      combinedDomainXYPlot1.clearRangeMarkers((-153));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot2.setQuadrantPaint((-1156), combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-1156) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-2464), 10);
      waferMapDataset0.hasListener(combinedRangeCategoryPlot0);
      SystemColor systemColor0 = SystemColor.control;
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(systemColor0, waferMapDataset0);
      xYPlot0.datasetChanged(datasetChangeEvent0);
      xYPlot0.removeDomainMarker((-2364), (Marker) intervalMarker0, layer0, false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      xYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(3, 10);
      combinedDomainXYPlot0.isNotify();
      SystemColor systemColor0 = SystemColor.control;
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(waferMapDataset0, waferMapDataset0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      IntervalMarker intervalMarker0 = new IntervalMarker(4.0, 893.0, thermometerPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      valueAxisArray0[1] = (ValueAxis) numberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Color color0 = Color.GREEN;
      combinedRangeXYPlot0.setDomainGridlinePaint(color0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-2438);
      Layer layer0 = Layer.BACKGROUND;
      int int1 = (-2136);
      combinedDomainXYPlot0.getDomainAxisLocation((-2136));
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      MockDate mockDate0 = new MockDate((-2438), 10, (-2438), 10, 10, (-2438));
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setDomainGridlinePaint(minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      byte[][] byteArray0 = new byte[9][6];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)5;
      byteArray1[2] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)5;
      byteArray2[4] = (byte)5;
      byteArray2[5] = (byte)6;
      byteArray2[6] = (byte)5;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)5;
      byteArray3[2] = (byte)6;
      byteArray3[3] = (byte)5;
      byteArray3[4] = (byte)0;
      byteArray3[5] = (byte)5;
      byteArray3[6] = (byte)6;
      byteArray3[7] = (byte)0;
      byteArray3[8] = (byte)5;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)5;
      byteArray4[1] = (byte)5;
      byteArray4[2] = (byte)6;
      byteArray4[3] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)5;
      byteArray5[1] = (byte)6;
      byteArray5[2] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)6;
      byteArray6[1] = (byte)0;
      byteArray6[2] = (byte)113;
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)6;
      byteArray6[5] = (byte)6;
      byteArray6[6] = (byte)96;
      byteArray6[7] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)113;
      byteArray7[1] = (byte)5;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[0];
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[6];
      byteArray9[0] = (byte)6;
      byteArray9[1] = (byte)113;
      byteArray9[2] = (byte)6;
      byteArray9[3] = (byte)113;
      byteArray9[4] = (byte)113;
      byteArray9[5] = (byte)6;
      byteArray0[8] = byteArray9;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((-2438), byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeMarkers((Layer) null);
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point point0 = new Point();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateTitle dateTitle0 = new DateTitle();
      Stack<VectorRenderer> stack0 = new Stack<VectorRenderer>();
      combinedRangeXYPlot0.getDomainAxisEdge(0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.canSelectByRegion();
      AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(2404);
      xYPlot0.setDomainAxisLocation(axisLocation0, true);
      xYPlot0.clearRangeMarkers();
      xYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = Color.darkGray;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, true);
      xYPlot1.getRangeAxisCount();
      combinedRangeXYPlot0.getRangeAxisEdge();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2486.510695773588), 1.0F);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      xYPlot0.setDomainAxis((ValueAxis) cyclicNumberAxis0);
      xYPlot0.canSelectByRegion();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Paint paint0 = lineRenderer3D0.getWallPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1886), paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-1886) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      Paint paint0 = piePlot3D0.getLabelShadowPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(integer0, paint0, piePlot3D0.DEFAULT_OUTLINE_STROKE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantPaint(10, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (10) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.getDataset();
      combinedDomainXYPlot1.clearRangeMarkers((-2136));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setQuadrantPaint(1801, numberAxis0.DEFAULT_TICK_MARK_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1801) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-624), (-2969), (-624), 1724, 454, 15, false, false, false, false, false, false, false);
      combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      dateAxis1.setMinorTickMarkInsideLength(0.0F);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis1, false);
      combinedDomainXYPlot0.getDataset();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo1.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      double double0 = 448.275048176;
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 2105.419, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.clearDomainMarkers(10);
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.drawRangeMarkers((Graphics2D) null, (Rectangle2D) null, 10, layer0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0.95F, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 810.3);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0.0, (-1344.9814471));
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(810.3);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      Layer layer2 = Layer.BACKGROUND;
      Locale locale0 = Locale.CANADA_FRENCH;
      NumberAxis.createStandardTickUnits(locale0);
      xYPlot0.removeRangeMarker(36, (Marker) intervalMarker0, layer0, true);
      xYPlot0.getLegendItems();
      xYPlot0.setRangeZeroBaselineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_STROKE);
      xYPlot0.getRangeAxis(1);
      xYPlot0.getWeight();
      Rectangle rectangle0 = new Rectangle(1, (-1703));
      xYPlot0.drawRangeMarkers((Graphics2D) null, rectangle0, (-441), layer1);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker0 = new IntervalMarker(1461.8751517, (-1132.006761678099));
      xYPlot0.removeRangeMarker(300, (Marker) intervalMarker0, layer0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.getRangeAxis((-4207));
      combinedDomainXYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis1 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1);
      combinedDomainXYPlot0.setDomainAxis(1, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.clearRangeMarkers(0);
      JFreeChart jFreeChart0 = new JFreeChart("_nR eKZN}Hy0h", combinedDomainXYPlot1);
      combinedDomainXYPlot1.setDomainCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-3511.5569));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot1.getRenderer();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis1 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1);
      combinedDomainXYPlot0.setDomainAxis(1, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.clearRangeMarkers(0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot1.DEFAULT_LEGEND_ITEM_CIRCLE);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      combinedDomainXYPlot2.removeAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      Day day0 = null;
      try {
        day0 = new Day(0, 2, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainAxisEdge((-2438));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getDomainZeroBaselinePaint();
      Color color0 = Color.green;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot1.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, color0);
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), 1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(448.275048176, 10.0);
      combinedDomainXYPlot0.addDomainMarker((-3376), (Marker) intervalMarker1, layer0, false);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(combinedDomainXYPlot1.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.getRangeAxisEdge();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setDomainAxisLocation((-4036), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getDomainZeroBaselinePaint();
      Color color0 = Color.green;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, color0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      IntervalMarker intervalMarker0 = new IntervalMarker((byte) (-90), 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker((int) (byte)10, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setDomainAxisLocation(360, axisLocation0, false);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      combinedDomainXYPlot0.setRangePannable(true);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Null 'linePaint' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRangePannable(false);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(dateAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(true);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RingPlot ringPlot0 = new RingPlot();
      xYPlot0.getDomainAxis(10);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 0.5F;
      floatArray0[1] = (float) 880;
      xYPlot0.setDomainZeroBaselineVisible(true);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-2640), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3928, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      Rectangle rectangle0 = new Rectangle(200, 200, 870, 5009);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      fixedHeightLayoutCache0.getPathForRow(3074);
      fixedHeightLayoutCache0.getBounds((TreePath) null, rectangle0);
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      variableHeightLayoutCache0.getBounds((TreePath) null, rectangle0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
      xYPlot0.drawZeroRangeBaseline(graphics2D0, rectangle2D_Double0);
      xYPlot0.getDomainCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, defaultCaret0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis1, false);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(893);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 893, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      XYAnnotation xYAnnotation0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-2640), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3928, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAxes(graphics2D0, rectangle2D1, rectangle2D1, plotRenderingInfo0);
      Paint paint0 = jFreeChart0.getBackgroundPaint();
      xYPlot0.setOutlinePaint(paint0);
      xYPlot0.getRendererCount();
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(4575, layer0);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(453, (-1));
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(rectangle2D0, waferMapDataset0);
      xYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.drawDomainMarkers(graphics2D0, rectangle2D_Double0, 10, layer0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 9, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeAxis(54, (ValueAxis) null);
      NumberAxis numberAxis0 = new NumberAxis();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      DateTitle dateTitle0 = new DateTitle();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeAxis(29, (ValueAxis) null, true);
      combinedRangeXYPlot0.getDomainAxis(10);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      waferMapRenderer0.getLegendCollection();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Null 'axisIndex' argument.";
      DateAxis dateAxis0 = new DateAxis("Null 'axisIndex' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setDomainPannable(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'axisIndex' argument.");
      xYPlot0.setRangeAxis(10, (ValueAxis) periodAxis0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      NumberAxis numberAxis0 = new NumberAxis();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      NumberAxis numberAxis1 = new NumberAxis();
      valueAxisArray0[1] = (ValueAxis) numberAxis1;
      valueAxisArray0[2] = (ValueAxis) numberAxis0;
      xYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      ModuloAxis moduloAxis0 = new ModuloAxis("M{#IO27>b.'0~", (Range) null);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(histogramDataset0, moduloAxis0, moduloAxis0, cyclicXYItemRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getEntityCollection();
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(1225);
      xYPlot0.isRangeCrosshairVisible();
      // Undeclared exception!
      try { 
        xYPlot0.removeAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0);
      combinedDomainXYPlot0.addRangeMarker(467, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.getDataset();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      piePlot3D0.getBaseSectionOutlineStroke();
      combinedDomainXYPlot0.addRangeMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers(3215);
      ValueMarker valueMarker0 = new ValueMarker(10.0);
      combinedDomainXYPlot0.addRangeMarker(467, (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setDomainAxis(467, (ValueAxis) null);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.clearRangeMarkers(873);
      JFreeChart jFreeChart0 = new JFreeChart("Use$CVY$G;hl-Q t9f@", combinedDomainXYPlot1);
      combinedDomainXYPlot0.setDomainCrosshairPaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot1.removeDomainMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Shape shape0 = defaultPolarItemRenderer0.getBaseShape();
      Color color0 = (Color)LabelBlock.DEFAULT_PAINT;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(shape0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, (Paint) null, color0);
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      LinkedList<XYShapeRenderer> linkedList0 = new LinkedList<XYShapeRenderer>();
      combinedDomainXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D_Double0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[0] = (byte)6;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[1] = (byte) (-81);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(3879.10546875, (byte) (-81), (-1284.6646869637163), 10);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      AxisLocation axisLocation1 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation1, false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.removeAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(1225);
      // Undeclared exception!
      try { 
        xYPlot0.removeAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10.0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 0.0F, renderingHints0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 467);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer1 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(810.3, 1.0F);
      Layer layer2 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, 1);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      Layer layer3 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(1, (Marker) valueMarker0, layer2, true);
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedDomainXYPlot0.getRangeAxis(4827);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer1);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-262.345083678), (-262.345083678));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.clearRangeMarkers(1219);
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_TICK_MARK_STROKE;
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 2105.419, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.clearDomainMarkers(10);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-4207), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D1, 10, xYPlot0.DEFAULT_CROSSHAIR_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 0.0F, 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      NumberAxis3D numberAxis3D1 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D1);
      combinedDomainXYPlot0.clearDomainMarkers(2347);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(false, 1.0F);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValueDataset0, defaultKeyedValueDataset0);
      MockDate mockDate0 = new MockDate();
      XYSeries xYSeries0 = new XYSeries(true, true, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      JFreeChart jFreeChart0 = new JFreeChart("{0pc8r^m%qW9R@c1!l", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-993), (-876), (-876), (-876), (-876), (-876), true, true, true, true, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, 0.05, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D1.DEFAULT_TICK_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getDomainZeroBaselinePaint();
      Color color0 = Color.green;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, color0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      IntervalMarker intervalMarker0 = new IntervalMarker((byte) (-90), 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker((int) (byte)10, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(360, axisLocation0, false);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.canSelectByRegion();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.clearRangeAxes();
      CategoryMarker categoryMarker0 = new CategoryMarker(vectorRenderer0.ZERO);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainXYPlot0.addDomainMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxisForDataset(0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot1.DEFAULT_CROSSHAIR_PAINT, valueAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      combinedDomainXYPlot1.addDomainMarker(232, (Marker) categoryMarker0, layer0, true);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2213);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2213, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex'Cargumen_.", font0, xYPlot0, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue((-1613.897665408239), true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.setDataset(870, (XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.setDataset(500, (XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearAnnotations();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color color1 = Color.darkGray;
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.getQuadrantPaint(2);
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(xYBubbleRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedDomainXYPlot0.indexOf(categoryTableXYDataset0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      xYPlot0.setBackgroundImageAlignment((-1966));
      BufferedImage bufferedImage0 = new BufferedImage(10, 2, 10);
      bufferedImage0.createGraphics();
      JScrollPane jScrollPane0 = new JScrollPane();
      double double0 = (-1565.1);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1565.1), "qukJID");
      cyclicNumberAxis0.setLowerBound((-1275.64));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      candlestickRenderer0.getLegendTextPaint(13);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isDomainMinorGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(1);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(1);
      Locale locale0 = Locale.ITALIAN;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-3.0));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Paint paint0 = combinedRangeXYPlot0.getRangeCrosshairPaint();
      combinedRangeXYPlot0.setDomainCrosshairPaint(paint0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      int int0 = new Integer(10);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("ItemLabelAnchor.OUTSIDE8", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart1 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      chartRenderingInfo0.getPlotInfo();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(10, 0.5F, 1.0, 0.0F, 8.0, jFreeChart0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.drawAxes(graphics2D0, rectangle2D_Float0, rectangle2D_Float0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawAxes(graphics2D0, (Rectangle2D) null, (Rectangle2D) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 1.0E-8, numberAxis0, numberAxis0.DEFAULT_TICK_MARK_STROKE, numberAxis0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 2, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      XYPlot xYPlot1 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      PlotOrientation plotOrientation0 = xYPlot1.getOrientation();
      // Undeclared exception!
      try { 
        xYPlot0.drawDomainCrosshair(graphics2D0, rectangle0, plotOrientation0, 0, (ValueAxis) null, xYPlot1.DEFAULT_CROSSHAIR_STROKE, xYPlot1.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      ValueMarker valueMarker0 = new ValueMarker(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0, false);
      xYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) numberAxis0);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.clearRangeMarkers(873);
      JFreeChart jFreeChart0 = new JFreeChart("Use$CVY$G;hl-Q t9f@", xYPlot0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.clearDomainMarkers(2347);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(false, 1.0F);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValueDataset0, defaultKeyedValueDataset0);
      MockDate mockDate0 = new MockDate();
      XYSeries xYSeries0 = new XYSeries(true, true, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      combinedDomainXYPlot0.indexOf(xYSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangePannable();
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot2.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(2347);
      combinedDomainXYPlot2.setParent(combinedDomainXYPlot0);
      JFreeChart jFreeChart0 = new JFreeChart("C\"dtXgzON", combinedDomainXYPlot2);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      TimeZone timeZone0 = TimeZone.getTimeZone("&Bj^<uLS,U");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      combinedRangeXYPlot0.getRendererForDataset(timeTableXYDataset0);
      combinedRangeXYPlot0.setDataset(500, (XYDataset) timeTableXYDataset0);
      xYPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedDomainXYPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = 18;
      IntervalMarker intervalMarker0 = new IntervalMarker(18, 1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.clearRangeAxes();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(395);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 395, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.setRangeTickBandPaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.isDomainZoomable();
      int int0 = 873;
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      String string0 = null;
      MockSpinnerDateModel mockSpinnerDateModel0 = null;
      try {
        mockSpinnerDateModel0 = new MockSpinnerDateModel();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal value
         //
         verifyException("javax.swing.SpinnerDateModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.setRangeTickBandPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedRangeXYPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1000.0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((-471), (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, Double.POSITIVE_INFINITY);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-8);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) intervalMarker0, layer0, false);
      xYPlot0.getLegendItems();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getRangeAxis(2344);
      combinedDomainXYPlot0.getWeight();
      xYPlot0.setRangeCrosshairValue((double) 10);
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue((-1330.9));
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      jFreeChart0.getBackgroundPaint();
      // Undeclared exception!
      try { 
        xYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(500, 500);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 46.7315F, (-538.5F), 500);
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 1262;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxis((-2133), 1262);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("org.jfree.data.general.DefaultPieDataset");
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(0.95F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-238));
      axisLocation0.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1.0E10);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      JFreeChart jFreeChart0 = new JFreeChart("category", combinedDomainXYPlot0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxis((-238), 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RingPlot ringPlot0 = new RingPlot();
      xYPlot0.getDomainAxis(10);
      XYPlot xYPlot1 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) null);
      xYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeMinorGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setForegroundAlpha((-942.984F));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, false);
      xYPlot0.clearDomainMarkers();
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.setDomainPannable(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis3D0);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("]Hl&T^+|");
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1000.0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((-471), (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      xYItemRendererArray0[1] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      logarithmicAxis0.setUpperBound(0.0);
      xYItemRendererArray0[2] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYPlot0.setRenderers(xYItemRendererArray0);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.isRangePannable();
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      JFreeChart jFreeChart0 = new JFreeChart("C\"dtXgzON", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot0.panRangeAxes(1.0E-100, plotRenderingInfo0, point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Vector<XYDrawableAnnotation> vector0 = new Vector<XYDrawableAnnotation>();
      combinedDomainXYPlot0.drawDomainTickBands((Graphics2D) null, (Rectangle2D) null, vector0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 1257, 414.3031647, 3490.442765745, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      rectangle0.grow(1257, 194);
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle0, (List) null);
      combinedRangeXYPlot0.getDomainAxisEdge((-1));
      combinedRangeXYPlot0.setDomainCrosshairValue((-167.2), true);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      Stroke stroke0 = piePlot3D0.getBaseSectionOutlineStroke();
      combinedRangeXYPlot0.setRangeGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = Color.darkGray;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, true);
      xYPlot1.getRangeAxisCount();
      combinedRangeXYPlot0.getRangeAxisEdge();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2486.510695773588), 1.0F);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.getPlotInfo();
      xYPlot0.setDomainAxis((ValueAxis) cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      int int0 = 2;
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.zoomDomainAxes(0.0, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      byte[] byteArray0 = null;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((-2411), (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RingPlot ringPlot0 = new RingPlot();
      xYPlot0.getDomainAxis(10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(880, 1.0E-8);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      Point2D.Float point2D_Float0 = new Point2D.Float(880, 0.0F);
      combinedDomainXYPlot0.zoomDomainAxes((double) 2.0F, plotRenderingInfo0, (Point2D) point2D_Float0, true);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(500, 455);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.configureDomainAxes();
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot1.setRangeAxis((ValueAxis) dateAxis0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.clearRangeMarkers(3);
      JFreeChart jFreeChart0 = new JFreeChart("C\"dtXgzON", xYPlot0);
      xYPlot0.getDomainZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addRangeMarker(79, (Marker) null, layer0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addRangeMarker(10, (Marker) null, layer0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      piePlot3D0.getLabelOutlineStroke();
      Color color0 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F);
      combinedRangeXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, (Layer) null, false);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((-1541), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ApGQ>iiadi");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDomainCrosshairValue();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(72.0, (-710.2));
      combinedRangeCategoryPlot0.removeRangeMarker((Marker) intervalMarker0, (Layer) null);
      combinedDomainXYPlot0.clearDomainAxes();
      AxisLocation axisLocation1 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation1);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setRangeAxisLocation(500, axisLocation0);
      byte[] byteArray0 = new byte[0];
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(5413, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of components must  be at least 1
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DateAxis dateAxis0 = new DateAxis();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(500);
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, dateAxis0, dateAxis0, cyclicXYItemRenderer0);
      xYPlot0.getDataset();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addRangeMarker(221, (Marker) categoryMarker0, layer0);
      double double0 = 10.0;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo((-411));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearDomainAxes();
      xYPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.clearDomainMarkers(2347);
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(false, 1.0F);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValueDataset0, defaultKeyedValueDataset0);
      MockDate mockDate0 = new MockDate();
      XYSeries xYSeries0 = new XYSeries(true, true, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      combinedDomainXYPlot0.indexOf(xYSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangePannable();
      combinedDomainXYPlot0.clearDomainAxes();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      axisLocation0.getOpposite();
      combinedDomainXYPlot1.setDataset((XYDataset) xYSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, 3);
      combinedRangeXYPlot0.setDataset((XYDataset) dynamicTimeSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-164), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(620.2672770612, 60.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0F);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Paint paint0 = meterPlot0.getNeedlePaint();
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(paint0);
      combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.handleClick(488, 500, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(10);
      Stack<XYDataImageAnnotation> stack0 = new Stack<XYDataImageAnnotation>();
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, stack0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      int int0 = (-906);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeDomainMarker((-906), (Marker) null, layer0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[5];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Null 'linePaint' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(dateAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(1);
      axisLocation0.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2199.256166255528);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangeAxisLocation(10, axisLocation0, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-1045.3084257398));
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot1.configureRangeAxes();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer1);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairValue((double) (-2446));
      combinedDomainXYPlot0.getRangeAxisCount();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(6051);
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 3064.435148);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.labels.StandardCrosshairLabelGenerator", zoneInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.setRangeAxisLocation(6051, axisLocation1, false);
      IntervalMarker intervalMarker0 = new IntervalMarker((-32.52730904746), Double.POSITIVE_INFINITY);
      combinedDomainXYPlot1.getFixedRangeAxisSpace();
      combinedDomainXYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot2.removeRangeMarker(1, (Marker) intervalMarker0, layer1);
      combinedDomainXYPlot2.getSeriesRenderingOrder();
      combinedDomainXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.setDomainAxis(1, (ValueAxis) numberAxis0);
      combinedDomainXYPlot0.getRangeAxisCount();
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = null;
      stringArray0[7] = null;
      stringArray0[4] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(symbolAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      vector0.ensureCapacity(6);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes((-2446), vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      byte[] byteArray0 = new byte[7];
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.setNotify(false);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2213);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2213, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getPlotType();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      System.setCurrentTimeMillis(420);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("ZOOM_IN_BOTH");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      logarithmicAxis0.setUpperBound(0.0);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.mapDatasetToDomainAxis(200, 15);
      combinedDomainXYPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation0);
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation1, false);
      combinedRangeXYPlot0.getDataset(10);
      combinedRangeXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1648.0, 0.0F);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'axisIndex' argument.", font0, xYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-4207), 574, (-2640), 15, 870, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3928, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = xYPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAxes(graphics2D0, rectangle2D1, rectangle2D1, plotRenderingInfo0);
      xYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LogAxis logAxis0 = new LogAxis("A");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("org.jfree.data.general.DefaultPieDataset");
      xYBoxAndWhiskerRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      logarithmicAxis0.setPositiveArrowVisible(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(0.95F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYBoxAndWhiskerRenderer0.DEFAULT_SHAPE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      MockDate mockDate0 = new MockDate((-335L));
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation1);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0E-100, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.equals(xYShapeAnnotation0);
      xYPlot0.zoomDomainAxes((double) xYBoxAndWhiskerRenderer0.ZERO, plotRenderingInfo0, (Point2D) null);
      xYPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) null);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, 448.275048176, 2.302585092994046, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      VariableHeightLayoutCache variableHeightLayoutCache0 = new VariableHeightLayoutCache();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      Hashtable<DefaultKeyedValuesDataset, DefaultPieDataset> hashtable0 = new Hashtable<DefaultKeyedValuesDataset, DefaultPieDataset>();
      JTree jTree0 = new JTree(hashtable0);
      synthTreeUI0.getClosestPathForLocation(jTree0, 10, 32);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      Rectangle rectangle0 = new Rectangle(15, (-762), 10, 411);
      fixedHeightLayoutCache0.getBounds((TreePath) null, rectangle0);
      variableHeightLayoutCache0.getBounds((TreePath) null, (Rectangle) null);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LogAxis logAxis0 = new LogAxis("A");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle2D_Float0);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYDifferenceRenderer0.setItemLabelAnchorOffset(1.0F);
      xYPlot0.clearSelection();
      xYPlot0.getLegendItems();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 10, 10, 10, 10, 10, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart("SAVE", xYPlot0);
      JFreeChart jFreeChart2 = new JFreeChart("ZOOM_IN_BOTH", xYPlot0);
      jFreeChart2.createBufferedImage(15, 300);
      xYPlot0.getFixedDomainAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(15);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0.95F, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 810.3);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0.0, (-1344.9814471));
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(3.1520078805761735);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(36, (Marker) intervalMarker0, layer0, true);
      xYPlot0.getLegendItems();
      xYPlot0.setRangeZeroBaselineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_STROKE);
      xYPlot0.getRangeAxis(1);
      xYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((-4487.670731), 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.getRangeAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateAxis dateAxis0 = new DateAxis();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, dateAxis0, dateAxis0, xYBarRenderer0);
      xYPlot0.getSeriesCount();
      xYPlot0.setDomainGridlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.getDataRange(dateAxis0);
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("org.jfree.data.general.DefaultPieDataset");
      xYBoxAndWhiskerRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      logarithmicAxis0.setPositiveArrowVisible(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(0.95F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYBoxAndWhiskerRenderer0.DEFAULT_SHAPE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      MockDate mockDate0 = new MockDate((-335L));
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation1);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0E-100, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.equals(xYShapeAnnotation0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.data.general.DefaultPieDataset", logarithmicAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-3928), 4, 4, 4, 10, (-2446), true, true, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      xYPlot0.isDomainPannable();
      xYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      Boolean boolean0 = new Boolean(true);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getLabelOutlineStroke();
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(categoryAxis3D0, defaultMultiValueCategoryDataset0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 2.0F, true);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      System.setCurrentTimeMillis(10);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logarithmicAxis0);
      Stroke stroke1 = combinedDomainXYPlot1.getDomainMinorGridlineStroke();
      combinedDomainXYPlot1.setDomainMinorGridlineStroke(stroke1);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
      combinedDomainXYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(883, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(10, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.category.SlidingCategoryDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainAxis(500, (ValueAxis) logarithmicAxis0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "%}84RM`6=j}@8vl";
      stringArray0[1] = "%}84RM`6=j}@8vl";
      stringArray0[2] = "%}84RM`6=j}@8vl";
      stringArray0[3] = "org.jfree.chart.labels.AbstractPieItemLabelGenerator";
      stringArray0[4] = "%}84RM`6=j}@8vl";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.labels.AbstractPieItemLabelGenerator", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers(500);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(logarithmicAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeGridlinesVisible();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      xYPlot0.setDomainAxis(500, (ValueAxis) numberAxis0);
      xYPlot0.getRangeAxisCount();
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "";
      String string0 = "-!h|F(G}g.(sBr";
      stringArray0[2] = "-!h|F(G}g.(sBr";
      stringArray0[3] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(70, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      xYPlot0.setDomainPannable(false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2, 0, 10, (-957), 6, 3, true, true, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      System.setCurrentTimeMillis(0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("The key (");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getQuadrantPaint(1096);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1096) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis1);
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      System.setCurrentTimeMillis(1);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("#_j\"Cc%<T4Z");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setDomainMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesStroke(878);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getBackgroundImage();
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      JTextField jTextField0 = new JTextField();
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextField0.new AccessibleJTextComponent();
      Layer layer0 = Layer.BACKGROUND;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 1679);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, (-541.07328067));
      combinedRangeXYPlot0.zoomRangeAxes((double) 10, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(625.52, 1.0F);
      combinedDomainXYPlot0.addRangeMarker(1679, (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(false);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(3490.442765745, 0.0);
      combinedDomainXYPlot0.zoomDomainAxes((-1734.917), plotRenderingInfo0, (Point2D) point2D_Double0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
      xYItemRendererArray0[0] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      Point point0 = new Point(1306, 1306);
      combinedRangeXYPlot0.zoomRangeAxes((-1443.1597580068), plotRenderingInfo0, (Point2D) point0);
      combinedRangeXYPlot0.clearDomainMarkers(21);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Point2D.Double point2D_Double0 = new Point2D.Double((-812.5373268), 10);
      combinedRangeXYPlot0.zoomRangeAxes((-812.5373268), plotRenderingInfo0, (Point2D) point2D_Double0, false);
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      Locale locale0 = Locale.ITALIAN;
      AxisLocation axisLocation1 = combinedDomainXYPlot0.getRangeAxisLocation((-2446));
      axisLocation1.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-1.0));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation2 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setRangeAxisLocation(10, axisLocation2, false);
      combinedDomainXYPlot1.clearRangeMarkers(1351);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.getQuadrantPaint((-2446));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-2446) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      Color color0 = Color.yellow;
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(color0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.setDomainAxis(893, (ValueAxis) null);
      combinedRangeXYPlot0.getRangeAxisCount();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "org.jfree.chart.labels.AbstractPieItemLabelGenerator";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.labels.AbstractPieItemLabelGenerator", stringArray0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(Double.NaN);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(symbolAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes((-4384), vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1589.307050497546, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.getEntityCollection();
      chartRenderingInfo0.getPlotInfo();
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.setDomainAxis((ValueAxis) periodAxis0);
      combinedRangeXYPlot1.getDomainGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.setFollowDataInSubranges(true);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      xYPlot0.setDomainAxis(2, valueAxis0);
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.getRangeAxisCount();
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[#3L/";
      stringArray0[1] = "[#3L/";
      stringArray0[2] = null;
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      combinedDomainXYPlot0.plotChanged((PlotChangeEvent) null);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(10, vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(500, 2, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot0.setRangeZeroBaselineStroke(cyclicNumberAxis1.DEFAULT_ADVANCE_LINE_STROKE);
      xYPlot2.getRangeAxis(500);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1571.66375));
      candlestickRenderer0.getSeriesStroke((-1994));
      // Undeclared exception!
      try { 
        xYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(3999.3247697524444);
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("");
      xYBoxAndWhiskerRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("{0}");
      logarithmicAxis0.setPositiveArrowVisible(true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(2.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYPlot1.DEFAULT_CROSSHAIR_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_STROKE);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      XYTextAnnotation xYTextAnnotation0 = new XYTextAnnotation("", 0.8, 1.0F);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYTextAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYTextAnnotation0);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0E-8, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.equals(xYPlot0);
      combinedDomainXYPlot0.zoomDomainAxes((double) 2.0F, plotRenderingInfo0, (Point2D) null);
      xYPlot1.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, xYPlot1.DEFAULT_CROSSHAIR_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, logarithmicAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      xYPlot1.removeDomainMarker((Marker) categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0, layer0);
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(18, 1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeDomainMarker(18, (Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getDomainAxis();
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable(500, (byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1589.307050497546, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1589.307050497546, false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset((-6));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -6 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset(4251);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 4251 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.getRangeAxisForDataset(4862);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 4862 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRenderers((XYItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      double double0 = 0.0;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.clearRangeAxes();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("");
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot1.getDomainAxisCount();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation((-233));
      combinedDomainXYPlot1.setDomainAxisLocation(4, axisLocation0);
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYSeries xYSeries0 = new XYSeries(xYDotRenderer0.ZERO, false, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.indexOf(xYSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangePannable();
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot2.getRangeCrosshairStroke();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      axisLocation0.getOpposite();
      combinedDomainXYPlot2.getDomainCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-98.49828933855449));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Indices must be unique.");
      DateAxis dateAxis0 = new DateAxis();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      statisticalLineAndShapeRenderer0.getLegendShape(500);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setRangeAxisLocation(2546, axisLocation0, true);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.getQuadrantPaint(0);
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(categoryPlot0.DEFAULT_BACKGROUND_PAINT);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedDomainXYPlot0.indexOf(categoryTableXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangePannable();
      combinedDomainXYPlot1.clearDomainAxes();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot1.setDomainAxisLocation(axisLocation1);
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, true);
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) highLowRenderer0, true);
      DateTitle dateTitle0 = new DateTitle();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      cyclicNumberAxis0.clone();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      combinedDomainXYPlot0.setAxisOffset(xYPlot0.DEFAULT_INSETS);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      xYPlot0.setRangeAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-2437);
      Layer layer0 = Layer.BACKGROUND;
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2136));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MockDate mockDate0 = new MockDate((-2437), 10, (-2437), 10, 10, (-2437));
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("g$mNE<ll+E}\t");
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-2136), (ValueAxis) numberAxis3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.setDomainAxis((ValueAxis) null);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot0.panDomainAxes(1.0F, plotRenderingInfo0, point2D_Double0);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateTitle dateTitle0 = new DateTitle();
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      DateAxis dateAxis0 = new DateAxis();
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        xYPlot0.setDomainAxis((-2512), valueAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getPlotType();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      int int0 = 270;
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(270, axisLocation0, true);
      combinedRangeXYPlot0.getDataset(270);
      Font font0 = Font.decode("Combined Range XYPlot");
      JFreeChart jFreeChart0 = new JFreeChart("Combined Range XYPlot", font0, combinedRangeXYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = null;
      try {
        colorConvertOp0 = new ColorConvertOp((ColorSpace) null, renderingHints0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // ColorSpace cannot be null
         //
         verifyException("java.awt.image.ColorConvertOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(32.0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot2.addRangeMarker((Marker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getDomainAxisEdge((-1));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(10);
      combinedDomainXYPlot0.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation1, true);
      MockDate mockDate0 = new MockDate((-2449));
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Stroke stroke0 = defaultPolarItemRenderer0.getItemOutlineStroke((-1), (-1), false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1569.272536891866, (double) minMaxCategoryRenderer0.ZERO, 1.0F, (-2449), stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0);
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Combined_Domain_XYPlot";
      stringArray0[1] = "urr";
      stringArray0[2] = "Combined_Domain_XYPlot";
      stringArray0[3] = "Combined_Domain_XYPlot";
      SymbolAxis symbolAxis0 = new SymbolAxis("urr", stringArray0);
      valueAxisArray0[0] = (ValueAxis) symbolAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1504.8289));
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("uuJz5;pvq3-I");
      valueAxisArray0[2] = (ValueAxis) logarithmicAxis0;
      String string0 = "org.jfree.data.time.DynamicTimeSeriesCollection";
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone((-2372), "Combined_Domain_XYPlot", 116, (-2449), 1, 10, 315, 500, 740, 1072, 756, 2772, (-2449));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month 116
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      combinedRangeXYPlot0.getIndexOf(xYSplineRenderer0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      double double0 = 1903.0;
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation((-1043));
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-1043), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      Year year0 = new Year();
      year0.getEnd();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(year0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setDomainAxisLocation(9999, axisLocation1);
      combinedDomainXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, deviationRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1, 500, (RenderingHints) null);
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, Double.POSITIVE_INFINITY);
      xYPlot1.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot0.getDomainAxisCount();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(768);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-233), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot1.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot2.getRangeAxisForDataset(2080);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 2080 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, deviationRenderer0);
      xYBubbleRenderer0.setAutoPopulateSeriesShape(false);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1, 500, (RenderingHints) null);
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, Double.POSITIVE_INFINITY);
      xYPlot1.addRangeMarker((Marker) intervalMarker0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot0.getDomainAxisCount();
      combinedDomainXYPlot0.canSelectByPoint();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getPlotType();
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      LinkedList<AxisLocation> linkedList0 = new LinkedList<AxisLocation>();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      RectangleInsets rectangleInsets0 = categoryAxis3D0.getLabelInsets();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getPlotType();
      double double0 = Double.NaN;
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      numberAxis3D0.setMinorTickMarksVisible(false);
      Arc2D.Double arc2D_Double0 = null;
      try {
        arc2D_Double0 = new Arc2D.Double(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: 10
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      axisLocation0.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicStroke basicStroke0 = new BasicStroke(2262.0F);
      combinedDomainXYPlot0.setDomainCrosshairStroke(basicStroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(385.8032404, (-103.695294580008), 10, 1.0F);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0, true);
      combinedDomainXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation1, false);
      MockDate mockDate0 = new MockDate(10);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation1);
      combinedDomainXYPlot0.setRangeCrosshairValue((-2171.5), true);
      combinedDomainXYPlot0.getDatasetCount();
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainTickBandPaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(2069.721489072, 1.0F);
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer2 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainAxes();
      combinedRangeCategoryPlot0.getRangeAxisLocation(3);
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, 1481.0);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.getRangeAxis(500);
      xYPlot0.setDomainGridlineStroke(xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot1.setDomainCrosshairVisible(false);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)Plot.DEFAULT_OUTLINE_STROKE;
      combinedRangeXYPlot0.setDomainGridlineStroke(basicStroke0);
      combinedRangeXYPlot0.clearRangeMarkers();
      Layer layer0 = Layer.BACKGROUND;
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      boolean boolean1 = new Boolean(false);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getDomainAxisEdge(3189);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getLabelOutlineStroke();
      combinedDomainXYPlot0.setRangeCrosshairStroke(ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Object object0 = combinedDomainXYPlot0.clone();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(object0, defaultMultiValueCategoryDataset0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(90.0, true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(241.395, 10);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot1.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      LinkedList<AxisLocation> linkedList0 = new LinkedList<AxisLocation>();
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(linkedList0, (Object[][][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      combinedRangeXYPlot0.clone();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "1WI#r}b";
      SymbolAxis symbolAxis0 = new SymbolAxis("1WI#r}b", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      symbolAxis0.setUpperMargin(1.0F);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      TextTitle textTitle0 = new TextTitle("1WI#r}b");
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.05, 1.0F, textTitle0, rectangleAnchor0);
      vector0.add(xYTitleAnnotation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(10, vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Indices must be Integer instances.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      linkedList0.push(defaultTableXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(1262, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Indices must be Integer instances.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.setDomainCrosshairValue(699.82990421061, false);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      xYPlot0.clearDomainMarkers();
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.setDomainPannable(false);
      xYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-98.49828933855449));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Indices must be unique.");
      DateAxis dateAxis0 = new DateAxis();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      axisLocation0.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedRangeXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(171.5662705949, 0.5235987755982988);
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot1.configureRangeAxes();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot1.removeRangeMarker(10, (Marker) intervalMarker0, layer1);
      combinedRangeXYPlot0.getDataset(10);
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getDomainAxis(4);
      combinedDomainXYPlot0.getAxisOffset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(false);
      combinedDomainXYPlot1.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      boolean boolean0 = true;
      RendererChangeEvent rendererChangeEvent0 = null;
      try {
        rendererChangeEvent0 = new RendererChangeEvent((Object) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedRangeXYPlot0.getRangeCrosshairPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.getRangeAxis(430);
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      Layer layer0 = Layer.BACKGROUND;
      PeriodAxis periodAxis0 = new PeriodAxis("-as.}apqRIu");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeRangeMarker((-635), (Marker) null, layer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker(10, (Marker) null, layer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(1.0F);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDataset((-3726), (XYDataset) defaultBoxAndWhiskerXYDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2449));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      combinedRangeXYPlot0.setAxisOffset(rectangleInsets0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      Graphics2D graphics2D0 = null;
      BasicEditorPaneUI basicEditorPaneUI0 = new BasicEditorPaneUI();
      JEditorPane jEditorPane0 = null;
      try {
        jEditorPane0 = new JEditorPane("*I,=KdmN)WVZu");
        fail("Expecting exception: MalformedURLException");
      
      } catch(Throwable e) {
         //
         // no protocol: *I,=KdmN)WVZu
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-2633);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      RectangleInsets rectangleInsets0 = thermometerPlot0.getPadding();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      byte[] byteArray0 = new byte[7];
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte) (-117);
      double double0 = (-611.2717830124);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo((-2575));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      Image image0 = JFreeChart.DEFAULT_BACKGROUND_IMAGE;
      combinedRangeXYPlot1.setBackgroundImage((Image) null);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
      combinedRangeXYPlot1.getDataset((-178));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomDomainAxes((-1210.9507892197284), plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.getDomainAxis(335);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      System.setCurrentTimeMillis(958L);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearSelection();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      xYPlot0.setRangeZeroBaselineVisible(true);
      xYPlot0.getRangeMinorGridlinePaint();
      double double0 = 0.0;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Color color0 = Color.orange;
      color0.getColorComponents((float[]) null);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      Week week0 = new Week();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(week0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1856.32);
      XYPlot xYPlot0 = new XYPlot(defaultBoxAndWhiskerXYDataset0, cyclicNumberAxis0, numberAxis3D0, xYDotRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairValue((-1.0), true);
      combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.getDomainCrosshairValue();
      combinedRangeXYPlot2.getRendererForDataset(defaultBoxAndWhiskerXYDataset0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      combinedRangeXYPlot0.setDataset(116, (XYDataset) timeTableXYDataset0);
      combinedRangeXYPlot2.setWeight(1895);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot2.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.mouseMoved((MouseEvent) null);
      combinedDomainXYPlot0.setWeight(0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, defaultCaret0);
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxis(461);
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker1 = new IntervalMarker(0, 1481.0);
      Layer layer1 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(2.0F, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1);
      XYPlot xYPlot2 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis1, xYBoxAndWhiskerRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(4, (Marker) intervalMarker0, layer0, true);
      xYPlot1.getLegendItems();
      xYPlot2.setRangeZeroBaselineStroke(xYPlot1.DEFAULT_OUTLINE_STROKE);
      xYPlot0.getRangeAxis(500);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeAxisEdge(3);
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(1);
      axisLocation0.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2199.256166255528);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-178), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      minMaxCategoryRenderer0.clearSeriesStrokes(false);
      MockDate mockDate0 = new MockDate(10);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      hour0.previous();
      IntervalMarker intervalMarker0 = new IntervalMarker(1954.5901, 23);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2129), (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.setRangeGridlineStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      XYSeries xYSeries0 = new XYSeries(hour0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      combinedDomainXYPlot0.setDataset(8, (XYDataset) xYSeriesCollection0);
      combinedDomainXYPlot0.getRendererForDataset(xYSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxis(10);
      combinedDomainXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-98.49828933855449));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Indices must be unique.");
      DateAxis dateAxis0 = new DateAxis();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setRangeAxisLocation(2546, axisLocation0, true);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      combinedDomainXYPlot0.getQuadrantPaint(0);
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(categoryPlot0.DEFAULT_BACKGROUND_PAINT);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedDomainXYPlot0.indexOf(categoryTableXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangePannable();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot1.setDomainAxisLocation(axisLocation1);
      combinedDomainXYPlot1.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "[#3L/");
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot1.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 0, (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot1.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBubbleRenderer0.ZERO, 1);
      xYPlot1.getFixedRangeAxisSpace();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      xYPlot1.removeRangeMarker(82, (Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(false);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      // Undeclared exception!
      try { 
        jFreeChart0.getXYPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.PiePlot cannot be cast to org.jfree.chart.plot.XYPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "92idNt$A<.IxriV");
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(".YW~4jXFOgWP%`", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, meterPlot0, false);
      int int0 = (-4591);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RiJ#W{k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeXYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedRangeXYPlot0.setOrientation(plotOrientation0);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      System.setCurrentTimeMillis(10);
      Stack<XYDataImageAnnotation> stack0 = new Stack<XYDataImageAnnotation>();
      combinedDomainXYPlot0.getDomainAxisLocation(29);
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2449));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-2449), (-2449), 10, (-1378), (-2449), (-2449), false, true, true, false, true, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1519.676612674021));
      Paint paint0 = candlestickRenderer0.lookupSeriesPaint(4);
      combinedDomainXYPlot0.setRangeCrosshairPaint(paint0);
      combinedDomainXYPlot0.setDomainCrosshairValue((-5608.53567157));
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeAxisCount();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot1.getRangeGridlinePaint();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer1 = new DefaultXYItemRenderer();
      defaultXYItemRenderer1.setAutoPopulateSeriesOutlinePaint(false);
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer1);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      Stack<StackedXYAreaRenderer2> stack0 = new Stack<StackedXYAreaRenderer2>();
      JFreeChart jFreeChart0 = new JFreeChart("", defaultXYItemRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, true);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes(10, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 15.0);
      combinedDomainXYPlot0.addDomainMarker((Marker) intervalMarker0);
      Vector<XYDrawableAnnotation> vector0 = new Vector<XYDrawableAnnotation>();
      combinedDomainXYPlot0.drawDomainTickBands((Graphics2D) null, (Rectangle2D) null, vector0);
      combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-108.0), 1.0F, "VYAh?@0J3uw;:j'");
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      combinedDomainXYPlot1.setDomainPannable(true);
      XYShapeAnnotation xYShapeAnnotation1 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYShapeAnnotation1);
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      xYPlot0.clearDomainMarkers();
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.setDomainPannable(false);
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 0;
      int int1 = (-2633);
      byte[] byteArray0 = new byte[7];
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      byteArray0[0] = (byte)35;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte) (-25);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(1.0F);
      combinedDomainXYPlot0.setDataset(10, (XYDataset) defaultBoxAndWhiskerXYDataset0);
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
      combinedRangeXYPlot1.setDataset(10, (XYDataset) timeSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDataset(14);
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LinkedList<AxisSpace> linkedList0 = new LinkedList<AxisSpace>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes((-2129), linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.getRangeGridlinePaint();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer1 = new DefaultXYItemRenderer();
      defaultXYItemRenderer1.setAutoPopulateSeriesOutlinePaint(false);
      DateAxis dateAxis0 = new DateAxis("4=Dfrut6J:u");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer1);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      Stack<StackedXYAreaRenderer2> stack0 = new Stack<StackedXYAreaRenderer2>();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes((-1), stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      DateAxis dateAxis0 = new DateAxis("[#3L/");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      XYSeries xYSeries0 = new XYSeries(true, true, true);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      combinedRangeXYPlot0.getRendererForDataset(xYSeriesCollection0);
      combinedRangeXYPlot0.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LogAxis logAxis0 = new LogAxis("%}84RM`6=j}@8vl");
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYPlot0.clearSelection();
      GeneralPath generalPath0 = new GeneralPath(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      xYPlot0.getLegendItems();
      Point point0 = null;
      try {
        point0 = new Point((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getPlotType();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getLegendItems();
      JFreeChart jFreeChart1 = new JFreeChart("ZOOM_RESET_RANGE", combinedRangeXYPlot0);
      XYPlot xYPlot0 = jFreeChart1.getXYPlot();
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorStroke();
      // Undeclared exception!
      try { 
        xYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RingPlot ringPlot0 = new RingPlot();
      xYPlot0.getDomainAxis(10);
      XYPlot xYPlot1 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDataset();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) null);
      xYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_CROSSHAIR_STROKE;
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(1262, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      boolean boolean0 = new Boolean(false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getLabelOutlineStroke();
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("", decimalFormat0, decimalFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(676.1701722, false, standardXYZToolTipGenerator0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("<USg8eyX");
      numberAxis3D0.setMinorTickMarkOutsideLength(1.0F);
      candlestickRenderer0.lookupSeriesShape((-2129));
      combinedDomainXYPlot0.setRenderer(2, (XYItemRenderer) candlestickRenderer0);
      IntervalMarker intervalMarker0 = new IntervalMarker(51.32705, 0.0F);
      Layer layer1 = Layer.BACKGROUND;
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, candlestickRenderer0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer1, true);
      xYPlot0.getLegendItems();
      xYPlot0.setRangeZeroBaselineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      RingPlot ringPlot0 = new RingPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(valueMarker0, timeSeriesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(0.0, false);
      combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 7.0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      cyclicNumberAxis0.setTickMarkOutsideLength(6.0F);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setRangeAxisLocation((int) (byte)0, axisLocation0, true);
      xYPlot0.isDomainZeroBaselineVisible();
      xYPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(53.637F, 0.0F, (-1845.0F), 10);
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedDomainXYPlot0.setOutlineStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.setBackgroundAlpha(975.3F);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) dateAxis0, false);
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getDomainAxis(4);
      combinedDomainXYPlot0.getAxisOffset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      System.setCurrentTimeMillis(0L);
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2144.551503392323));
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        candlestickRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeXYPlot0, timeSeriesCollection0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.CandlestickRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1579.2, (-1.0));
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1922.4));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      XYPlot xYPlot1 = new XYPlot();
      xYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      cyclicNumberAxis0.setTickMarkOutsideLength(0.0F);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot1.setRangeAxisLocation(6, axisLocation1, false);
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      combinedDomainXYPlot0.getRangeAxis((-184));
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2449));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedDomainXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedRangeXYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp((-336.2867F), (-336.2867F), (RenderingHints) null);
      combinedRangeXYPlot0.isRangeGridlinesVisible();
      combinedRangeXYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1909.9, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(1031, 1031);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedRangeXYPlot0.setFixedLegendItems(legendItemCollection0);
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getRangeAxisIndex(dateAxis0);
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4416.48574, "&]");
      cyclicNumberAxis0.setAutoRangeMinimumSize(1134.512591);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      combinedDomainXYPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 1909.9);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      JFreeChart jFreeChart0 = new JFreeChart("G-^]{ISv(Fca", xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 593, 1, 0, (-309), (-309), 3, false, false, true, true, true, true, true);
      JToolTip jToolTip0 = chartPanel0.createToolTip();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(jToolTip0, true);
      xYBubbleRenderer0.notifyListeners(rendererChangeEvent0);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.zoom(303.38072739012);
      combinedDomainXYPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(xYPlot0, true);
      xYPlot0.rendererChanged(rendererChangeEvent0);
      Layer layer0 = Layer.FOREGROUND;
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      xYPlot0.setRangeAxes(valueAxisArray0);
      xYPlot0.getDomainCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.getRangeAxisEdge();
      combinedRangeXYPlot0.isRangeZoomable();
      combinedRangeXYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, highLowRenderer0);
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-3337), (XYItemRenderer) highLowRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      ValueAxis valueAxis0 = null;
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1240.5F);
      floatArray0[1] = (-469.96637F);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation();
      axisLocation0.getOpposite();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeAxisLocation(941, axisLocation0, false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-2306));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-2306) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainXYPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      chartPanel0.getToolTipLocation((MouseEvent) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes((double) vectorRenderer0.ZERO, plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 1909.9);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(500, (-1314));
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.getRangeAxisIndex(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getDomainAxisEdge((-1));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      MockDate mockDate0 = new MockDate(0L);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      hour0.previous();
      IntervalMarker intervalMarker0 = new IntervalMarker(591.266, 1954.5901);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2449), (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor("[#3L/");
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.clone();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, false);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(color0);
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LinkedList<DefaultTableXYDataset> linkedList0 = new LinkedList<DefaultTableXYDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(10, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "org.jfree.chart.renderer.AreaRendererEndType";
      stringArray0[3] = "";
      stringArray0[4] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.renderer.AreaRendererEndType", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(10, vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(425, (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 1909.9);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
      xYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("More data than series to put them in");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.canSelectByPoint();
      combinedDomainXYPlot0.getSeriesRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = PeriodAxisLabelInfo.DEFAULT_INSETS;
      combinedDomainXYPlot0.setInsets(rectangleInsets0);
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getDomainAxis(4);
      combinedDomainXYPlot0.getAxisOffset();
      double double0 = 1.0E9;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      Boolean boolean0 = new Boolean(true);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      RingPlot ringPlot0 = new RingPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getSeriesStroke(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-8, 0.0F, "");
      Shape shape0 = cyclicNumberAxis0.getRightArrow();
      numberAxis0.setUpArrow(shape0);
      numberAxis0.setLabelURL("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.setRangeCrosshairStroke(numberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.fireChangeEvent();
      combinedDomainXYPlot0.getDataRange(numberAxis0);
      combinedDomainXYPlot0.getDomainAxisEdge(500);
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getLabelOutlineStroke();
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(axisLocation0, (Dataset) null);
      String string0 = "|V/j?pG4}";
      MockDate mockDate0 = new MockDate();
      TimeZone timeZone0 = null;
      Day day0 = null;
      try {
        day0 = new Day(mockDate0, (TimeZone) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
         verifyException("org.jfree.data.time.Day", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setDomainAxisLocation(10, axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      xYPlot0.setDomainAxisLocation(axisLocation1, false);
      xYPlot0.setDomainCrosshairValue(0.0, true);
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Locale locale0 = Locale.CANADA_FRENCH;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes(1, vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.ITALIAN;
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxes((-2446), vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "9!2idNt$A<.IxriV");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      LinkedList<XYTextAnnotation> linkedList0 = new LinkedList<XYTextAnnotation>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes((-55), linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(3);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      hour0.previous();
      IntervalMarker intervalMarker0 = new IntervalMarker(1954.5901, 23);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2129), (Marker) intervalMarker0, layer0, false);
      combinedDomainXYPlot0.setRangeGridlineStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1240.5F);
      floatArray0[1] = (-469.96637F);
      floatArray0[2] = (-1045.0F);
      floatArray0[3] = 0.0F;
      color0.getColorComponents(floatArray0);
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getBaseSectionOutlineStroke();
      xYPlot0.setRangeMinorGridlineStroke(stroke0);
      xYPlot0.getDomainAxis(0);
      float[] floatArray1 = new float[4];
      floatArray1[0] = 2.0F;
      floatArray1[1] = 2.0F;
      floatArray1[2] = 1270.6107F;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.configureRangeAxes();
      AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-309), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      Color.getColor((String) null, 237);
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(221, (Marker) intervalMarker0, layer0, false);
      xYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
      combinedRangeXYPlot1.getDataset((-178));
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      hour0.previous();
      Locale locale0 = Locale.ITALIAN;
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(23);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedDomainXYPlot0.getPlotType();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(0.0, (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getQuadrantPaint(0);
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Paint paint0 = fastScatterPlot0.getDomainGridlinePaint();
      combinedRangeXYPlot0.setRangeMinorGridlinePaint(paint0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      combinedRangeXYPlot0.clearDomainMarkers();
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.clearDomainMarkers(2347);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, (XYToolTipGenerator) null);
      numberAxis3D0.setMinorTickMarkOutsideLength(95.873F);
      candlestickRenderer0.lookupSeriesShape(500);
      combinedDomainXYPlot0.setRenderer(500, (XYItemRenderer) candlestickRenderer0);
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getDataset();
      Paint paint0 = combinedDomainXYPlot0.getRangeGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.getQuadrantOrigin();
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.getDomainCrosshairStroke();
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(candlestickRenderer0.DEFAULT_SHAPE, candlestickRenderer0.DEFAULT_OUTLINE_STROKE, paint0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      PeriodAxis periodAxis0 = new PeriodAxis("r\"=hR?# p+3@k*nU9`");
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes((double) 500, plotRenderingInfo0, (Point2D) point2D_Float0, true);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedRangeXYPlot0.zoom((-103.695294580008));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      combinedRangeXYPlot0.setOutlineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 1.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      combinedDomainXYPlot1.zoomDomainAxes((double) 0, plotRenderingInfo0, (Point2D) point2D_Float0, false);
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisEdge();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainXYPlot0.addDomainMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 221);
      combinedDomainXYPlot0.zoomDomainAxes((-429.70156386019), plotRenderingInfo0, (Point2D) point2D_Double0, true);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(2, 10);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      categoryMarker0.setPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      categoryMarker0.setPaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      categoryMarker0.notifyListeners((MarkerChangeEvent) null);
      combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(10, 143, 143);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 143
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYItemRendererArray0[1] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      // Undeclared exception!
      try { 
        xYPlot0.setRenderers(xYItemRendererArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Point point0 = new Point();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      TimeSeries timeSeries0 = new TimeSeries(1.0F);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, valueAxis0, valueAxis0, (XYItemRenderer) null);
      xYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator0 = new StandardXYSeriesLabelGenerator("org.jfree.data.general.DefaultPieDataset");
      xYBoxAndWhiskerRenderer0.setLegendItemURLGenerator(standardXYSeriesLabelGenerator0);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      xYBoxAndWhiskerRenderer0.setFillBox(true);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      logarithmicAxis0.setPositiveArrowVisible(false);
      xYItemRendererArray0[0] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      logarithmicAxis0.setUpperBound(0.0);
      xYItemRendererArray0[2] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYPlot0.setRenderers(xYItemRendererArray0);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.isRangePannable();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      xYPlot0.setDomainAxisLocation(axisLocation2, true);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.setDomainAxisLocation(10, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) highLowRenderer0, true);
      DateTitle dateTitle0 = new DateTitle();
      combinedRangeXYPlot0.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      combinedDomainXYPlot0.indexOf(defaultXYZDataset0);
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedRangeXYPlot0.setDomainAxisLocation(axisLocation1);
      combinedRangeXYPlot0.clearDomainAxes();
      combinedRangeXYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      hour0.previous();
      Locale locale0 = Locale.ITALIAN;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      combinedDomainXYPlot0.indexOf(timeTableXYDataset0);
      combinedDomainXYPlot0.isRangePannable();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYBubbleRenderer0.removeAnnotations();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)125;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-5), 1, byteArray0, 0, true, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, logAxis0, logAxis0, xYDifferenceRenderer0);
      xYDifferenceRenderer0.setItemLabelAnchorOffset(1.0F);
      xYPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      xYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(708.182595907964, 1909.9);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Stack<VectorRenderer> stack0 = new Stack<VectorRenderer>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-2061818542), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1240.5F);
      floatArray0[1] = (-469.96637F);
      floatArray0[2] = (-1045.0F);
      floatArray0[3] = 0.0F;
      color0.getColorComponents(floatArray0);
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getBaseSectionOutlineStroke();
      xYPlot0.setRangeMinorGridlineStroke(stroke0);
      xYPlot0.getDomainAxis(0);
      float[] floatArray1 = new float[4];
      floatArray1[0] = 2.0F;
      floatArray1[1] = 2.0F;
      floatArray1[2] = 1270.6107F;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-309), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getDomainMarkers(layer0);
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        xYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-103.695294580008), Double.POSITIVE_INFINITY);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.clearDomainMarkers(500);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Index ");
      IntervalMarker intervalMarker0 = new IntervalMarker(2351.42445399, 448.275048176, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      intervalMarker0.equals(valueMarker0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      combinedRangeXYPlot0.clearSelection();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getLegendItems();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis((-1199.14863321), 816.0, "Index ");
      combinedDomainXYPlot0.setDomainAxis(10, (ValueAxis) cyclicNumberAxis1);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis1);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      JFreeChart jFreeChart0 = new JFreeChart("Index ", combinedDomainXYPlot1);
      combinedDomainXYPlot0.setDomainCrosshairPaint(cyclicNumberAxis1.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.getSeriesRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getQuadrantOrigin();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedRangeXYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearDomainMarkers();
      xYPlot0.getDomainMinorGridlineStroke();
      xYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.clearDomainMarkers(10);
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers(10);
      combinedRangeXYPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r{m%+qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      int int0 = 2347;
      combinedDomainXYPlot0.clearDomainMarkers(2347);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, (XYToolTipGenerator) null);
      numberAxis3D0.setMinorTickMarkOutsideLength(95.873F);
      candlestickRenderer0.lookupSeriesShape(500);
      combinedDomainXYPlot0.setRenderer(500, (XYItemRenderer) candlestickRenderer0);
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.getRangeGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers(0);
      combinedDomainXYPlot0.getQuadrantOrigin();
      JFreeChart jFreeChart0 = new JFreeChart("L+", combinedDomainXYPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(10);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RingPlot ringPlot0 = new RingPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("o");
      Stroke stroke0 = subCategoryAxis0.getAxisLineStroke();
      ringPlot0.setBaseSectionOutlineStroke(stroke0);
      ringPlot0.getBaseSectionOutlineStroke();
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      basicStroke0.getDashArray();
      BasicStroke basicStroke1 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      basicStroke1.getDashArray();
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.getErrorStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setDomainAxisLocation(0, axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r{m%+qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, (XYToolTipGenerator) null);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainAxis(6);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation0, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(449);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (449) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Color color0 = Color.red;
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getBaseSectionOutlineStroke();
      xYPlot0.setRangeMinorGridlineStroke(stroke0);
      xYPlot0.getDomainAxis(0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = 2.0F;
      floatArray0[1] = 2.0F;
      floatArray0[2] = 1270.6107F;
      floatArray0[3] = (float) 500;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(10, (-3805), floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(minMaxCategoryRenderer0.DEFAULT_SHAPE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      MockDate mockDate0 = new MockDate(464L);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.GERMAN;
      simpleTimeZone0.getDisplayName(locale0);
      Hour hour0 = new Hour(mockDate0, simpleTimeZone0);
      hour0.previous();
      Locale locale1 = Locale.ITALIAN;
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(2052);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedDomainXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      RingPlot ringPlot0 = new RingPlot();
      xYPlot0.getDomainAxis(10);
      int int0 = 880;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYAnnotation xYAnnotation0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation(0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDomainCrosshairStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      MockDate mockDate0 = new MockDate(10, 10, 1801, 255, 2, 1);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.getDomainAxisEdge(4);
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearDomainAxes();
      combinedRangeXYPlot0.getRangeAxisEdge();
      combinedRangeXYPlot0.getDomainAxisLocation(3232);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.setDomainCrosshairStroke(numberAxis0.DEFAULT_TICK_MARK_STROKE);
      Color color0 = Color.CYAN;
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot1.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYShapeAnnotation0, false);
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2926), (Marker) valueMarker0, layer1, false);
      combinedDomainXYPlot0.getDomainAxisEdge(25);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(25);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeAxisLocation(axisLocation0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot2.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot2.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot3.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(60000L);
      Locale locale0 = Locale.ITALIAN;
      combinedDomainXYPlot2.isRangeGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot4 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot4.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearDomainAxes();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      combinedRangeXYPlot0.getDomainAxisLocation((-1));
      combinedRangeXYPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      boolean boolean0 = false;
      combinedDomainXYPlot0.removeRangeMarker((-2446), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.getDomainAxisEdge((-2446));
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-2129));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      MockDate mockDate0 = new MockDate(10);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Hour hour0 = new Hour(mockDate0, zoneInfo0);
      RegularTimePeriod regularTimePeriod0 = hour0.previous();
      Locale locale0 = Locale.ITALIAN;
      PeriodAxis periodAxis0 = null;
      try {
        periodAxis0 = new PeriodAxis("4S^Z=<#JOwHyn<Dz", (RegularTimePeriod) null, regularTimePeriod0, zoneInfo0, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.PeriodAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxis((-567), (ValueAxis) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.setRangeAxis(823, (ValueAxis) numberAxis0, false);
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      int int0 = 0;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
      DateAxis dateAxis0 = new DateAxis("%}84RM`6=j}@8vl", simpleTimeZone0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      int int1 = (-1156);
      combinedDomainXYPlot0.setOutlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxis((-1156), (ValueAxis) dateAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(true);
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getPlotType();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset((-2633));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -2633 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 0;
      int int1 = (-2633);
      byte[] byteArray0 = new byte[7];
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte) (-25);
      byteArray0[6] = (byte) (-116);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      combinedDomainXYPlot0.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      combinedRangeXYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      MockDate mockDate0 = new MockDate(0L);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.text.TextBlockAnchor", regularTimePeriod0, regularTimePeriod0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(defaultTableXYDataset0, periodAxis0, periodAxis0, (XYItemRenderer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[0];
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue((double) 10);
      xYPlot0.isRangeGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(xYPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.indexOf(defaultXYZDataset0);
      xYPlot0.setDomainCrosshairValue((double) 1.0F, false);
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.isDomainCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SystemColor systemColor0 = SystemColor.control;
      combinedRangeXYPlot0.setRangeCrosshairPaint(systemColor0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_PAINT;
      xYPlot0.setRangeCrosshairPaint(color0);
      xYPlot0.setDomainCrosshairValue(0.0);
      xYPlot0.isRangeGridlinesVisible();
      xYPlot0.getRangeAxisCount();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-429.70156386019));
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(221, (Marker) intervalMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1141.8291015625);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(0.0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(histogramDataset0, cyclicNumberAxis0, cyclicNumberAxis0, stackedXYBarRenderer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.statistics.HistogramDataset cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-1442), (XYItemRenderer) highLowRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      combinedDomainXYPlot0.setRangeCrosshairValue(1.0E-8, true);
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedDomainXYPlot0.setDataset(500, (XYDataset) timeSeriesCollection0);
      combinedDomainXYPlot0.clone();
      combinedDomainXYPlot0.clearDomainMarkers();
      combinedDomainXYPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRenderer((XYItemRenderer) xYBoxAndWhiskerRenderer0);
      combinedDomainXYPlot0.configureDomainAxes();
      combinedDomainXYPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      combinedDomainXYPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      ValueAxis[] valueAxisArray0 = new ValueAxis[13];
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      DateFormat dateFormat0 = DateFormat.getInstance();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(dateFormat0, "", "8k|2lzv@o~)mq`FJ[0+", "");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, timeSeriesURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, standardXYItemRenderer0);
      xYPlot0.setDomainMinorGridlinePaint(dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      timePeriodValuesCollection0.clone();
      // Undeclared exception!
      try { 
        xYPlot0.getDomainAxisForDataset((-2165));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -2165 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.general.DefaultPieDataset");
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0E-100);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBoxAndWhiskerRenderer0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[3];
      xYItemRendererArray0[1] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      // Undeclared exception!
      try { 
        xYPlot0.setRenderers(xYItemRendererArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("{0pc8r^m%qW9R@c1!l");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Color color0 = Color.orange;
      color0.getColorComponents((float[]) null);
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      xYDotRenderer0.setBaseLegendTextPaint(color0);
      Week week0 = new Week();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(week0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1856.32);
      XYPlot xYPlot0 = new XYPlot(defaultBoxAndWhiskerXYDataset0, cyclicNumberAxis0, numberAxis3D0, xYDotRenderer0);
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getBaseSectionOutlineStroke();
      xYPlot0.setRangeMinorGridlineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getDomainAxis(500);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot1.setRangeAxisLocation(0, axisLocation0, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(697);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (697) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.zoom((-103.695294580008));
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timeSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setRangeCrosshairValue(1578.2322978346, true);
      combinedRangeXYPlot0.clone();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) defaultXYItemRenderer0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      Stack<VectorRenderer> stack0 = new Stack<VectorRenderer>();
      combinedDomainXYPlot0.getRendererForDataset((XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
      chartRenderingInfo0.getPlotInfo();
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      LogAxis logAxis0 = new LogAxis((String) null);
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(xYIntervalSeriesCollection0, logAxis0, logAxis0, xYBarRenderer0);
      // Undeclared exception!
      xYPlot0.setDataset(3165, (XYDataset) xYIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      int int0 = combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D0);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset(488);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 488 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeZone) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(68.158736420924);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(timeSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, xYShapeRenderer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot1.getWeight());
      assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Integer integer0 = new Integer(10);
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, vectorRenderer0);
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_ROTATION_ANCHOR;
      assertEquals("TextAnchor.CENTER", textAnchor0.toString());
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      int int0 = combinedDomainXYPlot0.getDomainAxisIndex(numberAxis3D0);
      assertEquals(0, int0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      XYTaskDataset xYTaskDataset0 = new XYTaskDataset(taskSeriesCollection0);
      String string0 = "G-^]{ISv(Fca";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "G-^]{ISv(Fca");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(xYTaskDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.getDatasetRenderingOrder();
      RescaleOp rescaleOp0 = new RescaleOp(2, (-2798.1692F), (RenderingHints) null);
      int int0 = 0;
      int int1 = 0;
      int int2 = (-621);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)125;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-5), 1, byteArray0, 0, true, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      DateAxis dateAxis0 = new DateAxis();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, dateAxis0, xYBarRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      assertEquals("Layer.BACKGROUND", layer0.toString());
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(471);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (471) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      Color color0 = null;
      try {
        color0 = new Color(10, 1.0F, 10, (-2437));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color parameter outside of expected range: Alpha Red Blue
         //
         verifyException("java.awt.Color", e);
      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.getOrientation();
      combinedRangeXYPlot0.getRangeCrosshairStroke();
      assertEquals(3, combinedRangeXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.getDomainAxisLocation();
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.setRangeAxisLocation(10, axisLocation0, false);
      assertTrue(combinedDomainXYPlot1.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-1461));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-1461) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 10 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedLegendItems();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-509.552366192239), "Can't evaluate the year.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getLegendItems();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(4.0);
      double double0 = 0.0;
      cyclicNumberAxis0.setAxisLineVisible(false);
      numberTickUnit0.valueToString(0.0);
      cyclicNumberAxis0.setTickUnit(numberTickUnit0);
      combinedRangeXYPlot0.getDatasetCount();
      int int0 = 0;
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte) (-27);
      byteArray0[1] = (byte) (-27);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(2080, axisLocation0, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-134));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-134) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Color color0 = (Color)combinedRangeXYPlot0.getRangeMinorGridlinePaint();
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(255, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2197);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2197, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
