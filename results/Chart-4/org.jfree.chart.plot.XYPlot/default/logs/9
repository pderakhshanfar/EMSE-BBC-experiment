* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.jfree.chart.plot.XYPlot
* Starting Client-0
* Connecting to master process on port 19334
* Analyzing classpath: 
  - subjects/buggy-versions/Chart-4/build
  - subjects/buggy-versions/Chart-4/lib/servlet.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.plot.XYPlot
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 5800
* Using seed 4253089286
* Starting evolution
* Initial Number of Goals in DynaMOSA = 2064 / 5800
[MASTER] 15:34:57.049 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 15:34:57.058 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 15:34:57.083 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.JList<E> : Type points to itself
[MASTER] 15:35:46.745 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 15:36:40.146 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[MASTER] 15:37:55.781 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called in total: 0
* Search finished after 605s and 222 generations, 129987 statements, best individual has fitness: 1885.0
* Minimizing test suite
[MASTER] 15:47:06.357 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 74%
* Total number of goals: 1743
* Number of covered goals: 1295
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 1077
* Number of covered goals: 721
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 742
* Number of covered goals: 566
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 35%
* Total number of goals: 717
* Number of covered goals: 254
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 222
* Number of covered goals: 222
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 98%
* Total number of goals: 222
* Number of covered goals: 217
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 1077
* Number of covered goals: 691
* Generated 655 tests with total length 8299
* Resulting test suite's coverage: 73% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:48:32.432 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6693% of time used, but only 47/655 tests minimized), falling back to using all assertions
[MASTER] 15:48:52.512 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 4%
* Compiling and checking tests
[MASTER] 15:48:59.384 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 7 seconds more than allowed.
[MASTER] 15:50:03.859 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /experiment/?/.java/fonts: 1
  - java.lang.RuntimePermission: 
         queuePrintJob: 1
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'XYPlot_ESTest' to results/Chart-4/org.jfree.chart.plot.XYPlot/default/tests/9
* Done!

* Computation finished
