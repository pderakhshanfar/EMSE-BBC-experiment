/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 11:55:18 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.IllegalComponentStateException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.Window;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.WritableRaster;
import java.io.IOException;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.AttributedCharacterIterator;
import java.text.NumberFormat;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.JWindow;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.plaf.metal.MetalTabbedPaneUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import javax.swing.text.Position;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTick;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.DateTickUnitType;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.block.ColumnArrangement;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CustomXYToolTipGenerator;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.SymbolicXYItemLabelGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PieLabelDistributor;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.VectorRenderer;
import org.jfree.chart.renderer.xy.WindItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.renderer.xy.XYStepRenderer;
import org.jfree.chart.renderer.xy.YIntervalRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.StandardXYZURLGenerator;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.TableOrder;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesChangeInfo;
import org.jfree.data.general.SeriesChangeType;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(1.0);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      stackedXYBarRenderer0.setLegendShape(0, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("Empty list not permitted.", range0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, defaultCaret0, (PlotOrientation) null, 0.05, moduloAxis0, moduloAxis0.DEFAULT_AXIS_LINE_STROKE, stackedXYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.getRangeAxis(0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.zoomRangeAxes((-2549.247862204642), (-1663.6804682), plotRenderingInfo0, (Point2D) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getDataset((-1885));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      stackedXYBarRenderer0.findDomainBounds(defaultXYDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Empty list not permitted.", (Range) null);
      PlotOrientation plotOrientation0 = null;
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addRangeMarker(0, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      LogAxis logAxis0 = new LogAxis("");
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      LogAxis logAxis1 = new LogAxis("");
      valueAxisArray0[1] = (ValueAxis) logAxis1;
      VectorRenderer vectorRenderer0 = new VectorRenderer();
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(true);
      vectorRenderer0.findDomainBounds(simpleHistogramDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, (Range) null);
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      valueAxisArray0[3] = (ValueAxis) numberAxis3D0;
      NumberAxis numberAxis0 = new NumberAxis("d-MMM, HH:mm");
      valueAxisArray0[4] = (ValueAxis) numberAxis0;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      JMenu jMenu0 = new JMenu(styledEditorKit_BoldAction0);
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0, jMenu0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = (DefaultCaret)debugGraphics0.getClipBounds((Rectangle) defaultCaret0);
      AxisSpace axisSpace0 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D0, defaultCaret1);
      combinedRangeXYPlot1.setFixedDomainAxisSpace(axisSpace0, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawBackground(graphics2D1, rectangle2D_Double1);
      LinkedList<Point2D.Float> linkedList0 = new LinkedList<Point2D.Float>();
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot1.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue((-724.0), true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.removeRangeMarker(10, (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearSelection();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 10, layer0);
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Qj/6N&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D_Double0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double((-1964.503178), (-343.6586886713372), (-2455.8), 1.0F, (-1.0), Double.POSITIVE_INFINITY);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.setPlotArea(rectangle2D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(121, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      CrosshairState crosshairState0 = new CrosshairState(true);
      crosshairState0.getAnchor();
      combinedDomainXYPlot0.zoomDomainAxes(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, plotRenderingInfo0, (Point2D) null);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0);
      combinedRangeXYPlot0.getRenderer();
      DateTitle dateTitle0 = new DateTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0F, 1.0F, (-427.0), (-2948.07), 10.0, dateTitle0);
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      Rectangle rectangle0 = new Rectangle();
      combinedRangeXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle0, (AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      Graphics2D graphics2D0 = null;
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(10, 10, 657.3, 10, 10, 2396.61);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      roundRectangle2D_Double0.width = 1.0;
      plotRenderingInfo0.setPlotArea(rectangle2D0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawAxes((Graphics2D) null, rectangle2D0, rectangle2D0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot1.isDomainZeroBaselineVisible();
      combinedDomainXYPlot1.getAxisOffset();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(500);
      combinedDomainXYPlot0.render((Graphics2D) null, rectangle0, 0, (PlotRenderingInfo) null, (CrosshairState) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(612.887935707381);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.addDomainMarker(4, (Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle rectangle0 = new Rectangle(10, 10, 10, 10);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame((String) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, periodAxis0, periodAxis0, stackedXYBarRenderer0);
      xYPlot0.getIndexOf(stackedXYBarRenderer0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      int int0 = 6;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(15, 6, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomRangeAxes(0.05, 1.0E-8, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (0.052500000000000005) <= upper (1.0500000000000001E-8).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToRangeAxis((-1136), (-1136));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SystemColor systemColor0 = SystemColor.activeCaption;
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(systemColor0);
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D0, 1285, layer0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawAxes((Graphics2D) null, rectangle2D0, rectangle2D0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(618, standardXYToolTipGenerator0, timeSeriesURLGenerator0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(Double.NaN, 4.0);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, stackedXYAreaRenderer0);
      xYPlot0.getRendererForDataset(timeTableXYDataset0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState((PlotRenderingInfo) null);
      xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.zoomRangeAxes(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, plotRenderingInfo0, (Point2D) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedRangeXYPlot0.getRendererForDataset(defaultXYDataset0);
      combinedRangeXYPlot1.getRangeZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.removeDomainMarker(10, (Marker) null, layer0);
      combinedRangeXYPlot0.getRendererForDataset(defaultXYDataset0);
      combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      combinedRangeXYPlot0.getRendererForDataset(defaultXYDataset0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = (-2363);
      MockDate mockDate0 = new MockDate(3, 3, 4, (-2363), 4);
      Year year0 = new Year(mockDate0);
      Week week0 = new Week((-2363), year0);
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(week0);
      String string0 = "the time period ";
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("the time period ");
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(customXYToolTipGenerator0, timeSeriesURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, xYStepRenderer0);
      numberAxis3D0.setLabelAngle((-3855.470095264243));
      double double0 = 86.271906;
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10.0, 4, 9999, 86.271906, xYStepRenderer0.DEFAULT_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0);
      xYPlot0.getRangeMinorGridlinePaint();
      xYPlot0.getPlotType();
      int int1 = 48;
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL(simpleHistogramDataset0, int1, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.CANADA;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      DateAxis dateAxis1 = new DateAxis("", timeZone0);
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, dateAxis0, dateAxis1, samplingXYLineRenderer0);
      xYPlot0.setRenderer(0, (XYItemRenderer) samplingXYLineRenderer0, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.isDomainPannable();
      combinedRangeXYPlot1.equals(timeZone0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^Mi");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Stack<StackedXYAreaRenderer> stack0 = new Stack<StackedXYAreaRenderer>();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(500);
      stack0.add(stackedXYAreaRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D_Double0, stack0);
      combinedRangeXYPlot0.drawDomainTickBands((Graphics2D) null, rectangle2D_Double0, stack0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      combinedDomainXYPlot1.calculateRangeAxisSpace((Graphics2D) null, rectangle2D_Double0, (AxisSpace) null);
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.drawDomainGridlines((Graphics2D) null, rectangle2D_Double0, stack0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) null);
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(676.1972068072);
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      stackedXYBarRenderer0.findDomainBounds(defaultXYDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Empty list not permitted.", (Range) null);
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 689.04486566638, stackedXYBarRenderer0.DEFAULT_STROKE, moduloAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedRangeXYPlot0.getDomainTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getSeriesStroke(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      LinkedHashSet<VectorSeriesCollection> linkedHashSet0 = new LinkedHashSet<VectorSeriesCollection>();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      Graphics2D graphics2D0 = null;
      JInternalFrame jInternalFrame0 = new JInternalFrame("org.jfrWe.charc.renderer.xy.VectorRenderer");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      xYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle0);
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 0.05, numberAxis3D0, xYPlot0.DEFAULT_OUTLINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double((-3977.488558524465), 10, 5.0, 0.0, (-2412.857203995), 0.0);
      roundRectangle2D_Double0.getBounds2D();
      String string0 = "";
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      candlestickRenderer0.findRangeBounds(defaultXYZDataset0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'offset' argument.", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 10, "");
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      stackedXYBarRenderer0.findDomainBounds(matrixSeriesCollection0);
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      double double0 = 1784.0;
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(matrixSeriesCollection0, moduloAxis0, moduloAxis0, stackedXYBarRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.clearDomainAxes();
      combinedRangeXYPlot1.getRangeAxisLocation(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      double double0 = (-1741.8732);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
      Hashtable<AxisSpace, SystemColor> hashtable0 = new Hashtable<AxisSpace, SystemColor>();
      JTree jTree0 = new JTree(hashtable0);
      jTree0.getRowBounds(10);
      // Undeclared exception!
      try { 
        piePlot3D0.getArcBounds((Rectangle2D) null, (Rectangle2D) null, 10, 10, 424.6364361387419);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Arc2D$Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.zoomDomainAxes((double) 0, (PlotRenderingInfo) null, (Point2D) null);
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ringPlot0.getArcBounds(defaultCaret0, defaultCaret0, 2106.649182705686, 1066.0, (-2015.0053033816985));
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      ModuloAxis moduloAxis0 = new ModuloAxis("`9@", numberAxis0.DEFAULT_RANGE);
      SystemColor systemColor0 = SystemColor.info;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D_Double0, plotOrientation0, 1.0F, moduloAxis0, ringPlot0.DEFAULT_OUTLINE_STROKE, systemColor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getTimeZone("tt>W-O;");
      Locale locale0 = Locale.JAPAN;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawDomainMarkers(graphics2D0, rectangle2D_Double1, 65535, layer0);
      DateAxis dateAxis1 = new DateAxis("Null 'icon' argument.", zoneInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis1);
      combinedDomainXYPlot1.isDomainZeroBaselineVisible();
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D_Double0, 0.05, dateAxis1.DEFAULT_TICK_MARK_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot1.getDomainTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      SerialUtilities.isSerializable(class0);
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      XYPlot xYPlot1 = new XYPlot(vectorSeriesCollection0, numberAxis0, numberAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      numberAxis0.setLabelPaint(samplingXYLineRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      xYPlot1.setDataset(10, (XYDataset) vectorSeriesCollection0);
      xYPlot1.setDomainMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.getRangeMarkers(layer0);
      xYPlot1.clone();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainCrosshairValue((-679.012053606033));
      combinedRangeXYPlot0.getDomainAxisEdge();
      JFreeChart jFreeChart0 = new JFreeChart(" out of bounds.", logAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainXYPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(360, 360, 10.0, (-679.012053606033), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-264.403579948828), 6.0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      Rectangle2D rectangle2D1 = logAxis0.DEFAULT_AXIS_LABEL_INSETS.createOutsetRectangle(rectangle2D0);
      ArrayList<XYDrawableAnnotation> arrayList0 = new ArrayList<XYDrawableAnnotation>();
      combinedRangeXYPlot0.drawRangeGridlines(graphics2D0, rectangle2D1, arrayList0);
      combinedRangeXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxis(2260);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRendererCount();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.handleClick(0, 2263, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      combinedRangeXYPlot0.setDomainAxis(429, (ValueAxis) null, true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JTree jTree0 = new JTree();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getLeadSelectionPath();
      jTree0.getPathBounds((TreePath) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, plotRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.draw((Graphics2D) null, (Rectangle2D) null, point2D_Float0, (PlotState) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.xy.VectorRenderer", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes(5.0E10, plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Index ");
      Layer layer0 = Layer.BACKGROUND;
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 2.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.equals(xYPlot0);
      combinedRangeXYPlot0.clearRangeMarkers();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.xy.VectorRenderer", thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.zoomDomainAxes((double) 0.0F, plotRenderingInfo0, (Point2D) null, false);
      Stack<DateTick> stack0 = new Stack<DateTick>();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes(680, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1784.0, "org.jfree.chart.axis.SubCategoryAxis");
      combinedRangeXYPlot0.setRangeAxis(2262, (ValueAxis) cyclicNumberAxis0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.indexOf(defaultWindDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, combinedDomainXYPlot0, false);
      chartRenderingInfo0.clear();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1784, 1059, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo1);
      combinedDomainXYPlot0.canSelectByPoint();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedRangeXYPlot0.getDomainAxisEdge();
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.location(1795, 62);
      JTextArea jTextArea0 = new JTextArea();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo1.clear();
      gridBagLayout0.getLayoutOrigin();
      Vector<XYTitleAnnotation> vector0 = new Vector<XYTitleAnnotation>();
      JList<XYTitleAnnotation> jList0 = new JList<XYTitleAnnotation>(vector0);
      jList0.indexToLocation(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomDomainAxes((-996.9686184406601), plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(Double.NaN);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(87);
      FileSystemHandling.shouldAllThrowIOExceptions();
      cyclicNumberAxis0.setLabelPaint(stackedXYAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(5, (-442.3545), (double) stackedXYAreaRenderer0.ZERO, (-3454.611220715358));
      stackedXYAreaRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, stackedXYAreaRenderer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.indexOf(defaultWindDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, combinedDomainXYPlot0, false);
      chartRenderingInfo0.clear();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1784, 1059, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.drawAxes(graphics2D0, rectangle2D0, rectangle2D0, plotRenderingInfo1);
      combinedDomainXYPlot0.canSelectByPoint();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle2D_Double0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.calculateRangeAxisSpace((Graphics2D) null, rectangle2D0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      XYPlot xYPlot1 = new XYPlot(vectorSeriesCollection0, numberAxis0, numberAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      numberAxis0.setLabelPaint(samplingXYLineRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      xYPlot0.setRangePannable(true);
      xYPlot1.setDataset(10, (XYDataset) vectorSeriesCollection0);
      // Undeclared exception!
      try { 
        xYPlot0.setDomainMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      XYPlot xYPlot1 = new XYPlot(vectorSeriesCollection0, numberAxis0, numberAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.setRangePannable(true);
      vectorSeriesCollection0.hasListener(xYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("ys#|A-|");
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(1800);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, periodAxis0, periodAxis0, xYAreaRenderer0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(3707, layer0);
      xYPlot0.clearDomainMarkers(5);
      xYPlot0.getRenderer(1389);
      xYPlot0.getDomainGridlineStroke();
      xYPlot0.setDataset(1800, (XYDataset) null);
      xYPlot0.setAxisOffset(periodAxis0.DEFAULT_TICK_LABEL_INSETS);
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      valueAxisArray0[4] = (ValueAxis) periodAxis0;
      valueAxisArray0[5] = (ValueAxis) periodAxis0;
      valueAxisArray0[6] = (ValueAxis) periodAxis0;
      valueAxisArray0[7] = (ValueAxis) periodAxis0;
      valueAxisArray0[8] = (ValueAxis) periodAxis0;
      // Undeclared exception!
      xYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.indexOf(defaultWindDataset0);
      ValueMarker valueMarker0 = new ValueMarker(204.6232);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawBackground(graphics2D0, rectangle2D_Double1);
      LinkedList<Point2D.Float> linkedList0 = new LinkedList<Point2D.Float>();
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      combinedRangeXYPlot0.getRangeAxisIndex(moduloAxis0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      combinedDomainXYPlot1.setRangeCrosshairPaint(logAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot1.getQuadrantPaint(0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      ArrayList<WaferMapDataset> arrayList0 = new ArrayList<WaferMapDataset>();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker(1541, (Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-651), combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.equals(combinedRangeXYPlot0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawAxes((Graphics2D) null, rectangle2D0, rectangle2D0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      ValueMarker valueMarker0 = new ValueMarker(0.05, logAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) valueMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(53, 10, (double) 1.0F, (double) 0.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1342), 10, (-159), 2438, (-1073741823), 10, false, true, true, false, true, false, false);
      Rectangle rectangle0 = chartPanel0.getBounds();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 0.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      XYPlot xYPlot1 = (XYPlot)xYPlot0.clone();
      xYPlot0.setRangePannable(true);
      xYPlot1.setRangeZeroBaselineStroke(samplingXYLineRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer1 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Layer layer2 = Layer.FOREGROUND;
      xYPlot1.getRenderer();
      xYPlot0.setDomainAxis(2202, (ValueAxis) logAxis0, true);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.CANADA;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale1);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      DateAxis dateAxis1 = new DateAxis("", timeZone0);
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, dateAxis0, dateAxis1, samplingXYLineRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(6.0, 0.4, xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      xYPlot0.removeRangeMarker((Marker) intervalMarker0);
      AxisSpace axisSpace0 = new AxisSpace();
      xYPlot0.setFixedDomainAxisSpace(axisSpace0);
      xYPlot0.getRangeMinorGridlineStroke();
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[0] = valueAxis0;
      Second second0 = new Second();
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.UK;
      PeriodAxis periodAxis0 = new PeriodAxis("X%A.lAT~W-X~OgvK'", second0, second0, timeZone0, locale0);
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      LogAxis logAxis0 = new LogAxis("X%A.lAT~W-X~OgvK'");
      valueAxisArray0[2] = (ValueAxis) logAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      valueAxisArray0[3] = (ValueAxis) numberAxis3D0;
      NumberAxis3D numberAxis3D1 = new NumberAxis3D();
      valueAxisArray0[4] = (ValueAxis) numberAxis3D1;
      DateAxis dateAxis0 = new DateAxis();
      valueAxisArray0[5] = (ValueAxis) dateAxis0;
      PeriodAxis periodAxis1 = new PeriodAxis("", second0, second0);
      valueAxisArray0[6] = (ValueAxis) periodAxis1;
      LogAxis logAxis1 = new LogAxis("} GR(?/(L5*X");
      valueAxisArray0[7] = (ValueAxis) logAxis1;
      xYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateAxis dateAxis0 = new DateAxis();
      Graphics2D graphics2D0 = null;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      combinedRangeXYPlot0.drawQuadrants((Graphics2D) null, defaultCaret0);
      combinedRangeXYPlot0.getDomainAxisForDataset(0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      dateAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, false);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, 55, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(10);
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.indexOf((XYDataset) null);
      combinedRangeXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r)J>zs");
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainAxisEdge();
      xYPlot0.isRangeZeroBaselineVisible();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.location(10, 10);
      JTextArea jTextArea0 = new JTextArea("");
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      PeriodAxis periodAxis0 = new PeriodAxis("r)J>zs");
      XYPlot xYPlot1 = new XYPlot(xYSeriesCollection0, periodAxis0, periodAxis0, xYBlockRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      xYPlot1.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      combinedRangeXYPlot0.setRangeAxis(2145935354, (ValueAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Stroke stroke0 = xYShapeRenderer0.getGuideLineStroke();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(67.53603, 0.0, "=Grz.\"5v.;.CXD#");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(stroke0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      combinedRangeXYPlot0.setRenderer(7, (XYItemRenderer) null, false);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(10);
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.indexOf((XYDataset) null);
      combinedRangeXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      XYPlot xYPlot1 = (XYPlot)xYPlot0.clone();
      xYPlot0.getRangeMarkers(797, layer0);
      xYPlot0.setRangePannable(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 500, "4");
      cyclicNumberAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 1.0F);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      // Undeclared exception!
      try { 
        xYPlot1.zoomRangeAxes((-3137.9507829428926), (PlotRenderingInfo) null, (Point2D) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = ringPlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 10, 0.0, (-140.018168645383));
      PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Range", numberAxis0.DEFAULT_RANGE);
      combinedDomainXYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 0.0, moduloAxis0, ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE, ringPlot0.DEFAULT_LABEL_PAINT);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getRenderingSource();
      combinedRangeXYPlot0.select((GeneralPath) null, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-651), combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addDomainMarker((-651), (Marker) valueMarker0, layer0, true);
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeXYPlot0.getDomainCrosshairStroke();
      basicStroke0.getDashArray();
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("lbC+L8~ZfZ3D", timeZone0, locale0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, dateAxis0, cyclicNumberAxis0, xYBlockRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedDomainXYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.clone();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainPannable(false);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-4030), axisLocation1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      LogAxis logAxis1 = null;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.setDomainAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree(defaultMutableTreeNode0);
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getLeadSelectionPath();
      synthTreeUI0.getPathBounds(jTree0, (TreePath) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      SystemColor systemColor0 = SystemColor.infoText;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Graphics2D graphics2D0 = null;
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getLeadSelectionPath();
      jTree0.getPathBounds((TreePath) null);
      ArrayList<WaferMapDataset> arrayList0 = new ArrayList<WaferMapDataset>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(".?|w}*E! UN.Sg");
      combinedDomainXYPlot0.getDataRange(logarithmicAxis0);
      ModuloAxis moduloAxis0 = new ModuloAxis(".?|w}*E! UN.Sg", (Range) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, (PlotOrientation) null, 0.05, moduloAxis0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ModuloAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot1.addRangeMarker(10, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot1.getFixedLegendItems();
      SystemColor systemColor0 = SystemColor.infoText;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.mapDatasetToRangeAxes(10, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      Rectangle2D rectangle2D0 = combinedDomainXYPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) rectangle1);
      Rectangle2D rectangle2D1 = combinedDomainXYPlot0.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0, false, false);
      HashMap<AttributedCharacterIterator.Attribute, DefaultHighLowDataset> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, DefaultHighLowDataset>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1573), 3110, 2000, 668, 83, 0, false, false, false, true, true, false, true);
      combinedDomainXYPlot0.select(generalPath0, rectangle2D1, (RenderingSource) chartPanel0);
      int int0 = 72;
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 72);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker(6, (Marker) valueMarker0, layer0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.indexOf(defaultWindDataset0);
      combinedRangeXYPlot0.clearSelection();
      combinedRangeXYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainPannable(false);
      AxisSpace axisSpace0 = null;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.getSeriesOutlineStroke(4639);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      DateAxis dateAxis0 = new DateAxis();
      combinedRangeXYPlot0.getRangeAxisIndex(dateAxis0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      combinedRangeXYPlot0.drawQuadrants((Graphics2D) null, defaultCaret0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker(1896, (Marker) valueMarker0, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Index ");
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 797, 10.0F, 500);
      rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainTickBandPaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, (Rectangle2D) null, vector0);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = ")ws";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")ws");
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainAxisEdge();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 10);
      chartRenderingInfo0.clone();
      plotRenderingInfo0.setDataArea((Rectangle2D) null);
      JTextArea jTextArea0 = new JTextArea("");
      gridBagLayout0.invalidateLayout(jTextArea0);
      chartRenderingInfo0.clear();
      point0.translate(1774, 127);
      Point point1 = new Point(point0);
      xYPlot0.zoomDomainAxes((-3734.5), plotRenderingInfo0, (Point2D) point1, false);
      xYPlot0.clearDomainMarkers(1800);
      xYPlot0.getRangeAxisLocation();
      xYPlot0.getSeriesCount();
      // Undeclared exception!
      try { 
        xYPlot0.drawBackground((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      xYPlot0.clearSelection();
      xYPlot0.setDomainGridlinePaint(color0);
      LogAxis logAxis0 = new LogAxis("0+OHN>48m*i\">'");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      DateAxis dateAxis0 = new DateAxis();
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
      xYPlot0.getFixedDomainAxisSpace();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedRangeXYPlot0.panRangeAxes(0.0F, plotRenderingInfo0, point2D_Double0);
      combinedRangeXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeXYPlot0.clone();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RingPlot ringPlot0 = new RingPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = ringPlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 1442.72967, 907.471915, 0.0);
      PlotOrientation plotOrientation0 = combinedRangeXYPlot0.getOrientation();
      xYPlot0.drawRangeCrosshair(graphics2D0, rectangle2D0, plotOrientation0, 10, logAxis0, ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE, ringPlot0.DEFAULT_LABEL_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 0.0F, 3888.2F, 0.0F);
      rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDomainTickBandPaint(combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 731.5235104338);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot((ValueAxis) null);
      Stack<PeriodAxis> stack0 = new Stack<PeriodAxis>();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D_Float0, stack0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.getSeriesRenderingOrder();
      combinedDomainXYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-513), standardXYZToolTipGenerator0);
      standardXYItemRenderer0.setAutoPopulateSeriesShape(true);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, valueAxis0, valueAxis0, standardXYItemRenderer0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)107;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearDomainAxes();
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        xYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      xYPlot0.clearSelection();
      xYPlot0.setDomainGridlinePaint(color0);
      LogAxis logAxis0 = new LogAxis("0+OHN>48m*i\">'");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      DateAxis dateAxis0 = new DateAxis();
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
      xYPlot0.getFixedDomainAxisSpace();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedRangeXYPlot0.panRangeAxes(0.0F, plotRenderingInfo0, point2D_Double0);
      combinedRangeXYPlot0.getDomainAxisLocation(2);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(3773);
      ValueMarker valueMarker0 = new ValueMarker(500, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, stroke0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker(683, (Marker) valueMarker0, layer0, true);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getQuadrantPaint(3);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")ws");
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainCrosshairPaint();
      xYPlot0.getDomainAxisEdge();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo((EntityCollection) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      spiderWebPlot0.calculateLabelLocation(rectangle2D_Float0, 1.0F, rectangle2D_Float0, (-393.71972));
      Point2D point2D0 = spiderWebPlot0.getWebPoint(rectangle2D_Float0, 10.0, 10.0);
      xYPlot0.zoomRangeAxes((double) 10, plotRenderingInfo0, point2D0, false);
      Boolean boolean0 = new Boolean("");
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setRangeCrosshairValue(10.0);
      JFreeChart jFreeChart0 = new JFreeChart(")ws", xYPlot0);
      PolarPlot polarPlot0 = new PolarPlot();
      xYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangePannable(false);
      combinedRangeCategoryPlot0.clearRangeAxes();
      xYPlot0.setDomainMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2432.98629150407, 7.2E7, "Null 'location' for index 0 not permitted.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PiePlot piePlot0 = new PiePlot();
      piePlot0.getSectionPaint(0.05);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2823.773F), (-527.55115F), (-718.53F), (-1268.1122F));
      rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDomainTickBandPaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3179, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 214.8);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D_Float0, vector0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis0);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(1.0F, 10, 500, (-155.9117F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDataset((-1));
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      jFreeChart0.setBorderPaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getEntityCollection();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1396, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      standardEntityCollection0.iterator();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1573), 10, 15, 2529, 10, 10, false, true, false, true, true, false);
      jFreeChart0.addProgressListener(chartPanel0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        debugGraphics0.getClipBounds((Rectangle) defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("David Forslund");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.clearSelection();
      combinedRangeXYPlot0.getDomainTickBandPaint();
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(0.0, 0.0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      DateAxis dateAxis1 = new DateAxis("", timeZone0);
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, dateAxis1, dateAxis0, xYBlockRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      xYPlot0.clearSelection();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) xYBlockRenderer0.ZERO, 10, samplingXYLineRenderer0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis1);
      combinedRangeXYPlot1.isOutlineVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(xYBlockRenderer0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      xYPlot0.setDomainMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYPlot0.getDomainAxisLocation(0);
      String string0 = "";
      String string1 = null;
      // Undeclared exception!
      try { 
        Date.from((Instant) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Boolean.valueOf(false);
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.getSeriesCount();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainXYPlot0, defaultWindDataset0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      logAxis0.setLeftArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 1865.12F, 0.0F, 500);
      rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      combinedDomainXYPlot0.getDomainAxis(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getDomainAxisEdge(0);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(vectorSeriesCollection0);
      combinedRangeXYPlot0.setDomainCrosshairValue((-427.3752), true);
      combinedRangeXYPlot0.getDomainAxisEdge(0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")ws");
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainCrosshairPaint();
      xYPlot0.getDomainAxisEdge();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(10, 10);
      int int0 = 127;
      point0.translate(1774, 127);
      Point point1 = new Point(point0);
      xYPlot0.zoomDomainAxes((-3734.5), plotRenderingInfo0, (Point2D) point1, false);
      xYPlot0.clearDomainMarkers(1800);
      xYPlot0.getRangeAxisLocation();
      xYPlot0.getSeriesCount();
      JFreeChart jFreeChart0 = new JFreeChart(")ws", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = null;
      try {
        lookupOp0 = new LookupOp((LookupTable) null, renderingHints0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      xYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      int int0 = (-55);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      TextAnchor textAnchor0 = TextAnchor.CENTER_RIGHT;
      categoryMarker0.setLabelTextAnchor(textAnchor0);
      xYPlot0.removeDomainMarker((-55), (Marker) categoryMarker0, (Layer) null, false);
      xYPlot0.getRangeAxis();
      Stack<XYStepAreaRenderer> stack0 = new Stack<XYStepAreaRenderer>();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(7);
      stack0.add(xYStepAreaRenderer0);
      xYPlot0.addRangeMarker((-472), (Marker) categoryMarker0, (Layer) null);
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToRangeAxes(7, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Indices must be Integer instances.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1485.7128322763), "");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.setDomainPannable(false);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 10, 0.05, (-2195.7443749024624));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone.getTimeZone(zoneId0);
      float float0 = (-179.292F);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.clone();
      xYPlot0.getRangeMarkers(797, layer0);
      xYPlot0.setRangePannable(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 500, "4");
      cyclicNumberAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Layer layer1 = Layer.BACKGROUND;
      vectorSeriesCollection0.hasListener(xYPlot0);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.clearSelection();
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      xYPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke0 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("-5I", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D rectangle2D1 = rectangle2D0.createIntersection(rectangle2D0);
      jFreeChart0.fireChartChanged();
      rectangle2D0.intersects(rectangle2D1);
      combinedDomainXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D1);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      chartRenderingInfo0.getEntityCollection();
      ModuloAxis moduloAxis0 = new ModuloAxis("ZOOM_RANGE_BOTH", (Range) null);
      combinedDomainXYPlot0.drawDomainCrosshair(graphics2D0, rectangle2D1, plotOrientation0, (-1318.875602174858), moduloAxis0, combinedDomainXYPlot1.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot1.setDomainCrosshairValue((-1318.875602174858));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D0, 1811.6503125858, combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE, moduloAxis0.DEFAULT_TICK_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 10, rectangle2D0, 2700.70744787573);
      point2D0.clone();
      combinedRangeXYPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, point2D0, true);
      Boolean boolean0 = new Boolean("");
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis(1535);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      combinedRangeXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      combinedDomainXYPlot0.equals(xIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Boolean.valueOf(false);
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.getRangeAxisForDataset(0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer(1);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      Color color0 = (Color)BarRenderer3D.DEFAULT_WALL_PAINT;
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("-5I", (Font) null, combinedDomainXYPlot0, false);
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("Q#*_b/Ev]@S", timeZone0, locale0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 10, rectangle2D0, 10);
      combinedDomainXYPlot0.zoomRangeAxes(0.05, plotRenderingInfo0, point2D0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis(1535);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.getDomainGridlineStroke();
      combinedRangeXYPlot0.getRangeAxis();
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.configureRangeAxes();
      combinedDomainXYPlot1.setRangeAxis((ValueAxis) dateAxis0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1163.27772), (-1163.27772), "Null 'marker' argument.");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      xYPlot0.getDomainAxis();
      xYPlot0.clearRangeAxes();
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)74;
      byteArray0[0] = (byte)74;
      byte byte1 = (byte)71;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte) (-25);
      byte byte2 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)74;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1276), 10, byteArray0, (-1276), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      Layer layer0 = Layer.BACKGROUND;
      String string0 = "1\\";
      PeriodAxis periodAxis0 = new PeriodAxis("1");
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(combinedDomainXYPlot2.DEFAULT_BACKGROUND_PAINT);
      MatrixSeries matrixSeries0 = new MatrixSeries("", 500, 10);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, logAxis0, periodAxis0, xYBlockRenderer0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      JTree jTree0 = new JTree(defaultMutableTreeNode0);
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getLeadSelectionPath();
      synthTreeUI0.getPathBounds(jTree0, (TreePath) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      ArrayList<WaferMapDataset> arrayList0 = new ArrayList<WaferMapDataset>();
      combinedDomainXYPlot0.drawRangeTickBands((Graphics2D) null, (Rectangle2D) null, arrayList0);
      combinedDomainXYPlot0.drawZeroRangeBaseline((Graphics2D) null, (Rectangle2D) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot1.drawAnnotations((Graphics2D) null, (Rectangle2D) null, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 10, rectangle2D0, 2700.70744787573);
      combinedRangeXYPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis(1535);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      combinedRangeXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 10, rectangle2D0, 10);
      combinedRangeXYPlot0.zoomRangeAxes(90.0, plotRenderingInfo0, point2D0, false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainPannable(false);
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      roundRectangle2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 1865.12F, 0.0F, 500);
      rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedDomainXYPlot1.DEFAULT_GRIDLINE_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot1);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 231);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 214.8);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D_Float0, vector0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis1);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = categoryPlot0.getDatasetRenderingOrder();
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      combinedDomainXYPlot0.zoomDomainAxes(0.05, plotRenderingInfo0, (Point2D) point0);
      PeriodAxis periodAxis0 = new PeriodAxis(",right=");
      combinedRangeXYPlot1.getDataRange(periodAxis0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AffineTransform.getTranslateInstance(0.0, 10);
      JTableHeader jTableHeader0 = new JTableHeader();
      int int0 = 10;
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker(14, (Marker) null, layer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range0);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMarkers(500, (Layer) null);
      xYPlot0.clearSelection();
      xYPlot0.setRangePannable(true);
      String string0 = "";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.0F, "vX");
      MultiTextUI multiTextUI0 = new MultiTextUI();
      JTextPane jTextPane0 = new JTextPane();
      Position.Bias position_Bias0 = Position.Bias.Forward;
      // Undeclared exception!
      try { 
        multiTextUI0.modelToView((JTextComponent) jTextPane0, 6329, position_Bias0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(moduloAxis0);
      combinedDomainXYPlot1.clearRangeMarkers(10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot1, 10);
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      JFreeChart jFreeChart0 = new JFreeChart("", moduloAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainXYPlot1, true);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      xYPlot0.getDomainAxisCount();
      combinedDomainXYPlot1.setRangeAxis(500, (ValueAxis) moduloAxis0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 500, layer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(defaultKeyedValuesDataset0);
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      Stroke stroke0 = piePlot3D0.getLabelLinkStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, stroke0);
      combinedDomainXYPlot1.removeDomainMarker((Marker) categoryMarker0, layer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeAxisIndex(logAxis0);
      combinedRangeXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 10);
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
      combinedRangeXYPlot0.getDomainAxisCount();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxis((-2883), (ValueAxis) moduloAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XYDataset xYDataset0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = 2;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxis((-433), 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.labels.IntervalCategoryToolTipGenerator", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, false, false);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0);
      chartPanel1.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1024, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D1, rectangle0);
      combinedRangeXYPlot0.setDomainGridlineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.calculateRangeAxisSpace(graphics2D1, rectangle0, (AxisSpace) null);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(200, 4482.33899428261, 200, 10, 3111.68953, 200, 2);
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.draw(graphics2D0, (Rectangle2D) null, point2D0, plotState0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-651), combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      Locale locale0 = Locale.TAIWAN;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator("h#YKb]jx", numberFormat0, numberFormat0, numberFormat0);
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2(customXYToolTipGenerator0, standardXYURLGenerator0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, false);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(10);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(89);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRenderers((XYItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis((-3284));
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      combinedRangeXYPlot0.setRenderer(500, (XYItemRenderer) defaultXYItemRenderer0, true);
      combinedRangeXYPlot0.getDomainAxis();
      combinedRangeXYPlot0.getDomainAxisLocation(500);
      combinedRangeXYPlot0.getAxisOffset();
      combinedRangeXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisEdge();
      combinedRangeXYPlot0.getRangeAxisForDataset(2);
      combinedRangeXYPlot0.getRangeAxis();
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = Locale.KOREA;
      DateAxis dateAxis0 = new DateAxis("", timeZone0, locale0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, dateAxis0, dateAxis0, xYBlockRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      vectorSeriesCollection0.hasListener(xYPlot0);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeXYPlot1.getRangeMarkers(1299, layer1);
      combinedRangeXYPlot1.clearSelection();
      combinedRangeXYPlot0.setRangePannable(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.0F, "");
      cyclicNumberAxis0.setDownArrow(xYBlockRenderer0.DEFAULT_SHAPE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      LegendItem legendItem0 = new LegendItem("+.!k0rZm$-, 9", "AcY8mI:g^.`'", "zW$^>U#W}%B", "&HHTrP.", combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, xYBlockRenderer0.DEFAULT_PAINT);
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairPaint(samplingXYLineRenderer0.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(moduloAxis0.DEFAULT_TICK_MARK_STROKE);
      DateTickUnitType dateTickUnitType0 = DateTickUnitType.HOUR;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 1318.2529, rectangle2D0, 200.0);
      combinedDomainXYPlot0.zoomRangeAxes(Double.NaN, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.getRangeAxis((-4066));
      PeriodAxis periodAxis0 = null;
      try {
        periodAxis0 = new PeriodAxis("78S4QZr3 2@.l\" M{", (RegularTimePeriod) null, (RegularTimePeriod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.PeriodAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      DateAxis dateAxis0 = new DateAxis("o>");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setQuadrantPaint(0, dateAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.setRangeCrosshairPaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot2.getDomainAxisLocation(62);
      axisLocation0.getOpposite();
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot2.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setAxisOffset(logAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot2.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer1);
      AxisLocation axisLocation1 = combinedDomainXYPlot2.getDomainAxisLocation();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(combinedDomainXYPlot2.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot1.getRangeZeroBaselineStroke();
      logAxis0.setLabelToolTip("IZq)w?l,i!D`E;");
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeAxisLocation(0, axisLocation1, true);
      Vector<Size2D> vector0 = new Vector<Size2D>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxes(10, vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DateTickUnitType dateTickUnitType0 = DateTickUnitType.HOUR;
      Layer layer0 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker(178.19379, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(1206, (Marker) valueMarker0, layer1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Locale locale0 = new Locale("0+OHN>48m*i>'", "0+OHN>48m*i>'", "^Nniu\"~QGF\"WGK6KJ");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      ValueMarker valueMarker0 = new ValueMarker(796);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker(796, (Marker) valueMarker0, layer0);
      xYPlot0.indexOf((XYDataset) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearSelection();
      combinedRangeXYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(8, (XYItemRenderer) standardXYItemRenderer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 0.0, rectangle2D0, 0.0);
      xYPlot0.zoomRangeAxes(1318.2529, plotRenderingInfo0, point2D0, false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.getRangeAxis(3);
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Boolean boolean0 = new Boolean(false);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-1646), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("1");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeCrosshairValue((double) 10);
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      samplingXYLineRenderer0.getLegendShape((-4821));
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) samplingXYLineRenderer0, true);
      combinedDomainXYPlot0.getDomainAxis();
      combinedDomainXYPlot0.getDomainAxisLocation(517);
      combinedRangeXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.getDomainCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset((-56));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -56 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainAxisLocation((-1));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedRangeXYPlot0.drawZeroRangeBaseline((Graphics2D) null, rectangle2D0);
      combinedRangeXYPlot0.canSelectByRegion();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean.valueOf(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-568));
      axisLocation0.getOpposite();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = new PriorityQueue<ChronoLocalDate>();
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.setRangeAxisLocation(6, axisLocation0, false);
      Vector<Size2D> vector0 = new Vector<Size2D>();
      combinedDomainXYPlot0.getDataset(500);
      combinedDomainXYPlot0.canSelectByPoint();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedRangeXYPlot0.setDomainAxisLocation(axisLocation0);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.getSectionOutlineStroke(1.0F);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeMarkers(797, layer0);
      combinedRangeXYPlot0.clearSelection();
      xYPlot0.setRangePannable(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 500, "");
      cyclicNumberAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LegendItem legendItem0 = new LegendItem("h", "Null 'marker' not permitted.", "+.!k0rZm$-, 9", "7NZGo[8>}#a9A", xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      combinedRangeCategoryPlot0.setBackgroundImageAlignment(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setDomainCrosshairValue(0.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis0);
      combinedDomainXYPlot0.setQuadrantPaint(3, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-651), combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addDomainMarker((-651), (Marker) valueMarker0, layer0, true);
      combinedRangeXYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 500, layer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Layer layer1 = Layer.FOREGROUND;
      Layer layer2 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (10) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.clearSelection();
      String string0 = "";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 500, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, categoryStepRenderer0);
      categoryPlot0.getFixedRangeAxisSpace();
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(10);
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, false);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Range range0 = Range.scale(cyclicNumberAxis0.DEFAULT_RANGE, 10);
      Range.combine(range0, cyclicNumberAxis0.DEFAULT_RANGE);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getPlotInfo();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setQuadrantPaint(2, combinedRangeXYPlot1.DEFAULT_GRIDLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot((ValueAxis) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      multiplePiePlot0.getDataExtractOrder();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainTickBandPaint(spiderWebPlot1.DEFAULT_LABEL_BACKGROUND_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot3);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1060);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.drawDomainTickBands(graphics2D0, rectangle2D0, vector0);
      combinedRangeXYPlot1.setRangeAxis(62, (ValueAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "org.jfree.chart.block.RectangleConstraint");
      NumberTickUnit numberTickUnit0 = cyclicNumberAxis0.getTickUnit();
      logAxis1.setTickUnit(numberTickUnit0);
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(true);
      combinedDomainXYPlot0.getAnnotations();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      PolarPlot polarPlot0 = new PolarPlot();
      combinedDomainXYPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius((-139));
      defaultPolarItemRenderer0.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(450);
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, true);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((double[][]) null, (double[][]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 10;
      doubleArray2[1] = 268.0;
      doubleArray2[2] = (double) 10;
      doubleArray2[3] = (double) 1.0F;
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = 268.0;
      doubleArray2[6] = 268.0;
      doubleArray2[7] = (double) 10;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      Point2D point2D0 = spiderWebPlot0.getWebPoint(rectangle2D0, 10, 2273.335170141338);
      combinedRangeXYPlot0.zoomRangeAxes(268.0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.getDomainAxisForDataset(2);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairPaint(xYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setRangeGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.setRangeGridlinePaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("TD|", 0.0, 0.0, 0.0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPointerAnnotation0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-3333.742), "org.jfree.data.general.DatasetGroup");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(797, layer0);
      xYPlot0.clearSelection();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getLegendItems();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-489));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-489) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D rectangle2D1 = rectangle2D0.createIntersection(rectangle2D0);
      jFreeChart0.fireChartChanged();
      AxisSpace axisSpace0 = combinedDomainXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D1);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      chartRenderingInfo0.getEntityCollection();
      ModuloAxis moduloAxis0 = new ModuloAxis("ZOOM_RANGE_BOTH", (Range) null);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.lookupSeriesPaint(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      int int0 = (-1);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1), standardXYToolTipGenerator0, (XYURLGenerator) null);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      combinedDomainXYPlot0.setForegroundAlpha((-1704.25F));
      xYShapeRenderer0.lookupSeriesShape((-27));
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Font font1 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.getQuadrantPaint(2);
      combinedDomainXYPlot0.getDomainZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      NumberAxis numberAxis0 = new NumberAxis();
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYIntervalSeriesCollection0.equals(windItemRenderer0);
      XYPlot xYPlot0 = new XYPlot(xYIntervalSeriesCollection0, numberAxis0, numberAxis0, windItemRenderer0);
      xYPlot0.setWeight(500);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "Null 'marker' not permitted.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeMinorGridlinePaint();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      xYPlot0.setDomainMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2);
      axisLocation0.getOpposite();
      axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation0);
      xYPlot0.setRangeAxisLocation(61, axisLocation0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue(0.0);
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      samplingXYLineRenderer0.setBaseURLGenerator((XYURLGenerator) timeSeriesURLGenerator0);
      xYPlot0.setRenderer(10, (XYItemRenderer) samplingXYLineRenderer0, false);
      xYPlot0.getDomainAxis();
      xYPlot0.getDomainAxisLocation(2);
      xYPlot0.getAxisOffset();
      xYPlot0.getDomainCrosshairValue();
      xYPlot0.getDomainAxisEdge();
      xYPlot0.getRangeAxisForDataset(2);
      xYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.chart.renderer.xy.XYStepRenderer", range1);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      LogAxis logAxis1 = new LogAxis("Indices must be unique.");
      valueAxisArray0[2] = (ValueAxis) logAxis1;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot2.getRangeGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(valueAxisArray0[1]);
      combinedDomainXYPlot3.setDomainAxis(6, (ValueAxis) logAxis0, true);
      combinedDomainXYPlot2.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot1.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(10);
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, false);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Range range0 = Range.scale(cyclicNumberAxis0.DEFAULT_RANGE, 10);
      Range.combine(range0, cyclicNumberAxis0.DEFAULT_RANGE);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo2 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      chartRenderingInfo2.getPlotInfo();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.getRangeTickBandPaint();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setQuadrantPaint(2, defaultPolarItemRenderer0.DEFAULT_PAINT);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(valueAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.setDomainTickBandPaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 304);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D0, vector0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxis((-489), valueAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8);
      PeriodAxis periodAxis0 = new PeriodAxis("LshUSCQtp_@");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      String string0 = "org.jfree.chart.util.RectangleInsets";
      periodAxis0.setLabelURL("org.jfree.chart.util.RectangleInsets");
      combinedDomainXYPlot1.setRangeCrosshairValue(Double.NaN);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(10);
      combinedRangeXYPlot0.setDomainAxisLocation(1, axisLocation0, false);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Range range0 = Range.scale(cyclicNumberAxis0.DEFAULT_RANGE, 10);
      Range.combine(range0, cyclicNumberAxis0.DEFAULT_RANGE);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo2 = (ChartRenderingInfo)chartRenderingInfo0.clone();
      chartRenderingInfo2.getPlotInfo();
      CategoryMarker categoryMarker0 = new CategoryMarker(3, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker(1, (Marker) categoryMarker0, layer0, false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-2454), (ValueAxis) cyclicNumberAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.75, 10);
      cyclicNumberAxis0.hasListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      PaintScale paintScale0 = xYBlockRenderer0.getPaintScale();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, cyclicNumberAxis0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedRangeXYPlot0.setAxisOffset(combinedDomainXYPlot0.DEFAULT_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 10);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(moduloAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(500, layer0);
      DateTickUnitType dateTickUnitType0 = DateTickUnitType.MILLISECOND;
      DateTickUnit dateTickUnit0 = new DateTickUnit(dateTickUnitType0, 500);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(moduloAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-193), (ValueAxis) moduloAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot1.getRangeGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot1.getQuadrantPaint(1);
      combinedDomainXYPlot1.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeTickBandPaint(combinedRangeXYPlot1.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeGridlineStroke(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.clearDomainMarkers();
      LogAxis logAxis2 = new LogAxis((String) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("y BL4mn%\"");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      PeriodAxis periodAxis0 = new PeriodAxis("y BL4mn%\"");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot1.setDomainCrosshairValue((-1814.6493262424167), true);
      periodAxis0.setLabelURL(")+y5r");
      combinedDomainXYPlot0.setRangeCrosshairValue((double) 1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8);
      combinedDomainXYPlot1.addDomainMarker((Marker) categoryMarker0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot2);
      PolarPlot polarPlot0 = new PolarPlot();
      combinedDomainXYPlot1.getFixedDomainAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(moduloAxis0);
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.setRangeMinorGridlinePaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", xYShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart("?p%COl0!", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      chartPanel0.setZoomOutFactor(1.0F);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(2, 783, 1, chartRenderingInfo0);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      jInternalFrame0.getNormalBounds();
      combinedDomainXYPlot0.setRangeCrosshairPaint(logAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      combinedDomainXYPlot1.setDomainAxis(0, (ValueAxis) logAxis0, false);
      combinedDomainXYPlot1.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot1.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setRangeGridlineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(4.0, 1.0F, 1.0F, 10);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setDomainCrosshairValue(0.0, false);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      PeriodAxis periodAxis0 = new PeriodAxis("Indices must be Integer instances.");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      periodAxis0.setTickMarksVisible(false);
      Paint paint0 = thermometerPlot0.getValuePaint();
      periodAxis0.setAxisLinePaint(paint0);
      Class<LegendItemCollection> class0 = LegendItemCollection.class;
      periodAxis0.setMinorTickTimePeriodClass(class0);
      combinedDomainXYPlot0.setDomainAxis((ValueAxis) periodAxis0);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(periodAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.mapDatasetToDomainAxis(3, 3);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      combinedDomainXYPlot0.getIndexOf(xYShapeRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      float[] floatArray0 = new float[5];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 10;
      floatArray0[2] = 1.0F;
      floatArray0[3] = (float) 3;
      floatArray0[4] = (float) 10;
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      int int0 = (-1057);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-98);
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1, 4, byteArray0, 0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
      numberAxis3D0.setRange(range0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(stroke0);
      combinedRangeXYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      PeriodAxis periodAxis0 = new PeriodAxis("LshUSCQtp_@");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 10, true);
      periodAxis0.setLabelURL(")+y5r");
      combinedDomainXYPlot0.setRangeCrosshairValue(0.05);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("x{qK.ho0d%s", combinedRangeXYPlot0);
      PolarPlot polarPlot0 = new PolarPlot();
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0, true);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Range range0 = Range.scale(cyclicNumberAxis0.DEFAULT_RANGE, 10);
      Range.combine(range0, cyclicNumberAxis0.DEFAULT_RANGE);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      chartRenderingInfo1.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxis((-2454), (ValueAxis) cyclicNumberAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      combinedDomainXYPlot0.setDataset(500, (XYDataset) defaultXYZDataset0);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getDomainAxis(0);
      combinedRangeXYPlot0.getDomainAxisEdge(1);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot1.getRendererForDataset(defaultXYZDataset0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = null;
      combinedDomainXYPlot0.getDomainAxisLocation(10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot1.getDomainAxisLocation(1569);
      combinedDomainXYPlot0.addChangeListener(combinedDomainXYPlot1);
      combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedRangeXYPlot0.setAxisOffset(combinedDomainXYPlot1.DEFAULT_INSETS);
      combinedDomainXYPlot1.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot1.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("org.jfree.chart.renderer.xy.XYStepRenderer", range1);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      valueAxisArray0[1] = (ValueAxis) logAxis0;
      LogAxis logAxis1 = new LogAxis("Indices must be unique.");
      valueAxisArray0[2] = (ValueAxis) logAxis1;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot2.getRangeGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot(valueAxisArray0[1]);
      combinedDomainXYPlot3.setDomainAxis(6, (ValueAxis) logAxis0, true);
      combinedDomainXYPlot2.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot1.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setForegroundAlpha(0.0F);
      plotRenderingInfo0.clone();
      combinedRangeXYPlot0.panDomainAxes(0.0, plotRenderingInfo0, (Point2D) null);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
      combinedRangeXYPlot1.getSeriesCount();
      Vector<VectorRenderer> vector0 = new Vector<VectorRenderer>();
      Stack<YIntervalRenderer> stack0 = new Stack<YIntervalRenderer>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes((-2366), stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("l$78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      valueAxisArray0[1] = (ValueAxis) moduloAxis0;
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      Range.combine(range0, moduloAxis0.DEFAULT_RANGE);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) moduloAxis0, false);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale();
      DateAxis dateAxis0 = new DateAxis();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, dateAxis0);
      AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (-3333.742), "org.jfree.data.general.DatasetGroup");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot1.getDomainAxisLocation(17);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot2.getDomainAxisLocation();
      combinedRangeXYPlot0.setAxisOffset(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot1.getRangeCrosshairStroke();
      combinedDomainXYPlot1.getRangeMarkers((Layer) null);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, logAxis0, logAxis0, samplingXYLineRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeMarkers(797, layer0);
      combinedRangeXYPlot0.clearSelection();
      xYPlot0.setRangePannable(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 500, "");
      cyclicNumberAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getLegendItems();
      LegendItem legendItem0 = new LegendItem("h", "Null 'marker' not permitted.", "+.!k0rZm$-, 9", "7NZGo[8>}#a9A", xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
      legendItemCollection0.add(legendItem0);
      combinedRangeXYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[8];
      xYItemRendererArray0[0] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[4] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[5] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[6] = (XYItemRenderer) samplingXYLineRenderer0;
      xYItemRendererArray0[7] = (XYItemRenderer) samplingXYLineRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.75, 10);
      cyclicNumberAxis0.hasListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 689.0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      combinedRangeXYPlot0.getDatasetCount();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(10);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getSeriesRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("l$78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      valueAxisArray0[1] = (ValueAxis) moduloAxis0;
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setDomainAxis(500, (ValueAxis) moduloAxis0, false);
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.POSITIVE_INFINITY, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D rectangle2D1 = rectangle2D0.createIntersection(rectangle2D0);
      jFreeChart0.fireChartChanged();
      AxisSpace axisSpace0 = combinedDomainXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D1);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      chartRenderingInfo0.getEntityCollection();
      ModuloAxis moduloAxis0 = new ModuloAxis("ZOOM_RANGE_BOTH", (Range) null);
      combinedDomainXYPlot0.drawDomainCrosshair(graphics2D0, rectangle2D1, plotOrientation0, (-1318.875602174858), moduloAxis0, combinedDomainXYPlot1.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
      RectangleEdge rectangleEdge0 = Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      axisSpace0.ensureAtLeast((double) 1.0F, rectangleEdge1);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      PeriodAxis periodAxis0 = new PeriodAxis("LshUSCQtp_@");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      periodAxis0.setLabelURL(")+y5r");
      combinedDomainXYPlot0.setRangeCrosshairValue(0.05);
      xYPlot0.setDomainCrosshairVisible(true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.clearAnnotations();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setQuadrantPaint(10, xYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (10) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("l$78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      valueAxisArray0[1] = (ValueAxis) moduloAxis0;
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes((-790.0), 1.0E-8, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Font font1 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("s6E.l&(Z9nsi~FU}", font1, xYPlot0, false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1244.9726, 10, 4, (-372.1717055869999));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("G$4z/Kwp0");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(xYShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getQuadrantPaint(2);
      combinedRangeXYPlot1.setDomainCrosshairVisible(false);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      xYPlot0.setRangeAxisLocation(3, axisLocation0);
      xYPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(796);
      axisLocation0.getOpposite();
      xYPlot0.setRangeAxisLocation(3, axisLocation0);
      xYPlot0.setRangeCrosshairLockedOnData(false);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(1664.3729261241067);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[7];
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(valueAxis0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, true);
      xYItemRendererArray0[0] = (XYItemRenderer) xYDifferenceRenderer0;
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) samplingXYLineRenderer0;
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0.0, false);
      xYItemRendererArray0[2] = (XYItemRenderer) clusteredXYBarRenderer0;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) xYBarRenderer0;
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) xYDotRenderer0;
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYErrorRenderer0;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) defaultXYItemRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      double double0 = 10.0;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(823);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 823, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setDomainGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeXYPlot0.setDomainAxis(2283, (ValueAxis) logAxis0);
      combinedRangeXYPlot0.setRangeCrosshairStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYAreaRenderer0;
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(4, symbolicXYItemLabelGenerator0, customXYURLGenerator0);
      xYItemRendererArray0[1] = (XYItemRenderer) standardXYItemRenderer0;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      xYItemRendererArray0[2] = (XYItemRenderer) defaultXYItemRenderer0;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1634.003234386), false, symbolicXYItemLabelGenerator0);
      xYItemRendererArray0[3] = (XYItemRenderer) candlestickRenderer0;
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) xYErrorRenderer0;
      StandardXYItemRenderer standardXYItemRenderer1 = new StandardXYItemRenderer(10, symbolicXYItemLabelGenerator0);
      xYItemRendererArray0[5] = (XYItemRenderer) standardXYItemRenderer1;
      // Undeclared exception!
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setForegroundAlpha(1.0F);
      combinedRangeXYPlot0.panDomainAxes(10, plotRenderingInfo0, (Point2D) null);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.zoomDomainAxes((-350.563269878441), 0.35, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(74, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(1, (Marker) categoryMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart(":|n;](", combinedDomainXYPlot0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYSplineRenderer0);
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      xYPlot0.setDomainZeroBaselinePaint(paint0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(74, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(1, (Marker) categoryMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart(":|n;](", combinedDomainXYPlot0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      MatrixSeries matrixSeries0 = new MatrixSeries(":|n;](", 10, 60);
      matrixSeriesCollection0.removeSeries(matrixSeries0);
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYSplineRenderer0);
      xYPlot0.setDomainZeroBaselinePaint(combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.setRangeGridlinePaint(xYSplineRenderer0.DEFAULT_VALUE_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(1664.3729261241067);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[7];
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(valueAxis0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, true);
      xYItemRendererArray0[0] = (XYItemRenderer) xYDifferenceRenderer0;
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) samplingXYLineRenderer0;
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0.0, false);
      xYItemRendererArray0[2] = (XYItemRenderer) clusteredXYBarRenderer0;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) xYBarRenderer0;
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) xYDotRenderer0;
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYErrorRenderer0;
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      xYItemRendererArray0[6] = (XYItemRenderer) defaultXYItemRenderer0;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.clearDomainMarkers();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-1482));
      combinedDomainXYPlot1.setDomainAxisLocation(axisLocation0, false);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis3D0);
      Paint paint0 = combinedDomainXYPlot1.getRangeGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      Paint paint1 = subCategoryAxis0.getLabelPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, paint1, subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot1.clearAnnotations();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setQuadrantPaint(3488, paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (3488) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_CROSSHAIR_STROKE;
      xYPlot0.setDomainCrosshairStroke(basicStroke0);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer2 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer2);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.setAxisOffset(numberAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDatasetRenderingOrder(datasetRenderingOrder0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      JFreeChart jFreeChart0 = new JFreeChart("Index ", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      combinedDomainXYPlot1.select((-397.4386880573666), 1.0E-8, rectangle2D0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-568));
      axisLocation0.getOpposite();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.setRangeAxisLocation(6, axisLocation0, false);
      Vector<Size2D> vector0 = new Vector<Size2D>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToDomainAxes((-4016), vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", xYShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart("?p%COl0!", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      chartPanel0.setZoomOutFactor(1.0F);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 783, 1, chartRenderingInfo0);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      combinedDomainXYPlot0.setRangeCrosshairPaint(logAxis0.DEFAULT_TICK_LABEL_PAINT);
      Object object0 = combinedDomainXYPlot0.clone();
      chartRenderingInfo0.equals(object0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Stack<XYLineAnnotation> stack0 = new Stack<XYLineAnnotation>();
      combinedDomainXYPlot0.drawRangeTickBands(graphics2D0, rectangle0, stack0);
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke(1800, 10, false);
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      combinedDomainXYPlot0.setDomainTickBandPaint((Paint) null);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.0, "Fmk1+AT$K'");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.getRangeAxisEdge(10);
      combinedRangeXYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer2 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer2.getBaseStroke();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      NumberAxis numberAxis0 = new NumberAxis("Ss");
      valueAxisArray0[4] = (ValueAxis) numberAxis0;
      valueAxisArray0[5] = null;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.add(xYPlot0, 86);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(numberAxis0.DEFAULT_TICK_MARK_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeRangeMarker(4, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Font font1 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("s6E.l&(Z9nsi~FU}", font1, xYPlot0, false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1244.9726, 10, 4, (-372.1717055869999));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("G$4z/Kwp0");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(xYShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(74, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(1, (Marker) categoryMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart(":|n;](", combinedDomainXYPlot0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      XYPlot xYPlot0 = new XYPlot(matrixSeriesCollection0, numberAxis3D0, numberAxis3D0, xYSplineRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-8);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.setDefaultEntityRadius(500);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1), standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultKeyedValues2DDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      Rectangle rectangle0 = new Rectangle((-960), 10);
      spiderWebPlot1.calculateLabelLocation(rectangle2D0, 1.0F, rectangle0, (-1.0));
      combinedDomainXYPlot0.setDomainTickBandPaint(defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 66);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle0, vector0);
      combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) cyclicNumberAxis0, false);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      combinedRangeXYPlot0.setDataset((XYDataset) defaultIntervalXYDataset0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)98;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, (-9999), byteArray0, byteArray0, byteArray0, (byte) (-5));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (-9999) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(xYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("s6E.l&(Z9nsi~FU}", font0, xYPlot0, false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation((-2821.0198986641), 1.0E-100, 0.0, 0.5F);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("bTt)])p1NNSgr> ");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setItemLabelAnchorOffset((-1.0));
      defaultPolarItemRenderer1.getBaseStroke();
      int int0 = 2980;
      ValueAxis[] valueAxisArray0 = new ValueAxis[15];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(348);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 348, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D rectangle2D1 = rectangle2D0.createIntersection(rectangle2D0);
      jFreeChart0.fireChartChanged();
      AxisSpace axisSpace0 = combinedDomainXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D1);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      ModuloAxis moduloAxis0 = new ModuloAxis("ZOOM_RANGE_BOTH", (Range) null);
      combinedDomainXYPlot0.drawDomainCrosshair(graphics2D0, rectangle2D1, plotOrientation0, (-1318.875602174858), moduloAxis0, combinedDomainXYPlot1.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT);
      RectangleEdge rectangleEdge0 = Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      axisSpace0.ensureAtLeast((double) 1.0F, rectangleEdge1);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setDomainGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeXYPlot0.setDomainAxis(2283, (ValueAxis) logAxis0);
      combinedRangeXYPlot0.setRangeCrosshairStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(yIntervalSeriesCollection0);
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(defaultPolarItemRenderer1.DEFAULT_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = null;
      combinedDomainXYPlot1.setRangeAxes(valueAxisArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.getRangeGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedDomainXYPlot1.setRangeAxis((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.getQuadrantPaint((-3766));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-3766) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      JFreeChart jFreeChart0 = new JFreeChart("x{qK.ho0d%s", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("PRINT", 680, 10, 2281.44);
      Stroke stroke0 = categoryPointerAnnotation0.getArrowStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(420, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, 0.5F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.getPlotArea();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.calculateAxisSpace((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeAxisEdge(10);
      combinedRangeXYPlot0.setDomainGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.getDomainMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(74, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(1, (Marker) categoryMarker0, layer0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainCrosshairValue((double) 1, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.clear();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.getRangeGridlineStroke();
      combinedRangeXYPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD_AND_REMOVE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 4, (-1));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(".png", seriesChangeInfo0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.getRendererForDataset(defaultXYZDataset0);
      combinedRangeXYPlot0.setDomainCrosshairPaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(4, (Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      logarithmicAxis0.setTickLabelsVisible(false);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-2872.324747795838), 1.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, logarithmicAxis0.DEFAULT_TICK_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.getRangeAxisIndex(logarithmicAxis0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryTableXYDataset0);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAnnotations();
      CategoryMarker categoryMarker0 = new CategoryMarker(1);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("`O<=oOth)", combinedDomainXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((-564), (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot1.getFixedLegendItems();
      combinedDomainXYPlot1.getDomainCrosshairValue();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String string0 = "";
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(moduloAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.POSITIVE_INFINITY, (-1797.000480159));
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0);
      combinedRangeXYPlot0.setRangeCrosshairStroke(moduloAxis0.DEFAULT_AXIS_LINE_STROKE);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(3671);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeRangeMarker(4, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Font font1 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("s6E.l&(Z9nsi~FU}", font1, xYPlot0, false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1244.9726, 10, 4, (-372.1717055869999));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("G$4z/Kwp0");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(xYShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getQuadrantPaint(2);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(500);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-5471.461733286), 1.0E-8);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.isDomainPannable();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      candlestickRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) standardXYZURLGenerator0, false);
      candlestickRenderer0.setAutoPopulateSeriesShape(false);
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke(10, 10, true);
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      combinedDomainXYPlot0.setDomainTickBandPaint(candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, "series");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getRangeAxisEdge(1);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, basicStroke0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(categoryMarker0);
      categoryMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      basicStroke0.getDashArray();
      combinedRangeXYPlot0.addDomainMarker((-2234), (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot1.setRangeCrosshairVisible(true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedRangeXYPlot1.getRendererForDataset(jDBCXYDataset0);
      combinedRangeXYPlot1.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.getDomainAxisEdge();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3138.619, (-725.0));
      cyclicNumberAxis0.hasListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      combinedRangeXYPlot0.setDomainCrosshairValue(1.0E-8, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo1.clear();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Domain_Axis", (Font) null, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.5F, Float.POSITIVE_INFINITY, 0.0F, 300);
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      jFreeChart0.fireChartChanged();
      AxisSpace axisSpace0 = combinedDomainXYPlot1.calculateAxisSpace(graphics2D0, rectangle2D1);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleEdge rectangleEdge0 = Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      RectangleEdge rectangleEdge1 = RectangleEdge.opposite(rectangleEdge0);
      axisSpace0.ensureAtLeast((double) 1.0F, rectangleEdge1);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.zoomDomainAxes((-790.0), 1.0E-8, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(796);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(796, (Marker) valueMarker0, layer0);
      xYPlot0.getDomainAxis((-5));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.setDomainCrosshairPaint(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.isDomainMinorGridlinesVisible();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(xYAreaRenderer0);
      combinedRangeXYPlot0.addDomainMarker((Marker) valueMarker0, layer0);
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0, true);
      JTree jTree0 = new JTree(defaultTreeModel0);
      TreePath treePath0 = jTree0.getClosestPathForLocation(10, (-843));
      Rectangle rectangle0 = jTree0.getPathBounds(treePath0);
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle0);
      xYPlot0.getRangeAxisEdge(500);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.setDomainGridlineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone.getTimeZone((ZoneId) zoneOffset0);
      combinedDomainXYPlot0.setNoDataMessage("Invalid title position.");
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot1.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(0.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-1705), numberAxis0.DEFAULT_TICK_MARK_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-1705) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setUpArrow(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setNoDataMessage("{pD;=-^SOusz)OqzX");
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(225.0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      numberAxis3D0.setMinorTickCount(2290);
      Layer layer1 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addRangeMarker(1331, (Marker) null, layer1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYShapeRenderer xYShapeRenderer1 = new XYShapeRenderer();
      xYShapeRenderer1.getGuideLineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset((-414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -414 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      logarithmicAxis0.setTickLabelsVisible(false);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      combinedRangeXYPlot0.isDomainGridlinesVisible();
      combinedRangeXYPlot0.getRangeMinorGridlinePaint();
      int int0 = (-3027);
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(500, (-3027), 10, (-3027));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (fffff42d
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToRangeAxes(10, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeMarkers((-575));
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot1.getRangeAxisLocation();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      combinedRangeXYPlot1.clone();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-698.5881), (double) 10, 0.0);
      JFreeChart jFreeChart0 = new JFreeChart("item", combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      // Undeclared exception!
      try { 
        affineTransformOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src image is null
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainGridlinesVisible(true);
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes(2071, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, basicStroke0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((-2234), (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot1.setRangeCrosshairVisible(true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedRangeXYPlot1.getRendererForDataset(jDBCXYDataset0);
      combinedRangeXYPlot1.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setUpArrow(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setNoDataMessage("{pD;=-^SOusz)OqzX");
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(225.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantPaint(10, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (10) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      combinedRangeXYPlot0.setDomainCrosshairValue(1.0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      chartRenderingInfo0.clear();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot1.getRangeGridlineStroke();
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0);
      LinkedList<XYBarRenderer> linkedList0 = new LinkedList<XYBarRenderer>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes((-716), linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 10, 2837);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, logAxis0, logAxis0, xYAreaRenderer0);
      xYPlot0.setDomainZeroBaselinePaint(xYAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot0.getDomainCrosshairStroke();
      xYPlot0.getOrientation();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      LogAxis logAxis1 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot0.clearDomainMarkers();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(500);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis1);
      combinedDomainXYPlot1.getRangeGridlinePaint();
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, highLowItemLabelGenerator0);
      candlestickRenderer0.getItemOutlineStroke((-1279), 22, true);
      Object[][][] objectArray0 = new Object[6][7][7];
      Object[][] objectArray1 = new Object[9][1];
      Object[] objectArray2 = new Object[0];
      objectArray1[0] = objectArray2;
      objectArray1[1] = (Object[]) null;
      objectArray1[2] = (Object[]) null;
      objectArray1[3] = (Object[]) null;
      objectArray1[4] = (Object[]) null;
      objectArray1[5] = (Object[]) null;
      objectArray1[6] = (Object[]) null;
      objectArray1[7] = (Object[]) null;
      objectArray1[8] = (Object[]) null;
      objectArray0[0] = objectArray1;
      Object[][] objectArray3 = new Object[0][7];
      objectArray0[1] = objectArray3;
      Object[][] objectArray4 = new Object[8][1];
      objectArray4[0] = objectArray2;
      objectArray4[1] = objectArray2;
      objectArray4[2] = objectArray2;
      objectArray4[3] = objectArray2;
      objectArray4[4] = (Object[]) null;
      objectArray4[5] = (Object[]) null;
      Object[] objectArray5 = new Object[6];
      objectArray5[0] = (Object) logAxis0;
      objectArray5[1] = (Object) highLowItemLabelGenerator0;
      Object object0 = combinedDomainXYPlot1.clone();
      objectArray5[2] = object0;
      objectArray5[3] = (Object) layer0;
      objectArray5[4] = (Object) logAxis0;
      objectArray5[5] = (Object) axisLocation0;
      objectArray4[6] = objectArray5;
      objectArray4[7] = (Object[]) null;
      objectArray0[2] = objectArray4;
      Object[][] objectArray6 = new Object[9][5];
      Object[] objectArray7 = new Object[7];
      objectArray7[0] = (Object) categoryMarker0;
      Object object1 = combinedDomainXYPlot0.clone();
      objectArray7[1] = object1;
      objectArray7[2] = (Object) combinedDomainXYPlot1;
      objectArray7[3] = object0;
      Object object2 = combinedDomainXYPlot1.clone();
      objectArray7[4] = object2;
      Object object3 = combinedDomainXYPlot0.clone();
      objectArray7[5] = object3;
      objectArray7[6] = (Object) candlestickRenderer0;
      objectArray6[0] = objectArray7;
      objectArray6[1] = (Object[]) null;
      objectArray6[2] = objectArray5;
      objectArray6[3] = (Object[]) null;
      objectArray6[4] = (Object[]) null;
      objectArray6[5] = objectArray5;
      objectArray6[6] = (Object[]) null;
      objectArray6[7] = objectArray2;
      objectArray6[8] = objectArray5;
      objectArray0[3] = objectArray6;
      Object[][] objectArray8 = new Object[0][5];
      objectArray0[4] = objectArray8;
      Object[][] objectArray9 = new Object[6][8];
      objectArray9[0] = objectArray2;
      objectArray9[1] = (Object[]) null;
      objectArray9[2] = objectArray2;
      objectArray9[3] = objectArray5;
      objectArray9[4] = objectArray7;
      objectArray9[5] = objectArray5;
      objectArray0[5] = objectArray9;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset((String[]) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      PeriodAxis periodAxis0 = new PeriodAxis("LshUSCQtp_@");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      periodAxis0.setLabelURL(")+y5r");
      combinedDomainXYPlot0.setRangeCrosshairValue(0.05);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("x{qK.ho0d%s", combinedRangeXYPlot0);
      PolarPlot polarPlot0 = new PolarPlot();
      combinedRangeXYPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainGridlinesVisible(false);
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes(796, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3138.619, 3138.619);
      cyclicNumberAxis0.hasListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      combinedRangeXYPlot0.setDomainCrosshairValue(4162.18, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      standardEntityCollection0.getEntities();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      chartRenderingInfo0.clear();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setDomainCrosshairStroke(spiderWebPlot0.DEFAULT_OUTLINE_STROKE);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      combinedDomainXYPlot1.setRenderer((XYItemRenderer) xYLine3DRenderer0);
      combinedRangeXYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.equals(combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisIndex((ValueAxis) null);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      combinedRangeXYPlot0.setDomainCrosshairValue((double) 1.0F, false);
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 31, 10, 0, 152, 10, false, false, true, false, true, false);
      ChartRenderingInfo chartRenderingInfo2 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo2.getPlotInfo();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      chartRenderingInfo0.clear();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot2.setDomainCrosshairStroke(spiderWebPlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(796);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(796, (Marker) valueMarker0, layer0);
      xYPlot0.getDomainAxis((-5));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.setDomainCrosshairPaint(combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPlot0.isDomainMinorGridlinesVisible();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(xYAreaRenderer0);
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0, true);
      JTree jTree0 = new JTree(defaultTreeModel0);
      TreePath treePath0 = jTree0.getClosestPathForLocation(10, (-843));
      Rectangle rectangle0 = jTree0.getPathBounds(treePath0);
      combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle0);
      xYPlot0.getRangeAxisEdge(500);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.getBounds2D();
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot(defaultCategoryDataset0);
      multiplePiePlot1.getDataExtractOrder();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(14.0, "`h,\"+ePA0U{PV\"L");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.getRenderer((-1646));
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.setDefaultEntityRadius(10);
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1), standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.getBounds2D();
      spiderWebPlot1.calculateLabelLocation(rectangle2D0, (-1), rectangle2D1, 2);
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 19);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D_Float0, vector0);
      combinedRangeXYPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", font0, combinedDomainXYPlot0, true);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(2, 0.05, 1354.9561798458, 660.3583);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (55) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Stroke stroke0 = combinedDomainCategoryPlot0.getRangeCrosshairStroke();
      ValueMarker valueMarker0 = new ValueMarker(Double.POSITIVE_INFINITY, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, stroke0, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainGridlineStroke(logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.ITALIAN;
      CategoryMarker categoryMarker0 = new CategoryMarker(500, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      logAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((-3380), (Marker) categoryMarker0, layer0, false);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset((Connection) null);
      combinedDomainXYPlot0.getRendererForDataset(jDBCXYDataset0);
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(basicStroke0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeCrosshairVisible(true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedRangeXYPlot1.getRendererForDataset(jDBCXYDataset0);
      combinedRangeXYPlot1.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-373.6030624536709), (-373.6030624536709), "VyZ%nHy-:W");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBubbleRenderer0);
      xYPlot0.isRangeZoomable();
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeMarkers((-284), layer0);
      xYPlot0.clearSelection();
      cyclicNumberAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LegendItemCollection legendItemCollection0 = combinedRangeCategoryPlot0.getLegendItems();
      LegendItem legendItem0 = new LegendItem("", "zdn6nv1}y}", "", "org.jfree.chart.renderer.category.LayeredBarRenderer", xYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      legendItemCollection0.add(legendItem0);
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      xYPlot0.clearSelection();
      xYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.clearDomainMarkers();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(500);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker1 = new ValueMarker(0.0);
      Layer layer0 = Layer.FOREGROUND;
      boolean boolean0 = false;
      combinedDomainXYPlot0.removeRangeMarker((-737), (Marker) valueMarker0, layer0, false);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer1, false);
      combinedDomainXYPlot0.clearAnnotations();
      int int0 = 6;
      ValueMarker valueMarker2 = null;
      try {
        valueMarker2 = new ValueMarker(0.0, logAxis0.DEFAULT_AXIS_LINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE, logAxis0.DEFAULT_AXIS_LINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE, 6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-976.87), (-976.87));
      NumberAxis numberAxis0 = new NumberAxis();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(customXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, numberAxis0, xYStepRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      String string0 = "M69azR`x5>?Asi{W],";
      ModuloAxis moduloAxis0 = new ModuloAxis("M69azR`x5>?Asi{W],", cyclicNumberAxis0.DEFAULT_RANGE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      xYStepRenderer0.setAutoPopulateSeriesPaint(true);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(10, layer0);
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-116));
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYStepRenderer0.DEFAULT_SHAPE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      // Undeclared exception!
      try { 
        xYPlot0.zoomDomainAxes((double) 2.0F, 0.05, plotRenderingInfo0, (Point2D) point2D_Double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (2.1) <= upper (0.052500000000000005).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Locale locale0 = new Locale("0+OHN>48m*i>'", "0+OHN>48m*i>'", "^Nniu\"~QGF\"WGK6KJ");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.isRangeZeroBaselineVisible();
      xYPlot0.indexOf((XYDataset) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(8, (XYItemRenderer) standardXYItemRenderer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "`h,\"+ePA0U{PV\"L");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-459));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-459) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1), standardXYToolTipGenerator0, (XYURLGenerator) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.getBounds2D();
      spiderWebPlot1.calculateLabelLocation(rectangle2D0, (-1), rectangle2D1, 2);
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 19);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<CandlestickRenderer> vector0 = new Vector<CandlestickRenderer>();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle2D_Float0, vector0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-976.87), (-976.87));
      NumberAxis numberAxis0 = new NumberAxis();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(customXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, numberAxis0, xYStepRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultTableXYDataset0.setAutoWidth(true);
      ModuloAxis moduloAxis0 = new ModuloAxis("M69azR`x5>?Asi{W],", cyclicNumberAxis0.DEFAULT_RANGE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(10, layer0);
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-116));
      combinedDomainXYPlot0.getDomainAxis();
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(2934);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2934, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.BACKGROUND;
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.removeRangeMarker(1669, (Marker) valueMarker0, layer0, false);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      CenterArrangement centerArrangement0 = new CenterArrangement();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      ColumnArrangement columnArrangement0 = new ColumnArrangement((HorizontalAlignment) null, verticalAlignment0, 1.0F, 0.0);
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0, centerArrangement0, columnArrangement0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      categoryMarker0.setLabelAnchor(rectangleAnchor0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(2, (Marker) categoryMarker0, layer1, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(500, (Marker) valueMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      XYPlot xYPlot1 = new XYPlot(matrixSeriesCollection0, dateAxis0, dateAxis0, xYSplineRenderer0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(xYPlot1.DEFAULT_OUTLINE_PAINT);
      xYPlot0.getDomainCrosshairStroke();
      xYPlot0.addRangeMarker((Marker) categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.BACKGROUND;
      DateAxis dateAxis0 = new DateAxis("");
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, (XYToolTipGenerator) null, customXYURLGenerator0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRenderer(886, (XYItemRenderer) standardXYItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("&*:zfFSf/5w6y1uF", dateAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setUpArrow(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setNoDataMessage("{pD;=-^SOusz)OqzX");
      combinedDomainXYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue(225.0);
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.zoomDomainAxes((-790.0), 1.0E-8, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis((-9));
      combinedRangeXYPlot0.getDomainAxisEdge(1);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation(2000);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      PlotRenderingInfo plotRenderingInfo0 = null;
      JFreeChart jFreeChart0 = new JFreeChart("{NxQ_jI", combinedRangeXYPlot0);
      int int0 = 2;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1973, 2000, (-1022), 590, 10, 2, false, true, false, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.getLocationOnScreen();
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, boxAndWhiskerXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-4644), (XYItemRenderer) standardXYItemRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", font0, combinedDomainXYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart("?p%COl0!", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      chartPanel0.setZoomOutFactor(1.0F);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(2, 783, 1, chartRenderingInfo0);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(Double.NaN, plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainXYPlot0.clearAnnotations();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ff%j|");
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(10, layer0);
      combinedRangeXYPlot0.setRangePannable(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(797, (-2042.45884316678), "4");
      cyclicNumberAxis0.setDownArrow(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.clearSelection();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-3255.85024611729));
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.removeDomainMarker((Marker) intervalMarker0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesStroke(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      Boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(valueAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.zoomDomainAxes((-790.0), 1.0E-8, plotRenderingInfo0, (Point2D) null);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(59, 500);
      combinedDomainXYPlot0.getRendererForDataset(dynamicTimeSeriesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(moduloAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(moduloAxis0);
      DatasetRenderingOrder datasetRenderingOrder1 = combinedRangeCategoryPlot0.getDatasetRenderingOrder();
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder1);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDomainAxis((-1));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDomainAxisEdge(10);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedRangeXYPlot1.getRendererForDataset(jDBCXYDataset0);
      combinedRangeXYPlot1.setDomainMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      standardEntityCollection0.addAll(standardEntityCollection1);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      candlestickRenderer0.setSeriesURLGenerator(1271, (XYURLGenerator) standardXYZURLGenerator0, true);
      candlestickRenderer0.setAutoPopulateSeriesShape(true);
      candlestickRenderer0.getItemOutlineStroke((-2519), (-576), false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairStroke(candlestickRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.setDomainTickBandPaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.setDomainTickBandPaint((Paint) null);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis(3258);
      combinedRangeXYPlot0.getDomainAxisEdge(2);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      xYPlot0.getRendererForDataset((XYDataset) null);
      combinedRangeXYPlot0.setDomainCrosshairPaint(valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
      ValueMarker valueMarker0 = new ValueMarker((-2148));
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeRangeMarker((-2148), (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      candlestickRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) standardXYZURLGenerator0, false);
      candlestickRenderer0.setAutoPopulateSeriesShape(false);
      Stroke stroke0 = candlestickRenderer0.getItemOutlineStroke(10, 10, true);
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      combinedDomainXYPlot0.setDomainTickBandPaint(candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainTickBandPaint((Paint) null);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3138.619, 3138.619);
      cyclicNumberAxis0.hasListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.getDomainAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.getRangeTickBandPaint();
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getDataset();
      combinedRangeXYPlot0.setDomainCrosshairValue(4162.18, true);
      double double0 = 0.0;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      chartRenderingInfo0.clear();
      try { 
        ICC_Profile.getInstance("XY_Plot");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot open file XY_Plot
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.setDomainGridlineStroke(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.ITALIAN;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0, locale0);
      combinedRangeXYPlot0.getRendererForDataset(timeTableXYDataset0);
      combinedDomainXYPlot0.getRangeAxisCount();
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
      combinedDomainXYPlot0.setRangeGridlineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      double double0 = 1.0E-8;
      JFreeChart jFreeChart0 = new JFreeChart("~3([ZZcJfxwx#X ", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(10);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      int int0 = (-2992);
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, (XYToolTipGenerator) null, customXYURLGenerator0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRenderer((-2992), (XYItemRenderer) standardXYItemRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(500);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      boolean boolean0 = new Boolean(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getDomainAxisLocation((-568));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      PlotRenderingInfo plotRenderingInfo0 = null;
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 1973, 893, 885, 10, 2, true, true, true, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.getLocationOnScreen();
        fail("Expecting exception: IllegalComponentStateException");
      
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getBaseStroke();
      ValueAxis valueAxis0 = null;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
      Paint paint0 = combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, paint0, logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(6, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getFixedLegendItems();
      combinedDomainXYPlot0.getDomainCrosshairValue();
      combinedDomainXYPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-976.87), (-976.87));
      NumberAxis numberAxis0 = new NumberAxis();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(customXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, numberAxis0, xYStepRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ModuloAxis moduloAxis0 = new ModuloAxis("M69azR`x5>?Asi{W],", cyclicNumberAxis0.DEFAULT_RANGE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(10, layer0);
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-116));
      float float0 = 0.0F;
      double[] doubleArray0 = new double[1];
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYStepRenderer0.DEFAULT_SHAPE);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      doubleArray0[0] = (double) 2934;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Paint paint0 = thermometerPlot0.getMercuryPaint();
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxis(92);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.clearDomainMarkers((-2288));
      combinedRangeXYPlot0.getRangeMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-1), standardXYToolTipGenerator0, (XYURLGenerator) null);
      combinedRangeXYPlot0.setRenderer(205, (XYItemRenderer) standardXYItemRenderer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.getBounds2D();
      spiderWebPlot1.calculateLabelLocation(rectangle2D0, (-1), rectangle2D1, 2);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", font0, combinedDomainXYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart("?p%COl0!", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      chartPanel0.setZoomOutFactor(1.0F);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 783, 1, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle0);
      combinedDomainXYPlot0.addRangeMarker(2867, (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.setRangeCrosshairPaint(logAxis0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      float float0 = 0.0F;
      ValueMarker valueMarker0 = new ValueMarker(2208.493643325, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(277, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getRangeAxisIndex((ValueAxis) null);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(deviationRenderer0);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD_AND_REMOVE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 4, (-1));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(".png", seriesChangeInfo0);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      defaultTableXYDataset0.seriesChanged(seriesChangeEvent0);
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, dateAxis0, dateAxis0, xYAreaRenderer0);
      xYPlot0.setDomainZeroBaselinePaint(stackedXYAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      xYPlot0.getDomainCrosshairStroke();
      PlotOrientation plotOrientation0 = xYPlot0.getOrientation();
      xYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.setGuideLineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      xYShapeRenderer0.getGuideLineStroke();
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", font0, combinedDomainXYPlot0, true);
      JFreeChart jFreeChart1 = new JFreeChart("?p%COl0!", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 783, 1, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD_AND_REMOVE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getDomainMarkers(500, (Layer) null);
      combinedDomainXYPlot0.getDomainAxis((-2653));
      combinedDomainXYPlot0.getFixedLegendItems();
      combinedDomainXYPlot0.getDomainCrosshairValue();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(".png", true);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation();
      Layer layer0 = Layer.BACKGROUND;
      DateAxis dateAxis0 = new DateAxis("o:F");
      DateAxis dateAxis1 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis1);
      Marker marker0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeRangeMarker(500, (Marker) null, layer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDataset((-1408), (XYDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      IndexColorModel indexColorModel0 = new IndexColorModel(10, 1, byteArray0, byteArray0, byteArray0, byteArray0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.isDomainMinorGridlinesVisible();
      combinedRangeXYPlot1.isRangePannable();
      XYPointerAnnotation xYPointerAnnotation0 = null;
      try {
        xYPointerAnnotation0 = new XYPointerAnnotation((String) null, (byte)2, 589.869373, (byte)2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.XYTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
      float[][] floatArray0 = new float[4][5];
      float[] floatArray1 = new float[9];
      floatArray1[0] = (float) 10;
      floatArray1[1] = 1.0F;
      floatArray1[2] = 1.0F;
      floatArray1[3] = (float) 10;
      floatArray1[4] = (float) 10;
      floatArray1[5] = (float) 10;
      floatArray1[6] = 1.0F;
      floatArray1[7] = (float) 10;
      floatArray1[8] = 2288.911F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[7];
      floatArray2[0] = (float) 10;
      floatArray2[1] = 2288.911F;
      floatArray2[2] = 1.0F;
      floatArray2[3] = 1.0F;
      floatArray2[4] = 0.0F;
      floatArray2[5] = 1.0F;
      floatArray2[6] = (float) 10;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[9];
      floatArray3[0] = 2288.911F;
      floatArray3[1] = 0.0F;
      floatArray3[2] = 1.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 1.0F;
      floatArray3[5] = 2288.911F;
      floatArray3[6] = 1.0F;
      floatArray3[7] = (float) 10;
      floatArray3[8] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[3];
      floatArray4[0] = 1.0F;
      floatArray4[1] = (-702.0F);
      floatArray4[2] = 0.0F;
      floatArray0[3] = floatArray4;
      DateAxis dateAxis0 = new DateAxis();
      FastScatterPlot fastScatterPlot0 = null;
      try {
        fastScatterPlot0 = new FastScatterPlot(floatArray0, dateAxis0, dateAxis0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.jfree.chart.plot.FastScatterPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(500, layer0);
      combinedDomainXYPlot0.getDomainAxis(680);
      combinedDomainXYPlot0.getFixedLegendItems();
      combinedDomainXYPlot0.getDomainCrosshairValue();
      combinedDomainXYPlot0.getDataRange((ValueAxis) null);
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(334, (XYDataset) null);
      combinedRangeXYPlot0.getDomainAxis(92);
      combinedRangeXYPlot0.getDomainAxisEdge(500);
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.equals(combinedRangeXYPlot0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.panDomainAxes(Double.NaN, plotRenderingInfo0, (Point2D) null);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue(Double.NaN, false);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      int int0 = (-737);
      combinedRangeXYPlot0.getDataset((-737));
      combinedRangeXYPlot0.setDomainPannable(false);
      String string0 = "Ci:";
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Ci:", 0.0, 5.0E10, 0.0);
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYPointerAnnotation0, true);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[3];
      int int1 = 4;
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(783);
      NumberAxis numberAxis0 = new NumberAxis("M>7");
      numberAxis0.setUpArrow(xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      double double0 = 10.0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0);
      cyclicNumberAxis0.setLabelInsets(numberAxis0.DEFAULT_TICK_LABEL_INSETS, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation((-2541), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-976.87), (-976.87));
      NumberAxis numberAxis0 = new NumberAxis();
      CustomXYToolTipGenerator customXYToolTipGenerator0 = new CustomXYToolTipGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(customXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, numberAxis0, xYStepRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ModuloAxis moduloAxis0 = new ModuloAxis("M69azR`x5>?Asi{W],", cyclicNumberAxis0.DEFAULT_RANGE);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(10, layer0);
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-116));
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(2934);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2934, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(59, axisLocation0);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Stroke stroke0 = xYShapeRenderer0.getGuideLineStroke();
      stroke0.createStrokedShape(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(stroke0);
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(false);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      Paint paint0 = combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, paint0, logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) categoryMarker0, layer0, false);
      NumberAxis numberAxis0 = new NumberAxis();
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker1 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, numberAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      Layer layer2 = Layer.FOREGROUND;
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      combinedDomainXYPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("Y~M{s.F");
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis0, numberAxis0, xYLineAndShapeRenderer0);
      RectangleInsets rectangleInsets0 = new RectangleInsets(1.0F, (-1246.88625641691), 866.275, 154.5);
      // Undeclared exception!
      try { 
        rectangleInsets0.trim((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-976.87), (-976.87));
      SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD_AND_REMOVE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, (-3290), (-737));
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(cyclicNumberAxis0, seriesChangeInfo0);
      defaultTableXYDataset0.seriesChanged(seriesChangeEvent0);
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      xYPlot0.setDomainZeroBaselinePaint(xYAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.getDomainCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Locale locale0 = new Locale("0+OHN>48m*i>'", "0+OHN>48m*i>'", "^Nniu\"~QGF\"WGK6KJ");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      ValueMarker valueMarker0 = new ValueMarker(796);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(796, (Marker) valueMarker0, layer0);
      xYPlot0.indexOf((XYDataset) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(8, (XYItemRenderer) standardXYItemRenderer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot1 = new SpiderWebPlot(defaultCategoryDataset0, tableOrder0);
      spiderWebPlot1.calculateLabelLocation(rectangle2D0, 2.5E-4, rectangle2D0, 238.0);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(65, axisLocation1);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      XYShapeRenderer xYShapeRenderer1 = new XYShapeRenderer();
      xYShapeRenderer1.getGuideLineStroke();
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(xYShapeRenderer1.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      int int0 = 2980;
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(348);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 348, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("{pD;=-^SOusz)OqzX");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.getRenderer(10);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(logarithmicAxis0);
      axisChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 1530, 10, 15, 10, (-2437), 4, false, true, true, true, false, true, true);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      jViewport0.getViewPosition();
      combinedRangeXYPlot0.setRangePannable(false);
      JWindow jWindow0 = null;
      try {
        jWindow0 = new JWindow((Window) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(1, layer0);
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker(0.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, defaultPolarItemRenderer0.DEFAULT_OUTLINE_STROKE, defaultPolarItemRenderer1.DEFAULT_VALUE_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, (-5.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(moduloAxis0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 10);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(moduloAxis0);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeXYPlot1.removeDomainMarker(783, (Marker) null, layer1, true);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers((-298), layer0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Color color0 = styleContext0.getForeground(simpleAttributeSet0);
      GradientPaint gradientPaint0 = new GradientPaint(0.0F, 2980, color0, 1.0F, 0.0F, color0);
      CategoryMarker categoryMarker0 = new CategoryMarker(500, defaultPolarItemRenderer0.DEFAULT_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, gradientPaint0, defaultPolarItemRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Layer layer1 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker((-64.68796807), defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedDomainXYPlot1.removeDomainMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("iLT91xFo:g-Bl}+-");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.05);
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.removeRangeMarker(573, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.addRangeMarker(10, (Marker) valueMarker0, layer0, false);
      JFreeChart jFreeChart0 = new JFreeChart("iLT91xFo:g-Bl}+-", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 126, 10, 1907, 1907, 10, false, false, false, false, true, true, true);
      jFreeChart0.addProgressListener(chartPanel0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0, false);
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
      Paint paint0 = combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, paint0, logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(6, (Marker) valueMarker0, layer0, true);
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane((-1550));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.equals((Object) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.isRangeCrosshairVisible();
      combinedRangeXYPlot1.getDomainAxisCount();
      combinedRangeXYPlot1.setDomainMinorGridlinesVisible(false);
      combinedRangeXYPlot1.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 10, false);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(false);
      combinedRangeXYPlot1.getDataset(1);
      combinedRangeXYPlot0.setDomainPannable(false);
      combinedRangeXYPlot1.setRangeAxisLocation(797, (AxisLocation) null);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.BACKGROUND;
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.removeRangeMarker(1669, (Marker) valueMarker0, layer0, false);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(2, (Marker) categoryMarker0, layer1, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(500, (Marker) valueMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(3103);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(34, (XYDataset) null);
      combinedRangeXYPlot0.getRangeTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(34, (XYDataset) null);
      combinedRangeXYPlot0.getDomainAxis(335);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+tKC~>^[`vz}";
      SymbolAxis symbolAxis0 = new SymbolAxis("+tKC~>^[`vz}", stringArray0);
      XYPlot xYPlot1 = new XYPlot(categoryTableXYDataset0, symbolAxis0, symbolAxis0, stackedXYAreaRenderer0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      boolean boolean0 = true;
      defaultPolarItemRenderer1.getItemStroke(5, 10, true);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getThermometerStroke();
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(2452.97725, 0.0, stackedXYAreaRenderer0.DEFAULT_PAINT, defaultPolarItemRenderer0.DEFAULT_STROKE, stackedXYAreaRenderer0.DEFAULT_PAINT, thermometerPlot0.DEFAULT_OUTLINE_STROKE, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer1 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer1.getBaseStroke();
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0, 2980);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeDomainMarker(2980, (Marker) null, layer0, false);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      xYPlot0.clearSelection();
      xYPlot0.setDomainGridlinePaint(color0);
      LogAxis logAxis0 = new LogAxis("0+OHN>48m*i>'");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getDomainAxis(796);
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
      xYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getDomainMarkers(500, layer0);
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker("78S4QZr3 2@.l\" M{", moduloAxis0.DEFAULT_TICK_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, moduloAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("a|B]+");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.getRangeAxisLocation();
      Marker marker0 = null;
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2255, 500, chartRenderingInfo0);
      BufferedImage bufferedImage1 = colorConvertOp0.filter(bufferedImage0, bufferedImage0);
      bufferedImage1.createGraphics();
      short[][] shortArray0 = new short[7][1];
      short[] shortArray1 = new short[4];
      shortArray1[0] = (short) (-489);
      shortArray1[1] = (short) (-715);
      shortArray1[2] = (short)88;
      shortArray1[3] = (short)823;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[4];
      shortArray2[0] = (short) (-489);
      shortArray2[1] = (short) (-489);
      shortArray2[2] = (short) (-489);
      shortArray2[3] = (short)823;
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[5];
      shortArray3[0] = (short)823;
      shortArray3[1] = (short)6;
      shortArray3[2] = (short)15;
      shortArray3[3] = (short)88;
      shortArray3[4] = (short)88;
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[4];
      shortArray4[0] = (short) (-715);
      shortArray4[1] = (short)88;
      shortArray4[2] = (short) (-489);
      shortArray4[3] = (short) (-715);
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[2];
      shortArray5[0] = (short) (-489);
      shortArray5[1] = (short)6;
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[1];
      shortArray6[0] = (short)6;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[3];
      shortArray7[0] = (short)88;
      shortArray7[1] = (short)6;
      shortArray7[2] = (short)88;
      shortArray0[6] = shortArray7;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-240), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToDomainAxes(796, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(59, axisLocation0);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Stroke stroke0 = xYShapeRenderer0.getGuideLineStroke();
      combinedRangeXYPlot0.setRangeMinorGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Locale locale0 = new Locale("0+OHN>48m*i>'", "0+OHN>48m*i>'", "^Nniu\"~QGF\"WGK6KJ");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      ValueMarker valueMarker0 = new ValueMarker(238.0, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(796, (Marker) valueMarker0, layer0);
      xYPlot0.indexOf((XYDataset) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearSelection();
      combinedRangeXYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(8, (XYItemRenderer) standardXYItemRenderer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, 0.0, rectangle2D0, 0.0);
      xYPlot0.zoomRangeAxes(1318.2529, plotRenderingInfo1, point2D0, false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0);
      xYPlot0.indexOf((XYDataset) null);
      xYPlot0.clearSelection();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      xYPlot0.removeRangeMarker((Marker) valueMarker0, (Layer) null);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(0, (XYItemRenderer) standardXYItemRenderer0, false);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.equals(combinedRangeXYPlot0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.panDomainAxes(Double.NaN, plotRenderingInfo0, (Point2D) null);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue(Double.NaN, false);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, symbolicXYItemLabelGenerator0, (XYURLGenerator) null);
      combinedRangeXYPlot0.setRenderer(2, (XYItemRenderer) standardXYItemRenderer0, true);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.isDomainCrosshairVisible();
      xYPlot0.indexOf((XYDataset) null);
      xYPlot0.clearSelection();
      xYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(0, (XYItemRenderer) standardXYItemRenderer0, false);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(796);
      xYPlot0.setRangeAxisLocation(3, axisLocation0);
      xYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      xYPlot0.clearSelection();
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.getDomainAxis(335);
      xYPlot0.getRangeZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedRangeXYPlot0.setDomainAxisLocation(axisLocation0);
      combinedRangeXYPlot0.getRenderer(205);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("y BL4mn%\"");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("x{qK.ho0d%s", combinedDomainXYPlot0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue(0.0, true);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getDataset(15);
      combinedRangeXYPlot0.setDomainPannable(false);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((-737), (AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = 205;
      combinedRangeXYPlot0.getRenderer(205);
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      JFreeChart jFreeChart0 = new JFreeChart("8JH`=gcST", (Font) null, combinedRangeXYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform1, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 205);
      // Undeclared exception!
      try { 
        affineTransformOp0.filter(bufferedImage0, bufferedImage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // src image cannot be the same as the dst image
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.expandToInclude(range0, (-790.0));
      ModuloAxis moduloAxis0 = new ModuloAxis("78S4QZr3 2@.l\" M{", range1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainXYPlot0.zoomDomainAxes((-790.0), 1.0E-8, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      XYItemRenderer xYItemRenderer0 = null;
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(jDBCXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis(")#q~GV=;=w0.`)w[");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer(symbolicXYItemLabelGenerator0, (XYURLGenerator) null);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(xYSeriesCollection0, periodAxis0, numberAxis0, (XYItemRenderer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(2, (XYDataset) null);
      combinedRangeXYPlot0.getDomainAxis(3258);
      combinedRangeXYPlot0.getDomainAxisEdge(2);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      xYPlot0.getRendererForDataset((XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[9];
      Locale locale0 = new Locale("0+OHN>48m*i>'", "0+OHN>48m*i>'", "^Nniu\"~QGF\"WGK6KJ");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 796, 0.0, 0.0, 0.0, 1.0F);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(date0, 1.0F, 0.0, 1.0F, 0.0, 0.0);
      oHLCDataItemArray0[1] = oHLCDataItem1;
      OHLCDataItem oHLCDataItem2 = new OHLCDataItem(date0, 3462.7088, (-2533.02281), 0.0, 1.0E8, (-2533.02281));
      oHLCDataItemArray0[2] = oHLCDataItem2;
      OHLCDataItem oHLCDataItem3 = new OHLCDataItem(date0, 0.0, 0.0, 0.0, 0.0, 10);
      oHLCDataItemArray0[3] = oHLCDataItem3;
      OHLCDataItem oHLCDataItem4 = new OHLCDataItem(date0, 10, 796, 2665.5839, (-2533.02281), (-1264.6024625612613));
      oHLCDataItemArray0[4] = oHLCDataItem4;
      OHLCDataItem oHLCDataItem5 = new OHLCDataItem(date0, 0.0, 0.0, (-1264.6024625612613), 3462.7088, 180.9988);
      oHLCDataItemArray0[5] = oHLCDataItem5;
      OHLCDataItem oHLCDataItem6 = new OHLCDataItem(date0, 0.0, 0.0, 0.0, 0.0, 796);
      oHLCDataItemArray0[6] = oHLCDataItem6;
      OHLCDataItem oHLCDataItem7 = new OHLCDataItem(date0, 1.0E8, 0.0, (-2533.02281), (-1264.6024625612613), 0.0);
      oHLCDataItemArray0[7] = oHLCDataItem7;
      OHLCDataItem oHLCDataItem8 = new OHLCDataItem(date0, 0.0, 0.0, 0.0, 1.0E8, (-2533.02281));
      oHLCDataItemArray0[8] = oHLCDataItem8;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(1.0F, oHLCDataItemArray0);
      xYPlot0.setDataset(796, (XYDataset) defaultOHLCDataset0);
      assertEquals(797, xYPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0, xYPlot0.DEFAULT_BACKGROUND_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeRangeMarker(0, (Marker) valueMarker0, layer0);
      int int0 = xYPlot0.indexOf((XYDataset) null);
      assertEquals(0, int0);
      
      xYPlot0.clearSelection();
      xYPlot0.clearRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer((-492), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.setRenderer(0, (XYItemRenderer) standardXYItemRenderer0, false);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.remove(combinedRangeXYPlot0);
      combinedDomainXYPlot0.getRangeAxisEdge();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      ItemLabelPosition itemLabelPosition0 = candlestickRenderer0.getBasePositiveItemLabelPosition();
      defaultPolarItemRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition0, false);
      Stroke stroke0 = defaultPolarItemRenderer0.getBaseStroke();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(stroke0);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainCrosshairStroke();
      int int0 = 0;
      int int1 = (-1408);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset((-1408));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -1408 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRenderer(205);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.equals(combinedRangeXYPlot0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.panDomainAxes(Double.NaN, plotRenderingInfo0, (Point2D) null);
      combinedRangeXYPlot0.isRangeCrosshairVisible();
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getSeriesCount();
      combinedRangeXYPlot0.setRangeCrosshairValue(Double.NaN, false);
      combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.getDataset((-737));
      combinedRangeXYPlot0.setDomainPannable(false);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((-737), (AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      DateAxis dateAxis0 = new DateAxis(".png");
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(defaultXYZDataset0, dateAxis0, dateAxis0, stackedXYAreaRenderer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.DefaultXYZDataset cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = 49;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 49 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis(")#q~GV=;=w0.`)w[");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      numberAxis0.setLabelInsets(combinedDomainXYPlot0.DEFAULT_INSETS, false);
      combinedDomainXYPlot0.setRangeAxisLocation(500, (AxisLocation) null, true);
      combinedDomainXYPlot0.setDomainCrosshairStroke(numberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue((-1350.7186647130825));
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(500);
      Rectangle2D rectangle2D0 = rectangle0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      numberAxis0.lengthToJava2D(5000000.0, rectangle2D0, rectangleEdge0);
      numberAxis0.setAutoRange(false);
      ValueMarker valueMarker0 = new ValueMarker(1504.676509927619, numberAxis0.DEFAULT_TICK_MARK_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.addRangeMarker(500, (Marker) valueMarker0, (Layer) null, true);
      int int0 = combinedDomainXYPlot0.getWeight();
      assertEquals(1, int0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeXYPlot0.setDomainAxisLocation(59, axisLocation0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, true);
      Paint paint0 = combinedDomainXYPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) valueMarker0, layer0, true);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, paint0, logAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.removeRangeMarker(500, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.addRangeMarker(6, (Marker) valueMarker0, layer0, true);
      double double0 = 1.0E7;
      JFreeChart jFreeChart0 = new JFreeChart("TextBlockAnchor.BOTTOM_CENTER", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      double double1 = 0.0;
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane((-1550));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Stroke stroke0 = stackedAreaRenderer0.getBaseStroke();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(stroke0);
      Point2D point2D0 = combinedDomainXYPlot0.getQuadrantOrigin();
      combinedDomainXYPlot0.clearDomainAxes();
      combinedDomainXYPlot0.setQuadrantOrigin(point2D0);
      Graphics2D graphics2D0 = null;
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      // Undeclared exception!
      try { 
        basicTabbedPaneUI0.getTabBounds(jTabbedPane0, 28);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-402.29990171996));
      String string0 = "Null 'paint' argument.";
      cyclicNumberAxis0.setLabelToolTip("Null 'paint' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 500 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.mapDatasetToRangeAxis(4, 4);
      double double0 = 202.472635913;
      double double1 = (-949.582529101476);
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      // Undeclared exception!
      try { 
        multiTreeUI0.getPathBounds((JTree) null, (TreePath) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      combinedDomainXYPlot0.getAnnotations();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedDomainXYPlot0.addDomainMarker((Marker) categoryMarker0);
      double double0 = 0.0;
      double double1 = 324.09498144;
      JFreeChart jFreeChart0 = new JFreeChart("x{qK.ho0d%s", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(1024);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1024, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("o%;KO-5-L>Dq~", timeZone0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      dateAxis0.setLowerBound(1.0F);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JDBCPieDataset jDBCPieDataset0 = null;
      try {
        jDBCPieDataset0 = new JDBCPieDataset((Connection) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // A connection must be supplied.
         //
         verifyException("org.jfree.data.jdbc.JDBCPieDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainAxis(335);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
      Stroke stroke0 = combinedDomainCategoryPlot0.getRangeGridlineStroke();
      xYPlot0.setDomainGridlineStroke(stroke0);
      xYPlot0.getDomainCrosshairPaint();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.ITALIAN;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0, locale0);
      xYPlot0.getRendererForDataset(timeTableXYDataset0);
      xYPlot0.getRangeAxisCount();
      int int0 = 0;
      int int1 = 0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-91);
      byte byte0 = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-91);
      byteArray1[1] = (byte)109;
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte) (-91);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1355), 0, byteArray0, byteArray0, byteArray0, byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYBubbleRenderer0.findRangeBounds((XYDataset) null);
      combinedRangeXYPlot0.getIndexOf(xYBubbleRenderer0);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }
}
