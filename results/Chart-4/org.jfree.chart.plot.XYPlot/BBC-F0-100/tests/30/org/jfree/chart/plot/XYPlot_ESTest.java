/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 06 11:10:36 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.TexturePaint;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseWheelEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParsePosition;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.TransferHandler;
import javax.swing.border.AbstractBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.border.SoftBevelBorder;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.block.ColorBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.SymbolicXYItemLabelGenerator;
import org.jfree.chart.labels.XYItemLabelGenerator;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.HighLowRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.WindItemRenderer;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.renderer.xy.XYStepRenderer;
import org.jfree.chart.renderer.xy.YIntervalRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.urls.CustomXYURLGenerator;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.StandardXYZURLGenerator;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesChangeInfo;
import org.jfree.data.general.SeriesChangeType;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.DateRange;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainPannable(true);
      Point point0 = new Point();
      combinedDomainXYPlot0.panDomainAxes(0, (PlotRenderingInfo) null, point0);
      combinedDomainXYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Line2D.Double line2D_Double0 = new Line2D.Double(1, 2, 2.0F, 1.0F);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("fSLf5@p", valueAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset0);
      chartPanel0.getOrientation();
      combinedRangeCategoryPlot0.getDomainCrosshairPaint();
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getSectionOutlineStroke(((NumberAxis) valueAxis0).DEFAULT_TICK_UNIT);
      Color color0 = Color.BLUE;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, defaultCaret0, 0.995, (Stroke) null, color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Line2D.Double line2D_Double0 = new Line2D.Double(1, 2, 2.0F, 1.0F);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("fSLf5@p", valueAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      Area area0 = new Area();
      area0.getBounds();
      jFreeChart0.draw(graphics2D0, (Rectangle2D) defaultCaret0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ZOOM_IN_RANGE");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0, "ZOOM_RANGE_BOTH");
      bufferedImage0.createGraphics();
      XYPlot xYPlot1 = jFreeChart0.getXYPlot();
      xYPlot1.setRangeAxis(10, valueAxis0);
      xYPlot1.calculateAxisSpace(graphics2D0, defaultCaret0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.clearRangeMarkers(680);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addRangeMarker((-2083), (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      NumberAxis numberAxis0 = new NumberAxis("EA9d'@");
      // Undeclared exception!
      combinedRangeXYPlot0.setRangeAxis(2146715866, (ValueAxis) numberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      NumberAxis numberAxis0 = new NumberAxis("p5!");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, numberAxis0, numberAxis0, xYBubbleRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2563, 2563);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 500, 0.0F, 0.05, 2563);
      xYPlot0.addAnnotation((XYAnnotation) xYDataImageAnnotation0, false);
      xYPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Month month0 = new Month();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, (-2489), month0, zoneInfo0);
      Range range0 = dynamicTimeSeriesCollection0.getRangeBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("", range0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(month0, dynamicTimeSeriesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      xYPlot0.getRenderer(10);
      xYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0, false);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-386));
      // Undeclared exception!
      combinedDomainXYPlot0.setRangeAxisLocation(2143109954, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("G&g%yhT");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      logarithmicAxis0.setTickLabelPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(2, 10, (double) 2.0F, (double) 1, chartRenderingInfo0);
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      combinedRangeXYPlot0.setDataset(2143109954, (XYDataset) xYIntervalSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point point0 = new Point();
      // Undeclared exception!
      combinedDomainXYPlot0.setDomainAxis(2132466279, (ValueAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Stack<XYErrorRenderer> stack0 = new Stack<XYErrorRenderer>();
      TimeSeries timeSeries0 = new TimeSeries(0.0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(476.85529115175, 1562.0, "Null 'annotation' argument.");
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, xYErrorRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, xYErrorRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker(500, (Marker) categoryMarker0, layer0, false);
      xYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2851, "%G:+4");
      IntervalMarker intervalMarker0 = new IntervalMarker((-26.068359375), 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0);
      DateAxis dateAxis0 = new DateAxis("%G:+4", simpleTimeZone0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer(1.0E-8);
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, dateAxis0, numberAxis3D0, stackedXYBarRenderer0);
      combinedRangeXYPlot0.setParent(xYPlot0);
      NumberAxis3D numberAxis3D1 = new NumberAxis3D();
      numberAxis3D1.setTickMarkInsideLength(1.0F);
      combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D1);
      xYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
      combinedDomainXYPlot0.getDomainAxisCount();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F);
      combinedDomainXYPlot0.addDomainMarker((-826), (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.addDomainMarker((-826), (Marker) intervalMarker0, layer0, true);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("G&g%yhT");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYBubbleRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(logarithmicAxis0);
      xYPlot0.getRangeAxis(1085);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisEdge();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      ModuloAxis moduloAxis0 = new ModuloAxis("", (Range) null);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "tPCxk:6 )EFik!4f";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      valueAxisArray0[1] = (ValueAxis) symbolAxis0;
      Second second0 = new Second();
      RegularTimePeriod regularTimePeriod0 = second0.previous();
      PeriodAxis periodAxis0 = new PeriodAxis("'minY' cannot be INF or NaN.", regularTimePeriod0, second0);
      valueAxisArray0[2] = (ValueAxis) periodAxis0;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(false);
      combinedRangeXYPlot0.setDomainAxis(500, (ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainTickBandPaint();
      combinedRangeXYPlot0.getDomainAxisIndex(logarithmicAxis0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(500, 500, (-315));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -315
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("G&g%y+T");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYBubbleRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(logarithmicAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, (-1.0F), renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 2.0F, (double) 0, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(10, 10, 492.9581F, 0.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(492.9581F, 0, 10, 1.0F);
      ArrayList<DefaultXYItemRenderer> arrayList0 = new ArrayList<DefaultXYItemRenderer>();
      xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D_Float0, arrayList0);
      Area area0 = new Area();
      area0.getBounds();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("G&g%y+T");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(9.0, (-2890.6207));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge(0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      AxisSpace axisSpace0 = xYPlot0.calculateAxisSpace(graphics2D1, rectangle2D_Float0);
      // Undeclared exception!
      try { 
        subCategoryAxis0.reserveSpace(graphics2D0, xYPlot0, rectangle2D_Float0, rectangleEdge0, axisSpace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1472);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ITALY;
      Quarter quarter0 = new Quarter(mockDate0, simpleTimeZone0, locale0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[8];
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 4, 4, (-719.7710814608), (-1220.966), 1472);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, (-3821.9), 225.0, (-1034.0), (-1220.966), (-1220.966));
      oHLCDataItemArray0[1] = oHLCDataItem1;
      OHLCDataItem oHLCDataItem2 = new OHLCDataItem(mockDate0, (-919.8746531704617), 1825.35606, 1472, 0.35, (-180.0));
      oHLCDataItemArray0[2] = oHLCDataItem2;
      OHLCDataItem oHLCDataItem3 = new OHLCDataItem(mockDate0, 183.931640625, 1764.0932580830226, (-410.7227120955), 1764.0932580830226, 1472);
      oHLCDataItemArray0[3] = oHLCDataItem3;
      OHLCDataItem oHLCDataItem4 = new OHLCDataItem(mockDate0, 4, 1480.1361654263492, 1480.1361654263492, (-1220.966), (-919.8746531704617));
      oHLCDataItemArray0[4] = oHLCDataItem4;
      OHLCDataItem oHLCDataItem5 = new OHLCDataItem(mockDate0, (-531.7), (-1034.0), (-919.8746531704617), (-719.7710814608), (-531.7));
      oHLCDataItemArray0[5] = oHLCDataItem5;
      OHLCDataItem oHLCDataItem6 = new OHLCDataItem(mockDate0, (-1034.0), 160.5275291062, 1.0, (-2604.45915), 0.0);
      oHLCDataItemArray0[6] = oHLCDataItem6;
      OHLCDataItem oHLCDataItem7 = new OHLCDataItem(mockDate0, 1207.06551, (-719.7710814608), 160.5275291062, 2332.76717772, 1.0);
      oHLCDataItemArray0[7] = oHLCDataItem7;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(quarter0, oHLCDataItemArray0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(15.0, (-410.7227120955), "");
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultOHLCDataset0, cyclicNumberAxis0, cyclicNumberAxis0, highLowRenderer0);
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Stack<DefaultValueDataset> stack0 = new Stack<DefaultValueDataset>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object[][][] objectArray0 = new Object[0][5][5];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
      LogAxis logAxis0 = new LogAxis();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(500);
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, logAxis0, logAxis0, cyclicXYItemRenderer0);
      xYPlot0.setDataset((XYDataset) defaultWindDataset0);
      logAxis0.resizeRange2(3, 4812.4);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      stack0.add(defaultValueDataset0);
      xYPlot0.getDomainCrosshairPaint();
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      Layer layer0 = Layer.BACKGROUND;
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 1443, 10, (-1103), 10, 1287, true, true, true, true, true, true, true);
      chartPanel0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(1.0E-8, plotRenderingInfo0, (Point2D) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot1.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot1.addRangeMarker((Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.addRangeMarker((Marker) valueMarker0);
      combinedRangeXYPlot1.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 10 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers(10);
      Font font0 = Axis.DEFAULT_TICK_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("3F!{nk", font0, combinedDomainXYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      DefaultKeyedValues2DDataset[] defaultKeyedValues2DDatasetArray0 = new DefaultKeyedValues2DDataset[7];
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[0] = defaultKeyedValues2DDataset0;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset1 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[1] = defaultKeyedValues2DDataset1;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset2 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[2] = defaultKeyedValues2DDataset2;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset3 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[3] = defaultKeyedValues2DDataset3;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset4 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[4] = defaultKeyedValues2DDataset4;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset5 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[5] = defaultKeyedValues2DDataset5;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset6 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDatasetArray0[6] = defaultKeyedValues2DDataset6;
      JList<DefaultKeyedValues2DDataset> jList0 = new JList<DefaultKeyedValues2DDataset>(defaultKeyedValues2DDatasetArray0);
      Dimension dimension0 = jList0.getPreferredScrollableViewportSize();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      PlotState plotState0 = new PlotState();
      combinedDomainXYPlot0.draw(graphics2D0, rectangle0, point0, plotState0, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYBubbleRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(logarithmicAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      timeTableXYDataset0.removeChangeListener(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, (-1.0F), renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(2, 10, (double) 2.0F, (double) 0, chartRenderingInfo0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(80, (XYDataset) timeTableXYDataset0);
      xYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(274, standardXYToolTipGenerator0);
      standardXYItemRenderer0.getLegendItem(10, (-4));
      Color color0 = (Color)Axis.DEFAULT_TICK_LABEL_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 8, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      standardXYItemRenderer0.setPlotLines(false);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      highLowItemLabelGenerator0.clone();
      LogAxis logAxis0 = new LogAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(3127, (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(2133, (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.clearDomainMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getRangeMinorGridlineStroke();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.getRangeAxisForDataset((-3694));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -3694 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addRangeMarker(10, (Marker) valueMarker0, layer0, false);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CustomXYURLGenerator customXYURLGenerator0 = new CustomXYURLGenerator();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(2, standardXYToolTipGenerator0, customXYURLGenerator0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(xYStepAreaRenderer0, xYSeriesCollection0);
      combinedDomainXYPlot0.datasetChanged(datasetChangeEvent0);
      JFreeChart jFreeChart0 = new JFreeChart("{0}: ({1}, {2})", xYStepAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot1, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 408, (-116.4720221464), (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D rectangle2D0 = null;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.calculateDomainAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.addRangeMarker((Marker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 10;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (float) 10;
      floatArray0[3] = (float) 10;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 1.0F;
      floatArray0[6] = (float) 10;
      floatArray0[7] = (float) 10;
      floatArray0[8] = 1.0F;
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.PlotState", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      // Undeclared exception!
      try { 
        rescaleOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.RescaleOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedDomainXYPlot0.getRendererForDataset(histogramDataset0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(93, 10, 2025.0, 0.08, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[5];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 15;
      floatArray0[2] = 0.5F;
      floatArray0[3] = 1.0F;
      floatArray0[4] = (float) 10;
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedDomainXYPlot1.zoomDomainAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      Stack<SystemColor> stack0 = new Stack<SystemColor>();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(10, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.clearDomainMarkers(10);
      combinedDomainXYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("fSLf5@p", valueAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Paint paint0 = categoryPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, defaultCaret0, plotOrientation0, 10, valueAxis0, thermometerPlot0.DEFAULT_OUTLINE_STROKE, paint0);
      xYPlot0.getRangeAxisLocation();
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.calculateDomainAxisSpace(graphics2D0, defaultCaret0, (AxisSpace) null);
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYBubbleRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(logarithmicAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, (-1.0F), renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 2.0F, (double) 0, chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Line2D.Float line2D_Float0 = new Line2D.Float(10, 10, 492.9581F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      ArrayList<DefaultXYItemRenderer> arrayList0 = new ArrayList<DefaultXYItemRenderer>();
      xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, arrayList0);
      xYPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, (ValueAxis) null, (ValueAxis) null, xYStepRenderer0);
      xYPlot0.getRendererForDataset((XYDataset) null);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Point point0 = new Point();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-1), (Marker) categoryMarker0, layer0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeDomainMarker((-1), (Marker) categoryMarker0, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryMarker", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      TimeSeries timeSeries0 = new TimeSeries(true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, (ValueAxis) null, (ValueAxis) null, xYBubbleRenderer0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(periodAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot1.add((XYPlot) combinedRangeXYPlot0);
      combinedDomainXYPlot0.getDomainAxisIndex(periodAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("\"", xYBubbleRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1900, 334, (-493.0), (double) 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      xYPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedDomainXYPlot0.getRangeAxisLocation(10);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(jDBCPieDataset0);
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      ringPlot0.getSeparatorStroke();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 1963, 462, 221, 500, 94, false, true, false, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1133, (double) 1, 3177.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawRangeCrosshair(graphics2D0, rectangle0, plotOrientation0, 0, cyclicNumberAxis0, ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      MatrixSeries matrixSeries0 = new MatrixSeries("org.jfree.chart.plot.LocalizationBundle", 10, 2);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(matrixSeriesCollection0, logarithmicAxis0, logarithmicAxis0, xYBubbleRenderer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Values less than or equal to zero not allowed with logarithmic axis
         //
         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(jDBCPieDataset0);
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      ringPlot0.getSeparatorStroke();
      JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 1963, 462, 221, 500, 94, false, true, false, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1115, (double) 1, 3177.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawRangeCrosshair(graphics2D0, rectangle0, plotOrientation0, 0, cyclicNumberAxis0, ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer1);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      combinedRangeXYPlot0.setDataset(1097, (XYDataset) xYIntervalSeriesCollection0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("aU%VYFk4xyX", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(47, 47, (-2078.797527869935), 2000.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.drawDomainMarkers(graphics2D0, rectangle0, 10, layer0);
      combinedRangeXYPlot0.getDomainAxisForDataset(72);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setMinorTickMarkInsideLength(1542.0F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0F, 500);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D_Double0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[5];
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYBoxAndWhiskerRenderer0;
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer((-116), standardXYToolTipGenerator0, standardXYURLGenerator0);
      xYItemRendererArray0[1] = (XYItemRenderer) xYStepAreaRenderer0;
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(10, standardXYToolTipGenerator0, standardXYURLGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) cyclicXYItemRenderer0;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) xYBarRenderer0;
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) xYDifferenceRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      ArrayList<ChronoLocalDate> arrayList0 = new ArrayList<ChronoLocalDate>();
      combinedDomainXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D_Double0, arrayList0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(10);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "]K{2CVwxb'D@~c";
      stringArray0[1] = "&LrRGwO=;nN";
      stringArray0[2] = "]K{2CVwxb'D@~c";
      SymbolAxis symbolAxis0 = new SymbolAxis("]K{2CVwxb'D@~c", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(symbolAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot1.getDomainAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation2, true);
      combinedDomainXYPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(799, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      PeriodAxis periodAxis0 = new PeriodAxis(">D*Y>");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      combinedDomainXYPlot1.getDomainAxisIndex(periodAxis0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      Rectangle2D rectangle2D0 = rectangle0.createUnion(rectangle2D_Double0);
      Stroke stroke0 = combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(0, layer0);
      Boolean boolean0 = new Boolean(false);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      JList<DefaultKeyedValues2DDataset> jList0 = new JList<DefaultKeyedValues2DDataset>((Vector<? extends DefaultKeyedValues2DDataset>) null);
      Color color0 = new Color(0, false);
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D1, rectangle2D_Double0, 0.0, stroke0, color0);
      combinedRangeXYPlot0.getRangeCrosshairValue();
      combinedRangeXYPlot0.getDomainAxisCount();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.DataUtilities");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge(1);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle rectangle1 = new Rectangle();
      AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle1);
      AxisSpace axisSpace1 = subCategoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D0, rectangleEdge0, axisSpace0);
      combinedRangeXYPlot0.calculateDomainAxisSpace(graphics2D1, rectangle2D0, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) categoryMarker0, layer0, false);
      combinedRangeXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.getRangeMarkers(10, layer0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1.025, (ValueAxis) null, subCategoryAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle rectangle0 = generalPath0.getBounds();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(jDBCPieDataset0);
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      Stroke stroke0 = ringPlot0.getSeparatorStroke();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 0.05, cyclicNumberAxis0, stroke0, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      AxisLocation axisLocation2 = axisLocation0.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeDomainMarker(10, (Marker) intervalMarker0, layer0, true);
      combinedRangeXYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Stack<DefaultValueDataset> stack0 = new Stack<DefaultValueDataset>();
      Object[][][] objectArray0 = new Object[0][5][5];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
      LogAxis logAxis0 = new LogAxis();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(500);
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, logAxis0, logAxis0, cyclicXYItemRenderer0);
      xYPlot0.setDataset((XYDataset) defaultWindDataset0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      stack0.add(defaultValueDataset0);
      xYPlot0.getDomainCrosshairPaint();
      xYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      rectangle0.createUnion(rectangle2D_Double0);
      Stroke stroke0 = combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      Boolean boolean0 = new Boolean(false);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JList<DefaultKeyedValues2DDataset> jList0 = new JList<DefaultKeyedValues2DDataset>((Vector<? extends DefaultKeyedValues2DDataset>) null);
      Color color0 = jList0.getSelectionForeground();
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle0, 0.0, stroke0, color0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Point point0 = new Point();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryMarker categoryMarker0 = new CategoryMarker(0, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) categoryMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(0, (Marker) null, layer0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((-2248), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.equals(combinedDomainXYPlot1);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.zoomRangeAxes((double) 10, (double) 10, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      BasicStroke basicStroke0 = new BasicStroke();
      combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(10);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, cyclicXYItemRenderer0.DEFAULT_STROKE, cyclicXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      cyclicXYItemRenderer0.getLegendItem(10, 10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, (-1185), 10, 3, 1, 1, false, true, true, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float(2.0F, 3);
      Point point0 = chartPanel0.translateJava2DToScreen(point2D_Float0);
      combinedRangeXYPlot0.zoomRangeAxes((double) 10, plotRenderingInfo0, (Point2D) point0, true);
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      chartRenderingInfo0.setRenderingSource((RenderingSource) null);
      gridBagLayout0.getLayoutOrigin();
      chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 10, 10);
      Dimension dimension0 = new Dimension(1002, 1);
      Dimension dimension1 = new Dimension(dimension0);
      Rectangle rectangle0 = new Rectangle(dimension1);
      rectangle2D_Float0.createIntersection(rectangle0);
      Crosshair crosshair0 = new Crosshair(1002, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedRangeXYPlot0.getRangeAxis(0);
      float[] floatArray0 = new float[0];
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[0] = "-{lBB Lv<Z%od@";
      SymbolAxis symbolAxis0 = new SymbolAxis("-{lBB Lv<Z%od@", stringArray0);
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, symbolAxis0, symbolAxis0, (XYItemRenderer) null);
      XYPlot xYPlot1 = new XYPlot(categoryTableXYDataset0, (ValueAxis) null, (ValueAxis) null, (XYItemRenderer) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.add(xYPlot1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker(90, (Marker) intervalMarker0, layer1);
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart((String) null, font0, combinedDomainXYPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(80, 80, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawRangeMarkers(graphics2D0, (Rectangle2D) null, 10, layer0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawBackground(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 1.0F, 10, 10);
      Dimension dimension0 = new Dimension(1002, 1);
      Dimension dimension1 = new Dimension(dimension0);
      Rectangle rectangle0 = new Rectangle(dimension1);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      Crosshair crosshair0 = new Crosshair(1002, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      combinedRangeXYPlot0.zoomRangeAxes((double) 0, (double) 0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.getRangeAxis(0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMarkers(2, (Layer) null);
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
      Stroke stroke0 = combinedRangeXYPlot0.getDomainCrosshairStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, stroke0);
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation(0, (AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Area area0 = new Area(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.panDomainAxes(0, (PlotRenderingInfo) null, point0);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.StackedBarRenderer3D");
      combinedDomainXYPlot0.setDomainAxis(0, (ValueAxis) periodAxis0, true);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LinkedList<ClusteredXYBarRenderer> linkedList0 = new LinkedList<ClusteredXYBarRenderer>();
      combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, (Rectangle2D) null, linkedList0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawZeroDomainBaseline(graphics2D0, (Rectangle2D) null);
      combinedDomainXYPlot0.getRendererForDataset(histogramDataset0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D_Double0);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(0.05);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(defaultBoxAndWhiskerXYDataset0, numberAxis3D0, defaultPolarItemRenderer0);
      Point point0 = polarPlot0.translateValueThetaRadiusToJava2D(10, 387.480693, rectangle2D_Double0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point1 = gridBagLayout0.location((-686), (-686));
      rectangle2D_Double0.setFrameFromDiagonal((Point2D) point0, (Point2D) point1);
      Vector<XYErrorRenderer> vector0 = new Vector<XYErrorRenderer>();
      combinedDomainXYPlot0.drawDomainTickBands((Graphics2D) null, rectangle2D_Double0, vector0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers((-4506), layer0);
      JFreeChart jFreeChart0 = new JFreeChart("Q?FmW^X", numberAxis3D0.DEFAULT_AXIS_LABEL_FONT, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState((PlotRenderingInfo) null);
      xYItemRendererState0.getCrosshairState();
      combinedDomainXYPlot0.render((Graphics2D) null, rectangle2D_Double0, 768, plotRenderingInfo0, (CrosshairState) null);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2033.681819371542), (-2757.42), combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot1.addRangeMarker((Marker) intervalMarker0);
      combinedRangeXYPlot0.removeDomainMarker((-311), (Marker) intervalMarker0, layer0, false);
      combinedRangeXYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 10 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      TimeZone timeZone0 = TimeZone.getTimeZone("(1OrFK[,~D^)1w.{");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(1OrFK[,~D^)1w.{");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      xYPlot0.getDomainMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      XYPlot xYPlot1 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      combinedDomainXYPlot0.add(xYPlot0);
      xYPlot0.getDomainAxis(30);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JViewport jViewport0 = new JViewport();
      Point point0 = new Point();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes((double) 0, plotRenderingInfo0, (Point2D) point0, false);
      plotRenderingInfo0.getPlotArea();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, false, false);
      GeneralPath generalPath0 = new GeneralPath();
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0, false);
      combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) null, (RenderingSource) chartPanel1);
      PeriodAxis periodAxis0 = new PeriodAxis("COPY");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LegendTitle legendTitle0 = new LegendTitle(boxAndWhiskerRenderer0);
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = combinedRangeXYPlot0.calculateDomainAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace0);
      AxisSpace axisSpace2 = periodAxis0.reserveSpace(graphics2D0, combinedDomainXYPlot0, (Rectangle2D) null, rectangleEdge0, axisSpace1);
      combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, (Rectangle2D) null, axisSpace2);
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      TextTitle textTitle0 = new TextTitle();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0);
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer1);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(2130);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(0.5F, "", "[>w(\"~;/Xhwv39");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      NumberAxis numberAxis0 = new NumberAxis("{oxdx");
      XYPlot xYPlot1 = new XYPlot(timePeriodValuesCollection0, numberAxis0, numberAxis0, xYStepAreaRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setDomainCrosshairValue(0.05);
      combinedDomainXYPlot0.add(xYPlot1);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 548, (double) 500, 265.23, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      combinedDomainXYPlot2.drawVerticalLine(graphics2D0, rectangle2D0, 0.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CombinedDomainXYPlot combinedDomainXYPlot4 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot4.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      xYPlot0.setRangeAxisLocation(1470, axisLocation0, true);
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        xYPlot0.removeRangeMarker((-1033), (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(periodAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
      combinedDomainXYPlot2.add((XYPlot) combinedDomainXYPlot0);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot1.getLegendItems();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot2.getRangeMarkers(10, layer0);
      combinedDomainXYPlot0.setDataset(873, (XYDataset) vectorSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      combinedDomainXYPlot1.setAxisOffset(rectangleInsets0);
      DateAxis dateAxis0 = new DateAxis();
      combinedDomainXYPlot1.clearDomainMarkers(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>(10);
      BasicStroke basicStroke0 = new BasicStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedRangeXYPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      JViewport jViewport0 = new JViewport();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(2373.342711136129, 1.0F, 10, 1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = new Point();
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) null, false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      IntervalMarker intervalMarker0 = new IntervalMarker(4.0, 4.0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      ValueMarker valueMarker0 = new ValueMarker(3765.412);
      combinedRangeXYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      TimeZone timeZone0 = TimeZone.getTimeZone("(1OrFK[,~D^)1w.{");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("(1OrFK[,~D^)1w.{");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.add(xYPlot0);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot0.getLegendItems();
      Stroke stroke0 = combinedRangeXYPlot0.getOutlineStroke();
      combinedRangeXYPlot0.setDomainCrosshairStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      Marker marker0 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addRangeMarker((Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
      combinedRangeXYPlot2.indexOf(xYIntervalSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, Double.NaN, combinedRangeXYPlot2.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot1.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate(0, 500, 10);
      Locale locale0 = Locale.ROOT;
      xYPlot0.setOutlinePaint(periodAxis0.DEFAULT_TICK_LABEL_PAINT);
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 500, "Null 'orientation' argument.");
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.setDomainPannable(true);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      XYPlot xYPlot1 = new XYPlot(xYSeriesCollection0, valueAxisArray0[1], cyclicNumberAxis0, deviationRenderer0);
      xYPlot1.clearSelection();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      PeriodAxis periodAxis1 = new PeriodAxis("");
      // Undeclared exception!
      try { 
        xYPlot1.setRangeAxis((-1196), (ValueAxis) periodAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      DateAxis dateAxis0 = new DateAxis("Indices must be Integer instances.");
      int[] intArray0 = new int[4];
      intArray0[0] = 500;
      intArray0[1] = 10;
      intArray0[2] = 1;
      intArray0[3] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2224, 573, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawAxes(graphics2D0, rectangle0, rectangle0, (PlotRenderingInfo) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-2047));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-2047) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, valueAxis0, valueAxis0, deviationRenderer0);
      combinedRangeXYPlot1.clearSelection();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'offset' argument.");
      combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) periodAxis0, false);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0);
      combinedRangeXYPlot0.removeDomainMarker(463, (Marker) intervalMarker0, layer0, false);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      combinedRangeXYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getRangeAxisForDataset(463);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 463 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-2401.0081826828), combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.addDomainMarker(191, (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.clearDomainAxes();
      JFreeChart jFreeChart0 = new JFreeChart("M", combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 191);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("M", false);
      bufferedImage0.getGraphics();
      BevelBorder bevelBorder0 = new BevelBorder((-2618));
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jCheckBoxMenuItem0, (Border) bevelBorder0, 191, (-1509), (-1657), (-1657));
      Rectangle2D rectangle2D0 = rectangle0.getBounds2D();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawVerticalLine(graphics2D0, rectangle2D0, 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.5E9, "xzHP8lr{_W<|^PdP{l");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 2.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = (double) 1.0F;
      doubleArray3[1] = (double) 2.0F;
      doubleArray3[2] = 1.0E-8;
      doubleArray3[3] = (double) 1.0F;
      doubleArray3[4] = 0.05;
      doubleArray3[5] = 1.0E-8;
      doubleArray3[6] = (double) 2.0F;
      doubleArray3[7] = (-848.86010497876);
      doubleArray3[8] = 0.05;
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      cyclicNumberAxis0.setRange(range0, true, false);
      combinedRangeXYPlot0.setDataset(471, (XYDataset) null);
      combinedRangeXYPlot0.getRangeZeroBaselineStroke();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Point2D.Double point2D_Double1 = new Point2D.Double((-1251.56640019528), 10);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 4, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, (Rectangle2D) null);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot2.setDomainZeroBaselineStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot2.drawHorizontalLine(graphics2D0, (Rectangle2D) null, 0.05, combinedRangeXYPlot1.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot1.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)65;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D0);
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      DateAxis dateAxis0 = new DateAxis("%ckofVUL");
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, dateAxis0, dateAxis0, deviationRenderer0);
      xYPlot0.clearSelection();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      PeriodAxis periodAxis0 = new PeriodAxis("%ckofVUL");
      xYPlot0.setRangeAxis(500, (ValueAxis) periodAxis0, false);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      LogAxis logAxis0 = new LogAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 2.0F);
      combinedDomainXYPlot0.addRangeMarker(1116, (Marker) intervalMarker0, (Layer) null, true);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot2.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = (-358);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((-358), (Marker) intervalMarker0, layer0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BJ");
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      combinedRangeXYPlot0.getRangeGridlinePaint();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.isDomainZoomable();
      combinedRangeXYPlot0.clearRangeMarkers((-358));
      combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, (double) 10, (double) (-358), (double) 10);
      JFreeChart jFreeChart0 = new JFreeChart("java.awt.geom.Line2D", combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int1 = (-454);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-454), (-358), 10, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-454) and height (-358) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getOrientation();
      combinedRangeXYPlot0.getIndexOf((XYItemRenderer) null);
      int int0 = (-2462);
      combinedRangeXYPlot0.clearDomainMarkers((-2462));
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-2462), combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(0, (Marker) intervalMarker0, layer0, false);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.getRangeMarkers(499, layer0);
      combinedRangeXYPlot0.getRangeAxisLocation((-2462));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      xYItemRendererState0.getEntityCollection();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.getDataset();
      combinedRangeXYPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      arrowNeedle0.getTransform();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Point2D.Double point2D_Double1 = new Point2D.Double(0.05, 0.0F);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, (Rectangle2D) null);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      Stroke stroke0 = combinedRangeXYPlot0.getDomainZeroBaselineStroke();
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, (Rectangle2D) null, 10, stroke0, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setInverted(false);
      logAxis0.setVerticalTickLabels(false);
      combinedRangeXYPlot0.setDomainAxis(500, (ValueAxis) logAxis0, true);
      PolarPlot polarPlot0 = new PolarPlot();
      combinedRangeXYPlot0.getDomainMarkers((Layer) null);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      combinedDomainXYPlot0.setDomainCrosshairValue(1.0E-8, true);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      combinedDomainXYPlot0.getRangeAxisForDataset(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      arrowNeedle0.getOutlinePaint();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedRangeXYPlot0.getRangeAxis(10);
      combinedRangeXYPlot0.setRangeAxis(1511, (ValueAxis) null, true);
      combinedRangeXYPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 1.0F, false);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      combinedRangeXYPlot0.getRangeAxisForDataset(0);
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.configureRangeAxes();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeXYPlot0.add((XYPlot) combinedDomainXYPlot0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomDomainAxes(2.5E7, 490.88008, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (2.5E7) <= upper (490.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "6 Ux3]FHnV?J");
      combinedDomainXYPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-794.6931974989762));
      combinedDomainXYPlot0.clearDomainMarkers(3);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes(3651.8291015625, plotRenderingInfo0, (Point2D) point0, false);
      plotRenderingInfo0.getPlotArea();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer");
      combinedRangeXYPlot0.drawRangeCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 768, periodAxis0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("<");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      int int0 = (-2994);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((-2994), (Marker) null, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Area area0 = new Area(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 63.15839911477877, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(63.15839911477877, 10);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.addDomainMarker((Marker) intervalMarker0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(1566, (double) 10, (double) 10);
      area0.createTransformedArea(affineTransform0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.panRangeAxes(0, (PlotRenderingInfo) null, point0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomDomainAxes((-3454.47755), (PlotRenderingInfo) null, (Point2D) point0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Area area0 = new Area(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, 10);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot1.addDomainMarker((Marker) intervalMarker0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(1566, (double) 10, (double) 10);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area1.getBounds2D();
      Stack<XIntervalSeriesCollection> stack0 = new Stack<XIntervalSeriesCollection>();
      combinedRangeXYPlot1.drawDomainTickBands((Graphics2D) null, rectangle2D0, stack0);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(10, 10);
      combinedRangeXYPlot1.getDomainAxisEdge();
      combinedRangeXYPlot0.getRenderer(10);
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot1.drawDomainTickBands((Graphics2D) null, rectangle2D0, stack0);
      combinedRangeXYPlot1.clearSelection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedRangeXYPlot0.setDomainAxisLocation(500, axisLocation0, true);
      boolean boolean0 = XYPlot.DEFAULT_CROSSHAIR_VISIBLE;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.calculateAxisSpace((Graphics2D) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      Locale locale0 = Locale.ROOT;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 500, "Null 'orientation' argument.");
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.setDomainPannable(true);
      Graphics2D graphics2D0 = null;
      int[] intArray0 = new int[7];
      intArray0[2] = 500;
      intArray0[3] = 10;
      intArray0[5] = 500;
      intArray0[6] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      polygon0.getBounds();
      xYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'marker' argument.", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      JTextField jTextField0 = new JTextField("#p>_P(0)f7[Z\"C");
      EmptyBorder emptyBorder0 = new EmptyBorder(233, 10, 10, 10);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jTextField0, (Border) emptyBorder0, 10, 10, 10, 430);
      Rectangle2D rectangle2D0 = combinedRangeXYPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle0, false, false);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createUnion(rectangle2D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.select((GeneralPath) null, rectangle2D1, (RenderingSource) chartPanel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.getDataset();
      Vector<NumberAxis> vector0 = new Vector<NumberAxis>();
      combinedRangeXYPlot0.drawRangeGridlines(graphics2D0, rectangle0, vector0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.drawRangeTickBands(graphics2D0, rectangle0, vector0);
      jFreeChart0.clone();
      combinedRangeXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle0, (AxisSpace) null);
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, rectangle0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(2284);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (2284) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      NumberAxis numberAxis0 = new NumberAxis("/\t41fo)f.&=Y");
      numberAxis0.setAutoRangeMinimumSize(966.965878012);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      Area area0 = new Area(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      IntervalMarker intervalMarker0 = new IntervalMarker(966.965878012, 10, numberAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedRangeXYPlot0.addDomainMarker((Marker) intervalMarker0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(500, (double) 0.0F, 1.0E-8);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle2D rectangle2D0 = area1.getBounds2D();
      Stack<XIntervalSeriesCollection> stack0 = new Stack<XIntervalSeriesCollection>();
      combinedRangeXYPlot0.drawDomainTickBands((Graphics2D) null, rectangle2D0, stack0);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(500, 500);
      combinedRangeXYPlot0.getDomainAxisEdge();
      combinedRangeXYPlot0.getRenderer(500);
      combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      combinedRangeXYPlot0.drawDomainTickBands((Graphics2D) null, rectangle2D0, stack0);
      combinedRangeXYPlot0.clearSelection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 6, 5, 121, (-435), 10, 10, false, false, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeXYPlot0.drawAnnotations((Graphics2D) null, rectangle2D0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-3223), (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "6 Ux3]FHnV?J");
      combinedDomainXYPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS, true);
      TextTitle textTitle0 = new TextTitle();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1840.91358, 10, 10.0, 0.05, 0.05, textTitle0);
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      combinedDomainXYPlot1.setOutlinePaint(systemColor0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes((double) 10, (PlotRenderingInfo) null, (Point2D) point0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      combinedDomainXYPlot0.setRenderer(10, (XYItemRenderer) xYBarRenderer0);
      combinedDomainXYPlot0.setDomainCrosshairValue((-203.4818074212), true);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      combinedDomainXYPlot0.getRangeAxisForDataset(6);
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 10, true);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11@p", valueAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 500, 10);
      bufferedImage0.createGraphics();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(2806, 200, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset((-1482.5));
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset1);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, defaultCaret0, plotOrientation0, 1.0F, valueAxis0, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE, valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      combinedRangeXYPlot0.clearRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      PolarPlot polarPlot0 = new PolarPlot();
      combinedRangeXYPlot0.getRangeAxisCount();
      combinedRangeXYPlot0.getRangeAxis(10);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0F, 2.0F, 10, 10, 10, textTitle0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedRangeXYPlot0.indexOf(categoryTableXYDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getRendererForDataset(categoryTableXYDataset0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
      Font font1 = Font.getFont("wq9W8O(O]#|4[;RiprZ", font0);
      JFreeChart jFreeChart0 = new JFreeChart("wq9W8O(O]#|4[;RiprZ", font1, combinedDomainXYPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, 394.26, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 10;
      standardEntityCollection0.getEntity(3221.794, 3221.794);
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = (float) 10;
      Hashtable<RenderingHints.Key, MatrixSeriesCollection> hashtable0 = new Hashtable<RenderingHints.Key, MatrixSeriesCollection>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      combinedDomainXYPlot0.drawQuadrants(graphics2D0, rectangle2D0);
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Hour.parseHour("~1");
      Locale.forLanguageTag("");
      Boolean boolean0 = new Boolean(true);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      xYPlot0.equals(point2D_Float0);
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3102.552734375);
      Layer layer0 = Layer.BACKGROUND;
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 500, (double) 2.0F, 1.0E-8, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double(10, 0.0F, 1.0, 2.0F);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 9;
      doubleArray1[1] = 1.0;
      doubleArray1[2] = (double) 9;
      doubleArray1[3] = (double) 0.5F;
      doubleArray1[4] = 250000.0;
      doubleArray1[5] = (double) 15;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = 0.05;
      doubleArray1[8] = (double) 9;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 1.0E-8;
      doubleArray2[1] = (double) 0.0F;
      doubleArray2[2] = (double) 9;
      doubleArray2[3] = (double) 2.0F;
      doubleArray2[4] = (double) 500;
      doubleArray2[5] = 1.0;
      doubleArray2[6] = 1.0;
      doubleArray2[7] = (double) 2.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) 0.5F;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = 0.05;
      doubleArray3[4] = (double) 2;
      doubleArray3[5] = (double) 2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = (double) 500;
      doubleArray4[1] = (double) 2;
      doubleArray4[2] = 1.0E-8;
      doubleArray4[3] = (double) 2;
      doubleArray4[4] = (double) 2;
      doubleArray4[5] = 0.05;
      doubleArray4[6] = 4.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[8];
      doubleArray5[0] = (double) 2;
      doubleArray5[1] = (double) 1;
      doubleArray5[2] = (double) 0.5F;
      doubleArray5[3] = 1.0E-8;
      doubleArray5[4] = (double) 0;
      doubleArray5[5] = 250000.0;
      doubleArray5[6] = (double) 10;
      doubleArray5[7] = 250000.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[4];
      doubleArray6[0] = (double) 2.0F;
      doubleArray6[1] = (-1818.068123231159);
      doubleArray6[2] = (double) 9;
      doubleArray6[3] = 1.0E-8;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 500, 1900);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("fK.");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      RectangleEdge rectangleEdge0 = categoryPlot0.getDomainAxisEdge(3);
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = cyclicNumberAxis0.reserveSpace(graphics2D0, combinedDomainXYPlot0, rectangle1, rectangleEdge0, axisSpace0);
      AxisSpace axisSpace2 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle1, axisSpace1);
      cyclicNumberAxis0.reserveSpace(graphics2D0, combinedDomainXYPlot0, rectangle1, rectangleEdge0, axisSpace2);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker((-1818.068123231159), 2.5E-6, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, 2.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedRangeXYPlot0.setOrientation(plotOrientation0);
      combinedRangeXYPlot0.getLegendItems();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getRenderingSource();
      combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) null, (RenderingSource) null);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-1395.0528695014), xYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.addDomainMarker(15, (Marker) valueMarker0, layer0, false);
      // Undeclared exception!
      try { 
        xYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "6 Ux3]FHnV?J");
      combinedDomainXYPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS, true);
      TextTitle textTitle0 = new TextTitle();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1840.91358, 10, 10.0, 0.05, 0.05, textTitle0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot0.clearDomainMarkers(10);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      NumberAxis3D numberAxis3D1 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D1);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      AttributeSet attributeSet0 = jTextPane0.getCharacterAttributes();
      jTextPane0.getPreferredScrollableViewportSize();
      Color color0 = defaultStyledDocument0.getForeground(attributeSet0);
      numberAxis3D0.setLabelPaint(color0);
      Paint paint0 = combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot1.clearRangeMarkers();
      combinedDomainXYPlot1.setDomainPannable(false);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, paint0, combinedDomainXYPlot1.DEFAULT_GRIDLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getQuadrantPaint(3);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Layer layer0 = Layer.BACKGROUND;
      PolarPlot polarPlot0 = new PolarPlot();
      Second second0 = new Second();
      RegularTimePeriod regularTimePeriod0 = second0.next();
      regularTimePeriod0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("", regularTimePeriod0, second0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Point2D point2D0 = affineTransform0.transform((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.zoomRangeAxes(0.4, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      combinedRangeXYPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot();
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("sEuDi5#9");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(553);
      XYPlot xYPlot1 = new XYPlot(timeTableXYDataset0, cyclicNumberAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      combinedDomainXYPlot0.add(xYPlot1);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.setRangeAxis((ValueAxis) numberAxis3D0);
      combinedDomainXYPlot1.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      Stroke stroke0 = combinedDomainXYPlot0.getOutlineStroke();
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedRangeXYPlot0.indexOf((XYDataset) null);
      combinedDomainXYPlot0.getRendererForDataset((XYDataset) null);
      combinedDomainXYPlot1.isRangePannable();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot1.clearRangeMarkers();
      combinedDomainXYPlot1.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedRangeXYPlot0.indexOf((XYDataset) null);
      combinedDomainXYPlot0.getRendererForDataset((XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDatasetCount();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("GVM\u0001E=r");
      Paint paint0 = subCategoryAxis0.getSubLabelPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, paint0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.clone();
      combinedRangeXYPlot0.removeDomainMarker(1, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.isDomainPannable();
      combinedRangeXYPlot0.getFixedLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart("4hV", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      XYPlot xYPlot0 = new XYPlot();
      GapContent gapContent0 = new GapContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      Color color0 = jTextPane0.getDisabledTextColor();
      xYPlot0.setRangeTickBandPaint(color0);
      // Undeclared exception!
      try { 
        xYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getPlotInfo();
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      combinedDomainXYPlot0.zoomDomainAxes((double) 0, plotRenderingInfo1, (Point2D) point0, false);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      combinedDomainXYPlot0.clearRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getDomainAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomDomainAxes((-348.58046305216385), plotRenderingInfo1, (Point2D) point0, true);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 413, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle0);
      combinedDomainXYPlot0.getRangeAxisEdge((-125));
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4.0, 20.0, 0.5F, 1.0E-6);
      rectangle2D_Double0.createUnion(rectangle0);
      Layer layer0 = Layer.BACKGROUND;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 2025.0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.addRangeMarker(700, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.drawAxes(graphics2D0, rectangle0, rectangle2D_Double0, (PlotRenderingInfo) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.clearRangeMarkers((-3131));
      combinedDomainXYPlot0.getDomainAxis((-925));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      Locale locale0 = Locale.CANADA;
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        xYPlot0.setDomainAxis((-893), (ValueAxis) numberAxis3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getDatasetCount();
      ValueMarker valueMarker0 = new ValueMarker(10.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(1, (Marker) valueMarker0, layer0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("GVM\u0001E=r");
      Paint paint0 = subCategoryAxis0.getSubLabelPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, paint0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryMarker0.clone();
      Layer layer1 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker(1, (Marker) categoryMarker0, layer1, true);
      combinedRangeXYPlot0.isDomainPannable();
      combinedRangeXYPlot0.getFixedLegendItems();
      int int0 = 270;
      JFreeChart jFreeChart0 = new JFreeChart("4hV", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2904, 10, 10, (-2155), 15, 10, true, true, true, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(420);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 420, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRangeCrosshairValue((-190.404794), true);
      XYPlot xYPlot0 = new XYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getBaseItemLabelFont();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      jFreeChart0.createBufferedImage(10, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 10 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Null 'orientation' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.setDomainPannable(false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1763.6143077042));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getQuadrantPaint(0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      PolarPlot polarPlot0 = new PolarPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isDomainCrosshairVisible();
      combinedDomainXYPlot0.configureDomainAxes();
      System.setCurrentTimeMillis(1531L);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 10, layer1);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      Locale locale0 = Locale.CANADA;
      int[] intArray0 = new int[7];
      intArray0[3] = 10;
      intArray0[6] = 10;
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", font0, xYPlot0, false);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(10, 1, 1, (-2439.67697688), 1374.9006783083287, jFreeChart0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-7.0));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot1.add(xYPlot0);
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot1.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "wsRy|y8G]");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYPlot xYPlot1 = new XYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxisForDataset(0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      SystemColor systemColor0 = SystemColor.windowText;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8, systemColor0, xYPlot0.DEFAULT_OUTLINE_STROKE, valueAxis0.DEFAULT_AXIS_LINE_PAINT, xYPlot1.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addRangeMarker(500, (Marker) categoryMarker0, layer0, false);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.clearDomainAxes();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D point2D0 = affineTransform0.transform((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      combinedRangeXYPlot0.zoomRangeAxes(1.0, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(legendTitle0.DEFAULT_ITEM_PAINT);
      combinedDomainXYPlot0.setQuadrantOrigin(point2D_Double0);
      combinedRangeXYPlot0.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.removeRangeMarker(10, (Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Month month0 = new Month(10, 10);
      PeriodAxis periodAxis0 = new PeriodAxis("b:s{ZE>VvN/a", month0, month0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b:s{ZE>VvN/a");
      periodAxis0.setLabelURL("b:s{ZE>VvN/a");
      xYPlot0.getDataRange(periodAxis0);
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(10, 10, (-819), 957);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (a
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11@p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = new BufferedImage(1, 15, 2);
      bufferedImage0.createGraphics();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart1.createBufferedImage(10, 2, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(10, 90);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      combinedRangeXYPlot0.setRangeCrosshairStroke(xYBoxAndWhiskerRenderer0.DEFAULT_STROKE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = valueAxis0;
      valueAxisArray0[1] = valueAxis0;
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeZone) null);
      Stack<AxisLocation> stack0 = new Stack<AxisLocation>();
      timeSeriesCollection0.getDomainBounds((List) stack0, true);
      ModuloAxis moduloAxis0 = new ModuloAxis(";e*_sp9Y,0~4c?pt{ :", (Range) null);
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      valueAxisArray0[3] = valueAxis0;
      valueAxisArray0[4] = valueAxis0;
      valueAxisArray0[5] = valueAxis0;
      NumberAxis numberAxis0 = new NumberAxis();
      valueAxisArray0[6] = (ValueAxis) numberAxis0;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.configureRangeAxes();
      Rectangle rectangle0 = new Rectangle(4124, 4124);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 270, 10);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(slidingGanttCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2694, 209, (-1124), 221, 2694, 3, true, false, false, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4060, 4124, (double) 1.0F, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, rectangle0, plotOrientation0, 0.8, (ValueAxis) null, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, jFreeChart0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0F);
      candlestickRenderer0.getURLGenerator(2, 500, false);
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYStepAreaRenderer0);
      XYStepAreaRenderer xYStepAreaRenderer1 = new XYStepAreaRenderer((-1952257861), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.equals(xYStepAreaRenderer1);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point(2852, 2);
      combinedRangeXYPlot0.panRangeAxes(1, plotRenderingInfo0, point0);
      combinedRangeXYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardXYToolTipGenerator.getTimeSeriesInstance();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(5232.0);
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      AffineTransform affineTransform0 = arrowNeedle0.getTransform();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Point2D point2D0 = affineTransform0.transform((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeXYPlot0.zoomRangeAxes((-0.7922796533956917), plotRenderingInfo0, point2D0, true);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesChangeType seriesChangeType0 = SeriesChangeType.UPDATE;
      SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 10, 10);
      SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(histogramDataset0, seriesChangeInfo0);
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      combinedRangeXYPlot0.zoomRangeAxes(3177.0, (PlotRenderingInfo) null, (Point2D) null);
      combinedRangeXYPlot0.indexOf(histogramDataset0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot1 = new XYPlot(yIntervalSeriesCollection0, numberAxis3D0, numberAxis3D0, xYStepRenderer0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
      xYItemRendererArray0[0] = (XYItemRenderer) xYStepRenderer0;
      xYPlot1.setRenderers(xYItemRendererArray0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'marker' not permitted.", xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BevelBorder bevelBorder0 = new BevelBorder(10);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) chartPanel0, 0, 15, (-1943), 0);
      ChartMouseListener chartMouseListener0 = mock(ChartMouseListener.class, new ViolatedAssumptionAnswer());
      chartPanel0.removeChartMouseListener(chartMouseListener0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle0, rectangleAnchor0);
      xYPlot0.zoomRangeAxes((double) 500, plotRenderingInfo0, point2D0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setRangeAxis((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[3] = valueAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      valueAxisArray0[4] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[5] = null;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("z");
      valueAxisArray0[6] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0F);
      candlestickRenderer0.getURLGenerator(2, 500, false);
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(2342.4, false);
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairValue(689.001, false);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      xYPlot0.getRangeAxisForDataset(0);
      xYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearDomainMarkers();
      xYPlot0.getDomainAxisLocation(2);
      combinedRangeXYPlot0.getLegendItems();
      String string0 = "*LE\"b";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 10);
      xYPlot0.getPlotType();
      // Undeclared exception!
      try { 
        Font.createFont(10, (InputStream) pipedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // font format not recognized
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("", dateRange0);
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, moduloAxis0, moduloAxis0, highLowRenderer0);
      Paint paint0 = xYPlot0.getRangeTickBandPaint();
      assertNull(paint0);
      
      xYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      cyclicNumberAxis0.setAutoTickUnitSelection(true, false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesStroke(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, symbolAxis0, clusteredXYBarRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle0, 0, rectangle0, 10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomDomainAxes((double) 10, (PlotRenderingInfo) null, point2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015);
      cyclicNumberAxis0.setOffset(1141.8885839204902);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-11), (Marker) categoryMarker0, layer0, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(623.3338003870266);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      combinedDomainXYPlot0.setQuadrantPaint(0, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      combinedRangeXYPlot0.getIndexOf(candlestickRenderer0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setBackgroundAlpha((-4114.2886F));
      int int0 = 1262;
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToRangeAxis((-1), (-426));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2178.31, "TextBlockAnchor.TOP_CENTER");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      combinedRangeXYPlot0.getDomainAxisLocation();
      MatrixSeries matrixSeries0 = new MatrixSeries("Null 'order' argument.", 104, 10);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      combinedRangeXYPlot0.getRendererForDataset(matrixSeriesCollection0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(4.0, 4.0, (double) 1.0F);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Point point0 = new Point(500, 10);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point0);
      Point2D point2D1 = affineTransformOp0.getPoint2D(point2D0, point2D0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomRangeAxes(4.0, (PlotRenderingInfo) null, point2D1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 413, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      combinedDomainXYPlot0.drawZeroDomainBaseline(graphics2D0, rectangle0);
      combinedDomainXYPlot0.getRangeAxisEdge((-125));
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4.0, 20.0, 0.5F, 1.0E-6);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle0);
      combinedDomainXYPlot0.select(generalPath0, rectangle2D0, (RenderingSource) chartPanel0);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      combinedDomainXYPlot0.getAxisOffset();
      combinedDomainXYPlot0.equals((Object) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(768);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 680);
      Point2D point2D0 = affineTransform0.deltaTransform((Point2D) point0, (Point2D) point0);
      combinedDomainXYPlot0.panDomainAxes(300, plotRenderingInfo0, point2D0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 3177.0);
      Layer layer0 = Layer.FOREGROUND;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle0, 757.64604959, rectangle0, 0);
      JFreeChart jFreeChart0 = new JFreeChart("V>V?%im@g{HD-dGdNm1", spiderWebPlot0.DEFAULT_LABEL_FONT, spiderWebPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-2375), 6, 10, 1033, (-74), 250, false, false, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.zoomDomainAxes(2952.662070946559, plotRenderingInfo0, point2D0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 1.0F, 47.0025F, 2449.31F, 1018.648F, (-1806.2677F));
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Point point0 = new Point(1778, 420);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 10, 10, 10, 10, 680, 702, true, 10, 476, (-1289));
      Point point1 = mouseWheelEvent0.getPoint();
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      affineTransformOp0.getPoint2D(point1, point2D_Double0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      combinedRangeXYPlot0.zoomRangeAxes((double) 47.0025F, plotRenderingInfo1, point2D0, false);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.PRC;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0, locale0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(affineTransformOp0, timeTableXYDataset0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeAxis(61);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      xYPlot0.setRangeCrosshairVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      xYPlot0.isRangeZeroBaselineVisible();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0F);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisLocation(0);
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.panRangeAxes(0.05, (PlotRenderingInfo) null, point0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      xYPlot0.getDomainAxisLocation(2);
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getAnchor();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setQuadrantOrigin(point0);
      combinedDomainXYPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      combinedRangeXYPlot0.setRenderer(2, (XYItemRenderer) stackedXYAreaRenderer0, false);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      xYPlot0.setRangeAxis(1606, (ValueAxis) periodAxis0, false);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.getPlotInfo();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(152.0);
      xYPlot0.addRangeMarker(662, (Marker) valueMarker0, (Layer) null);
      combinedRangeXYPlot0.setDomainCrosshairValue((double) 10, false);
      xYPlot0.getQuadrantOrigin();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2178.31, "TextBlockAnchor.TOP_CENTER");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      combinedRangeXYPlot0.getDomainAxisLocation();
      MatrixSeries matrixSeries0 = new MatrixSeries("Null 'order' argument.", 104, 10);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection(matrixSeries0);
      combinedRangeXYPlot0.getRendererForDataset(matrixSeriesCollection0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(4.0, 4.0, (double) 1.0F);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Point point0 = new Point(500, 10);
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      Point2D point2D1 = affineTransformOp0.getPoint2D(point2D0, point2D0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomRangeAxes(4.0, (PlotRenderingInfo) null, point2D1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes(10, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HistogramDataset histogramDataset0 = new HistogramDataset();
      combinedRangeXYPlot0.getRendererForDataset(histogramDataset0);
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.isDomainPannable();
      combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      Second second0 = new Second();
      RegularTimePeriod regularTimePeriod0 = second0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("Requires start >= 0.", regularTimePeriod0, second0);
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1348.81903), 1.5, "Gz+4N/TC%J2sN");
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v;4Zd.");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[2] = valueAxis0;
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      combinedRangeXYPlot0.setRangeZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      jFreeChart0.createBufferedImage(3177, 10);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairValue((-713.35), false);
      Line2D.Double line2D_Double1 = new Line2D.Double(1.0F, 4.0, 500, 10);
      combinedRangeXYPlot0.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeAxisLocation(10);
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getAngleGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(polarPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.isDomainCrosshairVisible();
      combinedDomainXYPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS, false);
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1840.91358, 10, 10.0, 0.05, 0.05, textTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot2.isDomainCrosshairLockedOnData();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot0.getDomainCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.configureRangeAxes();
      combinedDomainXYPlot0.getRangeMarkers(32, (Layer) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.zoomDomainAxes(Double.POSITIVE_INFINITY, 1.0E7, plotRenderingInfo0, (Point2D) point0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo1);
      chartRenderingInfo1.getPlotInfo();
      combinedRangeXYPlot0.zoomRangeAxes(0.1, 1012.0, (PlotRenderingInfo) null, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2480), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3177, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.getDataset();
      Vector<NumberAxis> vector0 = new Vector<NumberAxis>();
      combinedRangeXYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, vector0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.drawRangeTickBands(graphics2D0, rectangle2D0, vector0);
      combinedRangeXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      cyclicNumberAxis0.setOffset(1567.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(6);
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      axisLocation1.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.y1 = 854.8656940669;
      line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0);
      JFreeChart jFreeChart0 = new JFreeChart("Bill Kelemen", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainXYPlot0, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.clearAnnotations();
      combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes((-2742), linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = 1;
      intArray0[2] = 10;
      intArray0[3] = 10;
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYStepRenderer0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRenderers((XYItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = 1;
      intArray0[2] = 10;
      intArray0[3] = 10;
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'annotation' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.getQuadrantPaint(1);
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeXYPlot0.panRangeAxes(0.05, (PlotRenderingInfo) null, point0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, true);
      TextTitle textTitle0 = new TextTitle();
      DateTitle dateTitle0 = new DateTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(432.817540405, 500, (-2224.95537), (-5100.8890242), 0.05, dateTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot2.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 3177.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.setDomainCrosshairValue(3177.0, false);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      Layer layer1 = Layer.FOREGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.indexOf((XYDataset) null);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0F);
      candlestickRenderer0.getURLGenerator(2, 500, false);
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYStepAreaRenderer0);
      XYStepAreaRenderer xYStepAreaRenderer1 = new XYStepAreaRenderer((-1952257861), standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYPlot0.equals(xYStepAreaRenderer1);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      int int0 = 1261;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(2, 0, 1261, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1261
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainAxis(2, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(thermometerPlot0.DEFAULT_BACKGROUND_PAINT, 0.0, 1000.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      Stroke stroke0 = combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(xYLine3DRenderer0.DEFAULT_STROKE);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainXYPlot1.DEFAULT_BACKGROUND_PAINT, stroke0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.addDomainMarker((Marker) categoryMarker0, layer0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(1261);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1261) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(1208);
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_RIGHT;
      AxisLocation.getOpposite(axisLocation1);
      axisLocation1.getOpposite();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(490.88008, "B|Umh%V@M2q()md(pt[");
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      xYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(2.0F);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D0, stack0);
      AxisSpace axisSpace0 = new AxisSpace();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.calculateRangeAxisSpace((Graphics2D) null, rectangle2D0, axisSpace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeAxis();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      standardXYItemRenderer0.getLegendItem(4220, 106);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation((-2415.63477737469), 0.05, 0.05, 1.0F);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYBoxAnnotation0.equals(xYBoxAndWhiskerRenderer0);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, numberAxis3D0, numberAxis3D0, standardXYItemRenderer0);
      combinedDomainXYPlot0.getRendererCount();
      combinedDomainXYPlot0.getQuadrantOrigin();
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[1] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[8] = (ValueAxis) numberAxis3D0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(3, 1.0E-8, 10, 2.0F, standardXYItemRenderer0.DEFAULT_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0E-8);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxis((-787), (ValueAxis) cyclicNumberAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      cyclicNumberAxis0.setOffset(1567.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(6);
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      axisLocation1.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      line2D_Double0.y1 = 490.88008;
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedRangeXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D0, stack0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.calculateRangeAxisSpace((Graphics2D) null, rectangle2D0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      Locale locale0 = Locale.ITALY;
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.axis.SymbolAxis", timeZone0, locale0);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.getRangeMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (21) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      Locale locale0 = Locale.ROOT;
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, periodAxis0, periodAxis0, xYStepRenderer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxisArray0[0]);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Color color0 = (Color)Axis.DEFAULT_TICK_LABEL_PAINT;
      JFreeChart jFreeChart0 = new JFreeChart("", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 3177.0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Invalid 'percent' (";
      stringArray0[2] = "Invalid 'percent' (";
      stringArray0[3] = "Invalid 'percent' (";
      stringArray0[4] = "Invalid 'percent' (";
      stringArray0[5] = "Invalid 'percent' (";
      stringArray0[6] = "Invalid 'percent' (";
      stringArray0[7] = "";
      stringArray0[8] = "Invalid 'percent' (";
      SymbolAxis symbolAxis0 = new SymbolAxis("Invalid 'percent' (", stringArray0);
      symbolAxis0.setVisible(false);
      Color color0 = Color.YELLOW;
      IntervalMarker intervalMarker1 = new IntervalMarker((-1605.229992), Double.POSITIVE_INFINITY, symbolAxis0.DEFAULT_GRID_BAND_PAINT);
      IntervalMarker intervalMarker2 = new IntervalMarker(500, (-236.926127156), symbolAxis0.DEFAULT_TICK_LABEL_PAINT);
      intervalMarker0.removeChangeListener(xYPlot0);
      xYPlot0.addRangeMarker((Marker) intervalMarker1);
      xYPlot0.getRangeMinorGridlineStroke();
      xYPlot0.setRangeAxis((ValueAxis) symbolAxis0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Color color0 = (Color)Axis.DEFAULT_TICK_LABEL_PAINT;
      JFreeChart jFreeChart0 = new JFreeChart("", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      Rectangle rectangle0 = new Rectangle(10, 15, 2640, 22);
      defaultCaret0.add(rectangle0);
      combinedDomainXYPlot0.zoomDomainAxes((-643.2572176285), 4.0, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      combinedDomainXYPlot0.setInsets(rectangleInsets0, true);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getBaseURLGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(2081.23, (-2832.87796), (-1439.39), 1346.95614936, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, candlestickRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("XshQ6-OGT`6` EvS");
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      xYSeriesCollection0.getDomainUpperBound(false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      ValueAxis valueAxis0 = combinedDomainXYPlot1.getDomainAxis(0);
      combinedDomainXYPlot0.getRangeTickBandPaint();
      combinedDomainXYPlot1.setRangeAxis(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation((-1052));
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.configureRangeAxes();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1381.8050202), "Null 'layer' not permitted.");
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(10, highLowItemLabelGenerator0);
      Stroke stroke0 = combinedRangeXYPlot0.getRangeCrosshairStroke();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1.0F, 10.0, 2, 2.0F, stroke0, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      ValueMarker valueMarker0 = new ValueMarker(1, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, standardXYItemRenderer0.DEFAULT_OUTLINE_STROKE, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, 0);
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer1, true);
      combinedDomainXYPlot0.addDomainMarker(1429, (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker(500.0, 0.05);
      combinedDomainXYPlot0.removeRangeMarker((Marker) intervalMarker0);
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      Layer layer2 = Layer.BACKGROUND;
      MockDate mockDate0 = new MockDate(500);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.FRENCH;
      Year year0 = new Year(mockDate0, simpleTimeZone0, locale0);
      PeriodAxis periodAxis0 = new PeriodAxis("", year0, year0, simpleTimeZone0, locale0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Bill Kelemen", periodAxis0.DEFAULT_RANGE);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("~D.v^fpCzl+T=");
      Locale locale1 = new Locale("~D.v^fpCzl+T=", "`f8hX2H85rF@F/=.Ll");
      DateAxis dateAxis0 = new DateAxis("", simpleTimeZone0, locale1);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) numberAxis0;
      valueAxisArray0[1] = (ValueAxis) numberAxis0;
      valueAxisArray0[2] = (ValueAxis) numberAxis0;
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainXYPlot0.isDomainCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      Locale locale0 = Locale.ROOT;
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      XYStepRenderer xYStepRenderer0 = new XYStepRenderer();
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, periodAxis0, periodAxis0, xYStepRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxisArray0[0]);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeXYPlot1.setDomainAxisLocation(4647, axisLocation0, false);
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0F, 0.05, 10, 1.0F);
      xYPlot0.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      axisLocation0.getOpposite();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(63, axisLocation1, false);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      combinedRangeXYPlot0.getRendererForDataset(matrixSeriesCollection0);
      combinedRangeXYPlot0.configureRangeAxes();
      combinedRangeXYPlot0.getRendererForDataset(matrixSeriesCollection0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      String string0 = null;
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, dateAxis0.DEFAULT_DATE_RANGE);
      valueAxisArray0[2] = (ValueAxis) moduloAxis0;
      String string1 = "n0XqP]SU";
      // Undeclared exception!
      try { 
        Month.parseMonth("n0XqP]SU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the month.
         //
         verifyException("org.jfree.data.time.Month", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      Locale locale0 = Locale.ROOT;
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      polygon0.getBounds();
      PlotRenderingInfo plotRenderingInfo0 = null;
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, periodAxis0, valueAxisArray0[0], xYBoxAndWhiskerRenderer0);
      float[] floatArray0 = new float[0];
      Kernel kernel0 = new Kernel(1994, 0, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart("", periodAxis0.DEFAULT_TICK_LABEL_FONT, xYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 44, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(1, 5234, chartRenderingInfo0);
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(1, 2746, 0, (-3049));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (aba
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3130.5171901));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      combinedRangeXYPlot0.setRangeCrosshairValue((-5629.36352), true);
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(categoryPlot0.DEFAULT_BACKGROUND_PAINT, 2.0, 500);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      SystemColor systemColor0 = SystemColor.menuText;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantPaint((-569), systemColor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-569) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.9384908773227, "Pie_Plot");
      TimeZone.getDefault();
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getOrientation();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getDomainAxisLocation(500);
      combinedRangeXYPlot0.getDomainAxisLocation((-4337));
      combinedRangeXYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 500, 10, (-5616), 10, 3, true, false, true, false, true, true, true);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      combinedRangeXYPlot0.handleClick(10, 300, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot1.setDomainMinorGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.setRangeAxisLocation(10, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(10);
      combinedRangeXYPlot1.setDomainZeroBaselinePaint(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat.getDateInstance();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.05);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      combinedRangeXYPlot0.setDomainAxis(10, (ValueAxis) null, false);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3177, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.getDataset();
      JFreeChart jFreeChart1 = new JFreeChart("LS11p", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(270.0);
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      combinedRangeXYPlot0.clearAnnotations();
      combinedDomainXYPlot0.getDomainAxisLocation();
      xYPlot0.setDomainZeroBaselineStroke(candlestickRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(469, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot2.getFixedDomainAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      combinedRangeXYPlot0.setRangeCrosshairValue((-740.33356339254), false);
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT, 10, 3177.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot3 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot1.getRangeMinorGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setRangeMinorGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015);
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.getDomainAxisEdge(10);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-11), (Marker) categoryMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      Boolean boolean0 = new Boolean(false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      Boolean boolean1 = new Boolean(false);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.getRangeMarkers((Layer) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      ModuloAxis moduloAxis0 = new ModuloAxis("Indices must be unique.", cyclicNumberAxis0.DEFAULT_RANGE);
      valueAxisArray0[0] = (ValueAxis) moduloAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      LogAxis logAxis0 = new LogAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      Plot plot0 = combinedDomainXYPlot0.getRootPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Y", font0, plot0, true);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-2224.95537));
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      Paint paint0 = xYPlot0.getDomainZeroBaselinePaint();
      combinedDomainXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getRangeAxisCount();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.equals(paint0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      BasicListUI basicListUI0 = new BasicListUI();
      DefaultValueDataset[] defaultValueDatasetArray0 = new DefaultValueDataset[1];
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      defaultValueDatasetArray0[0] = defaultValueDataset0;
      JList<DefaultValueDataset> jList0 = new JList<DefaultValueDataset>(defaultValueDatasetArray0);
      // Undeclared exception!
      try { 
        basicListUI0.getCellBounds(jList0, (-884), (-884));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("<?\"0u!0~z-K]`y&");
      numberAxis0.resizeRange2(558.64751434, 1.0);
      numberAxis0.setAxisLineVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
      combinedRangeXYPlot0.getDataRange(numberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.getDomainMarkers(500, layer0);
      combinedRangeXYPlot0.isRangeGridlinesVisible();
      combinedRangeXYPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3177.0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.getFixedRangeAxisSpace();
      combinedRangeXYPlot2.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot3 = new CombinedRangeXYPlot();
      combinedRangeXYPlot3.setRangeCrosshairValue(0.0, true);
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(combinedRangeXYPlot1.DEFAULT_BACKGROUND_PAINT, 10.0, 1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedRangeXYPlot combinedRangeXYPlot4 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot2.getRangeMinorGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeMinorGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedRangeXYPlot2.setQuadrantPaint(2, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(365);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 365 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getPlotInfo();
      NumberAxis numberAxis0 = new NumberAxis("\u00B0F");
      combinedRangeXYPlot0.setRangeAxis(613, (ValueAxis) numberAxis0, false);
      chartRenderingInfo0.getPlotInfo();
      Color.getColor("");
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      combinedRangeXYPlot0.setRangeGridlinePaint(color0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.getRangeAxisEdge((-1660));
      combinedRangeXYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = 1;
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 1.0F, false);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot1.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset((-2463));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -2463 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      combinedRangeXYPlot0.setRangeGridlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
      try { 
        xYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clone();
      chartRenderingInfo0.getPlotInfo();
      chartRenderingInfo0.getPlotInfo();
      Color.getColor("");
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      color0.getColorSpace();
      combinedRangeXYPlot0.setRangeGridlinePaint(color0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.getRangeAxisEdge((-1660));
      combinedRangeXYPlot0.getRangeGridlineStroke();
      combinedRangeXYPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      Color.getColor("Ox\"pb");
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'origin' argument.", textTitle0.DEFAULT_FONT, combinedRangeCategoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, (-1.0F));
      combinedRangeXYPlot0.panDomainAxes(1.0F, plotRenderingInfo0, point2D_Float0);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(858.7997681, 3050.35, 4182.966972, 2897.468151463507, (-1130.6183869287), textTitle0);
      LogAxis logAxis0 = new LogAxis("~@Qr!Bh&_8b+");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis0);
      BasicStroke basicStroke0 = new BasicStroke();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot2.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      combinedRangeXYPlot1.getRangeAxis(10);
      ValueMarker valueMarker0 = new ValueMarker((-1.0));
      combinedRangeXYPlot0.removeDomainMarker((Marker) valueMarker0);
      combinedRangeXYPlot2.panDomainAxes((-1130.6183869287), plotRenderingInfo0, point2D_Float0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-2222.0), 2421.096381552772, combinedRangeXYPlot2.DEFAULT_BACKGROUND_PAINT);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      intervalMarker0.setLabelAnchor(rectangleAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot1.removeRangeMarker(15, (Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("{0}: ({1}, {2}, {3})");
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator(mockSimpleDateFormat0, "{0}: ({1}, {2})", "", "{0}: ({1}, {2})");
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer((-4853), standardXYZToolTipGenerator0, timeSeriesURLGenerator0);
      cyclicXYItemRenderer0.setPlotDiscontinuous(true);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1763.661475024, 2829.076, (-3994.1317), 1.0);
      Layer layer0 = Layer.BACKGROUND;
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(6, standardXYZToolTipGenerator0, timeSeriesURLGenerator0);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("{20(,od|qM");
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, logarithmicAxis0, logarithmicAxis0, cyclicXYItemRenderer0);
      xYSeriesCollection0.getDomainUpperBound(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.clearRangeAxes();
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      xYPlot0.getDomainAxis(53);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      NumberAxis numberAxis0 = new NumberAxis("1N.v][F|P)JyP{x6@");
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2(symbolicXYItemLabelGenerator0, standardXYZURLGenerator0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(vectorSeriesCollection0, numberAxis0, numberAxis0, stackedXYAreaRenderer2_0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.VectorSeriesCollection cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 3177.0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(3177.0, false);
      xYPlot0.setRangeCrosshairVisible(false);
      xYPlot0.getQuadrantOrigin();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      combinedRangeXYPlot0.getRangeAxisLocation(10);
      TextBox textBox0 = new TextBox("C}BU#e83Ks8");
      Paint paint0 = textBox0.getShadowPaint();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(270.0, 10, 10, 10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, paint0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(310);
      cyclicXYItemRenderer0.getLegendItem(10, (-1));
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.block.CenterArrangement");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(spiderWebPlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      combinedDomainXYPlot0.getRangeAxisEdge();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedRangeXYPlot0.getRangeAxisLocation(1);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRangeZeroBaselineStroke(logarithmicAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      IntervalMarker intervalMarker0 = new IntervalMarker((-1497.1491425425), 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      combinedRangeXYPlot0.getRangeMinorGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2185.446483), 0.25, (String) null);
      cyclicNumberAxis0.setOffset(1.0F);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot1.getDomainAxisEdge(500);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      standardXYItemRenderer0.getLegendItem(10, 10);
      Color color0 = (Color)Axis.DEFAULT_TICK_LABEL_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E-100, 0.05, color0);
      combinedDomainXYPlot0.addDomainMarker(1717, (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(4, (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot0.clearDomainMarkers();
      combinedDomainXYPlot0.getRangeMinorGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(Double.POSITIVE_INFINITY, (double) xYBubbleRenderer0.ZERO);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      HighLowItemLabelGenerator highLowItemLabelGenerator1 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(80, highLowItemLabelGenerator1);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation((-1605.517261248997), 1717, 10.0, 8, standardXYItemRenderer0.DEFAULT_STROKE, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      standardXYItemRenderer0.getLegendItem(2463, 310);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedDomainXYPlot0.getRangeAxisEdge();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(4, layer0);
      combinedDomainXYPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot1.setRangeGridlineStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((-1078.549527371), false);
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset((-2314));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -2314 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      axisLocation1.getOpposite();
      combinedRangeXYPlot0.getRangeAxisEdge(500);
      combinedRangeXYPlot0.clearAnnotations();
      combinedRangeXYPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, 2380.633715015);
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(10);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-11), (Marker) categoryMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      Boolean boolean0 = new Boolean(false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
      AxisSpace axisSpace0 = new AxisSpace();
      combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace0, true);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      cyclicNumberAxis0.setOffset(10);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.getDomainAxisEdge(500);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot1.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(false);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) xYBoxAndWhiskerRenderer0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      xYPlot0.handleClick(15, 15, plotRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      jFreeChart0.addChangeListener(chartPanel0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      cyclicNumberAxis0.setOffset(10);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.getDomainAxisEdge(500);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot1.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      combinedDomainXYPlot1.setRangeMinorGridlinesVisible(false);
      combinedRangeXYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D0, stack0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      standardXYItemRenderer0.getLegendItem(10, 10);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      xYPlot0.configureRangeAxes();
      xYPlot0.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      combinedDomainXYPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      Layer layer1 = Layer.FOREGROUND;
      Layer layer2 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(10, layer2);
      combinedRangeXYPlot0.getRangeAxisLocation(10);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      standardXYItemRenderer0.getLegendItem(10, 10);
      combinedDomainXYPlot0.setDomainCrosshairStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getRangeAxisEdge();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(2426, layer0);
      combinedDomainXYPlot0.getRangeAxisLocation(10);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3177, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart1.createBufferedImage(10, 2, chartRenderingInfo0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(10, 90);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot1 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot1.getOrientation();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D1, rectangle0, plotOrientation0, 2, valueAxis0, (Stroke) null, valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(12.0, (String) null);
      cyclicNumberAxis0.setOffset((-1814.3048123877));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation1 = categoryPlot0.getRangeAxisLocation();
      axisLocation1.getOpposite();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(727.3393, (-1.0), (String) null);
      combinedDomainXYPlot1.setRangeCrosshairPaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDomainAxisLocation(10, axisLocation0, false);
      Line2D.Double line2D_Double0 = new Line2D.Double(500, 1.0F, 500, 1.0F);
      CombinedRangeXYPlot combinedRangeXYPlot2 = (CombinedRangeXYPlot)combinedRangeXYPlot1.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(6, 2700, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(349, 53);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      combinedRangeXYPlot2.drawDomainCrosshair(graphics2D0, rectangle0, plotOrientation0, 10, cyclicNumberAxis0, combinedDomainXYPlot1.DEFAULT_CROSSHAIR_STROKE, xYLine3DRenderer0.DEFAULT_PAINT);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      xYPlot0.getDomainAxisLocation(2);
      combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Rectangle rectangle0 = new Rectangle(1543, (-1772));
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      DefaultValueDataset defaultValueDataset1 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset1);
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 0, 8, (-1675), 0, (-594), false, false, false, false, false, false);
      chartPanel0.getOrientation();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      LogAxis logAxis0 = new LogAxis("Indices must be unique.");
      combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 420, logAxis0, fastScatterPlot0.DEFAULT_OUTLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0F, 2.0F, 10, 10, 10, textTitle0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(hashSet0, yIntervalSeriesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.getRangeAxisIndex(numberAxis3D0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainPannable(false);
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 500;
      intArray0[2] = 10;
      intArray0[3] = 1;
      int int0 = 4;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 4);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      Locale locale0 = Locale.ROOT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot1.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      Stack<TexturePaint> stack0 = new Stack<TexturePaint>();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setRenderer(3952, (XYItemRenderer) candlestickRenderer0, false);
      combinedRangeXYPlot1.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(1.0F, 25.0, 10, 1561.816956008, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      standardXYItemRenderer0.getLegendItem(10, 10);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      Week week0 = new Week(0, 4);
      PeriodAxis periodAxis0 = new PeriodAxis(") should be in the range 0 to 3.", week0, week0);
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(xYSeriesCollection0, periodAxis0, periodAxis0, standardXYItemRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'orientation' argument.", true, 1.0E-8, 0.0);
      categoryPointerAnnotation0.getFont();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-661.0), 2359.2268709492);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      xYPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      xYPlot0.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset(2463, (XYDataset) categoryTableXYDataset0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1717, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(4, 2, 10, 4, standardXYItemRenderer0.DEFAULT_STROKE, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      standardXYItemRenderer0.getLegendItem(10, 10);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      int int0 = new Integer(500);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      xYPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(90.0);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedRangeXYPlot0, timePeriodValuesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.clearRangeMarkers(10);
      combinedRangeXYPlot1.getLegendItems();
      combinedRangeXYPlot1.setRangeCrosshairStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(858.7997681, 3050.35, 10, 2897.468151463507, (-1130.6183869287), textTitle0);
      LogAxis logAxis0 = new LogAxis("~@Qr!Bh&_8b+");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedRangeXYPlot1.removeRangeMarker((Marker) categoryMarker0, (Layer) null);
      BasicStroke basicStroke0 = new BasicStroke();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot2.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      combinedRangeXYPlot1.getRangeAxis(10);
      combinedRangeXYPlot0.getDataset(6);
      combinedRangeXYPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainCrosshairValue(1.0, true);
      SeriesRenderingOrder seriesRenderingOrder0 = xYPlot0.getSeriesRenderingOrder();
      xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      AxisSpace axisSpace0 = new AxisSpace();
      xYPlot0.setFixedRangeAxisSpace(axisSpace0, false);
      double double0 = 1951.60631;
      double double1 = (-2728.8945436595);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", logarithmicAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, false);
      TextTitle textTitle0 = jFreeChart0.getTitle();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(10.0, 2419.0, textTitle0, rectangleAnchor0);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYTitleAnnotation0);
      combinedRangeXYPlot0.getDomainTickBandPaint();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.setDomainMinorGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.setRangeAxisLocation(873, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(21);
      combinedRangeXYPlot1.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat.getDateInstance();
      JFreeChart jFreeChart1 = new JFreeChart((String) null, spiderWebPlot0.DEFAULT_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      xYPlot0.zoomDomainAxes(0.4, 10.0, plotRenderingInfo0, (Point2D) point0);
      xYPlot0.zoomRangeAxes(0.1, (double) 0, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 500, true);
      XYPlot xYPlot0 = new XYPlot();
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, 306.21883, 10);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(4.66379, 0.05, (-1153.67), 1.0, 1.0F, colorBlock0);
      xYDrawableAnnotation0.setURL("<FGQidpbNu.*.iMb");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      combinedRangeXYPlot2.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.setQuadrantPaint(3, combinedRangeXYPlot1.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke1 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke1);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2480), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2480), "ht");
      combinedDomainXYPlot0.setRangeAxis(1, (ValueAxis) cyclicNumberAxis0, true);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0E-7, 1468.73188);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      highLowItemLabelGenerator0.generateToolTip((XYDataset) null, 1235, 1235);
      Layer layer0 = Layer.BACKGROUND;
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      Integer integer0 = new Integer(210);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[9];
      xYItemRendererArray0[5] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[4] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[5] = (XYItemRenderer) standardXYItemRenderer0;
      XYPlot xYPlot1 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYItemRendererArray0[3]);
      xYPlot1.setWeight(300);
      xYPlot1.getRendererCount();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, 490.88008, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(490.88008, 200);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      // Undeclared exception!
      try { 
        jFreeChart0.DEFAULT_TITLE_FONT.getStringBounds("ZOOM_OUT_BOTH", (-3947), (-1036), fontRenderContext0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      TextTitle textTitle0 = new TextTitle();
      DateFormat.getDateInstance();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      Point point0 = new Point();
      combinedRangeXYPlot0.zoomDomainAxes(0.0, 10.0, plotRenderingInfo0, (Point2D) point0);
      xYPlot0.setDomainGridlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      Locale locale0 = Locale.ROOT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      xYPlot0.setDomainPannable(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 500;
      intArray0[2] = 500;
      intArray0[3] = 10;
      intArray0[5] = 500;
      intArray0[6] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      polygon0.getBounds();
      xYPlot0.getRangeAxisLocation(0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean("Pie_Plot");
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(10);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-11), (Marker) categoryMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      boolean boolean1 = new Boolean(false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Color color0 = new Color(500);
      Layer layer0 = Layer.BACKGROUND;
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0F, 2.0F, 10, 10, 10, textTitle0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(hashSet0, yIntervalSeriesCollection0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset(3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 3 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      jFreeChart0.removeChangeListener(chartPanel0);
      jFreeChart0.getRenderingHints();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.setDomainMinorGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.setRangeAxisLocation(873, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(23);
      combinedRangeXYPlot1.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat.getDateInstance();
      JFreeChart jFreeChart1 = new JFreeChart((String) null, spiderWebPlot0.DEFAULT_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      xYPlot0.zoomDomainAxes(0.4, 10.0, plotRenderingInfo0, (Point2D) point0);
      combinedRangeXYPlot1.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "org.jfree.chart.plot.XYPlot");
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.05, 10, "k]eOxC?)|");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis1);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, true);
      TextTitle textTitle0 = new TextTitle();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0, borderArrangement0, borderArrangement0);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(10.0, 0.0, 10, 422.7897064773, 0.05, legendTitle0);
      xYDrawableAnnotation0.setURL("k]eOxC?)|");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis1);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot2.setRangeCrosshairLockedOnData(true);
      combinedDomainXYPlot2.setRangeCrosshairValue(1840.91358, false);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("5kzL_eMRK\"_~", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1.0), 0.0, (-4247.8165532), (-2156.1), jFreeChart0);
      xYDrawableAnnotation0.setURL("J{t5XpO_Qw4:nMCM'v");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
      BasicStroke basicStroke0 = new BasicStroke();
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      combinedDomainXYPlot0.getRangeAxis(1);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      try { 
        chartPanel0.getMousePosition(true);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Container", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      TextTitle textTitle0 = new TextTitle();
      ColorBlock colorBlock0 = new ColorBlock(thermometerPlot0.DEFAULT_BACKGROUND_PAINT, 0.0, 3195.9819);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(Double.NaN, 1000.0, 1.0, 181.0, 1, colorBlock0);
      xYDrawableAnnotation0.setURL("<FGQidpbNu.*.iMb");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(xYLine3DRenderer0.DEFAULT_STROKE);
      combinedRangeXYPlot1.setQuadrantPaint(1, xYBubbleRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      Paint paint0 = combinedDomainXYPlot1.getOutlinePaint();
      numberAxis3D0.setLabelPaint(paint0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setQuadrantPaint(500, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (500) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearSelection();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'orientation' argument.", true, 3177.0, 0.0);
      Font font0 = categoryPointerAnnotation0.getFont();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-661.0), 2359.2268709492);
      cyclicNumberAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainAxis(valueAxisArray0[0]);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPointerAnnotation0.DEFAULT_FONT, combinedRangeXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getForeground();
      combinedRangeXYPlot0.setRangeGridlinePaint(color0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      AxisLocation axisLocation1 = combinedRangeXYPlot0.getRangeAxisLocation(200);
      AxisLocation axisLocation2 = AxisLocation.BOTTOM_OR_LEFT;
      combinedRangeXYPlot0.setRangeAxisLocation(365, axisLocation2, true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues("ZOOM_IN_RANGE");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PRINT");
      timePeriodValuesCollection0.equals(numberAxis3D0);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(axisLocation1, timePeriodValuesCollection0);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      DatasetChangeEvent datasetChangeEvent1 = new DatasetChangeEvent(xYLine3DRenderer0, timePeriodValuesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent1);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDataset((-825), (XYDataset) timePeriodValuesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("R=d<7EWv", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1186.3739816702423), true, standardXYToolTipGenerator0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      stack0.add(xYBoxAndWhiskerRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      LinkedList<DefaultWindDataset> linkedList0 = new LinkedList<DefaultWindDataset>();
      combinedRangeXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot1.getRangeAxis(0);
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      PlotState plotState0 = new PlotState();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.draw((Graphics2D) null, rectangle2D0, point0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS, false);
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1840.91358, 10, 10.0, 0.05, 0.05, textTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot2.isDomainCrosshairLockedOnData();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot1.setRangeCrosshairLockedOnData(false);
      combinedDomainXYPlot1.setRangeCrosshairValue(1.0E9, true);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("R=d<7EWv", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1186.3739816702423), true, standardXYToolTipGenerator0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      stack0.add(xYBoxAndWhiskerRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      LinkedList<DefaultWindDataset> linkedList0 = new LinkedList<DefaultWindDataset>();
      YIntervalRenderer yIntervalRenderer0 = new YIntervalRenderer();
      yIntervalRenderer0.getAdditionalItemLabelGenerator();
      candlestickRenderer0.setBaseItemLabelGenerator((XYItemLabelGenerator) null, false);
      combinedRangeXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot1.getRangeAxis(0);
      combinedRangeXYPlot1.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("5kzL_eMRK\"_~", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      xYPlot0.getRangeAxisLocation((-874));
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-326);
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(6, shortArray0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      combinedRangeXYPlot0.indexOf(categoryTableXYDataset0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.ITALY;
      DateAxis dateAxis0 = new DateAxis("Ey/a&qog93hFo", timeZone0, locale0);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
      combinedRangeXYPlot0.setRangeAxisLocation(10, axisLocation0, false);
      Boolean boolean0 = new Boolean("");
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(799);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_CENTER;
      categoryMarker0.setLabelTextAnchor(textAnchor0);
      combinedDomainXYPlot0.addDomainMarker(799, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeCrosshairPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(layer0);
      combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0E-7, 1468.73188);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      highLowItemLabelGenerator0.generateToolTip((XYDataset) null, 1235, (-1772));
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(3087.07042783, 1468.73188, 10, 4);
      Layer layer0 = Layer.BACKGROUND;
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      xYPlot0.getRendererCount();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[9];
      xYItemRendererArray0[0] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[4] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[5] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[6] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[7] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[8] = (XYItemRenderer) standardXYItemRenderer0;
      xYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Millisecond millisecond0 = new Millisecond();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, "Yp|ZrC6thrl$A~):oB", "n^Xvnc3cs'TYfXFa@");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      PeriodAxis periodAxis0 = new PeriodAxis("n^Xvnc3cs'TYfXFa@");
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(1600, standardXYToolTipGenerator0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, periodAxis0, periodAxis0, cyclicXYItemRenderer0);
      xYPlot0.getRenderer();
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(valueAxis0);
      AxisLocation axisLocation0 = null;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.getCloseTickPaint();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.setDomainMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(12.0, (String) null);
      cyclicNumberAxis0.setOffset((-1814.3048123877));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.getDomainAxisEdge(34);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation1 = categoryPlot0.getRangeAxisLocation();
      axisLocation1.getOpposite();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(727.3393, (-1.0), (String) null);
      cyclicNumberAxis1.setDownArrow(categoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot1.setRangeCrosshairPaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      categoryPlot1.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDomainAxisLocation(10, axisLocation0, false);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      combinedRangeXYPlot1.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxis((-2300), valueAxisArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.ITALY;
      DateAxis dateAxis0 = new DateAxis("Ey/a&qog93hFo", timeZone0, locale0);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
      combinedRangeXYPlot0.setRangeAxisLocation(10, axisLocation0, false);
      Boolean boolean0 = new Boolean("");
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(799);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_CENTER;
      categoryMarker0.setLabelTextAnchor(textAnchor0);
      combinedDomainXYPlot0.addDomainMarker(799, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeCrosshairPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1267), (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate(2, 1402, (-3049));
      Locale locale0 = Locale.ROOT;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10.0, 12.0);
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYLine3DRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.setDomainPannable(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 500;
      intArray0[1] = 1402;
      intArray0[2] = 10;
      intArray0[3] = 2;
      intArray0[4] = 10;
      intArray0[5] = 1;
      intArray0[6] = (-509);
      Polygon polygon0 = new Polygon(intArray0, intArray0, 2);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        xYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      xYDifferenceRenderer0.removeAnnotations();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      GeneralPath generalPath0 = new GeneralPath(rectangle0);
      Point2D point2D0 = generalPath0.getCurrentPoint();
      combinedRangeXYPlot0.zoomDomainAxes(779.0091532, plotRenderingInfo0, point2D0, true);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRenderer((-3049), (XYItemRenderer) xYDifferenceRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.setDomainMinorGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.setRangeAxisLocation(873, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(23);
      combinedRangeXYPlot1.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("Null 'marker' argument.", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10, false, standardXYToolTipGenerator0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(250000.0);
      stack0.add(xYBoxAndWhiskerRenderer0);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot();
      LinkedList<DefaultWindDataset> linkedList0 = new LinkedList<DefaultWindDataset>();
      combinedRangeXYPlot2.drawRangeGridlines((Graphics2D) null, rectangle2D0, linkedList0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      xYPlot0.getRangeAxis(1235);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 5.0, 30.0, 3177.0);
      LogarithmicAxis logarithmicAxis1 = new LogarithmicAxis("[");
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getDomainAxisIndex(logarithmicAxis1);
      Layer layer0 = Layer.FOREGROUND;
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, color0, logarithmicAxis1.DEFAULT_TICK_MARK_STROKE);
      xYPlot0.addRangeMarker(53, (Marker) categoryMarker0, layer0, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(30.0, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1), (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.getDomainAxisIndex((ValueAxis) null);
      Layer layer0 = Layer.FOREGROUND;
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("L.sqV:&", Double.NaN, 150.4, 135.0);
      Paint paint0 = xYPointerAnnotation0.getArrowPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, paint0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer1 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker(65, (Marker) categoryMarker0, layer1, true);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(0.0, true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)324;
      shortArray0[1] = (short)164;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(93, shortArray0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryMarker categoryMarker0 = new CategoryMarker(xYBubbleRenderer0.ZERO);
      combinedDomainXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      xYBubbleRenderer0.setBaseLegendTextPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      ParsePosition parsePosition0 = new ParsePosition(0);
      mockSimpleDateFormat0.parseObject("", parsePosition0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator(":u8%(_<", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0, true, standardXYToolTipGenerator0);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(numberAxis3D0);
      Paint paint0 = combinedDomainXYPlot1.getOutlinePaint();
      numberAxis3D0.setLabelPaint(paint0);
      combinedDomainXYPlot1.clearRangeMarkers();
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(numberAxis3D0);
      combinedDomainXYPlot2.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0, 10, (-185.890689935), 7.6296608737318, 0.05, textTitle0);
      xYDrawableAnnotation0.setURL("<FGQidpbNu.*.iMb");
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedDomainXYPlot1.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 1.0F, "W5GgbHDz\"\"w5.");
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, true);
      DateTitle dateTitle0 = new DateTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0F, 1.0, 180.0, (-12.0425425961112), 0.0F, dateTitle0);
      xYDrawableAnnotation0.setURL("T7ElnogFl+Cjt}4^NCH");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.isDomainCrosshairLockedOnData();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getDataset();
      combinedDomainXYPlot1.getSubplots();
      combinedDomainXYPlot2.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot1.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, 2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean("Pie_Plot");
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols.getInstance();
      Object object0 = new Object();
      Object object1 = new Object();
      combinedDomainXYPlot0.clone();
      LinkedList<DefaultKeyedValuesDataset> linkedList0 = new LinkedList<DefaultKeyedValuesDataset>();
      Object[][][] objectArray0 = new Object[0][2][8];
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo0.getPlotInfo();
      NumberAxis numberAxis0 = new NumberAxis("\"&tK(b{Q%h&");
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedRangeXYPlot0.setRangeAxisLocation(10, (AxisLocation) null, true);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(10);
      CombinedRangeXYPlot combinedRangeXYPlot2 = new CombinedRangeXYPlot(numberAxis0);
      combinedRangeXYPlot2.setDomainZeroBaselinePaint(combinedRangeXYPlot1.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("\"&tK(b{Q%h&", dateFormat0, (DateFormat) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.1, true, standardXYToolTipGenerator0);
      CandlestickRenderer candlestickRenderer1 = new CandlestickRenderer();
      candlestickRenderer1.getBaseLegendTextFont();
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot2, true);
      ChartRenderingInfo chartRenderingInfo2 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      combinedRangeXYPlot0.zoomDomainAxes((double) 10, 0.05, plotRenderingInfo1, (Point2D) point0);
      combinedRangeXYPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke1 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke1);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2193.0), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(434.5355023142446);
      combinedRangeXYPlot0.setRenderer(2719, (XYItemRenderer) candlestickRenderer0, true);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.rendererChanged((RendererChangeEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean("Pie_Plot");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(10);
      axisLocation0.getOpposite();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("=d7?hGz59${*KD^RQ:D", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-30.0), true, standardXYToolTipGenerator0);
      candlestickRenderer0.getBaseLegendTextFont();
      JFreeChart jFreeChart0 = new JFreeChart("", (Font) null, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomDomainAxes(1141.98350443622, 2.5, plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1199.082679658031) <= upper (2.625).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
      combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean("Pie_Plot");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(10);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      categoryMarker0.clone();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker((-11), (Marker) categoryMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable(10, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.setDomainMinorGridlinePaint(xYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot1.setRangeAxisLocation(873, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(23);
      combinedRangeXYPlot1.setDomainZeroBaselinePaint(xYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("Null 'marker' argument.", dateFormat0, dateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10, false, standardXYToolTipGenerator0);
      candlestickRenderer0.getBaseLegendTextFont();
      JFreeChart jFreeChart1 = new JFreeChart((String) null, spiderWebPlot0.DEFAULT_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      xYPlot0.zoomDomainAxes(0.4, 10.0, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0, (String) null);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      combinedDomainXYPlot0.setInsets(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS, false);
      DateTitle dateTitle0 = new DateTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(10.0, 2.0, 0.0F, 1.0F, 10, dateTitle0);
      xYDrawableAnnotation0.setURL(",\"[tv");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      CombinedDomainXYPlot combinedDomainXYPlot2 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot2.isDomainCrosshairLockedOnData();
      CombinedDomainXYPlot combinedDomainXYPlot3 = new CombinedDomainXYPlot();
      combinedDomainXYPlot3.getDataset();
      combinedDomainXYPlot0.getSubplots();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        xYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      DateAxis dateAxis0 = new DateAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getDataset();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.05, (-723.91522273322), 10.0, 1.0F, jFreeChart0);
      combinedDomainXYPlot1.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
      combinedDomainXYPlot0.canSelectByRegion();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(12.0, (String) null);
      cyclicNumberAxis0.setOffset((-1814.3048123877));
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot1.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot1.getDomainAxisEdge(34);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation1 = categoryPlot0.getRangeAxisLocation();
      axisLocation1.getOpposite();
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(727.3393, (-1.0), (String) null);
      cyclicNumberAxis1.setDownArrow(categoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot1.setRangeCrosshairPaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryPlot categoryPlot1 = new CategoryPlot();
      categoryPlot1.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setDomainAxisLocation(10, axisLocation0, false);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(4.0);
      stack0.add(xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        xYPlot0.setRangeAxis((-1952257861), (ValueAxis) numberAxis3D0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue(10.0, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("LS11p", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3177, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 3, 2, 410, 863, 410, 1543, 420, 863, false, 768, 811, (-1), 863);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      String string0 = "Pie_Plot";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      int int0 = (-496);
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRenderer((-496), (XYItemRenderer) xYSplineRenderer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = new JFreeChart("5kzL_eMRK\"_~", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo0.getPlotInfo();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 1.0F, 0.0, 10);
      xYPointerAnnotation0.getOutlinePaint();
      combinedRangeXYPlot0.setRangeTickBandPaint(xYPointerAnnotation0.DEFAULT_PAINT);
      SystemColor systemColor0 = SystemColor.desktop;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedRangeXYPlot0.setDomainAxisLocation(1522, axisLocation0, true);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.0);
      stack0.add(xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      RectangleInsets rectangleInsets0 = legendTitle0.getLegendItemGraphicPadding();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(combinedDomainCategoryPlot0, yIntervalSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.getRangeAxisIndex(periodAxis0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SystemColor systemColor0 = SystemColor.inactiveCaptionBorder;
      combinedDomainXYPlot0.getDomainAxisEdge((-750));
      XYPlot xYPlot0 = new XYPlot();
      Stroke stroke0 = xYPlot0.getDomainMinorGridlineStroke();
      combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke0);
      combinedDomainXYPlot0.setDomainCrosshairValue(25000.0, true);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 10 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.setRangeAxis(40, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      combinedDomainXYPlot0.setInsets(rectangleInsets0, false);
      combinedDomainXYPlot0.getRangeAxis();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRenderer((-1727));
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(numberAxis3D0, timePeriodValuesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-331.366649), "Null 'marker' not permitted.");
      cyclicNumberAxis0.setOffset(0.05);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      Boolean boolean0 = new Boolean("Null 'offset' argument.");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(500);
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      PaintScale paintScale0 = xYShapeRenderer0.getPaintScale();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(paintScale0, cyclicNumberAxis0);
      AxisLocation axisLocation1 = paintScaleLegend0.getAxisLocation();
      axisLocation1.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      CategoryMarker categoryMarker0 = new CategoryMarker(500);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-972), (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator(":u8%(_<", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0, true, standardXYToolTipGenerator0);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(xYLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      int int0 = 873;
      AxisLocation axisLocation0 = null;
      LinkedList<LogAxis> linkedList0 = new LinkedList<LogAxis>();
      Object[][][] objectArray0 = new Object[9][5][5];
      Object[][] objectArray1 = new Object[9][7];
      Object[] objectArray2 = new Object[8];
      objectArray2[0] = (Object) jFreeChart0;
      objectArray2[1] = (Object) combinedRangeXYPlot0;
      objectArray2[2] = (Object) linkedList0;
      objectArray2[3] = (Object) combinedRangeXYPlot1;
      objectArray2[4] = (Object) null;
      objectArray2[5] = (Object) logarithmicAxis0;
      objectArray2[6] = (Object) renderingHints0;
      objectArray2[7] = (Object) renderingHints0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[7];
      objectArray3[0] = (Object) "EH_Fyp[XEK^qSbF?K";
      objectArray3[1] = (Object) jFreeChart0;
      objectArray3[2] = (Object) renderingHints0;
      objectArray3[3] = (Object) "EH_Fyp[XEK^qSbF?K";
      objectArray3[4] = (Object) logarithmicAxis0;
      objectArray3[5] = (Object) renderingHints0;
      objectArray3[6] = (Object) null;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = (Object) linkedList0;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[6];
      objectArray5[0] = (Object) combinedRangeXYPlot1;
      objectArray5[1] = (Object) jFreeChart0;
      objectArray5[2] = (Object) linkedList0;
      objectArray5[3] = (Object) logarithmicAxis0;
      objectArray5[4] = (Object) renderingHints0;
      objectArray5[5] = (Object) legendItemCollection0;
      objectArray1[3] = objectArray5;
      Object[] objectArray6 = new Object[4];
      objectArray6[0] = (Object) linkedList0;
      objectArray6[1] = (Object) xYPlot0;
      objectArray6[2] = (Object) combinedRangeXYPlot0;
      objectArray6[3] = (Object) null;
      objectArray1[4] = objectArray6;
      Object[] objectArray7 = new Object[3];
      objectArray7[0] = (Object) logarithmicAxis0;
      objectArray7[1] = (Object) renderingHints0;
      objectArray7[2] = (Object) combinedRangeXYPlot0;
      objectArray1[5] = objectArray7;
      Object[] objectArray8 = new Object[0];
      objectArray1[6] = objectArray8;
      Object[] objectArray9 = new Object[3];
      objectArray9[0] = (Object) renderingHints0;
      objectArray9[1] = (Object) renderingHints0;
      objectArray9[2] = (Object) xYPlot0;
      objectArray1[7] = objectArray9;
      Object[] objectArray10 = new Object[6];
      Object object0 = new Object();
      objectArray10[0] = object0;
      objectArray10[1] = (Object) legendItemCollection0;
      objectArray10[2] = (Object) null;
      objectArray10[3] = (Object) combinedRangeXYPlot1;
      objectArray10[4] = (Object) renderingHints0;
      objectArray10[5] = (Object) xYPlot0;
      objectArray1[8] = objectArray10;
      objectArray0[0] = objectArray1;
      Object[][] objectArray11 = new Object[7][6];
      objectArray11[0] = objectArray2;
      Object[] objectArray12 = new Object[0];
      objectArray11[1] = objectArray12;
      objectArray11[2] = objectArray6;
      objectArray11[3] = objectArray9;
      objectArray11[4] = objectArray5;
      objectArray11[5] = objectArray4;
      Object[] objectArray13 = new Object[6];
      objectArray13[0] = (Object) combinedRangeXYPlot0;
      objectArray13[1] = (Object) combinedRangeXYPlot0;
      objectArray13[2] = (Object) xYPlot0;
      objectArray13[3] = (Object) renderingHints0;
      objectArray13[4] = (Object) legendItemCollection0;
      objectArray13[5] = (Object) null;
      objectArray11[6] = objectArray13;
      objectArray0[1] = objectArray11;
      Object[][] objectArray14 = new Object[3][8];
      Object[] objectArray15 = new Object[8];
      Object object1 = new Object();
      objectArray15[0] = object1;
      objectArray15[1] = (Object) combinedRangeXYPlot0;
      Object object2 = xYPlot0.clone();
      objectArray15[2] = object2;
      objectArray15[3] = (Object) jFreeChart0;
      objectArray15[4] = (Object) logarithmicAxis0;
      objectArray15[5] = (Object) combinedRangeXYPlot1;
      objectArray15[6] = object0;
      objectArray15[7] = (Object) renderingHints0;
      objectArray14[0] = objectArray15;
      objectArray14[1] = objectArray7;
      objectArray14[2] = objectArray5;
      objectArray0[2] = objectArray14;
      Object[][] objectArray16 = new Object[7][4];
      objectArray16[0] = objectArray4;
      objectArray16[1] = objectArray10;
      objectArray16[2] = objectArray8;
      objectArray16[3] = objectArray12;
      objectArray16[4] = objectArray12;
      objectArray16[5] = objectArray10;
      objectArray16[6] = objectArray9;
      objectArray0[3] = objectArray16;
      Object[][] objectArray17 = new Object[6][8];
      objectArray17[0] = objectArray10;
      objectArray17[1] = objectArray10;
      objectArray17[2] = objectArray15;
      objectArray17[3] = objectArray15;
      objectArray17[4] = objectArray7;
      objectArray17[5] = objectArray13;
      objectArray0[4] = objectArray17;
      Object[][] objectArray18 = new Object[4][5];
      objectArray18[0] = objectArray15;
      objectArray18[1] = objectArray8;
      objectArray18[2] = objectArray13;
      objectArray18[3] = objectArray4;
      objectArray0[5] = objectArray18;
      Object[][] objectArray19 = new Object[5][4];
      objectArray19[0] = objectArray2;
      objectArray19[1] = objectArray6;
      objectArray19[2] = objectArray15;
      objectArray19[3] = objectArray9;
      objectArray19[4] = objectArray13;
      objectArray0[6] = objectArray19;
      Object[][] objectArray20 = new Object[7][1];
      Object[] objectArray21 = new Object[2];
      objectArray21[0] = object0;
      objectArray21[1] = object2;
      objectArray20[0] = objectArray21;
      objectArray20[1] = objectArray8;
      objectArray20[2] = objectArray9;
      objectArray20[3] = objectArray6;
      objectArray20[4] = objectArray9;
      objectArray20[5] = objectArray5;
      objectArray20[6] = objectArray13;
      objectArray0[7] = objectArray20;
      Object[][] objectArray22 = new Object[3][9];
      objectArray22[0] = objectArray6;
      objectArray22[1] = objectArray6;
      objectArray22[2] = objectArray7;
      objectArray0[8] = objectArray22;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(linkedList0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(4);
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
      Paint paint0 = combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      HashSet<DefaultHighLowDataset> hashSet0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0F, 1.0F, (-1.0), 0.0F, 1.0F, textTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot1.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      double[] doubleArray0 = new double[0];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot1.DEFAULT_CROSSHAIR_PAINT, paint0);
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0, true);
      combinedDomainXYPlot1.setRangeZeroBaselineVisible(true);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-3941), axisLocation1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      combinedRangeXYPlot0.setDomainTickBandPaint(logarithmicAxis0.DEFAULT_AXIS_LABEL_PAINT);
      axisLocation1.getOpposite();
      logarithmicAxis0.setAutoRange(false);
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      combinedRangeXYPlot0.getDomainAxisLocation();
      combinedRangeXYPlot0.getRenderer(10);
      DatasetChangeEvent datasetChangeEvent0 = null;
      try {
        datasetChangeEvent0 = new DatasetChangeEvent((Object) null, timePeriodValuesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      categoryPointerAnnotation0.getFont();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(logarithmicAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      TextTitle textTitle0 = new TextTitle();
      JFreeChart jFreeChart0 = new JFreeChart("Z\"CXGY$&@R\"r", combinedDomainXYPlot0);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.05, 0.0F, (-1088.6988627053), 5.0, 3.0, jFreeChart0);
      xYDrawableAnnotation0.setURL("Null 'location' for index 0 not permitted.");
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      xYDrawableAnnotation0.setURL("Z\"CXGY$&@R\"r");
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      axisLocation1.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("K,&55P( NPH");
      JFreeChart jFreeChart0 = new JFreeChart("K,&55P( NPH", categoryPointerAnnotation0.DEFAULT_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 11, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("EH_Fyp[XEK^qSbF?K");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot1.setRangeAxisLocation(873, (AxisLocation) null, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      DatasetGroup datasetGroup0 = new DatasetGroup();
      spiderWebPlot0.setDatasetGroup(datasetGroup0);
      spiderWebPlot0.getSeriesPaint(23);
      combinedRangeXYPlot0.getDomainAxisCount();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("Null 'marker' argument.", dateFormat0, dateFormat0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeAxisLocation(93, (AxisLocation) null);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisSpace axisSpace0 = new AxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("5kzL_eMRK\"_~", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      xYPlot0.setRenderer((XYItemRenderer) xYBoxAndWhiskerRenderer0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-774));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-774) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getDomainAxisCount();
      JFreeChart jFreeChart0 = new JFreeChart("j<Hv1WsoQ4!]Ke", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 0.5F, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, (Layer) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation1);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      CategoryPlot categoryPlot0 = jFreeChart0.getCategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      combinedRangeXYPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      Locale locale0 = Locale.ROOT;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      xYPlot0.setDomainPannable(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 500;
      intArray0[2] = 500;
      intArray0[3] = 10;
      intArray0[5] = 500;
      intArray0[6] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      xYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, (PlotRenderingInfo) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-1) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = new HashSet<DefaultHighLowDataset>();
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1088.6988627053), 2.0F, 0.05, 0.05, 10, textTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, 2.0F, (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      axisLocation1.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      combinedRangeXYPlot0.getRenderer(10);
      DatasetChangeEvent datasetChangeEvent0 = null;
      try {
        datasetChangeEvent0 = new DatasetChangeEvent((Object) null, timePeriodValuesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      RectangleInsets rectangleInsets0 = legendTitle0.getLegendItemGraphicPadding();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(1.0F);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.setFixedDomainAxisSpace((AxisSpace) null, true);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Bill Kelemen");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      numberAxis3D0.setLabelPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.setRangeGridlineStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      TextTitle textTitle0 = new TextTitle();
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1088.6988627053), 2.0F, 0.05, Double.NaN, 10, textTitle0);
      xYDrawableAnnotation0.setURL("Null 'origin' argument.");
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, true);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      combinedDomainXYPlot0.getDataset();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYDrawableAnnotation0);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(Double.NaN);
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(10, (Marker) valueMarker0, layer1, true);
      combinedDomainXYPlot0.addDomainMarker(2586, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(1701, (Marker) valueMarker0, (Layer) null);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 1.0F, false);
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("5kzL_eMRK\"_~", xYLine3DRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.drawBackground(graphics2D0, rectangle2D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 1543, 680, (-2245), 10, (-248), 1363, 15, 10, false, 1024, 1543, 680, 1.0F);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainAxisLocation((-496), axisLocation1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation1);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(yIntervalSeriesCollection0, yIntervalSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.getRangeAxisIndex(dateAxis0);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYBubbleRenderer0;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.x2 = (double) 10;
      line2D_Double0.getBounds2D();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((-1427.068));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint((-9999));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-9999) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(83);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 83 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke0 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke0);
      combinedDomainXYPlot0.configureRangeAxes();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(false);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(yIntervalSeriesCollection0, defaultPieDataset0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getLegendItems();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      jFreeChart0.getRenderingHints();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      xYPlot0.handleClick(0, 15, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-12.347653980792026), true, standardXYToolTipGenerator0);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeAxisIndex((ValueAxis) null);
      Rectangle rectangle0 = new Rectangle();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      DateAxis dateAxis0 = new DateAxis();
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(xYSeriesCollection0, dateAxis0, dateAxis0, (XYItemRenderer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-12.347653980792026), true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
      combinedDomainXYPlot0.getRangeAxisIndex((ValueAxis) null);
      Rectangle rectangle0 = new Rectangle();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      combinedDomainXYPlot0.select(8.0, 10.0, (Rectangle2D) rectangle0, (RenderingSource) chartPanel0);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      AxisLocation axisLocation1 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation1);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("B|z44(dr5n^yA8#r|P");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers((Layer) null);
      TimePeriodValues timePeriodValues0 = null;
      try {
        timePeriodValues0 = new TimePeriodValues((Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.data.general.Series", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      legendTitle0.getLegendItemGraphicPadding();
      DateAxis dateAxis0 = new DateAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation1);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(1.0F);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(yIntervalSeriesCollection0, yIntervalSeriesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      combinedRangeXYPlot0.setDomainCrosshairPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat1 = new MockSimpleDateFormat("");
      DecimalFormatSymbols.getInstance();
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat1, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10, true, standardXYToolTipGenerator0);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[4];
      xYItemRendererArray0[0] = (XYItemRenderer) candlestickRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) xYLine3DRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) xYLine3DRenderer0;
      candlestickRenderer0.setDownPaint(windItemRenderer0.DEFAULT_OUTLINE_PAINT);
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.mapDatasetToDomainAxis(20, 2);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      Locale locale0 = Locale.GERMAN;
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(2, false, standardXYToolTipGenerator0);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      xYPlot0.getFixedLegendItems();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, 0.05);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      int[] intArray0 = new int[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 15, intArray0, 10, false, 10, 303);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo0.getPlotInfo();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 1.0F, 0.0, 10);
      Color color0 = (Color)xYPointerAnnotation0.getOutlinePaint();
      combinedRangeXYPlot0.setRangeTickBandPaint(xYPointerAnnotation0.DEFAULT_PAINT);
      SystemColor systemColor0 = SystemColor.desktop;
      IntervalMarker intervalMarker0 = new IntervalMarker(1.5, 0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, systemColor0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      JTree jTree0 = new JTree((TreeNode) null);
      jTree0.getEditingPath();
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(10, color0, color0, systemColor0, systemColor0);
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jTree0, 10, 10, (-436), (-436));
      fixedHeightLayoutCache0.getBounds((TreePath) null, rectangle0);
      Rectangle rectangle1 = new Rectangle(rectangle0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawAxes((Graphics2D) null, (Rectangle2D) null, rectangle1, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedRangeXYPlot0.setDomainAxisLocation(10, axisLocation0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(10);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.05, 0.0F, 1.0E-8, 1.0F, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(xYBoxAnnotation0, timePeriodValuesCollection0);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, (-1335.246182559), (String) null);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.getDomainAxisCount();
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("j<Hv1WsoQ4!]Ke", font0, combinedRangeCategoryPlot0, true);
      jFreeChart0.getCategoryPlot();
      combinedRangeCategoryPlot0.getFixedDomainAxisSpace();
      combinedRangeXYPlot1.setFixedDomainAxisSpace((AxisSpace) null);
      combinedRangeXYPlot1.getDatasetRenderingOrder();
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("s*nF'tYi'A}qZelqg12");
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      combinedDomainXYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      SystemColor systemColor0 = SystemColor.scrollbar;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot1.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      AxisLocation.getOpposite(axisLocation0);
      combinedRangeXYPlot0.setDomainAxisLocation(6, axisLocation0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(10);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      DatasetChangeEvent datasetChangeEvent0 = null;
      try {
        datasetChangeEvent0 = new DatasetChangeEvent((Object) null, timePeriodValuesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      double double0 = (-598.9368920581932);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-78.3526), (-598.9368920581932));
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      Stroke stroke0 = combinedRangeXYPlot0.getDomainGridlineStroke();
      ValueMarker valueMarker0 = new ValueMarker(2.5E10, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, stroke0, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.removeRangeMarker(3, (Marker) valueMarker0, layer0, false);
      Layer layer1 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(786, (Marker) valueMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("Null '[rientation' argument.");
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      xYPlot0.getRangeAxisEdge((-474));
      xYPlot0.getRangeGridlineStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE);
      xYPlot0.addDomainMarker((Marker) categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("Pie_Plot", 10.0, (-9.0), (-2646.10699873));
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYPointerAnnotation0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (500) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("v");
      BigInteger bigInteger0 = BigInteger.ONE;
      combinedRangeXYPlot0.setRangeCrosshairValue(1.0E-8);
      int[] intArray0 = new int[1];
      intArray0[0] = 10;
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      xYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      xYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_TICK_LABEL_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      axisLocation1.getOpposite();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot1.setRangeAxisLocation((-9999), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      PeriodAxis periodAxis0 = new PeriodAxis("s*nF'tYi'A}qZelqg12");
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      periodAxis0.setAutoRangeMinimumSize(2380.633715015);
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[5] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[7] = (ValueAxis) periodAxis0;
      valueAxisArray0[8] = (ValueAxis) periodAxis0;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxisArray0[5]);
      combinedRangeXYPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYBubbleRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.isDomainZeroBaselineVisible();
      combinedDomainXYPlot0.setRangeCrosshairPaint(windItemRenderer0.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYPlot.localizationResources = null;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers((-1), layer0);
      xYPlot0.getOrientation();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      defaultTreeCellRenderer0.repaint((long) 10, 4899, 1064, 1481, 739);
      Color.getColor("{(4X\"YYvb0CwG");
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.isRangeCrosshairLockedOnData();
      AffineTransform affineTransform0 = new AffineTransform();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.XYPlot", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      xYItemRendererArray0[0] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[4] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      combinedDomainXYPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      String string0 = "Pie_Plot";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      int int0 = 368;
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      int int1 = 11;
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(11, (Marker) categoryMarker0, layer0, true);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable(10, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ShortLookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.setDomainPannable(true);
      int[] intArray0 = new int[7];
      intArray0[0] = 500;
      intArray0[1] = 500;
      intArray0[2] = 500;
      intArray0[3] = 10;
      intArray0[5] = 500;
      intArray0[6] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        xYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stack<XYBoxAndWhiskerRenderer> stack0 = new Stack<XYBoxAndWhiskerRenderer>();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.001);
      stack0.add(xYBoxAndWhiskerRenderer0);
      combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, stack0);
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 2.0F, false);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 2.0F);
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(500, (Marker) null, layer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      periodAxis1.setAutoRangeMinimumSize(1.0, true);
      valueAxisArray0[1] = (ValueAxis) periodAxis1;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.getRangeAxisEdge((-502));
      xYPlot0.getRangeGridlineStroke();
      xYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      xYPlot0.isDomainCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYPlot.localizationResources = null;
      int int0 = (-1);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers((-1), layer0);
      xYPlot0.getOrientation();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      int int1 = 4899;
      int int2 = 739;
      defaultTreeCellRenderer0.repaint((long) 10, 4899, 1064, 1481, 739);
      Color.getColor("{(4X\"YYvb0CwG");
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.isRangeCrosshairLockedOnData();
      AffineTransform affineTransform0 = new AffineTransform();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.XYPlot", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(10, (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      jFreeChart0.getXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("v");
      BigInteger bigInteger0 = BigInteger.ONE;
      combinedRangeXYPlot0.setRangeCrosshairValue(1.0E-8);
      int[] intArray0 = new int[1];
      intArray0[0] = 10;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(500, 10, intArray0, (-1), 10, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      xYPlot0.getRangeAxisEdge((-502));
      xYPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYPlot.localizationResources = null;
      int int0 = (-1);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("s*nF'tYi'A}qZelqg12");
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      combinedDomainXYPlot0.clearRangeMarkers();
      ValueAxis[] valueAxisArray0 = new ValueAxis[9];
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) periodAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[5] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[7] = (ValueAxis) periodAxis0;
      valueAxisArray0[8] = (ValueAxis) periodAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      combinedDomainXYPlot0.getRangeAxisEdge(2641);
      combinedDomainXYPlot0.getRangeGridlineStroke();
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setBackgroundAlpha((-4114.2886F));
      xYPlot0.mapDatasetToRangeAxis(1, (-426));
      // Undeclared exception!
      try { 
        xYPlot0.handleClick(1262, (-232), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      Range.shift(cyclicNumberAxis0.DEFAULT_RANGE, 0.0, false);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, cyclicNumberAxis0.DEFAULT_RANGE);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.getPlotInfo();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 680, 32L, 10, 10, 18, 41, (-4181), 10, false, (-1382), 10, 77, 1949.692);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(0.0, (double) 777, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Null 'offset' argument.";
      stringArray0[1] = "Null 'marker' not permitted.";
      stringArray0[2] = "Null 'marker' not permitted.";
      stringArray0[3] = "Null 'marker' not permitted.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'marker' not permitted.", stringArray0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, symbolAxis0, symbolAxis0, clusteredXYBarRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      Area area0 = new Area();
      area0.getBounds();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0E-8;
      doubleArray0[1] = 271.0617;
      doubleArray0[2] = 140.3327989354521;
      doubleArray0[3] = 0.4;
      doubleArray0[4] = (-180.362876);
      doubleArray0[5] = 0.4;
      doubleArray0[6] = (double) 1.0F;
      doubleArray0[7] = 0.4;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, symbolAxis0.DEFAULT_AXIS_LINE_STROKE, symbolAxis0.DEFAULT_TICK_MARK_PAINT, xYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(boolean0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.01, 0.4);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDataset(0);
      combinedDomainXYPlot0.clearDomainAxes();
      double double0 = (-1436.56031999522);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(1758);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1758, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.getDomainAxisEdge(368);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      combinedDomainXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedDomainXYPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      SimpleTimeZone simpleTimeZone1 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale1 = Locale.ROOT;
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.getRangeAxisEdge(500);
      xYPlot0.getRangeGridlineStroke();
      xYPlot0.mapDatasetToRangeAxis(66, 4);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(4.0, (-599.9628806550202));
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(268, highLowItemLabelGenerator0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[20];
      xYItemRendererArray0[0] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[1] = (XYItemRenderer) xYLineAndShapeRenderer0;
      xYItemRendererArray0[2] = (XYItemRenderer) standardXYItemRenderer0;
      xYItemRendererArray0[3] = (XYItemRenderer) standardXYItemRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ModuloAxis moduloAxis0 = new ModuloAxis("}ts>}+5N2]#Xa~V+", cyclicNumberAxis0.DEFAULT_RANGE);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, (CategoryAxis) null, moduloAxis0, boxAndWhiskerRenderer0);
      CategoryPlot categoryPlot1 = new CategoryPlot(slidingGanttCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      AxisLocation axisLocation0 = categoryPlot1.getRangeAxisLocation(1);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Paint[] paintArray0 = new Paint[3];
      paintArray0[0] = xYPlot0.DEFAULT_BACKGROUND_PAINT;
      paintArray0[1] = xYPlot0.DEFAULT_BACKGROUND_PAINT;
      paintArray0[2] = xYPlot0.DEFAULT_CROSSHAIR_PAINT;
      Paint[] paintArray1 = new Paint[8];
      paintArray1[0] = xYPlot0.DEFAULT_CROSSHAIR_PAINT;
      paintArray1[1] = xYPlot0.DEFAULT_CROSSHAIR_PAINT;
      paintArray1[2] = xYPlot0.DEFAULT_CROSSHAIR_PAINT;
      paintArray1[3] = xYPlot0.DEFAULT_BACKGROUND_PAINT;
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      Paint paint0 = defaultDrawingSupplier0.getNextOutlinePaint();
      paintArray1[4] = paint0;
      paintArray1[5] = xYPlot0.DEFAULT_GRIDLINE_PAINT;
      HighLowRenderer highLowRenderer0 = new HighLowRenderer();
      highLowRenderer0.getCloseTickPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, paintArray1[1], xYPlot0.DEFAULT_CROSSHAIR_STROKE, (Paint) null, highLowRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker(1702, (Marker) categoryMarker0, layer0, true);
      paintArray1[6] = xYPlot0.DEFAULT_GRIDLINE_PAINT;
      paintArray1[7] = xYPlot0.DEFAULT_OUTLINE_PAINT;
      Stroke[] strokeArray0 = new Stroke[1];
      strokeArray0[0] = xYPlot0.DEFAULT_OUTLINE_STROKE;
      DefaultDrawingSupplier defaultDrawingSupplier1 = new DefaultDrawingSupplier(paintArray0, paintArray1, defaultDrawingSupplier0.DEFAULT_OUTLINE_PAINT_SEQUENCE, strokeArray0, defaultDrawingSupplier0.DEFAULT_STROKE_SEQUENCE, defaultDrawingSupplier0.DEFAULT_SHAPE_SEQUENCE);
      xYPlot0.setDrawingSupplier((DrawingSupplier) defaultDrawingSupplier1, false);
      xYPlot0.setBackgroundAlpha((-4114.2886F));
      // Undeclared exception!
      try { 
        xYPlot0.handleClick(1262, (-232), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYPlot.localizationResources = null;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers((-1), layer0);
      xYPlot0.getOrientation();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      defaultTreeCellRenderer0.repaint((long) 10, 4899, 1064, 1481, 739);
      Color.getColor("{(4X\"YYvb0CwG");
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.isRangeCrosshairLockedOnData();
      AffineTransform affineTransform0 = new AffineTransform();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.XYPlot", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2002), (-2272), (-356), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -356
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYBubbleRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      standardXYZToolTipGenerator0.clone();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(152, standardXYZToolTipGenerator0, standardXYURLGenerator0);
      xYItemRendererArray0[4] = (XYItemRenderer) cyclicXYItemRenderer0;
      cyclicXYItemRenderer0.setPlotDiscontinuous(false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 1160.9638079173023, 3762.504772, 2);
      Layer layer0 = Layer.BACKGROUND;
      cyclicXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("{0}: ({1}, {2})");
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, (ValueAxis) null, logarithmicAxis0, windItemRenderer0);
      combinedDomainXYPlot0.getRendererCount();
      combinedDomainXYPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-78.3526), (-598.9368920581932));
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.repaint((long) 8, 1, 8, (-4992), 500);
      String string0 = "{(4X\"YYvb0CwG";
      Color.getColor("{(4X\"YYvb0CwG");
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.getDomainAxisEdge(10);
      combinedDomainXYPlot0.setDomainCrosshairValue((-944.0), false);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxis((-1437), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      basicStroke0.getDashArray();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(basicStroke0);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2193.0), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      combinedDomainXYPlot0.getDomainAxisEdge();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getSeriesCount();
      float float0 = (-4114.2886F);
      xYPlot0.getLegendItems();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, 0.05);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      BufferedImage bufferedImage0 = null;
      int[] intArray0 = new int[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 15, intArray0, 10, false, 10, 303);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      RectangleInsets rectangleInsets0 = legendTitle0.getLegendItemGraphicPadding();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      int[] intArray0 = new int[9];
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 10;
      ValueMarker valueMarker0 = new ValueMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0, layer0);
      intArray0[4] = 10;
      intArray0[5] = 10;
      intArray0[6] = 654;
      intArray0[7] = 10;
      intArray0[8] = 10;
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = new IndexColorModel(10, 10, intArray0, 0, 0, bigInteger0);
      combinedDomainXYPlot0.isDomainPannable();
      ComponentColorModel componentColorModel0 = null;
      try {
        componentColorModel0 = new ComponentColorModel((ColorSpace) null, intArray0, true, true, 654, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.ComponentColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart("[eU]0PI", periodAxis1.DEFAULT_TICK_LABEL_FONT, xYPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(653, 10, 0.05, (-2224.95537), chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Area area0 = new Area();
      area0.getBounds();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      Range.shift(cyclicNumberAxis0.DEFAULT_RANGE, 0.0, false);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, cyclicNumberAxis0.DEFAULT_RANGE);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(10, (-1.0));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDataset(500);
      combinedDomainXYPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      XYPlot xYPlot0 = jFreeChart0.getXYPlot();
      String string0 = "v";
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("v");
      xYPlot0.getDomainAxisIndex(logarithmicAxis0);
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        xYPlot0.addRangeMarker(10, (Marker) null, layer0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'layer' not permitted.");
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'layer' not permitted.", 0.0F, (-3525.426014218626), (-131.667383));
      Font font0 = categoryPointerAnnotation0.getFont();
      logarithmicAxis0.setTickLabelFont(font0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) logarithmicAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation2, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesPaint(274);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(spiderWebPlot0.DEFAULT_LABEL_SHADOW_PAINT);
      combinedRangeXYPlot0.getDomainAxisCount();
      JFreeChart jFreeChart0 = new JFreeChart("A=F", font0, combinedRangeXYPlot0, false);
      // Undeclared exception!
      try { 
        jFreeChart0.getCategoryPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.CombinedRangeXYPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      Range.shift(cyclicNumberAxis0.DEFAULT_RANGE, 0.0, false);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, cyclicNumberAxis0.DEFAULT_RANGE);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(10, (-1.0));
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis1);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      combinedRangeXYPlot1.getDataset(500);
      combinedDomainXYPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke1 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke1);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2193.0), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.removeDomainMarker(10, (Marker) valueMarker0, layer0);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      LogAxis logAxis0 = new LogAxis("Null 'axisIndex' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      int int0 = (-101);
      ArrayList<Point2D.Double> arrayList1 = new ArrayList<Point2D.Double>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes((-101), arrayList1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      valueAxisArray0[1] = (ValueAxis) periodAxis1;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      xYPlot0.setDomainAxes(valueAxisArray0);
      assertEquals(3, xYPlot0.getDomainAxisCount());
      
      xYPlot0.getDomainZeroBaselinePaint();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertNotNull(combinedDomainXYPlot0);
      
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      assertEquals(2.0, xYLine3DRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYLine3DRenderer0.getBaseShapesFilled());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYLine3DRenderer0.getUseOutlinePaint());
      assertFalse(xYLine3DRenderer0.getDrawSeriesLineAsPath());
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(3, xYLine3DRenderer0.getPassCount());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYLine3DRenderer0.getDefaultEntityRadius());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYLine3DRenderer0.getBaseSeriesVisible());
      assertTrue(xYLine3DRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYLine3DRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYLine3DRenderer0.getUseFillPaint());
      assertTrue(xYLine3DRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYLine3DRenderer0.getBaseShapesVisible());
      assertEquals(12.0, xYLine3DRenderer0.getXOffset(), 0.01);
      assertEquals(8.0, xYLine3DRenderer0.getYOffset(), 0.01);
      assertTrue(xYLine3DRenderer0.getBaseLinesVisible());
      assertTrue(xYLine3DRenderer0.getBaseCreateEntities());
      assertTrue(xYLine3DRenderer0.getDrawOutlines());
      assertFalse(xYLine3DRenderer0.getBaseItemLabelsVisible());
      assertEquals(12.0, XYLine3DRenderer.DEFAULT_X_OFFSET, 0.01);
      assertEquals(8.0, XYLine3DRenderer.DEFAULT_Y_OFFSET, 0.01);
      assertNotNull(xYLine3DRenderer0);
      
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      assertTrue(xYBubbleRenderer0.getBaseSeriesVisible());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYBubbleRenderer0.getBaseCreateEntities());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBubbleRenderer0.getBaseItemLabelsVisible());
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertNotNull(xYBubbleRenderer0);
      
      xYItemRendererArray0[1] = (XYItemRenderer) xYBubbleRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      assertNotNull(mockSimpleDateFormat0);
      
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      assertEquals(';', decimalFormatSymbols0.getPatternSeparator());
      assertEquals('#', decimalFormatSymbols0.getDigit());
      assertEquals("\u00A4", decimalFormatSymbols0.getCurrencySymbol());
      assertEquals('\u2030', decimalFormatSymbols0.getPerMill());
      assertEquals("\u221E", decimalFormatSymbols0.getInfinity());
      assertEquals('-', decimalFormatSymbols0.getMinusSign());
      assertEquals('.', decimalFormatSymbols0.getMonetaryDecimalSeparator());
      assertEquals("E", decimalFormatSymbols0.getExponentSeparator());
      assertEquals("XXX", decimalFormatSymbols0.getInternationalCurrencySymbol());
      assertEquals("\uFFFD", decimalFormatSymbols0.getNaN());
      assertEquals('0', decimalFormatSymbols0.getZeroDigit());
      assertEquals('%', decimalFormatSymbols0.getPercent());
      assertEquals('.', decimalFormatSymbols0.getDecimalSeparator());
      assertEquals(',', decimalFormatSymbols0.getGroupingSeparator());
      assertNotNull(decimalFormatSymbols0);
      
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(152, standardXYZToolTipGenerator0, standardXYURLGenerator0);
      xYItemRendererArray0[4] = (XYItemRenderer) cyclicXYItemRenderer0;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 2, 3);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, (CategoryAxis) null, (ValueAxis) null, boxAndWhiskerRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation((-3113));
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, false);
      combinedDomainXYPlot0.getWeight();
      combinedDomainXYPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(combinedDomainXYPlot0.canSelectByRegion());
      assertFalse(combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(1, combinedDomainXYPlot0.getDomainAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getRendererCount());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isNotify());
      assertFalse(combinedDomainXYPlot0.canSelectByPoint());
      assertFalse(combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertTrue(combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedDomainXYPlot0.isDomainPannable());
      assertFalse(combinedDomainXYPlot0.isRangePannable());
      assertEquals(1, combinedDomainXYPlot0.getDatasetCount());
      assertFalse(combinedDomainXYPlot0.isRangeMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainZoomable());
      assertFalse(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(combinedDomainXYPlot0.isSubplot());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertTrue(combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertNotNull(combinedDomainXYPlot0);
      
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertNotNull(cyclicNumberAxis0);
      
      Range range0 = Range.shift(cyclicNumberAxis0.DEFAULT_RANGE, 0.0, false);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertEquals(1.0, range0.getLength(), 0.01);
      assertEquals(0.5, range0.getCentralValue(), 0.01);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertNotNull(range0);
      
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertNotNull(combinedRangeXYPlot0);
      
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertNotNull(axisLocation0);
      
      combinedRangeXYPlot0.setRangeAxisLocation(10, axisLocation0, true);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals("AxisLocation.TOP_OR_RIGHT", axisLocation0.toString());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      assertTrue(spiderWebPlot0.isNotify());
      assertEquals(1.0F, spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      assertNotNull(spiderWebPlot0);
      
      Color color0 = (Color)spiderWebPlot0.getSeriesPaint(41);
      assertTrue(spiderWebPlot0.isNotify());
      assertEquals(1.0F, spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals((-43691), color0.getRGB());
      assertEquals(255, color0.getRed());
      assertEquals(85, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(85, color0.getBlue());
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      assertNotNull(color0);
      
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(spiderWebPlot0.DEFAULT_LABEL_PAINT);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(spiderWebPlot0.isNotify());
      assertEquals(1.0F, spiderWebPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, spiderWebPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals((-1.0), spiderWebPlot0.getMaxValue(), 0.01);
      assertEquals("Spider Web Plot", spiderWebPlot0.getPlotType());
      assertEquals(90.0, spiderWebPlot0.getStartAngle(), 0.01);
      assertEquals(0.1, spiderWebPlot0.getAxisLabelGap(), 0.01);
      assertEquals(0.5F, spiderWebPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(15, spiderWebPlot0.getBackgroundImageAlignment());
      assertNull(spiderWebPlot0.getNoDataMessage());
      assertEquals(0.01, spiderWebPlot0.getHeadPercent(), 0.01);
      assertEquals(0.25, spiderWebPlot0.getInteriorGap(), 0.01);
      assertTrue(spiderWebPlot0.isWebFilled());
      assertTrue(spiderWebPlot0.isOutlineVisible());
      assertFalse(spiderWebPlot0.isSubplot());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, SpiderWebPlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals((-1.0), SpiderWebPlot.DEFAULT_MAX_VALUE, 0.01);
      assertEquals(0.25, SpiderWebPlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, SpiderWebPlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(0.1, SpiderWebPlot.DEFAULT_AXIS_LABEL_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.01, SpiderWebPlot.DEFAULT_HEAD, 0.01);
      
      int int0 = combinedRangeXYPlot0.getDomainAxisCount();
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(1, int0);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      JFreeChart jFreeChart0 = new JFreeChart((String) null, cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertEquals(10.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(10.0, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertFalse(cyclicNumberAxis0.isInverted());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals((-9.0), cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals("Null 'paint' argument.", cyclicNumberAxis0.getLabel());
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0F, combinedRangeXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
      assertTrue(combinedRangeXYPlot0.canSelectByRegion());
      assertEquals(0.0, combinedRangeXYPlot0.getDomainCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isDomainGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertEquals(1, combinedRangeXYPlot0.getDomainAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeZoomable());
      assertTrue(combinedRangeXYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeXYPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairVisible());
      assertTrue(combinedRangeXYPlot0.isNotify());
      assertFalse(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(5.0, combinedRangeXYPlot0.getGap(), 0.01);
      assertTrue(combinedRangeXYPlot0.isOutlineVisible());
      assertEquals(0.5F, combinedRangeXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(combinedRangeXYPlot0.getNoDataMessage());
      assertEquals(15, combinedRangeXYPlot0.getBackgroundImageAlignment());
      assertFalse(combinedRangeXYPlot0.isRangePannable());
      assertFalse(combinedRangeXYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, combinedRangeXYPlot0.getDatasetCount());
      assertFalse(combinedRangeXYPlot0.isDomainPannable());
      assertFalse(combinedRangeXYPlot0.canSelectByPoint());
      assertFalse(combinedRangeXYPlot0.isSubplot());
      assertFalse(combinedRangeXYPlot0.isDomainMinorGridlinesVisible());
      assertTrue(combinedRangeXYPlot0.isDomainZoomable());
      assertFalse(combinedRangeXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertEquals(15, jFreeChart0.getBackgroundImageAlignment());
      assertTrue(jFreeChart0.getAntiAlias());
      assertEquals(0.5F, jFreeChart0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(jFreeChart0.isBorderVisible());
      assertEquals(1, jFreeChart0.getSubtitleCount());
      assertTrue(jFreeChart0.isNotify());
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
      assertEquals(15, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT);
      assertNotNull(jFreeChart0);
      
      // Undeclared exception!
      try { 
        jFreeChart0.getCategoryPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.CombinedRangeXYPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      assertTrue(xYPlot0.isRangeZoomable());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.isSubplot());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isOutlineVisible());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertFalse(xYPlot0.isRangePannable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isNotify());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertNotNull(xYPlot0);
      
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      assertEquals(0.0, periodAxis0.getLabelAngle(), 0.01);
      assertFalse(periodAxis0.isNegativeArrowVisible());
      assertEquals(0.05, periodAxis0.getLowerMargin(), 0.01);
      assertEquals(0.0F, periodAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertTrue(periodAxis0.isAutoRange());
      assertEquals(1.0E-8, periodAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(2.0F, periodAxis0.getTickMarkOutsideLength(), 0.01F);
      assertTrue(periodAxis0.isTickMarksVisible());
      assertFalse(periodAxis0.isPositiveArrowVisible());
      assertEquals(0.0, periodAxis0.getFixedDimension(), 0.01);
      assertFalse(periodAxis0.isVerticalTickLabels());
      assertNull(periodAxis0.getLabelURL());
      assertFalse(periodAxis0.isMinorTickMarksVisible());
      assertTrue(periodAxis0.isVisible());
      assertNull(periodAxis0.getLabelToolTip());
      assertTrue(periodAxis0.isTickLabelsVisible());
      assertTrue(periodAxis0.isAutoTickUnitSelection());
      assertTrue(periodAxis0.isAxisLineVisible());
      assertEquals(0.05, periodAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, periodAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.0, periodAxis0.getUpperBound(), 0.01);
      assertEquals(0.0, periodAxis0.getLowerBound(), 0.01);
      assertEquals(0, periodAxis0.getMinorTickCount());
      assertEquals(2.0F, periodAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(periodAxis0.isInverted());
      assertEquals("Null 'orientation' argument.", periodAxis0.getLabel());
      assertEquals(0.0, periodAxis0.getFixedAutoRange(), 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertNotNull(periodAxis0);
      
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      assertEquals(1, dateTickUnit0.getRollMultiple());
      assertEquals(8.64E7, dateTickUnit0.getSize(), 0.01);
      assertEquals(1, dateTickUnit0.getMultiple());
      assertEquals(5, dateTickUnit0.getCalendarField());
      assertEquals(0, dateTickUnit0.getMinorTickCount());
      assertNotNull(dateTickUnit0);
      
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      assertNotNull(mockDate0);
      
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      assertFalse(simpleTimeZone0.useDaylightTime());
      assertEquals("UTC-0", simpleTimeZone0.getID());
      assertEquals("java.util.SimpleTimeZone[id=UTC-0,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone0.toString());
      assertEquals(0, simpleTimeZone0.getRawOffset());
      assertEquals(0, simpleTimeZone0.getDSTSavings());
      assertNotNull(simpleTimeZone0);
      
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      assertEquals(1, dateTickUnit0.getRollMultiple());
      assertEquals(8.64E7, dateTickUnit0.getSize(), 0.01);
      assertEquals(1, dateTickUnit0.getMultiple());
      assertEquals(5, dateTickUnit0.getCalendarField());
      assertEquals(0, dateTickUnit0.getMinorTickCount());
      assertEquals("Wed Sep 10 00:00:00 GMT 1432", mockDate0.toString());
      assertFalse(simpleTimeZone0.useDaylightTime());
      assertEquals("UTC-0", simpleTimeZone0.getID());
      assertEquals("java.util.SimpleTimeZone[id=UTC-0,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone0.toString());
      assertEquals(0, simpleTimeZone0.getRawOffset());
      assertEquals(0, simpleTimeZone0.getDSTSavings());
      assertEquals("Thu Sep 11 00:00:00 GMT 1432", date0.toString());
      assertNotNull(date0);
      
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      assertEquals(1, dateTickUnit0.getRollMultiple());
      assertEquals(8.64E7, dateTickUnit0.getSize(), 0.01);
      assertEquals(1, dateTickUnit0.getMultiple());
      assertEquals(5, dateTickUnit0.getCalendarField());
      assertEquals(0, dateTickUnit0.getMinorTickCount());
      assertEquals("Wed Sep 10 00:00:00 GMT 1432", mockDate0.toString());
      assertFalse(simpleTimeZone0.useDaylightTime());
      assertEquals("UTC-0", simpleTimeZone0.getID());
      assertEquals("java.util.SimpleTimeZone[id=UTC-0,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone0.toString());
      assertEquals(0, simpleTimeZone0.getRawOffset());
      assertEquals(0, simpleTimeZone0.getDSTSavings());
      assertEquals("Thu Sep 11 00:00:00 GMT 1432", date0.toString());
      assertEquals((-16954963200000L), fixedMillisecond0.getMiddleMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getLastMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getFirstMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getSerialIndex());
      assertNotNull(fixedMillisecond0);
      
      Locale locale0 = Locale.ROOT;
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertNotNull(locale0);
      
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      assertEquals(1, dateTickUnit0.getRollMultiple());
      assertEquals(8.64E7, dateTickUnit0.getSize(), 0.01);
      assertEquals(1, dateTickUnit0.getMultiple());
      assertEquals(5, dateTickUnit0.getCalendarField());
      assertEquals(0, dateTickUnit0.getMinorTickCount());
      assertEquals("Wed Sep 10 00:00:00 GMT 1432", mockDate0.toString());
      assertFalse(simpleTimeZone0.useDaylightTime());
      assertEquals("UTC-0", simpleTimeZone0.getID());
      assertEquals("java.util.SimpleTimeZone[id=UTC-0,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0]", simpleTimeZone0.toString());
      assertEquals(0, simpleTimeZone0.getRawOffset());
      assertEquals(0, simpleTimeZone0.getDSTSavings());
      assertEquals("Thu Sep 11 00:00:00 GMT 1432", date0.toString());
      assertEquals((-16954963200000L), fixedMillisecond0.getMiddleMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getLastMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getFirstMillisecond());
      assertEquals((-16954963200000L), fixedMillisecond0.getSerialIndex());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertEquals(0.0F, periodAxis1.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, periodAxis1.getFixedAutoRange(), 0.01);
      assertFalse(periodAxis1.isVerticalTickLabels());
      assertFalse(periodAxis1.isMinorTickMarksVisible());
      assertFalse(periodAxis1.isInverted());
      assertEquals(2.0F, periodAxis1.getMinorTickMarkOutsideLength(), 0.01F);
      assertFalse(periodAxis1.isPositiveArrowVisible());
      assertTrue(periodAxis1.isVisible());
      assertEquals(0.0F, periodAxis1.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(0.05, periodAxis1.getUpperMargin(), 0.01);
      assertEquals(0.0, periodAxis1.getLowerBound(), 0.01);
      assertEquals(2.0F, periodAxis1.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0, periodAxis1.getMinorTickCount());
      assertEquals(0.05, periodAxis1.getLowerMargin(), 0.01);
      assertEquals(0.0, periodAxis1.getLabelAngle(), 0.01);
      assertTrue(periodAxis1.isAutoRange());
      assertNull(periodAxis1.getLabelURL());
      assertEquals(1.0, periodAxis1.getUpperBound(), 0.01);
      assertEquals(0.0, periodAxis1.getFixedDimension(), 0.01);
      assertTrue(periodAxis1.isTickMarksVisible());
      assertEquals("[eU]0PI", periodAxis1.getLabel());
      assertEquals(1.0E-8, periodAxis1.getAutoRangeMinimumSize(), 0.01);
      assertTrue(periodAxis1.isAutoTickUnitSelection());
      assertNull(periodAxis1.getLabelToolTip());
      assertTrue(periodAxis1.isTickLabelsVisible());
      assertTrue(periodAxis1.isAxisLineVisible());
      assertFalse(periodAxis1.isNegativeArrowVisible());
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertFalse(periodAxis1.equals((Object)periodAxis0));
      assertNotNull(periodAxis1);
      
      valueAxisArray0[1] = (ValueAxis) periodAxis1;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 1.0E-8);
      assertTrue(cyclicNumberAxis0.isTickLabelsVisible());
      assertTrue(cyclicNumberAxis0.isAxisLineVisible());
      assertFalse(cyclicNumberAxis0.isVerticalTickLabels());
      assertEquals(0.0, cyclicNumberAxis0.getFixedAutoRange(), 0.01);
      assertTrue(cyclicNumberAxis0.getAutoRangeIncludesZero());
      assertEquals(0.0F, cyclicNumberAxis0.getTickMarkInsideLength(), 0.01F);
      assertTrue(cyclicNumberAxis0.isAdvanceLineVisible());
      assertTrue(cyclicNumberAxis0.isTickMarksVisible());
      assertFalse(cyclicNumberAxis0.isInverted());
      assertTrue(cyclicNumberAxis0.isVisible());
      assertEquals(0.05, cyclicNumberAxis0.getUpperMargin(), 0.01);
      assertEquals(0.0F, cyclicNumberAxis0.getMinorTickMarkInsideLength(), 0.01F);
      assertEquals(2.0F, cyclicNumberAxis0.getMinorTickMarkOutsideLength(), 0.01F);
      assertNull(cyclicNumberAxis0.getLabelURL());
      assertEquals(2.0F, cyclicNumberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertFalse(cyclicNumberAxis0.isPositiveArrowVisible());
      assertTrue(cyclicNumberAxis0.isAutoRange());
      assertFalse(cyclicNumberAxis0.isMinorTickMarksVisible());
      assertTrue(cyclicNumberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLabelAngle(), 0.01);
      assertEquals(0, cyclicNumberAxis0.getMinorTickCount());
      assertNull(cyclicNumberAxis0.getLabel());
      assertFalse(cyclicNumberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, cyclicNumberAxis0.getLowerMargin(), 0.01);
      assertEquals(1.0E-8, cyclicNumberAxis0.getOffset(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getFixedDimension(), 0.01);
      assertNull(cyclicNumberAxis0.getLabelToolTip());
      assertTrue(cyclicNumberAxis0.isAutoTickUnitSelection());
      assertFalse(cyclicNumberAxis0.isBoundMappedToLastCycle());
      assertEquals(1.0E-8, cyclicNumberAxis0.getAutoRangeMinimumSize(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
      assertTrue(ValueAxis.DEFAULT_AUTO_RANGE);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
      assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
      assertNotNull(cyclicNumberAxis0);
      
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      xYPlot0.setDomainAxes(valueAxisArray0);
      assertTrue(xYPlot0.isRangeZoomable());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.isSubplot());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isOutlineVisible());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertFalse(xYPlot0.isRangePannable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertFalse(xYPlot0.isDomainPannable());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(3, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isNotify());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(3, valueAxisArray0.length);
      
      xYPlot0.setDomainPannable(true);
      assertTrue(xYPlot0.isRangeZoomable());
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(15, xYPlot0.getBackgroundImageAlignment());
      assertTrue(xYPlot0.canSelectByRegion());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      assertEquals(1.0F, xYPlot0.getBackgroundAlpha(), 0.01F);
      assertFalse(xYPlot0.isDomainCrosshairVisible());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(xYPlot0.isDomainZeroBaselineVisible());
      assertTrue(xYPlot0.isDomainPannable());
      assertTrue(xYPlot0.isDomainZoomable());
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
      assertFalse(xYPlot0.isSubplot());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(xYPlot0.isOutlineVisible());
      assertFalse(xYPlot0.isRangeMinorGridlinesVisible());
      assertEquals(1, xYPlot0.getDatasetCount());
      assertFalse(xYPlot0.isRangePannable());
      assertTrue(xYPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, xYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(3, xYPlot0.getDomainAxisCount());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getRendererCount());
      assertFalse(xYPlot0.isRangeZeroBaselineVisible());
      assertFalse(xYPlot0.canSelectByPoint());
      assertNull(xYPlot0.getNoDataMessage());
      assertEquals(0.5F, xYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(xYPlot0.isRangeCrosshairVisible());
      assertTrue(xYPlot0.isNotify());
      assertTrue(xYPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 500;
      intArray0[1] = 500;
      intArray0[2] = 500;
      intArray0[3] = 10;
      intArray0[4] = 500;
      intArray0[5] = 500;
      intArray0[6] = 10;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 1);
      assertArrayEquals(new int[] {500, 500, 500, 10, 500, 500, 10}, intArray0);
      assertEquals(1, polygon0.npoints);
      assertEquals(7, intArray0.length);
      assertNotNull(polygon0);
      
      Rectangle rectangle0 = polygon0.getBounds();
      assertEquals(500.0, rectangle0.getY(), 0.01);
      assertEquals(500.0, rectangle0.getX(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(500.0, rectangle0.getMinX(), 0.01);
      assertEquals(500.0, rectangle0.getCenterX(), 0.01);
      assertEquals(500.0, rectangle0.getMinY(), 0.01);
      assertEquals(500.0, rectangle0.getMaxX(), 0.01);
      assertEquals(500.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(500.0, rectangle0.getCenterY(), 0.01);
      assertArrayEquals(new int[] {500, 500, 500, 10, 500, 500, 10}, intArray0);
      assertEquals(1, polygon0.npoints);
      assertEquals(0, rectangle0.width);
      assertEquals(500, rectangle0.y);
      assertEquals(500, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(7, intArray0.length);
      assertNotNull(rectangle0);
      
      // Undeclared exception!
      try { 
        xYPlot0.drawAxes((Graphics2D) null, rectangle0, rectangle0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[6];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYLine3DRenderer0;
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) xYBubbleRenderer0;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", mockSimpleDateFormat0, decimalFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0, true, standardXYToolTipGenerator0);
      xYItemRendererArray0[2] = (XYItemRenderer) candlestickRenderer0;
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYItemRendererArray0[3] = (XYItemRenderer) windItemRenderer0;
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYItemRendererArray0[5] = (XYItemRenderer) xYLineAndShapeRenderer0;
      combinedDomainXYPlot0.setRenderers(xYItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Null 'offset' argument.";
      stringArray0[1] = "Null 'marker' not permitted.";
      stringArray0[2] = "Null 'marker' not permitted.";
      stringArray0[3] = "Null 'marker' not permitted.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'marker' not permitted.", stringArray0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, symbolAxis0, symbolAxis0, clusteredXYBarRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      Area area0 = new Area();
      area0.getBounds();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0E-8;
      doubleArray0[1] = 271.0617;
      doubleArray0[2] = 140.3327989354521;
      doubleArray0[3] = 0.4;
      doubleArray0[4] = (-180.362876);
      doubleArray0[5] = 0.4;
      doubleArray0[6] = (double) 1.0F;
      doubleArray0[7] = 0.4;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, symbolAxis0.DEFAULT_AXIS_LINE_STROKE, symbolAxis0.DEFAULT_TICK_MARK_PAINT, xYPlot0.DEFAULT_OUTLINE_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(chartPanel0, 5, 200, 0, 777, 0, 768, 0, 6, false, 10, 680, 103, 10);
      chartPanel0.getPopupLocation(mouseWheelEvent0);
      xYPlot0.zoomRangeAxes(0.4, 0.4, plotRenderingInfo1, (Point2D) null);
      assertFalse(symbolAxis0.isAutoRange());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      PlotRenderingInfo plotRenderingInfo0 = null;
      // Undeclared exception!
      try { 
        xYPlot0.handleClick(1262, (-232), (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      numberAxis0.setTickLabelFont(font0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) numberAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation.getOpposite(axisLocation0);
      axisLocation0.getOpposite();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(3703, axisLocation1, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Paint paint0 = spiderWebPlot0.getSeriesPaint(500);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(paint0);
      combinedRangeXYPlot0.getDomainAxisCount();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.LocalizationBundle", numberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Locale locale0 = Locale.ROOT;
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      xYPlot0.setDomainAxes(valueAxisArray0);
      JFreeChart jFreeChart0 = new JFreeChart("Requires 'index' >= 0.", periodAxis0.DEFAULT_AXIS_LABEL_FONT, xYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 0.0F, renderingHints0);
      BufferedImage bufferedImage0 = null;
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getQuadrantOrigin();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      arrayList0.add(windItemRenderer0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes(1363, arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Indices must be Integer instances.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.setRangeAxis(40, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      combinedDomainXYPlot0.setInsets(rectangleInsets0, false);
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.isDomainZoomable();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'paint' argument.");
      categoryAxis0.setTickLabelInsets(valueAxis0.DEFAULT_TICK_LABEL_INSETS);
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0F, valueAxis0.DEFAULT_TICK_MARK_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE, categoryAxis0.DEFAULT_TICK_LABEL_PAINT, stroke0, 0.0F);
      combinedDomainXYPlot0.removeDomainMarker((-1073741823), (Marker) intervalMarker0, (Layer) null);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SystemColor systemColor0 = SystemColor.text;
      combinedDomainXYPlot0.getDomainAxisEdge((-750));
      combinedDomainXYPlot0.setDomainCrosshairValue(25000.0, true);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getQuadrantOrigin();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2514.062539368316), 2135.6351624430226);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0F, 0.0, 1468.73188, 0.05);
      Layer layer0 = Layer.BACKGROUND;
      XYBoxAnnotation xYBoxAnnotation1 = new XYBoxAnnotation((-2514.062539368316), 474.9195421438907, 1101.5349384, 0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation1, layer0);
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      XYPlot xYPlot0 = new XYPlot(xIntervalSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", xYPlot0);
      XYPlot xYPlot1 = jFreeChart0.getXYPlot();
      int int0 = xYPlot1.getRendererCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5.0E-7, 1468.73188);
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(210, highLowItemLabelGenerator0);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(3087.07042783, 1468.73188, 10, 4);
      Layer layer0 = Layer.BACKGROUND;
      standardXYItemRenderer0.addAnnotation((XYAnnotation) xYBoxAnnotation0, layer0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, standardXYItemRenderer0);
      int int0 = xYPlot0.getRendererCount();
      assertEquals(1, int0);
      
      xYPlot0.isDomainGridlinesVisible();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(3087.07042783, false, highLowItemLabelGenerator0);
      LegendItemCollection legendItemCollection0 = candlestickRenderer0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      assertFalse(xYPlot0.isDomainMinorGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 1.0F, 0.0, 10);
      xYPointerAnnotation0.getOutlinePaint();
      combinedRangeXYPlot0.setRangeTickBandPaint(xYPointerAnnotation0.DEFAULT_PAINT);
      SystemColor systemColor0 = SystemColor.desktop;
      IntervalMarker intervalMarker0 = new IntervalMarker(1.5, 0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, systemColor0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      TransferHandler transferHandler0 = new TransferHandler("");
      Point point0 = transferHandler0.getDragImageOffset();
      combinedRangeXYPlot0.zoomDomainAxes(0.0, 1.0E-7, plotRenderingInfo1, (Point2D) point0);
      combinedRangeXYPlot0.zoomDomainAxes((double) (-4446.63F), plotRenderingInfo1, (Point2D) point0);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 10, 2381);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      MockDate mockDate1 = new MockDate(10, 2381, (-1431655764), 1114, 10);
      Date date0 = dateTickUnit0.addToDate(mockDate1, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis0 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1431655764), 1.0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.05);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[2] = valueAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      assertEquals(3, combinedDomainXYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setNotify(true);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainXYPlot0.setRangePannable(true);
      axisLocation0.getOpposite();
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (500) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke1 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke1);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2193.0), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) valueMarker0, layer0);
      assertSame(stroke0, stroke1);
      
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.getFixedDomainAxisSpace();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'orientation' argument.");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateTickUnit dateTickUnit0 = DateAxis.DEFAULT_DATE_TICK_UNIT;
      MockDate mockDate0 = new MockDate((-509), 500, 10);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      Date date0 = dateTickUnit0.addToDate(mockDate0, simpleTimeZone0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
      Locale locale0 = Locale.ROOT;
      PeriodAxis periodAxis1 = new PeriodAxis("[eU]0PI", fixedMillisecond0, fixedMillisecond0, simpleTimeZone0, locale0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis1);
      Color color0 = (Color)combinedDomainXYPlot0.getDomainCrosshairPaint();
      IntervalMarker intervalMarker0 = new IntervalMarker((-4658.0), 10, color0, xYPlot0.DEFAULT_CROSSHAIR_STROKE, xYPlot0.DEFAULT_CROSSHAIR_PAINT, periodAxis0.DEFAULT_AXIS_LINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1), (Marker) intervalMarker0, layer0, false);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot();
      combinedDomainXYPlot1.addDomainMarker(6, (Marker) intervalMarker0, layer0);
      combinedDomainXYPlot1.addDomainMarker(6, (Marker) intervalMarker0, layer0);
      assertEquals((-16776961), color0.getRGB());
      
      combinedDomainXYPlot1.setRangeMinorGridlinePaint(periodAxis1.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot1.canSelectByPoint();
      assertTrue(combinedDomainXYPlot1.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      BasicStroke basicStroke0 = new BasicStroke();
      SystemColor systemColor0 = SystemColor.scrollbar;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(systemColor0);
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2380.633715015, "Pie_Plot");
      cyclicNumberAxis0.setOffset(1141.98350443622);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.isRangeGridlinesVisible();
      int int0 = 1;
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      axisLocation0.getOpposite();
      boolean boolean0 = true;
      cyclicNumberAxis0.setDownArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getQuadrantPaint(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (500) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.shift(range0, 0.0, true);
      ModuloAxis moduloAxis0 = new ModuloAxis("`@+{k0rS%", range1);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(moduloAxis0);
      combinedRangeXYPlot0.getDataset(2811);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
      combinedDomainXYPlot0.getLegendItems();
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
      combinedDomainXYPlot0.setDataset((XYDataset) timeSeriesCollection0);
      Paint paint0 = combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      int int0 = 2862;
      float float0 = 1322.9202F;
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(10, 2249.1077, paint0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 1322.9202F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = 30;
      String string0 = "sO2\\9aPQQ li [9PWl";
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeAnnotation((XYAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      int int0 = 1758;
      combinedRangeXYPlot0.getDomainAxisLocation(1758);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getPlotInfo();
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("org.jfree.chart.renderer.xy.VectorRenderer", 410.0, 1.0F, 1.5);
      Paint paint0 = xYPointerAnnotation0.getOutlinePaint();
      combinedRangeXYPlot0.setRangeTickBandPaint(paint0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(0.0, (-1.0), combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, (-4446.63F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0);
      RectangleInsets rectangleInsets0 = legendTitle0.getLegendItemGraphicPadding();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      int[] intArray0 = new int[9];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 10;
      intArray0[4] = 10;
      intArray0[5] = 10;
      intArray0[6] = 654;
      intArray0[7] = 10;
      intArray0[8] = 10;
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 10, intArray0, 10, 0, bigInteger0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getQuadrantOrigin();
      ArrayList<WindItemRenderer> arrayList0 = new ArrayList<WindItemRenderer>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes(1363, arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      logarithmicAxis0.setMinorTickMarksVisible(true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.isDomainCrosshairVisible();
      combinedRangeXYPlot0.setDomainAxis(500, (ValueAxis) logarithmicAxis0);
      assertEquals(501, combinedRangeXYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(true);
      combinedDomainXYPlot0.setDomainTickBandPaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker((-30.0), 0.05, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, logAxis0.DEFAULT_TICK_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      numberAxis0.setTickLabelFont(font0);
      combinedRangeXYPlot0.setDomainAxis((ValueAxis) numberAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeXYPlot0.setRangeAxisLocation(3703, axisLocation1, false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Paint paint0 = spiderWebPlot0.getSeriesPaint(500);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(paint0);
      combinedRangeXYPlot0.getDomainAxisCount();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.LocalizationBundle", numberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, true);
      // Undeclared exception!
      try { 
        jFreeChart0.getCategoryPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.CombinedRangeXYPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 10, "Null 'paint' argument.");
      combinedDomainXYPlot0.setRangeAxis(40, (ValueAxis) cyclicNumberAxis0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      combinedDomainXYPlot0.setInsets(rectangleInsets0, false);
      combinedDomainXYPlot0.getRangeAxis();
      combinedDomainXYPlot0.isDomainZoomable();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'paint' argument.");
      int[] intArray0 = null;
      int int0 = (-593);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 335, (int[]) null, (-593), true, 10, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      XYPlot.localizationResources = null;
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getDomainMarkers((-1), layer0);
      xYPlot0.getOrientation();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      Color.getColor("{(4X\"YYvb0CwG");
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.isRangeCrosshairLockedOnData();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(10);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.XYPlot", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int0 = (-2272);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2002), (-2272), (-356), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -356
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'order' argument.", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 0, 0, 2262, 15, 2262, false, false, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 3, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(3.0F, (-1215.0F), 680, 10, 10, 0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.5F;
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(0);
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      Stroke stroke0 = combinedDomainXYPlot0.getDomainGridlineStroke();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke1 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(stroke1);
      combinedDomainXYPlot0.configureRangeAxes();
      ValueMarker valueMarker0 = new ValueMarker((-2193.0), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.FOREGROUND;
      boolean boolean0 = combinedDomainXYPlot0.removeRangeMarker((-2480), (Marker) valueMarker0, layer0, true);
      assertFalse(boolean0);
      
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.addDomainMarker(0, (Marker) valueMarker0, layer0);
      assertSame(stroke0, stroke1);
      
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.canSelectByPoint();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("J)4e_Bk'9*M] '!Pn");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("J)4e_Bk'9*M] '!Pn", dateAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.equals(chartRenderingInfo0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        polarPlot0.translateValueThetaRadiusToJava2D(1.0F, (-704.63991002024), rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PolarPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Null 'offset' argument.";
      stringArray0[1] = "Null 'marker' not permitted.";
      stringArray0[2] = "Null 'marker' not permitted.";
      stringArray0[3] = "Null 'marker' not permitted.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'marker' not permitted.", stringArray0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, symbolAxis0, symbolAxis0, clusteredXYBarRenderer0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle0, 0.0, rectangle0, 0.4);
      xYPlot0.zoomDomainAxes(0.4, (PlotRenderingInfo) null, point2D0);
      symbolAxis0.setVisible(false);
      Color color0 = Color.YELLOW;
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.NaN, 1947.3024949, color0);
      intervalMarker0.removeChangeListener(xYPlot0);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      xYPlot0.getRangeMinorGridlineStroke();
      assertFalse(symbolAxis0.isAutoRange());
      assertEquals(2.3, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      SystemColor systemColor0 = SystemColor.scrollbar;
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(systemColor0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }
}
