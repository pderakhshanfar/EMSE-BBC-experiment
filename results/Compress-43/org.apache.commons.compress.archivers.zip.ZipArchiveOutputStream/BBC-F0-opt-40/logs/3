* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-40
* Going to generate test cases for class: org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
* Starting Client-0
* Connecting to master process on port 18543
* Analyzing classpath: 
  - subjects/buggy-versions/Compress-43/target/classes
  - defects4j/framework/projects/Compress/lib/org/brotli/dec/0.1.2/dec-0.1.2.jar
  - defects4j/framework/projects/Compress/lib/org/tukaani/xz/1.6/xz-1.6.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2207
* Using seed 1784343852
* Starting evolution
bbc usage percentage is: 40%
* Initial Number of Goals in DynaMOSA = 864 / 2207
[MASTER] 11:49:53.458 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 11:49:55.228 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 601s and 1352 generations, 546501 statements, best individual has fitness: 241.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 514
* Number of covered goals: 500
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 320
* Number of covered goals: 284
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 76
* Number of covered goals: 76
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 978
* Number of covered goals: 907
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 11
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 320
* Number of covered goals: 267
* Generated 141 tests with total length 712
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
[MASTER] 12:01:28.776 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 12:01:28.944 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 12:01:28.948 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/, comment=0: " "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_142_tmp__ESTest.test0(ZipArchiveOutputStream_142_tmp__ESTest.java:23)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:28.948 [logback-1] WARN  JUnitAnalyzer - Failing test:
 File file0 = MockFile.createTempFile(", comment=", ": ");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.deflate();
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());


[MASTER] 12:01:36.700 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/experiment/J5#-~O.:O/J5#-~O.:O" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_146_tmp__ESTest.test0(ZipArchiveOutputStream_146_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:36.701 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("J5#-~O.:O");
MockFile mockFile0 = new MockFile("J5#-~O.:O", "J5#-~O.:O");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);
zipArchiveOutputStream0.writeLocalFileHeader(jarArchiveEntry0);

[MASTER] 12:01:40.338 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/, comment=0: " "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_148_tmp__ESTest.test0(ZipArchiveOutputStream_148_tmp__ESTest.java:23)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:40.338 [logback-1] WARN  JUnitAnalyzer - Failing test:
 File file0 = MockFile.createTempFile(", comment=", ": ");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);
boolean boolean0 = zipArchiveOutputStream1.isSeekable();
assertFalse(boolean0);
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());
assertEquals("UTF8", zipArchiveOutputStream1.getEncoding());


[MASTER] 12:01:48.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/Jf#J~O.:O0Jf#J~O.:O" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_159_tmp__ESTest.test0(ZipArchiveOutputStream_159_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:48.570 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("Jf#J~O.:O");
File file0 = MockFile.createTempFile("Jf#J~O.:O", "Jf#J~O.:O");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.setMethod(12);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
assertEquals(0L, jarArchiveEntry0.getSize());
assertEquals(0L, jarArchiveEntry0.getCompressedSize());


[MASTER] 12:01:52.082 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/,u6m?C>S9t_PXQu1G?0" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_161_tmp__ESTest.test0(ZipArchiveOutputStream_161_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:52.084 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("");
File file0 = MockFile.createTempFile(",u6m?C>S9t_PXQu1G?", "");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
jarArchiveEntry0.setCompressedSize(1095216660480L);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
zipArchiveOutputStream0.addRawArchiveEntry(jarArchiveEntry0, mockFileInputStream0);
assertEquals(0L, jarArchiveEntry0.getSize());
assertEquals(0L, jarArchiveEntry0.getCrc());


[MASTER] 12:02:02.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/,u6m?C>S9t_PXQu1G?04$" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_166_tmp__ESTest.test0(ZipArchiveOutputStream_166_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:02:02.799 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("4$");
File file0 = MockFile.createTempFile(",u6m?C>S9t_PXQu1G?", "4$");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.setMethod(0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
assertEquals(0, jarArchiveEntry0.getMethod());


[MASTER] 12:02:10.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/Yn}0Yn}" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_172_tmp__ESTest.test0(ZipArchiveOutputStream_172_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:02:10.394 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("Yn}");
File file0 = MockFile.createTempFile("Yn}", "Yn}");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
Zip64Mode zip64Mode0 = Zip64Mode.Never;
zipArchiveOutputStream0.setUseZip64(zip64Mode0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
assertEquals(8, jarArchiveEntry0.getMethod());


* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /tmp/Yn}0Yn}: 1
         write /tmp/vmn}0vmn}: 2
         write /experiment/J5#-~O.:O/J5#-~O.:O: 1
         and other 5 cases of action/name for this exception class
* Writing tests to file
* Writing JUnit test case 'ZipArchiveOutputStream_ESTest' to results/Compress-43/org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream/BBC-F0-opt-40/tests/3
* Done!

* Computation finished
