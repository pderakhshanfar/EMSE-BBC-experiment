* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-80
* Going to generate test cases for class: org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
* Starting Client-0
* Connecting to master process on port 8549
* Analyzing classpath: 
  - subjects/buggy-versions/Compress-43/target/classes
  - defects4j/framework/projects/Compress/lib/org/brotli/dec/0.1.2/dec-0.1.2.jar
  - defects4j/framework/projects/Compress/lib/org/tukaani/xz/1.6/xz-1.6.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2207
* Using seed 2501627594
* Starting evolution
bbc usage percentage is: 80%
* Initial Number of Goals in DynaMOSA = 864 / 2207
[MASTER] 11:49:33.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 11:52:03.927 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 11:58:52.256 [logback-2] ERROR TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
* Search finished after 602s and 1007 generations, 428573 statements, best individual has fitness: 233.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 514
* Number of covered goals: 503
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 320
* Number of covered goals: 285
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 69
* Number of covered goals: 69
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 93%
* Total number of goals: 978
* Number of covered goals: 908
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 73%
* Total number of goals: 11
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 320
* Number of covered goals: 268
* Generated 133 tests with total length 703
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:00:32.833 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6710833333333334% of time used, but only 64/133 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 12:00:47.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 12:00:47.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/->0x0->0x" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_133_tmp__ESTest.test0(ZipArchiveOutputStream_133_tmp__ESTest.java:25)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:00:47.504 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("(");
File file0 = MockFile.createTempFile("->0x", "->0x", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
zipArchiveOutputStream0.closeArchiveEntry();
assertTrue(zipArchiveOutputStream0.isSeekable());


[MASTER] 12:00:51.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/, minVersionToExtract=0, minVersionToExtract=" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_135_tmp__ESTest.test0(ZipArchiveOutputStream_135_tmp__ESTest.java:23)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:00:51.450 [logback-1] WARN  JUnitAnalyzer - Failing test:
 File file0 = MockFile.createTempFile(", minVersionToExtract=", ", minVersionToExtract=", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.setFallbackToUTF8(true);
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());


[MASTER] 12:00:55.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_137_tmp__ESTest.test0(ZipArchiveOutputStream_137_tmp__ESTest.java:24)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:00:55.104 [logback-1] WARN  JUnitAnalyzer - Failing test:
 FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(fileChannel0);
boolean boolean0 = zipArchiveOutputStream0.isSeekable();
assertTrue(boolean0);
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());


[MASTER] 12:00:58.559 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/experiment/crc checksum is required for STORED method when not writing to a file/crc checksum is required for STORED method when not writing to a file" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_140_tmp__ESTest.test0(ZipArchiveOutputStream_140_tmp__ESTest.java:22)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:00:58.559 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFile mockFile0 = new MockFile("crc checksum is required for STORED method when not writing to a file", "crc checksum is required for STORED method when not writing to a file");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);
zipArchiveOutputStream0.setComment("crc checksum is required for STORED method when not writing to a file");
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());


[MASTER] 12:01:02.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "crc checksum is required for STORED method when not writing to a file" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_143_tmp__ESTest.test0(ZipArchiveOutputStream_143_tmp__ESTest.java:22)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:02.027 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFile mockFile0 = new MockFile("crc checksum is required for STORED method when not writing to a file");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);
zipArchiveOutputStream0.setUseLanguageEncodingFlag(false);
zipArchiveOutputStream0.setEncoding((String) null);
assertEquals(2048, ZipArchiveOutputStream.EFS_FLAG);


[MASTER] 12:01:05.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/|D|EXD]" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_145_tmp__ESTest.test0(ZipArchiveOutputStream_145_tmp__ESTest.java:22)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:05.238 [logback-1] WARN  JUnitAnalyzer - Failing test:
 MockFile mockFile0 = new MockFile("", "|D|EXD]");
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);
zipArchiveOutputStream0.setUseLanguageEncodingFlag(true);
assertEquals("UTF8", zipArchiveOutputStream0.getEncoding());


[MASTER] 12:01:11.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/->0x0->0x" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_148_tmp__ESTest.test0(ZipArchiveOutputStream_148_tmp__ESTest.java:27)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:11.797 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry(", minVersionToExtract=");
File file0 = MockFile.createTempFile("->0x", "->0x", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
zipArchiveOutputStream0.close();

[MASTER] 12:01:17.822 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData0R(ST -P]" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_155_tmp__ESTest.test0(ZipArchiveOutputStream_155_tmp__ESTest.java:27)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:17.823 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry("");
File file0 = MockFile.createTempFile("org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData", "R(ST -P]", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
zipArchiveOutputStream0.writeCentralFileHeader(jarArchiveEntry0);
byte[] byteArray0 = new byte[8];
ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2312), (-917));
PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
zipArchiveOutputStream0.addRawArchiveEntry(jarArchiveEntry0, pushbackInputStream0);
assertEquals(8, jarArchiveEntry0.getMethod());
assertEquals(52L, jarArchiveEntry0.getCompressedSize());


[MASTER] 12:01:21.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/, minVersionToExtract=0, minVersionToExtract=" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_158_tmp__ESTest.test0(ZipArchiveOutputStream_158_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:21.920 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry(", minVersionToExtract=");
File file0 = MockFile.createTempFile(", minVersionToExtract=", ", minVersionToExtract=", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
zipArchiveOutputStream0.setMethod(0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
Zip64Mode zip64Mode0 = Zip64Mode.Always;
zipArchiveOutputStream0.setUseZip64(zip64Mode0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
assertEquals(0L, jarArchiveEntry0.getCompressedSize());


[MASTER] 12:01:26.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.io.FilePermission" "/tmp/, minVrsionToExtract=0, minVrsionToExtract=" "write")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
sun.nio.fs.UnixChannelFactory.open(UnixChannelFactory.java:247)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:136)
sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148)
sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212)
java.nio.file.Files.newByteChannel(Files.java:361)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(ZipArchiveOutputStream.java:292)
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream_164_tmp__ESTest.test0(ZipArchiveOutputStream_164_tmp__ESTest.java:26)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 12:01:26.857 [logback-1] WARN  JUnitAnalyzer - Failing test:
 JarArchiveEntry jarArchiveEntry0 = new JarArchiveEntry(", minVrsionToExtract=");
File file0 = MockFile.createTempFile(", minVrsionToExtract=", ", minVrsionToExtract=", (File) null);
ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(file0);
Zip64Mode zip64Mode0 = Zip64Mode.Never;
zipArchiveOutputStream0.setUseZip64(zip64Mode0);
zipArchiveOutputStream0.putArchiveEntry(jarArchiveEntry0);
assertEquals(8, jarArchiveEntry0.getMethod());


* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /|D|EXD]: 2
         write /experiment/crc checksum is required for STORED method when not writing to a file/crc checksum is required for STORED method when not writing to a file: 1
         write crc checksum is required for STORED method when not writing to a file: 1
         and other 5 cases of action/name for this exception class
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'ZipArchiveOutputStream_ESTest' to results/Compress-43/org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream/BBC-F0-opt-80/tests/2
* Done!

* Computation finished
