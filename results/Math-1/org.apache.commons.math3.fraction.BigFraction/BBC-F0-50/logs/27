* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.math3.fraction.BigFraction
* Starting Client-0
* Connecting to master process on port 2196
* Analyzing classpath: 
  - subjects/buggy-versions/Math-1/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.fraction.BigFraction
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1792
* Using seed 215172320
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 621 / 1792
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I60 Branch 7 IFEQ L185 - true: 59
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I42 Branch 13 IFGE L281 - false: 4
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I114 Branch 11 IFGE L198 - true: 4
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I168 Branch 18 IFGE L310 - true: 1
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DI)V: Line 357: 3
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDI)V: Line 233: 4
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.add(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;: I18 Branch 25 IFEQ L513 - false: 48
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DI)V: Line 356: 3
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDI)V: Line 232: 4
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I23 Branch 12 IFLE L275 - false: 162
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.subtract(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;: I3 Branch 45 IFNONNULL L1097 - false: 382
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I94 Branch 9 IFEQ L193 - true: 28
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I22 Branch 6 IFEQ L176 - false: 1806
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.equals(Ljava/lang/Object;)Z: I43 Branch 35 IFEQ L720 - true: 46
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.floatValue()F: I15 Branch 36 IFEQ L738 - false: 4905
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I206 Branch 20 IF_ICMPLT L324 - false: 66
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I163 Branch 17 IFLE L310 - true: 1
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I8 Branch 5 IFEQ L173 - false: 1635
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.toString()Ljava/lang/String;: I24 Branch 49 IFEQ L1131 - false: 611
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I206 Branch 20 IF_ICMPLT L324 - true: 1
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.doubleValue()D: I14 Branch 31 IFEQ L685 - false: 3528
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I201 Branch 19 IFEQ L322 - false: 1
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.pow(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;: I5 Branch 43 IFGE L995 - false: 268
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I130 Branch 14 IFGT L303 - true: 58
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.toString()Ljava/lang/String;: I10 Branch 48 IFEQ L1129 - false: 33
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I72 Branch 8 IFEQ L189 - false: 4
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.add(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;: I3 Branch 24 IFNONNULL L510 - false: 431
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.pow(J)Lorg/apache/commons/math3/fraction/BigFraction;: I5 Branch 42 IFGE L976 - false: 66
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.multiply(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;: I3 Branch 38 IFNONNULL L912 - false: 848
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V: I156 Branch 16 IF_ICMPGE L310 - true: 66
Number of times BBC is called for org.apache.commons.math3.fraction.BigFraction.<init>(D)V: I100 Branch 10 IFNE L193 - false: 4
Number of times BBC is called in total: 15080
* Search finished after 604s and 141 generations, 40762 statements, best individual has fitness: 96.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 214
* Number of covered goals: 212
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 133
* Number of covered goals: 132
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 94%
* Total number of goals: 35
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 97%
* Total number of goals: 963
* Number of covered goals: 936
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 243
* Number of covered goals: 209
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 99%
* Total number of goals: 133
* Number of covered goals: 132
* Generated 159 tests with total length 376
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:57:39.625 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68205% of time used, but only 22/159 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 18:58:22.306 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.runners.model.TestTimedOutException: test timed out after 4000 milliseconds
[MASTER] 18:58:22.314 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BigFraction bigFraction0 = new BigFraction(0.0);
assertEquals((byte)0, bigFraction0.byteValue());
assertEquals((short)0, bigFraction0.shortValue());
assertNotNull(bigFraction0);

byte[] byteArray0 = new byte[2];
byteArray0[0] = (byte) (-65);
BigInteger bigInteger0 = new BigInteger(byteArray0);
assertArrayEquals(new byte[] {(byte) (-65), (byte)0}, byteArray0);
assertEquals((byte)0, bigInteger0.byteValue());
assertEquals((short) (-16640), bigInteger0.shortValue());
assertEquals(2, byteArray0.length);
assertNotNull(bigInteger0);

bigFraction0.pow(bigInteger0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'BigFraction_ESTest' to results/Math-1/org.apache.commons.math3.fraction.BigFraction/BBC-F0-50/tests/27
* Done!

* Computation finished
