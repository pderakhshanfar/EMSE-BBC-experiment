/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 11:30:15 GMT 2021
 */

package org.apache.commons.math3.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.math3.fraction.BigFraction;
import org.apache.commons.math3.fraction.BigFractionField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigFraction_ESTest extends BigFraction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.FOUR_FIFTHS.subtract((-937));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)937, bigFraction1.shortValue());
      assertEquals((byte) (-87), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.add(629);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.ONE_QUARTER.add((-1967L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      assertEquals((short) (-1966), bigFraction3.shortValue());
      assertEquals((byte)82, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.multiply(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      assertEquals((short)157, bigFraction4.shortValue());
      assertEquals((byte) (-99), bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction2.add(629);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      assertEquals((byte) (-22), bigFraction5.byteValue());
      assertEquals((short)1258, bigFraction5.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      assertEquals((byte) (-22), bigFraction5.byteValue());
      assertEquals((short)1258, bigFraction5.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      
      BigFraction bigFraction7 = BigFraction.getReducedFraction((-593), 6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      assertEquals((byte) (-98), bigFraction7.byteValue());
      assertEquals((short) (-98), bigFraction7.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction7.bigDecimalValue(6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-98), bigFraction7.byteValue());
      assertEquals((short) (-98), bigFraction7.shortValue());
      assertEquals((short) (-99), bigDecimal0.shortValue());
      assertEquals((byte) (-99), bigDecimal0.byteValue());
      
      BigFraction bigFraction8 = bigFraction5.pow(4486L);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)117, bigFraction2.byteValue());
      assertEquals((short)629, bigFraction2.shortValue());
      assertEquals((byte) (-22), bigFraction5.byteValue());
      assertEquals((short)1258, bigFraction5.shortValue());
      assertEquals((byte)17, bigFraction8.byteValue());
      assertEquals((short)17425, bigFraction8.shortValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(2.147483647E9, 5.916857144256937E-4, 1075);
      assertNotNull(bigFraction0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      String string0 = bigFraction0.toString();
      assertNotNull(string0);
      assertEquals("2147483647", string0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.divide(1075);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)31579, bigFraction1.shortValue());
      assertEquals((byte)91, bigFraction1.byteValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(2147396290, 2147396290, 119);
      assertNotNull(bigFraction0);
      assertEquals((byte) (-62), bigFraction0.byteValue());
      assertEquals((short) (-21822), bigFraction0.shortValue());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)86;
      BigFraction bigFraction1 = bigFraction0.ONE_FIFTH.add(310);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte) (-62), bigFraction0.byteValue());
      assertEquals((short) (-21822), bigFraction0.shortValue());
      assertEquals((byte)54, bigFraction1.byteValue());
      assertEquals((short)310, bigFraction1.shortValue());
      
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-36);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-51), (byte)86, (byte)2, (byte) (-36)}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((byte) (-36), bigInteger0.byteValue());
      assertEquals((short)732, bigInteger0.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-51), (byte)86, (byte)2, (byte) (-36)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte) (-62), bigFraction0.byteValue());
      assertEquals((short) (-21822), bigFraction0.shortValue());
      assertEquals((byte) (-36), bigInteger0.byteValue());
      assertEquals((short)732, bigInteger0.shortValue());
      assertEquals((short) (-2), bigFraction2.shortValue());
      assertEquals((byte) (-2), bigFraction2.byteValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_HALF.add(1073741824);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2503L);
      assertNotNull(mockRandom0);
      
      BigInteger bigInteger0 = new BigInteger(2768, mockRandom0);
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.THREE_QUARTERS.divide(2768);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.pow(1922);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = BigFraction.getReducedFraction((-344), 4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short) (-86), bigFraction3.shortValue());
      assertEquals((byte) (-86), bigFraction3.byteValue());
      
      long long0 = bigFraction0.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertEquals(1L, long0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.subtract(bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.ONE_FIFTH.subtract(0L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      long long1 = bigFraction4.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      assertEquals((-8367099083346554343L), long1);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)22016, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((-384L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)68, bigFraction1.byteValue());
      assertEquals((short)20292, bigFraction1.shortValue());
      
      float float0 = bigFraction1.floatValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1.6347261E37F, float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)68, bigFraction1.byteValue());
      assertEquals((short)20292, bigFraction1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.multiply(1073741824L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-21846), bigFraction1.shortValue());
      assertEquals((byte) (-86), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.abs();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-21846), bigFraction1.shortValue());
      assertEquals((byte) (-86), bigFraction1.byteValue());
      assertEquals((short) (-21846), bigFraction2.shortValue());
      assertEquals((byte) (-86), bigFraction2.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 396;
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      int int1 = bigFraction0.hashCode();
      assertFalse(int1 == int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.subtract(4733418709L);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-15573), bigFraction2.shortValue());
      assertEquals((byte)43, bigFraction2.byteValue());
      
      int int2 = bigFraction1.hashCode();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(int2 == int0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.pow(1574L);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-15573), bigFraction2.shortValue());
      assertEquals((byte)43, bigFraction2.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-11287), bigFraction3.shortValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertEquals((-4.733418709E9), double0, 0.01);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-15573), bigFraction2.shortValue());
      assertEquals((byte)43, bigFraction2.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction4 = BigFraction.THREE_FIFTHS;
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      long long0 = bigFraction3.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals(1L, long0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-15573), bigFraction2.shortValue());
      assertEquals((byte)43, bigFraction2.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-11287), bigFraction3.shortValue());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      boolean boolean0 = bigFraction1.equals(object1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(object1, object0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction5 = new BigFraction(4733418709L, (long) 396);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((short)25525, bigFraction5.shortValue());
      assertEquals((byte) (-75), bigFraction5.byteValue());
      
      float float0 = bigFraction5.floatValue();
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertEquals(1.1953077E7F, float0, 0.01F);
      assertEquals((short)25525, bigFraction5.shortValue());
      assertEquals((byte) (-75), bigFraction5.byteValue());
      
      BigFraction bigFraction6 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction6.multiply((BigFraction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fraction
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1891.53987));
      assertNotNull(bigFraction0);
      assertEquals((byte) (-99), bigFraction0.byteValue());
      assertEquals((short) (-1891), bigFraction0.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(4, 4);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-99), bigFraction0.byteValue());
      assertEquals((short) (-1891), bigFraction0.shortValue());
      assertEquals((byte) (-99), bigDecimal0.byteValue());
      assertEquals((short) (-1891), bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.divide(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((byte)70, bigFraction2.byteValue());
      assertEquals((short) (-21690), bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction1.divide(89713L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((byte) (-110), bigFraction3.byteValue());
      assertEquals((short) (-15214), bigFraction3.shortValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_QUARTER.subtract((-3619L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)3619, bigFraction1.shortValue());
      assertEquals((byte)35, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.divide((-3650));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      int int0 = bigFraction0.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-179), 750.0718989936853, (-179));
      assertNotNull(bigFraction0);
      assertEquals((byte)77, bigFraction0.byteValue());
      assertEquals((short) (-179), bigFraction0.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(1);
      assertNotNull(bigDecimal0);
      assertEquals((byte)77, bigFraction0.byteValue());
      assertEquals((short) (-179), bigFraction0.shortValue());
      assertEquals((byte)77, bigDecimal0.byteValue());
      assertEquals((short) (-179), bigDecimal0.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.bigDecimalValue((-3266));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.MINUS_ONE;
      assertNotNull(bigFraction0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.multiply((BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.subtract((BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      
      double double0 = bigFraction1.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)453, bigFraction2.shortValue());
      assertEquals((byte) (-59), bigFraction2.byteValue());
      
      BigInteger bigInteger1 = BigInteger.ZERO;
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.add(bigInteger1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)453, bigFraction2.shortValue());
      assertEquals((byte) (-59), bigFraction2.byteValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertEquals((short)453, bigFraction3.shortValue());
      assertEquals((byte) (-59), bigFraction3.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.bigDecimalValue(1328);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1328;
      BigInteger bigInteger0 = null;
      BigFraction bigFraction0 = null;
      try {
        bigFraction0 = new BigFraction((BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // numerator
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-9), bigFraction1.byteValue());
      assertEquals((short) (-4873), bigFraction1.shortValue());
      
      bigFraction0.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.pow((-1073L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-9), bigFraction1.byteValue());
      assertEquals((short) (-4873), bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals((-1.8374746807202745E-308), double0, 0.01);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-9), bigFraction1.byteValue());
      assertEquals((short) (-4873), bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction3 = new BigFraction((double) (-1073L));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short) (-1073), bigFraction3.shortValue());
      assertEquals((byte) (-49), bigFraction3.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction4 = bigFraction2.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-9), bigFraction1.byteValue());
      assertEquals((short) (-4873), bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      String string0 = bigFraction0.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertNotNull(string0);
      assertEquals("-2623803 / 740", string0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction3.bigDecimalValue();
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-1073), bigFraction3.shortValue());
      assertEquals((byte) (-49), bigFraction3.byteValue());
      assertEquals((short) (-1073), bigDecimal0.shortValue());
      assertEquals((byte) (-49), bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      double double0 = bigFraction0.doubleValue();
      assertEquals(0.6, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction1 = null;
      try {
        bigFraction1 = new BigFraction(0.6, (-1289.30617), 1328);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: Overflow trying to convert 0.6 to fraction (3,377,699,720,527,873/5,629,499,534,213,122)
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((short) (-1327), bigFraction1.shortValue());
      assertEquals((byte) (-47), bigFraction1.byteValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction3 = null;
      try {
        bigFraction3 = new BigFraction(Double.POSITIVE_INFINITY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot convert infinite value
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.ONE;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction1.equals(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.pow(2147478236);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger would overflow supported range
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      String string0 = bigFraction0.FOUR_FIFTHS.toString();
      assertNotNull(string0);
      assertEquals("4 / 5", string0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte) (-12);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      int int0 = bigFraction1.THREE_QUARTERS.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(3, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      String string1 = bigFraction0.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("3 / 5", string1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.multiply(1037);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction0.getField();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigFractionField0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      long long0 = bigFraction2.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(5L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.MINUS_ONE.add((int) (byte) (-12));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction3.MINUS_ONE.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertEquals((short) (-20237), bigFraction4.shortValue());
      assertEquals((byte) (-13), bigFraction4.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction4.ZERO.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertEquals((short) (-20237), bigFraction4.shortValue());
      assertEquals((byte) (-13), bigFraction4.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      BigFraction bigFraction5 = bigFraction0.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short) (-20235), bigFraction5.shortValue());
      assertEquals((byte) (-11), bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction2.pow((long) (byte) (-80));
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)622, bigFraction2.shortValue());
      assertEquals((byte)110, bigFraction2.byteValue());
      
      Random.setNextRandom((-1769));
      BigFraction bigFraction7 = bigFraction5.divide((-2833L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-80), (byte) (-12)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)7, bigFraction7.shortValue());
      assertEquals((byte)7, bigFraction7.byteValue());
      assertEquals((short) (-20236), bigInteger0.shortValue());
      assertEquals((byte) (-12), bigInteger0.byteValue());
      assertEquals((short) (-20235), bigFraction5.shortValue());
      assertEquals((byte) (-11), bigFraction5.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction6.bigDecimalValue(0, (int) (byte) (-12));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.divide((BigFraction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fraction
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = new BigFraction(1328, 4.9056283164780554E-120, 1328);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)48, bigFraction2.byteValue());
      assertEquals((short)1328, bigFraction2.shortValue());
      
      boolean boolean0 = bigFraction0.equals(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(boolean0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction3 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      float float0 = bigFraction3.floatValue();
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals(0.25F, float0, 0.01F);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      float float1 = bigFraction3.floatValue();
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.25F, float1, 0.01F);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction1.divide(5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((short)4533, bigFraction1.shortValue());
      assertEquals((byte) (-75), bigFraction1.byteValue());
      assertEquals((short)906, bigFraction4.shortValue());
      assertEquals((byte) (-118), bigFraction4.byteValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.TWO.compareTo((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.MINUS_ONE;
      assertNotNull(bigFraction0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.reciprocal();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      
      int int0 = bigFraction0.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertEquals(1, int0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction2.MINUS_ONE.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-11), bigFraction3.shortValue());
      assertEquals((byte) (-11), bigFraction3.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction3.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFractionField0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-11), bigFraction3.shortValue());
      assertEquals((byte) (-11), bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.divide(1984);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction1.multiply((long) 1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      String string0 = bigFraction3.toString();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(string0);
      assertEquals("-11", string0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-11), bigFraction3.shortValue());
      assertEquals((byte) (-11), bigFraction3.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction3.bigDecimalValue((-3147));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-1327), bigFraction1.shortValue());
      assertEquals((byte) (-47), bigFraction1.byteValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction3 = null;
      try {
        bigFraction3 = new BigFraction(Double.POSITIVE_INFINITY, (-3545.6797301526053), 1328);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: Overflow trying to convert \u221E to fraction (9,223,372,036,854,775,807/1)
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-1327), bigFraction1.shortValue());
      assertEquals((byte) (-47), bigFraction1.byteValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction3 = BigFraction.THREE_FIFTHS;
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      boolean boolean0 = bigFraction2.equals(bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(boolean0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      float float0 = bigFraction2.floatValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.multiply(bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte) (-79), bigFraction4.byteValue());
      assertEquals((short) (-2127), bigFraction4.shortValue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.MINUS_ONE.divide((BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fraction
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte) (-9), bigFraction1.byteValue());
      assertEquals((short) (-4873), bigFraction1.shortValue());
      
      bigFraction0.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction0.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction1.pow((-9223372036854775808L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // exponent (-9,223,372,036,854,775,808)
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 2234);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((long) 2234);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-19970), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      
      double double0 = bigFraction1.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-19970), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      BigFraction bigFraction2 = BigFraction.THREE_FIFTHS;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.ONE_FIFTH.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      boolean boolean0 = bigFraction1.equals(bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(boolean0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-19970), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction4 = BigFraction.FOUR_FIFTHS;
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(0L, long0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short) (-19970), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      int int0 = bigFraction0.compareTo(bigFraction0);
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      boolean boolean0 = bigFraction0.equals(bigFraction0);
      assertTrue(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      float float0 = bigFraction0.floatValue();
      assertEquals(0.25F, float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = BigFraction.ONE_QUARTER;
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.divide(bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction3.negate();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.multiply(bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigFraction bigFraction0 = null;
      try {
        bigFraction0 = new BigFraction((BigInteger) null, (BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // numerator
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO;
      assertNotNull(bigFraction0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.getReducedFraction(3, 3);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.ZERO.add(3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)3, bigFraction2.shortValue());
      assertEquals((byte)3, bigFraction2.byteValue());
      
      double double0 = bigFraction0.ONE_FIFTH.percentageValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(20.0, double0, 0.01);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction3 = BigFraction.ONE_HALF;
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      int int0 = bigFraction3.ONE_FIFTH.intValue();
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.divide(bigFraction3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      
      int int1 = 2112846814;
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      
      BigFraction bigFraction5 = bigFraction1.MINUS_ONE.subtract(bigInteger0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      
      BigFraction bigFraction6 = BigFraction.getReducedFraction(2112846814, 91592);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((short)23068, bigFraction6.shortValue());
      assertEquals((byte)28, bigFraction6.byteValue());
      
      double double1 = bigFraction4.TWO_THIRDS.percentageValue();
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(66.66666666666667, double1, 0.01);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      
      BigFraction bigFraction7 = bigFraction3.add(738);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)738, bigFraction7.shortValue());
      assertEquals((byte) (-30), bigFraction7.byteValue());
      
      long long0 = bigFraction0.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertEquals(1L, long0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction8 = bigFraction3.add(25L);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertNotNull(bigFraction8);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)25, bigFraction8.shortValue());
      assertEquals((byte)25, bigFraction8.byteValue());
      
      BigFraction bigFraction9 = bigFraction7.FOUR_FIFTHS.negate();
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction9);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)738, bigFraction7.shortValue());
      assertEquals((byte) (-30), bigFraction7.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      
      BigFraction bigFraction10 = bigFraction9.THREE_QUARTERS.add((-1615));
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction10);
      assertEquals((byte) (-78), bigFraction10.byteValue());
      assertEquals((short) (-1614), bigFraction10.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)738, bigFraction7.shortValue());
      assertEquals((byte) (-30), bigFraction7.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      
      boolean boolean0 = bigFraction0.equals("");
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(boolean0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction11 = bigFraction7.pow((long) 3);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction11);
      assertEquals((short) (-19465), bigFraction11.shortValue());
      assertEquals((byte) (-9), bigFraction11.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)738, bigFraction7.shortValue());
      assertEquals((byte) (-30), bigFraction7.byteValue());
      
      BigFraction bigFraction12 = bigFraction11.ONE_THIRD.subtract(bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction12);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction12);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short) (-19465), bigFraction11.shortValue());
      assertEquals((byte) (-9), bigFraction11.byteValue());
      assertEquals((byte) (-3), bigFraction12.byteValue());
      assertEquals((short) (-3), bigFraction12.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      assertEquals((short)738, bigFraction7.shortValue());
      assertEquals((byte) (-30), bigFraction7.byteValue());
      
      BigFraction bigFraction13 = bigFraction3.multiply(bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertNotNull(bigFraction13);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)3, bigFraction2.shortValue());
      assertEquals((byte)3, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction13.byteValue());
      assertEquals((short)1, bigFraction13.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction10.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      byte byte0 = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte) (-63);
      byteArray0[4] = (byte)61;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertNotNull(bigFraction0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      int int0 = (-1166);
      BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.multiply((-1166));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.ONE_QUARTER.negate();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction1.THREE_QUARTERS.negate();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      int int1 = bigFraction1.hashCode();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction1.THREE_FIFTHS.getField();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigFractionField0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.ONE_FIFTH.reduce();
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction5 = bigFraction3.ONE_HALF.divide(bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-699), bigFraction1.shortValue());
      assertEquals((byte)69, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction6 = bigFraction0.ZERO.pow((long) (byte)61);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      long long0 = bigFraction0.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-104), (byte) (-103), (byte)63, (byte) (-63), (byte)61}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertEquals(1L, long0);
      assertEquals((byte)61, bigInteger0.byteValue());
      assertEquals((short) (-16067), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction6.pow(bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      bigFraction0.hashCode();
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = new BigFraction(750.0718989936853);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte) (-18), bigFraction3.byteValue());
      assertEquals((short)750, bigFraction3.shortValue());
      
      BigInteger bigInteger1 = bigFraction3.getDenominator();
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte) (-18), bigFraction3.byteValue());
      assertEquals((short)750, bigFraction3.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      boolean boolean0 = bigFraction3.equals(object1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(object1, object0);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(object1.equals((Object)object0));
      assertFalse(boolean0);
      assertEquals((byte) (-18), bigFraction3.byteValue());
      assertEquals((short)750, bigFraction3.shortValue());
      
      BigInteger bigInteger2 = bigFraction3.getNumerator();
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigInteger2, bigInteger1);
      assertNotSame(bigInteger2, bigInteger0);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigInteger2);
      assertEquals((byte) (-18), bigFraction3.byteValue());
      assertEquals((short)750, bigFraction3.shortValue());
      assertEquals((short) (-27661), bigInteger2.shortValue());
      assertEquals((byte) (-13), bigInteger2.byteValue());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction(0.0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      int int0 = bigFraction1.THREE_QUARTERS.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        bigFraction1.pow(2145867783);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger would overflow supported range
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction0 = new BigFraction(3495.535, 3321);
      assertNotNull(bigFraction0);
      assertEquals((short)3495, bigFraction0.shortValue());
      assertEquals((byte) (-89), bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_QUARTER.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)3495, bigFraction0.shortValue());
      assertEquals((byte) (-89), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(1674);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)3495, bigFraction0.shortValue());
      assertEquals((byte) (-89), bigFraction0.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      
      double double0 = bigFraction0.percentageValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(349553.5, double0, 0.01);
      assertEquals((short)3495, bigFraction0.shortValue());
      assertEquals((byte) (-89), bigFraction0.byteValue());
      
      BigFraction bigFraction3 = new BigFraction((double) 546);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)546, bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction3.byteValue());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(2924.47539946804, (-184));
      assertNotNull(bigFraction0);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)2924, bigFraction1.shortValue());
      assertEquals((byte)108, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.add((long) (-184));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)2924, bigFraction1.shortValue());
      assertEquals((byte)108, bigFraction1.byteValue());
      assertEquals((byte) (-76), bigFraction2.byteValue());
      assertEquals((short)2740, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)2924, bigFraction1.shortValue());
      assertEquals((byte)108, bigFraction1.byteValue());
      assertEquals((byte) (-40), bigFraction3.byteValue());
      assertEquals((short)5848, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = new BigFraction(bigInteger0);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction3.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertNotNull(bigFractionField0);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)2924, bigFraction1.shortValue());
      assertEquals((byte)108, bigFraction1.byteValue());
      assertEquals((byte) (-40), bigFraction3.byteValue());
      assertEquals((short)5848, bigFraction3.shortValue());
      
      BigFraction bigFraction5 = bigFraction2.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((short)2924, bigFraction0.shortValue());
      assertEquals((byte)108, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)2924, bigFraction1.shortValue());
      assertEquals((byte)108, bigFraction1.byteValue());
      assertEquals((byte) (-76), bigFraction2.byteValue());
      assertEquals((short)2740, bigFraction2.shortValue());
      assertEquals((byte) (-77), bigFraction5.byteValue());
      assertEquals((short)2739, bigFraction5.shortValue());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction(2751.80164969, 0.3027053475379944, 167);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)2752, bigFraction1.shortValue());
      assertEquals((byte) (-64), bigFraction1.byteValue());
      
      double double0 = bigFraction0.percentageValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(25.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      String string0 = bigFraction1.toString();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(string0);
      assertEquals("2752", string0);
      assertEquals((short)2752, bigFraction1.shortValue());
      assertEquals((byte) (-64), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = BigFraction.ONE_FIFTH;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      long long0 = bigFraction1.longValue();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(2752L, long0);
      assertEquals((short)2752, bigFraction1.shortValue());
      assertEquals((byte) (-64), bigFraction1.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)2752, bigFraction1.shortValue());
      assertEquals((byte) (-64), bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      double double1 = bigFraction1.pow(0.3027053475379944);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(10.995119992305959, double1, 0.01);
      assertEquals((short)2752, bigFraction1.shortValue());
      assertEquals((byte) (-64), bigFraction1.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction3.bigDecimalValue(3601);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.TWO_FIFTHS;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = null;
      try {
        bigFraction2 = new BigFraction(0L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.TWO.add((BigFraction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fraction
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.ONE_QUARTER.subtract(790L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      
      long long0 = bigFraction1.TWO_QUARTERS.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals(2L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      
      long long1 = bigFraction1.THREE_QUARTERS.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(long1 == long0);
      assertEquals(4L, long1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.reciprocal();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      String string0 = bigFraction3.TWO_THIRDS.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("2 / 3", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction1.multiply(bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(790L);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigFraction bigFraction7 = bigFraction1.multiply(bigFraction0);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction7.byteValue());
      assertEquals((short)2, bigFraction7.shortValue());
      
      BigFraction bigFraction8 = bigFraction7.THREE_FIFTHS.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction7.byteValue());
      assertEquals((short)2, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      
      BigFraction bigFraction9 = bigFraction5.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertNotNull(bigFraction9);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      assertEquals((byte)70, bigFraction9.byteValue());
      assertEquals((short) (-8122), bigFraction9.shortValue());
      
      float float0 = bigFraction7.floatValue();
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertEquals(2.5F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction7.byteValue());
      assertEquals((short)2, bigFraction7.shortValue());
      
      BigFraction bigFraction10 = bigFraction1.TWO_THIRDS.multiply(bigInteger0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertNotNull(bigFraction10);
      assertEquals((byte)6, bigFraction10.byteValue());
      assertEquals((short)6, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      
      double double0 = bigFraction1.doubleValue();
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertEquals(5.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      
      BigFraction bigFraction11 = bigFraction3.ONE_FIFTH.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertNotNull(bigFraction11);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-9), bigFraction11.shortValue());
      assertEquals((byte) (-9), bigFraction11.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction12 = bigFraction11.ZERO.abs();
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction12);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertNotNull(bigFraction12);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-9), bigFraction11.shortValue());
      assertEquals((byte) (-9), bigFraction11.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction13 = bigFraction3.pow(790L);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertNotNull(bigFraction13);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction14 = bigFraction13.MINUS_ONE.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction14);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction15 = bigFraction14.ONE.subtract(1028L);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction15);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction15);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction15);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction14));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction15);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((byte) (-3), bigFraction15.byteValue());
      assertEquals((short) (-1027), bigFraction15.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      
      BigFraction bigFraction16 = bigFraction9.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction16);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction15));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction15));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertNotNull(bigFraction16);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((byte)60, bigFraction16.byteValue());
      assertEquals((short) (-8132), bigFraction16.shortValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      assertEquals((byte)70, bigFraction9.byteValue());
      assertEquals((short) (-8122), bigFraction9.shortValue());
      
      BigFraction bigFraction17 = bigFraction6.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction17);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction17);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction17);
      assertNotSame(bigFraction6, bigFraction15);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction16);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction12);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction16));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction15));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction15));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction16));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertNotNull(bigFraction17);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigFraction bigFraction18 = bigFraction4.add((-264));
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction18);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction17);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction17));
      assertNotNull(bigFraction18);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((byte)65, bigFraction18.byteValue());
      assertEquals((short) (-12223), bigFraction18.shortValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      
      float float1 = bigFraction17.floatValue();
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction18);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction18);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction17);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction18);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction17);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction17);
      assertNotSame(bigFraction6, bigFraction15);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction16);
      assertNotSame(bigFraction6, bigFraction18);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction12);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction18));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction18));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction18));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction17));
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction18));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction16));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction15));
      assertFalse(bigFraction5.equals((Object)bigFraction17));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction17));
      assertFalse(bigFraction6.equals((Object)bigFraction15));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction16));
      assertFalse(bigFraction6.equals((Object)bigFraction18));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertEquals(1.1074624E-33F, float1, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)5, bigFraction1.shortValue());
      assertEquals((byte)5, bigFraction1.byteValue());
      assertEquals((short) (-789), bigFraction2.shortValue());
      assertEquals((byte) (-21), bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertEquals((short) (-11959), bigFraction4.shortValue());
      assertEquals((byte)73, bigFraction4.byteValue());
      assertEquals((short)5741, bigFraction5.shortValue());
      assertEquals((byte)109, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigFraction bigFraction19 = BigFraction.getReducedFraction((-264), 2145428639);
      assertNotSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction5);
      assertNotSame(bigFraction19, bigFraction12);
      assertNotSame(bigFraction19, bigFraction13);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction2);
      assertNotSame(bigFraction19, bigFraction9);
      assertNotSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction10);
      assertNotSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction11);
      assertNotSame(bigFraction19, bigFraction0);
      assertNotSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction4);
      assertFalse(bigFraction19.equals((Object)bigFraction17));
      assertFalse(bigFraction19.equals((Object)bigFraction8));
      assertFalse(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction5));
      assertFalse(bigFraction19.equals((Object)bigFraction12));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertFalse(bigFraction19.equals((Object)bigFraction18));
      assertFalse(bigFraction19.equals((Object)bigFraction2));
      assertFalse(bigFraction19.equals((Object)bigFraction9));
      assertFalse(bigFraction19.equals((Object)bigFraction7));
      assertFalse(bigFraction19.equals((Object)bigFraction10));
      assertFalse(bigFraction19.equals((Object)bigFraction14));
      assertFalse(bigFraction19.equals((Object)bigFraction1));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertFalse(bigFraction19.equals((Object)bigFraction0));
      assertFalse(bigFraction19.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertFalse(bigFraction19.equals((Object)bigFraction4));
      assertNotNull(bigFraction19);
      assertEquals((short)0, bigFraction19.shortValue());
      assertEquals((byte)0, bigFraction19.byteValue());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction((-3545.6797301526053), 1328);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      bigFraction1.MINUS_ONE.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      
      BigInteger bigInteger0 = bigFraction2.getDenominator();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-28), bigInteger0.byteValue());
      assertEquals((short)740, bigInteger0.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction2.equals((Object) null);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      
      BigInteger bigInteger1 = bigFraction0.getNumerator();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction(0.011428501999944274, 2751.80164969, 1);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      String string0 = bigFraction1.toString();
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = BigFraction.ONE_FIFTH;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      long long0 = bigFraction1.longValue();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.pow(1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.add(0L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction1.pow((-859L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction(0.0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      int int0 = bigFraction1.THREE_QUARTERS.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction0.equals(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction((-3545.6797301526053), 1328);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      bigFraction1.MINUS_ONE.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.ONE.subtract((long) 1328);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      
      bigFraction1.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      String string0 = bigFraction2.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertNotNull(string0);
      assertEquals("2624173 / 740", string0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.subtract(1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.THREE_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-47), bigFraction6.byteValue());
      assertEquals((short) (-1327), bigFraction6.shortValue());
      
      long long0 = bigFraction1.ONE_THIRD.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertEquals(3L, long0);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      int int0 = bigFraction0.intValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertNotNull(bigInteger0);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-2363), bigInteger0.shortValue());
      assertEquals((byte) (-59), bigInteger0.byteValue());
      
      BigInteger bigInteger1 = BigInteger.TEN;
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      
      BigFraction bigFraction7 = bigFraction2.multiply(bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction7);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((byte) (-123), bigFraction7.byteValue());
      assertEquals((short) (-30075), bigFraction7.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction4.bigDecimalValue(1648);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction((-3545.6797301526053), 1328);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      bigFraction1.MINUS_ONE.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.ONE.subtract((long) 1328);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      
      bigFraction1.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      String string0 = bigFraction2.toString();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("2624173 / 740", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.subtract(1328);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.THREE_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-47), bigFraction6.byteValue());
      assertEquals((short) (-1327), bigFraction6.shortValue());
      
      long long0 = bigFraction1.ONE_THIRD.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals(3L, long0);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      
      int int0 = bigFraction0.intValue();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertEquals(0, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigInteger0);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-59), bigInteger0.byteValue());
      assertEquals((short) (-2363), bigInteger0.shortValue());
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigInteger1.byteValue());
      assertEquals((short) (-1327), bigInteger1.shortValue());
      
      BigFraction bigFraction7 = bigFraction2.multiply(bigInteger1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigInteger1.byteValue());
      assertEquals((short) (-1327), bigInteger1.shortValue());
      assertEquals((short)12812, bigFraction7.shortValue());
      assertEquals((byte)12, bigFraction7.byteValue());
      
      BigFraction bigFraction8 = null;
      try {
        bigFraction8 = new BigFraction(566, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction(0.011428501999944274, 2751.80164969, 1);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(bigInteger0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertNotNull(bigFraction0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_THIRD.add(0L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      String string0 = bigFraction0.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("1", string0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      long long0 = bigFraction0.longValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(1L, long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.multiply(909);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)909, bigFraction3.shortValue());
      assertEquals((byte) (-115), bigFraction3.byteValue());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-3545.6797301526053), 1328);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-47), bigFraction1.byteValue());
      assertEquals((short) (-1327), bigFraction1.shortValue());
      
      bigFraction0.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.pow((long) 1328);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      double double0 = bigFraction2.doubleValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      double double1 = bigFraction0.pow((-2080.880829849435));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      
      double double2 = bigFraction2.percentageValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(Double.POSITIVE_INFINITY, double2, 0.01);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)4533, bigFraction2.shortValue());
      assertEquals((byte) (-75), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = BigFraction.getReducedFraction(100, 100);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction3.equals(object0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(boolean0);
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction1.add(2544L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((short) (-3545), bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((byte) (-47), bigFraction1.byteValue());
      assertEquals((short) (-1327), bigFraction1.shortValue());
      assertEquals((short)1217, bigFraction4.shortValue());
      assertEquals((byte) (-63), bigFraction4.byteValue());
      
      BigFraction bigFraction5 = BigFraction.TWO_FIFTHS;
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = new BigFraction((long) (-2146703536), (long) 100);
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((byte)101, bigFraction6.byteValue());
      assertEquals((short)28773, bigFraction6.shortValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      
      BigFraction bigFraction7 = bigFraction6.pow(bigInteger0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      assertEquals((byte)101, bigFraction6.byteValue());
      assertEquals((short)28773, bigFraction6.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)26664, bigFraction7.shortValue());
      assertEquals((byte)40, bigFraction7.byteValue());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals(5L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.multiply(5L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-4), bigFraction3.byteValue());
      assertEquals((short) (-4), bigFraction3.shortValue());
      
      int int0 = bigFraction0.compareTo(bigFraction3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-4), bigFraction3.byteValue());
      assertEquals((short) (-4), bigFraction3.shortValue());
      
      double double0 = bigFraction3.percentageValue();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals((-400.0), double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-4), bigFraction3.byteValue());
      assertEquals((short) (-4), bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.abs();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.multiply(1846L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)113, bigFraction5.byteValue());
      assertEquals((short)369, bigFraction5.shortValue());
      
      String string0 = bigFraction5.toString();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(string0);
      assertEquals("1846 / 5", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)113, bigFraction5.byteValue());
      assertEquals((short)369, bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction2.negate();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      
      int int1 = bigFraction0.compareTo(bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      BigFraction bigFraction7 = bigFraction6.pow((-603L));
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      
      double double1 = bigFraction4.doubleValue();
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.2, double1, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      double double2 = bigFraction5.pow(2751.80164969);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)113, bigFraction5.byteValue());
      assertEquals((short)369, bigFraction5.shortValue());
      
      int int2 = bigFraction5.compareTo(bigFraction7);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)113, bigFraction5.byteValue());
      assertEquals((short)369, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      
      BigFraction bigFraction8 = bigFraction1.divide(9007197107257344L);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      double double3 = bigFraction0.percentageValue();
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(20.0, double3, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction9 = bigFraction3.TWO.subtract((-1L));
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertNotNull(bigFraction9);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)3, bigFraction9.byteValue());
      assertEquals((short)3, bigFraction9.shortValue());
      assertEquals((byte) (-4), bigFraction3.byteValue());
      assertEquals((short) (-4), bigFraction3.shortValue());
      
      BigFraction bigFraction10 = BigFraction.getReducedFraction(579337, 280);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction0);
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertNotNull(bigFraction10);
      assertEquals((short)2069, bigFraction10.shortValue());
      assertEquals((byte)21, bigFraction10.byteValue());
      
      BigFraction bigFraction11 = bigFraction7.add(bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction11);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      
      boolean boolean0 = bigFraction0.equals(bigFraction11);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      
      BigFraction bigFraction12 = bigFraction10.pow((-1));
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction2);
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertNotNull(bigFraction12);
      assertEquals((short)2069, bigFraction10.shortValue());
      assertEquals((byte)21, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      
      BigFraction bigFraction13 = bigFraction3.add(5L);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction13.equals((Object)bigFraction7));
      assertTrue(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertNotNull(bigFraction13);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-4), bigFraction3.byteValue());
      assertEquals((short) (-4), bigFraction3.shortValue());
      assertEquals((short)1, bigFraction13.shortValue());
      assertEquals((byte)1, bigFraction13.byteValue());
      
      BigFraction bigFraction14 = bigFraction5.pow(1044L);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction14);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-66), bigFraction14.byteValue());
      assertEquals((short)958, bigFraction14.shortValue());
      assertEquals((byte)113, bigFraction5.byteValue());
      assertEquals((short)369, bigFraction5.shortValue());
      
      BigFraction bigFraction15 = bigFraction4.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction15);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertTrue(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertTrue(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertNotNull(bigFraction15);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short)0, bigFraction15.shortValue());
      
      BigFraction bigFraction16 = BigFraction.getReducedFraction(1, 1);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction15);
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertTrue(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertTrue(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertTrue(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertNotNull(bigFraction16);
      assertEquals((short)1, bigFraction16.shortValue());
      assertEquals((byte)1, bigFraction16.byteValue());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.divide((-2248));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      double double0 = bigFraction0.percentageValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertEquals(0.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction2 = BigFraction.ONE;
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigInteger bigInteger0 = bigFraction0.getDenominator();
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      
      int int0 = bigFraction0.TWO_QUARTERS.intValue();
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.subtract(9007199254609920L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.reduce();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.ONE_HALF.divide((-3181));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction3.reduce();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      
      int int1 = bigFraction2.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      assertEquals((-327681), int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction6 = bigFraction5.MINUS_ONE.reduce();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((short) (-1), bigFraction6.shortValue());
      assertEquals((byte) (-1), bigFraction6.byteValue());
      
      BigFraction bigFraction7 = bigFraction6.ONE_THIRD.divide((-96L));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((short) (-1), bigFraction6.shortValue());
      assertEquals((byte) (-1), bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      float float0 = bigFraction1.floatValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals((-9.0071993E15F), float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      int int2 = bigFraction0.TWO.hashCode();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      long long0 = bigFraction2.TWO_FIFTHS.longValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      boolean boolean0 = bigFraction1.equals(bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction8 = bigFraction1.subtract((-327681));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction8.shortValue());
      assertEquals((byte)2, bigFraction8.byteValue());
      
      BigFraction bigFraction9 = bigFraction1.add(0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertTrue(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigFraction9);
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction9.TWO_QUARTERS.bigDecimalValue();
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertTrue(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFraction bigFraction10 = bigFraction9.TWO_FIFTHS.reciprocal();
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertTrue(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigFraction10);
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFraction bigFraction11 = bigFraction8.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction11);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction11);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      assertEquals((short)18356, bigFraction11.shortValue());
      assertEquals((byte) (-76), bigFraction11.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction8.shortValue());
      assertEquals((byte)2, bigFraction8.byteValue());
      
      BigFraction bigFraction12 = bigFraction1.subtract((-2242L));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertNotNull(bigFraction12);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2243, bigFraction12.shortValue());
      assertEquals((byte) (-61), bigFraction12.byteValue());
      
      BigFraction bigFraction13 = bigFraction12.ONE_HALF.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertNotNull(bigFraction13);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2243, bigFraction12.shortValue());
      assertEquals((byte) (-61), bigFraction12.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      
      BigFraction bigFraction14 = bigFraction5.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction13);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertTrue(bigFraction5.equals((Object)bigFraction9));
      assertNotNull(bigFraction14);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      
      double double0 = bigFraction1.doubleValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertEquals((-9.00719925460992E15), double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction12.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction14));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertNotNull(bigFractionField0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2243, bigFraction12.shortValue());
      assertEquals((byte) (-61), bigFraction12.byteValue());
      
      long long1 = bigFraction0.TWO.longValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(long1 == long0);
      assertEquals(2L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      double double1 = bigFraction14.doubleValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction13);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertTrue(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertTrue(bigFraction5.equals((Object)bigFraction9));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-1.801439850921984E15), double1, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      
      BigFraction bigFraction15 = bigFraction0.THREE_QUARTERS.multiply(9007199254609920L);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction12);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertNotNull(bigFraction15);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short) (-32768), bigFraction15.shortValue());
      
      BigFractionField bigFractionField1 = bigFraction3.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction14);
      assertSame(bigFractionField1, bigFractionField0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertTrue(bigFraction3.equals((Object)bigFraction9));
      assertNotNull(bigFractionField1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = bigFraction3.equals(object0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction14);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertTrue(bigFraction3.equals((Object)bigFraction9));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction11.divide(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_FIFTH;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.THREE_QUARTERS.subtract(bigInteger0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      long long0 = bigFraction2.ONE_QUARTER.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(4L, long0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.multiply((-1647L));
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      int int0 = bigFraction4.FOUR_FIFTHS.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      double double0 = bigFraction3.percentageValue();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals((-20.0), double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.abs();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction5.THREE_FIFTHS.multiply((-603L));
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      
      String string0 = bigFraction6.ONE.toString();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("1", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      
      BigFraction bigFraction7 = bigFraction5.TWO.negate();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short) (-2), bigFraction7.shortValue());
      assertEquals((byte) (-2), bigFraction7.byteValue());
      
      int int1 = bigFraction6.ONE_QUARTER.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      
      BigFraction bigFraction8 = bigFraction0.pow(9218868437227405312L);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      double double1 = bigFraction3.doubleValue();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-0.2), double1, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      double double2 = bigFraction8.MINUS_ONE.pow(356.5908);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      int int2 = bigFraction0.THREE_FIFTHS.compareTo(bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction9 = bigFraction1.divide(9218868437227405312L);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      
      double double3 = bigFraction1.percentageValue();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(20.0, double3, 0.01);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction10 = BigFraction.getReducedFraction(1, (-1));
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertNotNull(bigFraction10);
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      
      BigFraction bigFraction11 = bigFraction10.ONE_QUARTER.add(bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertNotNull(bigFraction11);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      boolean boolean0 = bigFraction4.equals(bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction12 = bigFraction1.TWO_THIRDS.pow(1);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertNotNull(bigFraction12);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      
      BigFraction bigFraction13 = bigFraction2.add((long) (-1));
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction11);
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertNotNull(bigFraction13);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      
      BigFraction bigFraction14 = bigFraction11.pow((long) 1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction14);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction14);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction13);
      assertNotSame(bigFraction11, bigFraction12);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction14);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction13));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction13));
      assertFalse(bigFraction11.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertTrue(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction14);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      BigFraction bigFraction15 = bigFraction0.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertTrue(bigFraction15.equals((Object)bigFraction0));
      assertTrue(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertTrue(bigFraction15.equals((Object)bigFraction5));
      assertTrue(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertNotNull(bigFraction15);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction15.shortValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      
      BigFraction bigFraction16 = BigFraction.getReducedFraction((-1), 571);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction5);
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertNotNull(bigFraction16);
      assertEquals((byte)0, bigFraction16.byteValue());
      assertEquals((short)0, bigFraction16.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction7.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction9);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction14);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertTrue(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertTrue(bigFraction5.equals((Object)bigFraction15));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction16));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction16));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte) (-2), bigDecimal0.byteValue());
      assertEquals((short) (-2), bigDecimal0.shortValue());
      assertEquals((short) (-2), bigFraction7.shortValue());
      assertEquals((byte) (-2), bigFraction7.byteValue());
      
      int int3 = bigFraction2.getDenominatorAsInt();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(4, int3);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-8694.5257680399));
      assertNotNull(bigFraction0);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.abs();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)19, bigFraction2.byteValue());
      assertEquals((short) (-17389), bigFraction2.shortValue());
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)32533, bigInteger0.shortValue());
      assertEquals((byte)21, bigInteger0.byteValue());
      
      int int0 = bigFraction2.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertEquals(753434859, int0);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)19, bigFraction2.byteValue());
      assertEquals((short) (-17389), bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.subtract(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)19, bigFraction2.byteValue());
      assertEquals((short) (-17389), bigFraction2.shortValue());
      assertEquals((byte)10, bigFraction3.byteValue());
      assertEquals((short) (-8694), bigFraction3.shortValue());
      
      double double0 = bigFraction1.percentageValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertEquals(869452.57680399, double0, 0.01);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short) (-8694), bigFraction0.shortValue());
      assertEquals((short)8694, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)19, bigFraction2.byteValue());
      assertEquals((short) (-17389), bigFraction2.shortValue());
      assertEquals((short)32533, bigInteger0.shortValue());
      assertEquals((byte)21, bigInteger0.byteValue());
      assertEquals((short)15143, bigFraction4.shortValue());
      assertEquals((byte)39, bigFraction4.byteValue());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.MINUS_ONE;
      assertNotNull(bigFraction0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      bigFraction1.MINUS_ONE.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.ONE.subtract((long) 1356);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1355), bigFraction3.shortValue());
      assertEquals((byte) (-75), bigFraction3.byteValue());
      
      bigFraction1.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      String string0 = bigFraction2.toString();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertNotNull(string0);
      assertEquals("-5 / 4", string0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.subtract(1356);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((byte) (-77), bigFraction4.byteValue());
      assertEquals((short) (-1357), bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.THREE_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((byte) (-77), bigFraction4.byteValue());
      assertEquals((short) (-1357), bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      long long0 = bigFraction1.ONE_THIRD.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertEquals(3L, long0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      int int0 = bigFraction0.intValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertEquals((-1), int0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1355), bigFraction3.shortValue());
      assertEquals((byte) (-75), bigFraction3.byteValue());
      assertEquals((byte) (-75), bigInteger1.byteValue());
      assertEquals((short) (-1355), bigInteger1.shortValue());
      
      BigFraction bigFraction6 = bigFraction2.multiply(bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1355), bigFraction3.shortValue());
      assertEquals((byte) (-75), bigFraction3.byteValue());
      assertEquals((byte) (-75), bigInteger1.byteValue());
      assertEquals((short) (-1355), bigInteger1.shortValue());
      assertEquals((byte) (-99), bigFraction6.byteValue());
      assertEquals((short)1693, bigFraction6.shortValue());
      
      BigFraction bigFraction7 = bigFraction3.divide(bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1355), bigFraction3.shortValue());
      assertEquals((byte) (-75), bigFraction3.byteValue());
      assertEquals((byte) (-75), bigInteger1.byteValue());
      assertEquals((short) (-1355), bigInteger1.shortValue());
      assertEquals((byte) (-99), bigFraction6.byteValue());
      assertEquals((short)1693, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.abs();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract((long) (-1));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = BigFraction.TWO_QUARTERS;
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      bigFraction3.hashCode();
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      String string0 = bigFraction0.toString();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction4 = bigFraction2.subtract((-1));
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction1.reduce();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = BigFraction.ZERO;
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      
      int int0 = bigFraction3.intValue();
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigInteger bigInteger0 = bigFraction5.getNumerator();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)2, bigInteger0.shortValue());
      assertEquals((byte)2, bigInteger0.byteValue());
      
      BigInteger bigInteger1 = bigFraction5.getNumerator();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)2, bigInteger1.byteValue());
      assertEquals((short)2, bigInteger1.shortValue());
      
      BigFraction bigFraction7 = bigFraction1.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)2, bigInteger0.shortValue());
      assertEquals((byte)2, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(bigFraction6);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_FIFTH;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.THREE_QUARTERS.subtract(bigInteger0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      long long0 = bigFraction2.ONE_QUARTER.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertEquals(4L, long0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.multiply((-1647L));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      int int0 = bigFraction4.FOUR_FIFTHS.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      double double0 = bigFraction3.percentageValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertEquals((-20.0), double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.abs();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction5.THREE_FIFTHS.multiply((-603L));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      
      String string0 = bigFraction6.ONE.toString();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("1", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      
      BigFraction bigFraction7 = bigFraction5.TWO.negate();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte) (-2), bigFraction7.byteValue());
      assertEquals((short) (-2), bigFraction7.shortValue());
      
      int int1 = bigFraction6.ONE_QUARTER.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      
      BigFraction bigFraction8 = bigFraction0.pow(9218868437227405312L);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      double double1 = bigFraction3.doubleValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-0.2), double1, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      double double2 = bigFraction8.MINUS_ONE.pow(356.5908);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      int int2 = bigFraction0.THREE_FIFTHS.compareTo(bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction9 = bigFraction1.divide(9218868437227405312L);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction9);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      
      double double3 = bigFraction1.percentageValue();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction9);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertEquals(20.0, double3, 0.01);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction10 = BigFraction.getReducedFraction(1, (-1));
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertNotNull(bigFraction10);
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      
      BigFraction bigFraction11 = bigFraction10.ONE_QUARTER.add(bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertNotNull(bigFraction11);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      BigFraction bigFraction12 = BigFraction.ZERO;
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction1);
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertTrue(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertTrue(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertNotNull(bigFraction12);
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      
      int int3 = bigFraction12.compareTo(bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction12);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertTrue(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertTrue(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertTrue(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertEquals(1, int3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte) (-2), bigFraction7.byteValue());
      assertEquals((short) (-2), bigFraction7.shortValue());
      
      double double4 = bigFraction0.doubleValue();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertEquals(0.0, double4, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction5.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction12);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertTrue(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertNotNull(bigFractionField0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      long long1 = bigFraction2.longValue();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction7);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(long1 == long0);
      assertEquals(0L, long1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      long long2 = bigFraction10.getDenominatorAsLong();
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction11);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      assertEquals(1L, long2);
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      
      BigFraction bigFraction13 = bigFraction6.negate();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction12);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction12);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertTrue(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertNotNull(bigFraction13);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short) (-361), bigFraction6.shortValue());
      assertEquals((byte) (-105), bigFraction6.byteValue());
      assertEquals((short)361, bigFraction13.shortValue());
      assertEquals((byte)105, bigFraction13.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction4.reciprocal();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 0;
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      int int1 = bigFraction1.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = BigFraction.ZERO;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      int int2 = 1003;
      // Undeclared exception!
      try { 
        bigFraction1.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      
      BigFraction bigFraction0 = null;
      try {
        bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_HALF;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction((-3545.6797301526053), 1328);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      bigFraction1.MINUS_ONE.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.ONE.subtract((long) 1328);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      
      bigFraction1.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      String string0 = bigFraction2.toString();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(string0);
      assertEquals("2624173 / 740", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      
      BigFraction bigFraction4 = bigFraction2.subtract(1328);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.THREE_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-86), bigFraction4.byteValue());
      assertEquals((short)2218, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction0.ONE.subtract((long) 1328);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-47), bigFraction6.byteValue());
      assertEquals((short) (-1327), bigFraction6.shortValue());
      
      long long0 = bigFraction1.ONE_THIRD.getDenominatorAsLong();
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertEquals(3L, long0);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      
      int int0 = bigFraction0.intValue();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertEquals(0, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertNotNull(bigInteger0);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short) (-2363), bigInteger0.shortValue());
      assertEquals((byte) (-59), bigInteger0.byteValue());
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigInteger1.byteValue());
      assertEquals((short) (-1327), bigInteger1.shortValue());
      
      BigFraction bigFraction7 = bigFraction2.multiply(bigInteger1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigInteger1.byteValue());
      assertEquals((short) (-1327), bigInteger1.shortValue());
      assertEquals((short)12812, bigFraction7.shortValue());
      assertEquals((byte)12, bigFraction7.byteValue());
      
      BigFraction bigFraction8 = bigFraction3.divide(bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3545), bigFraction1.shortValue());
      assertEquals((byte)39, bigFraction1.byteValue());
      assertEquals((short)3546, bigFraction2.shortValue());
      assertEquals((byte) (-38), bigFraction2.byteValue());
      assertEquals((byte) (-47), bigFraction3.byteValue());
      assertEquals((short) (-1327), bigFraction3.shortValue());
      assertEquals((byte) (-47), bigInteger1.byteValue());
      assertEquals((short) (-1327), bigInteger1.shortValue());
      assertEquals((short)12812, bigFraction7.shortValue());
      assertEquals((byte)12, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.abs();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.add((-1));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      int int0 = bigFraction0.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.subtract(0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction3.ONE_HALF.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction1.subtract((-1));
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction0.pow(0);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      
      double double0 = bigFraction6.ONE_THIRD.percentageValue();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertEquals(33.333333333333336, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      
      int int1 = bigFraction2.THREE_QUARTERS.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      assertEquals(4, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction1.bigDecimalValue(1, 556);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1.0));
      assertNotNull(bigFraction0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals((-1L), long0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.getReducedFraction(39, 2147483646);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.multiply(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.multiply((long) 816);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-816), bigFraction3.shortValue());
      assertEquals((byte) (-48), bigFraction3.byteValue());
      
      int int0 = (-2931);
      BigFraction bigFraction4 = BigFraction.ZERO;
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction4.pow((-2931));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte) (-53);
      byteArray0[4] = (byte)97;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte)62;
      byteArray0[7] = (byte) (-21);
      byteArray0[8] = (byte) (-3);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertNotNull(bigFraction0);
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.abs();
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.divide(bigInteger0);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.add(2031L);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-16), bigFraction4.byteValue());
      assertEquals((short)2032, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction2.add(bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction5.getField();
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertNotNull(bigFractionField0);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction6 = bigFraction4.subtract(bigInteger0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte) (-125), (byte) (-118), (byte) (-53), (byte)97, (byte) (-21), (byte)62, (byte) (-21), (byte) (-3)}, byteArray0);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((short)7155, bigFraction6.shortValue());
      assertEquals((byte) (-13), bigFraction6.byteValue());
      assertEquals((short) (-5123), bigInteger0.shortValue());
      assertEquals((byte) (-3), bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-16), bigFraction4.byteValue());
      assertEquals((short)2032, bigFraction4.shortValue());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1.0));
      assertNotNull(bigFraction0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigInteger bigInteger0 = bigFraction0.getDenominator();
      assertNotNull(bigInteger0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction0.equals(object0);
      assertFalse(boolean0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigInteger bigInteger1 = bigFraction0.getNumerator();
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short) (-1), bigInteger1.shortValue());
      assertEquals((byte) (-1), bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-2.9485356677301627E-8));
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      long long0 = bigFraction0.ONE_FIFTH.getDenominatorAsLong();
      assertEquals(5L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.FOUR_FIFTHS.add(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.FOUR_FIFTHS.multiply(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)23251, bigFraction3.shortValue());
      assertEquals((byte) (-45), bigFraction3.byteValue());
      
      double double0 = bigFraction1.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((-8.911402246934137E15), double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      
      float float0 = bigFraction1.floatValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      
      BigFraction bigFraction4 = bigFraction1.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short) (-3705), bigFraction4.shortValue());
      assertEquals((byte) (-121), bigFraction4.byteValue());
      
      long long1 = bigFraction4.getNumeratorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(long1 == long0);
      assertEquals((-8911402246934137L), long1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short) (-3705), bigFraction4.shortValue());
      assertEquals((byte) (-121), bigFraction4.byteValue());
      
      long long2 = bigFraction4.ONE.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      assertEquals(1L, long2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short) (-3705), bigFraction4.shortValue());
      assertEquals((byte) (-121), bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.ONE_HALF.subtract(3485);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short) (-3705), bigFraction4.shortValue());
      assertEquals((byte) (-121), bigFraction4.byteValue());
      assertEquals((byte)100, bigFraction5.byteValue());
      assertEquals((short) (-3484), bigFraction5.shortValue());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction4.equals(object0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short) (-3705), bigFraction4.shortValue());
      assertEquals((byte) (-121), bigFraction4.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction3.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short) (-3705), bigInteger0.shortValue());
      assertEquals((byte) (-121), bigInteger0.byteValue());
      assertEquals((short) (-3705), bigFraction1.shortValue());
      assertEquals((byte) (-121), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)23251, bigFraction3.shortValue());
      assertEquals((byte) (-45), bigFraction3.byteValue());
      assertEquals((short)23251, bigDecimal0.shortValue());
      assertEquals((byte) (-45), bigDecimal0.byteValue());
      
      BigFraction bigFraction6 = bigFraction0.pow((-1));
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)32508, bigFraction6.shortValue());
      assertEquals((byte) (-4), bigFraction6.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction6.bigDecimalValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Non-terminating decimal expansion; no exact representable decimal result.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0, 3);
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      int int0 = bigFraction0.ZERO.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      float float0 = bigFraction0.ZERO.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.reciprocal();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.ONE_HALF.divide(3148);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.ZERO.pow((long) 0);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      
      int int1 = bigFraction3.MINUS_ONE.hashCode();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.abs();
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      long long0 = bigFraction4.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertEquals(1L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      String string0 = bigFraction4.toString();
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = BigFraction.getReducedFraction(3, 3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      
      long long1 = bigFraction5.THREE_QUARTERS.getNumeratorAsLong();
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      assertEquals(3L, long1);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      
      int int2 = bigFraction4.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(int2 == int0);
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction6 = bigFraction4.divide(bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      
      BigFraction bigFraction7 = bigFraction6.FOUR_FIFTHS.subtract(bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      long long2 = bigFraction5.longValue();
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertTrue(long2 == long0);
      assertFalse(long2 == long1);
      assertEquals(1L, long2);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      
      int int3 = bigFraction6.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertEquals(0, int3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      
      long long3 = bigFraction5.FOUR_FIFTHS.getDenominatorAsLong();
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(long3 == long2);
      assertFalse(long3 == long1);
      assertFalse(long3 == long0);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertEquals(5L, long3);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      
      BigFraction bigFraction8 = bigFraction7.pow(0);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction9 = bigFraction7.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      BigFraction bigFraction10 = bigFraction8.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertTrue(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertTrue(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertTrue(bigFraction10.equals((Object)bigFraction4));
      assertTrue(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertNotNull(bigFraction10);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      BigInteger bigInteger1 = BigInteger.ZERO;
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      
      BigFraction bigFraction11 = bigFraction9.multiply(bigInteger1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction11.equals((Object)bigFraction6));
      assertTrue(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertTrue(bigFraction11.equals((Object)bigFraction4));
      assertTrue(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertTrue(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertNotNull(bigFraction11);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      
      BigFraction bigFraction12 = bigFraction5.pow(1L);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction9);
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertTrue(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertTrue(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertTrue(bigFraction5.equals((Object)bigFraction8));
      assertNotNull(bigFraction12);
      assertEquals((short)1, bigFraction12.shortValue());
      assertEquals((byte)1, bigFraction12.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      double double0 = bigFraction0.ONE.doubleValue();
      assertEquals(1.0, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO.pow((-1794));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.TWO_THIRDS.negate();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction1.THREE_FIFTHS.subtract(1004);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)21, bigFraction3.byteValue());
      assertEquals((short) (-1003), bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction2.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.ONE_FIFTH.multiply(9193070505571053912L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((byte) (-34), bigFraction5.byteValue());
      assertEquals((short) (-13858), bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction2.TWO.divide(2126);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      
      BigFraction bigFraction7 = bigFraction2.THREE_FIFTHS.add(985);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)985, bigFraction7.shortValue());
      assertEquals((byte) (-39), bigFraction7.byteValue());
      
      BigFraction bigFraction8 = bigFraction4.ONE.divide(2126);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertNotNull(bigFraction8);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction3.TWO_QUARTERS.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)21, bigFraction3.byteValue());
      assertEquals((short) (-1003), bigFraction3.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      BigFraction bigFraction9 = bigFraction8.THREE_QUARTERS.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertNotNull(bigFraction9);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)10, bigFraction9.byteValue());
      assertEquals((short)10, bigFraction9.shortValue());
      
      BigFraction bigFraction10 = BigFraction.TWO;
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertNotNull(bigFraction10);
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      
      int int0 = bigFraction1.MINUS_ONE.compareTo(bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertEquals((-1), int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      
      BigFraction bigFraction11 = bigFraction8.TWO_FIFTHS.negate();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertNotNull(bigFraction11);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      
      BigFraction bigFraction12 = bigFraction4.ZERO.abs();
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertNotNull(bigFraction12);
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      
      double double1 = bigFraction10.FOUR_FIFTHS.doubleValue();
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertEquals(0.8, double1, 0.01);
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      
      int int1 = bigFraction0.intValue();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction13 = bigFraction4.subtract(bigFraction0);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertNotNull(bigFraction13);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)21845, bigFraction13.shortValue());
      assertEquals((byte)85, bigFraction13.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      
      String string0 = bigFraction13.ONE_THIRD.toString();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(string0);
      assertEquals("1 / 3", string0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)21845, bigFraction13.shortValue());
      assertEquals((byte)85, bigFraction13.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction10.getField();
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction11);
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction13));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertNotNull(bigFractionField0);
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      
      BigFraction bigFraction14 = bigFraction0.divide((-3893L));
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction12);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertNotNull(bigFraction14);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      
      BigFraction bigFraction15 = bigFraction3.divide(1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertNotNull(bigFraction15);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)21, bigFraction3.byteValue());
      assertEquals((short) (-1003), bigFraction3.shortValue());
      assertEquals((byte)21, bigFraction15.byteValue());
      assertEquals((short) (-1003), bigFraction15.shortValue());
      
      long long0 = bigFraction8.longValue();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      
      BigFraction bigFraction16 = bigFraction15.multiply(bigFraction3);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction16);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertTrue(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertNotNull(bigFraction16);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)21, bigFraction3.byteValue());
      assertEquals((short) (-1003), bigFraction3.shortValue());
      assertEquals((byte)21, bigFraction15.byteValue());
      assertEquals((short) (-1003), bigFraction15.shortValue());
      assertEquals((short)23771, bigFraction16.shortValue());
      assertEquals((byte) (-37), bigFraction16.byteValue());
      
      long long1 = bigFraction9.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction16);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(long1 == long0);
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction15));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction16));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertEquals(4L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)10, bigFraction9.byteValue());
      assertEquals((short)10, bigFraction9.shortValue());
      
      BigFraction bigFraction17 = bigFraction15.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction16);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction17);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertTrue(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction16));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertNotNull(bigFraction17);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)21, bigFraction3.byteValue());
      assertEquals((short) (-1003), bigFraction3.shortValue());
      assertEquals((byte)21, bigFraction15.byteValue());
      assertEquals((short) (-1003), bigFraction15.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-1013), bigFraction17.shortValue());
      assertEquals((byte)11, bigFraction17.byteValue());
      
      int int2 = bigFraction10.intValue();
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction15);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction16);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction14);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction17);
      assertNotSame(bigFraction10, bigFraction11);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction15));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction16));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction13));
      assertFalse(bigFraction10.equals((Object)bigFraction14));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction17));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertEquals(2, int2);
      assertEquals((short)2, bigFraction10.shortValue());
      assertEquals((byte)2, bigFraction10.byteValue());
      
      BigFraction bigFraction18 = bigFraction1.negate();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertNotNull(bigFraction18);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction18.shortValue());
      assertEquals((byte)0, bigFraction18.byteValue());
      
      float float0 = bigFraction1.floatValue();
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_THIRD;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      int int0 = (-239);
      // Undeclared exception!
      try { 
        bigFraction0.ONE_THIRD.pow((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.abs();
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction1.divide(bigInteger0);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.add(0L);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction1.add(bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction4.THREE_QUARTERS.getField();
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFractionField0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction1.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_THIRD;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.subtract(0L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      double double0 = bigFraction0.pow(1491.281039676);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(0.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction2 = BigFraction.getReducedFraction(171, (-416));
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.add((-2262L));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short) (-2261), bigFraction3.shortValue());
      assertEquals((byte)43, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction1.multiply(1345);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)807, bigFraction4.shortValue());
      assertEquals((byte)39, bigFraction4.byteValue());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.ONE_QUARTER;
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      int int0 = 100;
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.THREE_FIFTHS.add(bigInteger0);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      
      int int1 = bigFraction2.FOUR_FIFTHS.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction1.ONE.bigDecimalValue(100, 815);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      BigFraction bigFraction1 = new BigFraction((double) (byte)50);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      
      double double0 = bigFraction1.ONE_HALF.percentageValue();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(50.0, double0, 0.01);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      
      int int0 = bigFraction0.THREE_QUARTERS.compareTo(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((-1), int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      
      byteArray0[1] = (byte)127;
      BigFraction bigFraction2 = BigFraction.TWO_QUARTERS;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction1.THREE_FIFTHS.add((long) (byte)127);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      assertEquals((short)127, bigFraction3.shortValue());
      assertEquals((byte)127, bigFraction3.byteValue());
      
      float float0 = bigFraction2.ONE_HALF.floatValue();
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertEquals(0.5F, float0, 0.01F);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      int int1 = bigFraction0.ONE_QUARTER.compareTo(bigFraction2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(int1 == int0);
      assertEquals((-1), int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.ONE_HALF.pow((long) (byte)50);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      int int2 = bigFraction1.ZERO.getDenominatorAsInt();
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, int2);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      
      BigFraction bigFraction5 = bigFraction1.ONE.pow((-555L));
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      
      BigFraction bigFraction6 = bigFraction0.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigFraction bigFraction7 = bigFraction1.add(bigInteger0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertNotNull(bigFraction7);
      assertEquals((byte) (-79), bigFraction7.byteValue());
      assertEquals((short)12977, bigFraction7.shortValue());
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction6.FOUR_FIFTHS.bigDecimalValue(1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      float float1 = bigFraction0.floatValue();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(0.75F, float1, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction8 = bigFraction0.add(bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigFraction bigFraction9 = bigFraction8.TWO_FIFTHS.subtract((-1));
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction9);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)50, (byte)127}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((short)12927, bigInteger0.shortValue());
      assertEquals((byte)127, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      BigDecimal bigDecimal1 = bigFraction1.bigDecimalValue(3018, 4);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((short)50, bigFraction1.shortValue());
      assertEquals((byte)50, bigFraction1.byteValue());
      assertEquals((short)50, bigDecimal1.shortValue());
      assertEquals((byte)50, bigDecimal1.byteValue());
      
      int int3 = bigFraction0.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(3, int3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(34L);
      assertNotNull(bigFraction0);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.reciprocal();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      
      long long0 = bigFraction0.THREE_FIFTHS.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(5L, long0);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      
      bigFraction0.MINUS_ONE.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      
      int int0 = bigFraction0.TWO.intValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(2, int0);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue(0);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      String string0 = bigFraction0.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(string0);
      assertEquals("34", string0);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      
      BigFraction bigFraction2 = BigFraction.getReducedFraction(0, 0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.TWO_THIRDS.divide(2691L);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      int int1 = bigFraction3.ONE_FIFTH.hashCode();
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction3.ZERO.multiply(bigFraction0);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction0.multiply(34L);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((short)34, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short)1156, bigFraction5.shortValue());
      assertEquals((byte) (-124), bigFraction5.byteValue());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO;
      assertNotNull(bigFraction0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((-1));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.ONE_HALF.subtract(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.TWO.abs();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      
      int int0 = bigFraction1.ONE_HALF.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertEquals(1, int0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      int int1 = bigFraction0.ONE_QUARTER.hashCode();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction4 = bigFraction0.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      
      long long0 = bigFraction4.ONE_THIRD.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertEquals(3L, long0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.reciprocal();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction0.THREE_QUARTERS.getField();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigFractionField0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      int int2 = bigFraction4.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(int2 == int0);
      assertEquals(1, int2);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      
      BigInteger bigInteger0 = bigFraction3.getNumerator();
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((short)2, bigInteger0.shortValue());
      assertEquals((byte)2, bigInteger0.byteValue());
      
      BigFraction bigFraction6 = bigFraction5.multiply(1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)4, bigFraction4.byteValue());
      assertEquals((short)4, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1.0));
      assertNotNull(bigFraction0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.multiply((-1304));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1L, long0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      long long1 = bigFraction2.getNumeratorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(long1 == long0);
      assertEquals(0L, long1);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction2.add(1297L);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)17, bigFraction3.byteValue());
      assertEquals((short)1297, bigFraction3.shortValue());
      
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-40);
      byteArray0[0] = (byte) (-40);
      byte byte1 = (byte)117;
      byteArray0[1] = (byte)117;
      BigInteger bigInteger1 = BigInteger.ZERO;
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      
      BigInteger bigInteger2 = bigInteger0.or(bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigInteger2, bigInteger1);
      assertNotSame(bigInteger2, bigInteger0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertTrue(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigInteger2);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      
      BigInteger bigInteger3 = new BigInteger(byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-40), (byte)117}, byteArray0);
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertNotNull(bigInteger3);
      assertEquals((short) (-10123), bigInteger3.shortValue());
      assertEquals((byte)117, bigInteger3.byteValue());
      
      BigFraction bigFraction4 = bigFraction3.divide(bigInteger3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger3);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger0);
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-40), (byte)117}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertTrue(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)17, bigFraction3.byteValue());
      assertEquals((short)1297, bigFraction3.shortValue());
      assertEquals((short) (-10123), bigInteger3.shortValue());
      assertEquals((byte)117, bigInteger3.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = bigFraction4.subtract(2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger3);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger0);
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-40), (byte)117}, byteArray0);
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertTrue(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((byte) (-2), bigFraction5.byteValue());
      assertEquals((short) (-2), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)17, bigFraction3.byteValue());
      assertEquals((short)1297, bigFraction3.shortValue());
      assertEquals((short) (-10123), bigInteger3.shortValue());
      assertEquals((byte)117, bigInteger3.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction3.divide(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      long long0 = bigFraction0.ONE_FIFTH.longValue();
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.pow((-5917));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-46), bigFraction1.byteValue());
      assertEquals((short) (-21550), bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.negate();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-46), bigFraction1.byteValue());
      assertEquals((short) (-21550), bigFraction1.shortValue());
      assertEquals((short)21550, bigFraction2.shortValue());
      assertEquals((byte)46, bigFraction2.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.MINUS_ONE.add(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-46), bigFraction1.byteValue());
      assertEquals((short) (-21550), bigFraction1.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction1.TWO_THIRDS.getField();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFractionField0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-46), bigFraction1.byteValue());
      assertEquals((short) (-21550), bigFraction1.shortValue());
      
      int int0 = 1136;
      long long1 = bigFraction1.TWO_THIRDS.longValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(long1 == long0);
      assertEquals(0L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-46), bigFraction1.byteValue());
      assertEquals((short) (-21550), bigFraction1.shortValue());
      
      BigFraction bigFraction4 = BigFraction.getReducedFraction(1136, 1014);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      
      int int1 = bigFraction0.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction4.bigDecimalValue((-5917));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1013), (-1013));
      assertNotNull(bigFraction0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction0.getField();
      assertNotNull(bigFractionField0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.getReducedFraction(1, 1);
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.add(2827);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)11, bigFraction2.byteValue());
      assertEquals((short)2827, bigFraction2.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction2.ZERO.reciprocal();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      String string0 = bigFraction0.THREE_FIFTHS.toString();
      assertNotNull(string0);
      assertEquals("3 / 5", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction0.getField();
      assertNotNull(bigFractionField0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction(bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      int int0 = bigFraction1.THREE_FIFTHS.compareTo(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.ONE_QUARTER.divide(933);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      int int1 = bigFraction2.ONE_FIFTH.intValue();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      int int2 = bigFraction0.compareTo(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction3 = bigFraction1.divide(bigFraction0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction3.TWO_FIFTHS.negate();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction0.ONE_HALF.add(209);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-47), bigFraction5.byteValue());
      assertEquals((short)209, bigFraction5.shortValue());
      
      boolean boolean0 = bigFraction0.equals(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      
      int int3 = bigFraction1.hashCode();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      long long0 = bigFraction3.longValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertEquals(0L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      
      BigFraction bigFraction6 = bigFraction4.THREE_FIFTHS.reciprocal();
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction7 = bigFraction4.add(1132L);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)107, bigFraction7.byteValue());
      assertEquals((short)1131, bigFraction7.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction7.divide(bigFraction1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_HALF.divide((-5034868814120038111L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      int int0 = (-1);
      BigFraction bigFraction2 = bigFraction1.THREE_FIFTHS.multiply((-1));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      int int1 = bigFraction0.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.FOUR_FIFTHS.divide(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.MINUS_ONE;
      assertNotNull(bigFraction0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction((-2364), (-2364));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction1.MINUS_ONE.getField();
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFractionField0);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.MINUS_ONE.add((long) (-2364));
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte) (-61), bigFraction2.byteValue());
      assertEquals((short) (-2365), bigFraction2.shortValue());
      
      long long0 = bigFraction1.ONE_QUARTER.longValue();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(0L, long0);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      long long1 = bigFraction1.ONE.getNumeratorAsLong();
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      assertEquals(1L, long1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      
      long long2 = bigFraction0.getNumeratorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      assertEquals((-1L), long2);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      
      BigFraction bigFraction3 = bigFraction0.THREE_FIFTHS.multiply((-2364));
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((byte)118, bigFraction3.byteValue());
      assertEquals((short) (-1418), bigFraction3.shortValue());
      
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_HALF.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      bigFraction1.ONE.hashCode();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = BigFraction.ZERO;
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      BigFraction bigFraction3 = bigFraction0.ONE_FIFTH.divide(1003);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      float float0 = bigFraction3.TWO_QUARTERS.floatValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertEquals(0.5F, float0, 0.01F);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      String string0 = bigFraction3.ONE_THIRD.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(string0);
      assertEquals("1 / 3", string0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.add(bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      
      double double0 = bigFraction4.FOUR_FIFTHS.doubleValue();
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertEquals(0.8, double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.multiply((-1));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      
      String string1 = bigFraction3.toString();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("1 / 5015", string1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigFraction bigFraction6 = bigFraction4.add(885L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)886, bigFraction6.shortValue());
      assertEquals((byte)118, bigFraction6.byteValue());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      int int0 = (-1936);
      BigFraction bigFraction0 = BigFraction.getReducedFraction((-1936), 629);
      assertNotNull(bigFraction0);
      assertEquals((short) (-3), bigFraction0.shortValue());
      assertEquals((byte) (-3), bigFraction0.byteValue());
      
      BigFraction bigFraction1 = null;
      try {
        bigFraction1 = new BigFraction(0.0, 629);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: Overflow trying to convert 0 to fraction (1/9,223,372,036,854,775,807)
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_HALF.pow(4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      long long0 = bigFraction1.ONE.getDenominatorAsLong();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(1L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.ONE_THIRD.pow(3743L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      
      try { 
        bigFraction0.add((BigInteger) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      assertNotNull(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      bigFraction0.ONE.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      int int0 = bigFraction0.getDenominatorAsInt();
      assertEquals(5, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.multiply((-5001L));
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)24, bigFraction1.byteValue());
      assertEquals((short) (-1000), bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)24, bigFraction1.byteValue());
      assertEquals((short) (-1000), bigFraction1.shortValue());
      assertEquals((short) (-1000), bigFraction2.shortValue());
      assertEquals((byte)24, bigFraction2.byteValue());
      
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-108);
      byteArray0[0] = (byte) (-108);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-108)}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((short) (-108), bigInteger0.shortValue());
      assertEquals((byte) (-108), bigInteger0.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction1.ZERO.pow(bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      int int0 = (-187);
      BigFraction bigFraction0 = BigFraction.getReducedFraction((-450), (-187));
      assertNotNull(bigFraction0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ONE_QUARTER.pow(91);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.ZERO.divide(380L);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFractionField bigFractionField0 = bigFraction2.ONE_FIFTH.getField();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFractionField0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction1.TWO_FIFTHS.reduce();
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction4 = bigFraction0.THREE_QUARTERS.subtract(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      BigFraction bigFraction5 = bigFraction4.ZERO.multiply((-187));
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      
      BigFraction bigFraction6 = bigFraction3.TWO_THIRDS.negate();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      
      int int1 = bigFraction4.TWO_QUARTERS.hashCode();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      
      int int2 = bigFraction0.ZERO.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(int2 == int0);
      assertEquals(1, int2);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)2, bigFraction0.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.bigDecimalValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Non-terminating decimal expansion; no exact representable decimal result.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      int int0 = (-1);
      BigFraction bigFraction0 = null;
      try {
        bigFraction0 = new BigFraction(1236.011428502446, (-1.4121324224340735E84), (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: Unable to convert 1,236.011 to fraction after -1 iterations
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      double double0 = 609.4935994;
      int int0 = (-1785);
      BigFraction bigFraction0 = new BigFraction(609.4935994, 609.4935994, (-1785));
      assertNotNull(bigFraction0);
      assertEquals((byte)97, bigFraction0.byteValue());
      assertEquals((short)609, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = new BigFraction(5648769086999809661L);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)125, bigFraction1.byteValue());
      assertEquals((short) (-12675), bigFraction1.shortValue());
      
      BigFraction bigFraction2 = bigFraction1.THREE_QUARTERS.negate();
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals((byte)125, bigFraction1.byteValue());
      assertEquals((short) (-12675), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction2.ZERO.bigDecimalValue((-1785));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
      assertNotNull(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = new BigFraction((-27), 2002);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      BigFraction bigFraction2 = bigFraction0.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      
      BigFraction bigFraction3 = bigFraction2.add((-27));
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte) (-76), bigFraction3.byteValue());
      assertEquals((short) (-76), bigFraction3.shortValue());
      
      BigFraction bigFraction4 = bigFraction2.divide(bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte)81, bigFraction4.byteValue());
      assertEquals((short)3665, bigFraction4.shortValue());
      
      int int0 = bigFraction4.MINUS_ONE.getNumeratorAsInt();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertEquals((-1), int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte)81, bigFraction4.byteValue());
      assertEquals((short)3665, bigFraction4.shortValue());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)1, (byte)0, (byte)5}, byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      
      BigFraction bigFraction5 = bigFraction0.TWO_QUARTERS.divide(bigInteger0);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)1, (byte)0, (byte)5}, byteArray0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)5, bigInteger0.byteValue());
      assertEquals((short)5, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      
      BigFractionField bigFractionField0 = bigFraction4.getField();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertNotNull(bigFractionField0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte)81, bigFraction4.byteValue());
      assertEquals((short)3665, bigFraction4.shortValue());
      
      int int1 = bigFraction4.getDenominatorAsInt();
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      assertEquals(2187, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte)81, bigFraction4.byteValue());
      assertEquals((short)3665, bigFraction4.shortValue());
      
      BigFraction bigFraction6 = bigFraction3.subtract((long) 2187);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-49), bigFraction2.shortValue());
      assertEquals((byte) (-49), bigFraction2.byteValue());
      assertEquals((byte) (-76), bigFraction3.byteValue());
      assertEquals((short) (-76), bigFraction3.shortValue());
      assertEquals((short) (-2263), bigFraction6.shortValue());
      assertEquals((byte)41, bigFraction6.byteValue());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      int int0 = 3;
      BigFraction bigFraction0 = new BigFraction(3, 3);
      assertNotNull(bigFraction0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertNotNull(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.TWO.pow(bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1024, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.ONE_THIRD.bigDecimalValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Non-terminating decimal expansion; no exact representable decimal result.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertNotNull(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      BigFraction bigFraction0 = new BigFraction(bigInteger0);
      assertNotNull(bigFraction0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertSame(bigInteger1, bigInteger0);
      assertNotNull(bigInteger1);
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      
      BigInteger bigInteger2 = bigInteger0.andNot(bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger1, bigInteger0);
      assertNotSame(bigInteger1, bigInteger2);
      assertNotSame(bigInteger2, bigInteger1);
      assertNotSame(bigInteger2, bigInteger0);
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigInteger2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)0, bigInteger2.byteValue());
      assertEquals((short)0, bigInteger2.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.negate();
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      
      double double0 = bigFraction0.pow((-2.327375671320742E-9));
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(1.0, double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      int int0 = bigFraction1.FOUR_FIFTHS.getNumeratorAsInt();
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertEquals(4, int0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      
      float float0 = bigFraction0.floatValue();
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      double double1 = bigFraction1.percentageValue();
      assertNotSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-100.0), double1, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      
      int int1 = 0;
      // Undeclared exception!
      try { 
        BigFraction.getReducedFraction(4, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // denominator must be different from 0
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(1L, 1L);
      bigFraction0.THREE_FIFTHS.getNumeratorAsLong();
      BigInteger bigInteger0 = BigInteger.TEN;
      BigFraction bigFraction1 = bigFraction0.TWO.subtract(bigInteger0);
      BigFraction bigFraction2 = bigFraction1.THREE_FIFTHS.add(1);
      bigFraction1.THREE_QUARTERS.subtract((long) 352);
      BigFraction bigFraction3 = bigFraction0.multiply(352);
      BigFraction bigFraction4 = bigFraction0.negate();
      bigFraction0.ZERO.bigDecimalValue(1296, 1);
      BigFraction bigFraction5 = bigFraction2.negate();
      BigFraction bigFraction6 = bigFraction5.subtract(1L);
      float float0 = bigFraction4.TWO_FIFTHS.floatValue();
      assertEquals(0.4F, float0, 0.01F);
      
      bigFraction3.FOUR_FIFTHS.getNumeratorAsLong();
      bigFraction1.getDenominatorAsLong();
      bigFraction4.hashCode();
      bigFraction5.ONE_THIRD.longValue();
      bigFraction5.getNumeratorAsInt();
      BigFraction bigFraction7 = bigFraction0.add(bigFraction5);
      bigFraction3.getField();
      assertEquals((byte)96, bigFraction3.byteValue());
      
      BigFraction bigFraction8 = bigFraction1.divide(bigInteger0);
      double double0 = bigFraction1.pow((double) 1L);
      assertEquals((-8.0), double0, 0.01);
      
      bigFraction1.divide(bigInteger0);
      bigFraction8.negate();
      bigFraction5.longValue();
      double double1 = bigFraction8.pow(1.7976931348623157E308);
      assertEquals(Double.NaN, double1, 0.01);
      
      int int0 = bigFraction6.compareTo(bigFraction7);
      assertEquals((-1), int0);
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertEquals((byte)0, bigFraction7.byteValue());
      
      double double2 = bigFraction0.doubleValue();
      assertEquals(1.0, double2, 0.01);
      
      bigFraction6.getField();
      long long0 = bigFraction6.longValue();
      assertEquals((-2L), long0);
      
      bigFraction0.getDenominatorAsLong();
      BigFraction bigFraction9 = bigFraction6.negate();
      bigFraction9.ONE_HALF.reciprocal();
      BigFraction bigFraction10 = bigFraction6.subtract((long) (-1));
      assertTrue(bigFraction10.equals((Object)bigFraction5));
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(2924.47539946804, (-184));
      bigFraction0.THREE_QUARTERS.percentageValue();
      bigFraction0.ONE_QUARTER.getNumeratorAsLong();
      BigFraction bigFraction1 = BigFraction.getReducedFraction((-1), 816);
      bigFraction0.ONE_HALF.multiply(bigFraction1);
      bigFraction0.FOUR_FIFTHS.multiply((long) (-184));
      BigFraction bigFraction2 = bigFraction0.THREE_FIFTHS.pow((-2931));
      bigFraction1.TWO_FIFTHS.longValue();
      bigFraction0.intValue();
      bigFraction0.floatValue();
      bigFraction0.getDenominatorAsInt();
      bigFraction1.percentageValue();
      bigFraction0.add(bigFraction2);
      String string0 = null;
      // Undeclared exception!
      try { 
        bigFraction2.TWO_FIFTHS.bigDecimalValue(3605);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
      bigFraction0.intValue();
      bigFraction0.ZERO.floatValue();
      BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;
      BigFraction bigFraction2 = bigFraction0.ONE.subtract(bigFraction1);
      BigFraction bigFraction3 = bigFraction0.THREE_QUARTERS.reduce();
      bigFraction2.TWO.reciprocal();
      BigFraction bigFraction4 = bigFraction3.TWO_THIRDS.divide(3099);
      bigFraction4.ONE_FIFTH.add(1);
      int int0 = (-2196);
      bigFraction4.TWO_FIFTHS.add((-2196));
      bigFraction0.ONE_FIFTH.add(bigFraction2);
      bigFraction0.bigDecimalValue(3099, 1);
      bigFraction0.THREE_FIFTHS.bigDecimalValue(1);
      BigFraction bigFraction5 = bigFraction0.reciprocal();
      // Undeclared exception!
      try { 
        bigFraction5.ZERO.bigDecimalValue(1249);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(4318.619142489, 4318.619142489, (-1));
      long long0 = (-312L);
      MockRandom mockRandom0 = new MockRandom((-312L));
      bigFraction0.TWO_QUARTERS.divide((long) (-1));
      BigFraction bigFraction1 = BigFraction.getReducedFraction(0, (-1));
      bigFraction1.multiply((-6144));
      // Undeclared exception!
      try { 
        BigInteger.probablePrime((-6144), mockRandom0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // bitLength < 2
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
      int int0 = 5;
      int int1 = 568;
      // Undeclared exception!
      try { 
        bigFraction0.ONE_THIRD.bigDecimalValue(5, 568);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction(0.0);
      int int0 = (-1);
      bigFraction0.TWO_FIFTHS.abs();
      // Undeclared exception!
      try { 
        bigFraction0.MINUS_ONE.subtract((BigFraction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fraction
         //
         verifyException("org.apache.commons.math3.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      BigFraction bigFraction0 = new BigFraction((-1129));
      Object object0 = new Object();
      boolean boolean0 = bigFraction0.equals(object0);
      assertFalse(boolean0);
      
      BigFraction bigFraction1 = bigFraction0.reduce();
      int int0 = bigFraction1.ONE_THIRD.compareTo(bigFraction0);
      assertEquals(1, int0);
      
      BigFraction bigFraction2 = bigFraction0.MINUS_ONE.abs();
      assertEquals((short)1, bigFraction2.shortValue());
      
      double double0 = bigFraction1.doubleValue();
      assertEquals((-1129.0), double0, 0.01);
      
      bigFraction1.ONE_FIFTH.getNumeratorAsLong();
      BigFraction bigFraction3 = bigFraction0.subtract((long) (-1129));
      BigFraction bigFraction4 = bigFraction3.ZERO.divide((-3124L));
      BigInteger bigInteger0 = bigFraction3.getNumerator();
      bigFraction0.subtract(bigInteger0);
      int int1 = bigFraction0.compareTo(bigFraction1);
      assertEquals(0, int1);
      
      double double1 = bigFraction0.pow(0.0);
      assertEquals(1.0, double1, 0.01);
      
      bigFraction1.negate();
      bigFraction4.divide((-1129));
      assertEquals((byte)0, bigFraction3.byteValue());
      assertFalse(bigFraction0.equals((Object)bigFraction3));
  }
}
