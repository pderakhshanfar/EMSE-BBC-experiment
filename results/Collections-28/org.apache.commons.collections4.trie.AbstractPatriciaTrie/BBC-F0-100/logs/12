* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.collections4.trie.AbstractPatriciaTrie
* Starting Client-0
* Connecting to master process on port 2473
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-28/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.trie.AbstractPatriciaTrie
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3013
* Using seed 969399953
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 988 / 3013
[MASTER] 14:19:40.050 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 14:19:40.050 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 14:19:42.714 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 14:19:51.650 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.comparator()Ljava/util/Comparator;: Line 776: 45,0,0| Number of FF evals: 82
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()Ljava/util/Comparator;: Line 1713: 85960,75257,6807| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I126 Branch 77 IFNONNULL L719 - true: 159,0,0| Number of FF evals: 1773
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1142: 185,0,0| Number of FF evals: 1438
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I40 Branch 136 IFEQ L1201 - false: 149,0,0| Number of FF evals: 1642
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I47 Branch 112 IFEQ L1029 - true: 6118,5320,0| Number of FF evals: 41774
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: Line 2335: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I93 Branch 55 IF_ACMPNE L553 - true: 312,0,0| Number of FF evals: 929
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I35 Branch 242 IFNONNULL L2295 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 1727: 85960,75257,51292| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I16 Branch 267 IFNULL L2071 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: I19 Branch 148 IFEQ L2435 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I106 Branch 107 IFEQ L982 - false: 8620,7381,113| Number of FF evals: 42280
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I35 Branch 242 IFNONNULL L2295 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 89 IFNONNULL L811 - false: 79,0,0| Number of FF evals: 233
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I16 Branch 267 IFNULL L2071 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: I19 Branch 148 IFEQ L2435 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I106 Branch 107 IFEQ L982 - true: 8620,7381,113| Number of FF evals: 42280
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2408: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()I: root-Branch: 85960,75257,44731| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2398: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 104 IFNE L962 - false: 148,0,0| Number of FF evals: 1155
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: Line 1400: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 172 IFNONNULL L1636 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2405: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()Ljava/util/Set;: Line 1930: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2390: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 104 IFNE L962 - true: 91,0,0| Number of FF evals: 2517
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2394: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I218 Branch 160 IFNULL L1373 - true: 4539,1622,0| Number of FF evals: 8390
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 172 IFNONNULL L1636 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: Line 1472: 85960,75257,42996| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: Line 1471: 85960,75257,42977| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getFromKey()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 255 IFNE L2041 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2388: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2389: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(Ljava/lang/Object;Z)Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I52 Branch 97 IFEQ L907 - false: 54,0,0| Number of FF evals: 397
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 255 IFNE L2041 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: root-Branch: 85960,75257,43001| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.mapIterator()Lorg/apache/commons/collections4/OrderedMapIterator;: root-Branch: 45,0,0| Number of FF evals: 2022
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Ljava/lang/Object;: I5 Branch 45 IF_ACMPEQ L480 - true: 140,0,0| Number of FF evals: 521
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I39 Branch 117 IFEQ L1065 - false: 245,0,0| Number of FF evals: 963
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: root-Branch: 85960,75257,42941| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()Ljava/util/Iterator;: root-Branch: 12627,1924,0| Number of FF evals: 6215
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I146 Branch 130 IFLT L1142 - true: 6869,6203,0| Number of FF evals: 42280
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: I8 Branch 199 IFNE L1718 - false: 85960,75257,51920| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I146 Branch 130 IFLT L1142 - false: 185,0,0| Number of FF evals: 2196
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I19 Branch 245 IFNONNULL L1988 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I41 Branch 246 IFNULL L1995 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I19 Branch 245 IFNONNULL L1988 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I41 Branch 246 IFNULL L1995 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: I4 Branch 179 IFNONNULL L1590 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: Line 2013: 85960,75257,44554| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: I4 Branch 179 IFNONNULL L1590 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: Line 2290: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: Line 2320: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I4 Branch 134 IFNONNULL L1196 - false: 11783,10063,340| Number of FF evals: 36943
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 95 IFNE L894 - true: 14,0,0| Number of FF evals: 2159
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: Line 2295: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2376: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 95 IFNE L894 - false: 132,0,0| Number of FF evals: 941
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2373: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2372: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I64 Branch 137 IFNULL L1207 - false: 114,0,0| Number of FF evals: 1668
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 141 IF_ACMPNE L1216 - true: 158,0,0| Number of FF evals: 1465
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 141 IF_ACMPNE L1216 - false: 146,0,0| Number of FF evals: 2024
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I137 Branch 78 IF_ACMPEQ L724 - true: 5727,4840,143| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 207 IFNE L1782 - true: 85960,75257,32050| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: I17 Branch 167 IF_ICMPEQ L1466 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I30 Branch 48 IFNE L501 - false: 28582,24843,3422| Number of FF evals: 42386
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 207 IFNE L1782 - false: 85960,75257,32069| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I85 Branch 127 IF_ACMPNE L1127 - false: 90,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getToKey()Ljava/lang/Object;: Line 2243: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: I4 Branch 265 IFEQ L2325 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: Line 2004: 85960,75257,44655| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: I4 Branch 265 IFEQ L2325 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I85 Branch 127 IF_ACMPNE L1127 - true: 34,0,0| Number of FF evals: 1838
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: Line 2018: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 116 IFNE L1058 - true: 73,0,0| Number of FF evals: 1748
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()Ljava/lang/Object;: I8 Branch 85 IFNULL L790 - false: 108,0,0| Number of FF evals: 350
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 116 IFNE L1058 - false: 208,0,0| Number of FF evals: 1096
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I11 Branch 66 IF_ACMPEQ L657 - false: 335,0,0| Number of FF evals: 1708
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: I4 Branch 264 IFNE L2320 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I171 Branch 159 IF_ICMPNE L1363 - false: 5612,3734,0| Number of FF evals: 14833
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: I4 Branch 264 IFNE L2320 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I22 Branch 177 IFNONNULL L1567 - false: 20596,17440,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isToInclusive()Z: Line 2253: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: I17 Branch 167 IF_ICMPEQ L1466 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 165 IFNE L1410 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 1745: 85960,75257,66320| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2069: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2070: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I120 Branch 99 IFEQ L920 - true: 23236,21141,1280| Number of FF evals: 42386
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 165 IFNE L1410 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I171 Branch 159 IF_ICMPNE L1363 - true: 155,0,0| Number of FF evals: 1473
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2192: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2071: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2191: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2072: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I16 Branch 260 IF_ACMPNE L2390 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I16 Branch 260 IF_ACMPNE L2390 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I8 Branch 229 IFNONNULL L1891 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()Ljava/lang/Object;: Line 1528: 12627,1924,0| Number of FF evals: 6215
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I120 Branch 99 IFEQ L920 - false: 23236,21141,1280| Number of FF evals: 42386
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: I13 Branch 208 IFNULL L1795 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: I4 Branch 203 IFNONNULL L1753 - false: 85960,75257,39588| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 206 IFNE L1774 - false: 85960,75257,38561| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 75 IF_ACMPNE L706 - false: 10949,9512,1355| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;)V: Line 1488: 45,0,0| Number of FF evals: 65
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isToInclusive()Z: Line 1950: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: I15 Branch 244 IFNONNULL L1975 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: I13 Branch 208 IFNULL L1795 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1792: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1793: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I8 Branch 229 IFNONNULL L1891 - false: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1795: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: I4 Branch 203 IFNONNULL L1753 - true: 85960,75257,39553| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 206 IFNE L1774 - true: 85960,75257,38585| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2182: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2184: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2185: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(Ljava/lang/Object;)Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I137 Branch 78 IF_ACMPEQ L724 - false: 159,0,0| Number of FF evals: 1772
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: I15 Branch 244 IFNONNULL L1975 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I32 Branch 196 IFNULL L2191 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1654: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2273: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1655: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: I5 Branch 181 IF_ICMPEQ L2125 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1656: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: Line 1429: 85960,75257,42993| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: Line 1428: 85960,75257,42882| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I32 Branch 196 IFNULL L2191 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I91 Branch 128 IF_ICMPGE L1127 - true: 120,0,0| Number of FF evals: 909
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2278: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(Ljava/lang/Object;)Z: Line 1459: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2281: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2280: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2279: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1922: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 110 IFNE L1019 - false: 397,0,0| Number of FF evals: 2942
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I160 Branch 80 IF_ACMPNE L730 - true: 27,0,0| Number of FF evals: 1029
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1921: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I160 Branch 80 IF_ACMPNE L730 - false: 3774,3294,155| Number of FF evals: 42146
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I109 Branch 57 IF_ACMPNE L557 - false: 365,0,0| Number of FF evals: 1155
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 110 IFNE L1019 - true: 653,0,0| Number of FF evals: 4533
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()Ljava/util/Collection;: Line 407: 45,0,0| Number of FF evals: 65
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I139 Branch 8 IFEQ L165 - true: 41734,36281,29835| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1911: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Ljava/lang/Object;: I10 Branch 46 IFEQ L481 - false: 4680,941,3| Number of FF evals: 7341
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I97 Branch 56 IF_ACMPEQ L553 - false: 364,0,0| Number of FF evals: 1168
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I139 Branch 8 IFEQ L165 - false: 41734,36281,29836| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()Ljava/util/Collection;: Line 410: 45,0,0| Number of FF evals: 65
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I40 Branch 105 IFEQ L969 - false: 93,0,0| Number of FF evals: 758
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.comparator()Ljava/util/Comparator;: root-Branch: 45,0,0| Number of FF evals: 214
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2312: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2315: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2314: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: I8 Branch 168 IFEQ L1512 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: I8 Branch 168 IFEQ L1512 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2316: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 2228: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(Ljava/lang/Object;)Z: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()Ljava/lang/Object;: Line 1615: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: Line 1644: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1017: 397,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1019: 397,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(Ljava/lang/Object;II)Ljava/util/SortedMap;: I12 Branch 92 IF_ICMPLE L856 - false: 16237,14813,141| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I13 Branch 191 IFNONNULL L2166 - false: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I13 Branch 191 IFNONNULL L2166 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$KeySet;)V: Line 1477: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I216 Branch 63 IFEQ L600 - true: 312,0,0| Number of FF evals: 986
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: I5 Branch 181 IF_ICMPEQ L2125 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: Line 1512: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I43 Branch 197 IFNULL L2192 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I43 Branch 197 IFNULL L2192 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1556: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()Ljava/util/Iterator;: Line 1492: 12627,1924,0| Number of FF evals: 6215
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1555: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I55 Branch 263 IF_ICMPLT L2405 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1554: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I9 Branch 259 IFEQ L2373 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: I13 Branch 212 IFNULL L1805 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I56 Branch 118 IFEQ L1070 - true: 17647,15976,493| Number of FF evals: 42389
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I9 Branch 259 IFEQ L2373 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 531: 13682,2979,0| Number of FF evals: 6686
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: Line 2259: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()Ljava/util/Set;: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(Ljava/lang/Object;)Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: I5 Branch 266 IF_ICMPEQ L2335 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()I: root-Branch: 85960,75257,44702| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: I8 Branch 199 IFNE L1718 - true: 85960,75257,51798| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I49 Branch 70 IFEQ L674 - false: 8,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(Ljava/lang/Object;)Z: Line 2212: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: Line 1620: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I55 Branch 263 IF_ICMPLT L2405 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I31 Branch 261 IF_ICMPNE L2398 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: I5 Branch 266 IF_ICMPEQ L2335 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()I: root-Branch: 85960,75257,44636| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I31 Branch 261 IF_ICMPNE L2398 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: I4 Branch 171 IFNONNULL L1628 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I100 Branch 51 IF_ICMPLE L515 - false: 31,0,0| Number of FF evals: 741
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: Line 2158: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I7 Branch 241 IF_ICMPEQ L2290 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: I4 Branch 171 IFNONNULL L1628 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1782: 85960,75257,32017| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getToKey()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I203 Branch 62 IFEQ L596 - true: 63,0,0| Number of FF evals: 766
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I146 Branch 79 IFEQ L725 - true: 27,0,0| Number of FF evals: 1029
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 251 IFNE L2024 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I3 Branch 143 IFNONNULL L1237 - true: 6,0,0| Number of FF evals: 236
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: I13 Branch 212 IFNULL L1805 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 251 IFNE L2024 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I75 Branch 73 IFEQ L694 - true: 82,0,0| Number of FF evals: 1025
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I41 Branch 124 IFNE L1106 - true: 36,0,0| Number of FF evals: 482
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: Line 2125: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.contains(Ljava/lang/Object;)Z: Line 1502: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I17 Branch 122 IF_ICMPLE L1101 - false: 32,0,0| Number of FF evals: 2196
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 123 IF_ICMPGT L1101 - false: 34,0,0| Number of FF evals: 1612
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: I26 Branch 147 IF_ICMPGE L2422 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 123 IF_ICMPGT L1101 - true: 34,0,0| Number of FF evals: 779
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 94 IFNE L893 - false: 12,0,0| Number of FF evals: 2462
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I39 Branch 237 IFNULL L1921 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isFromInclusive()Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: I26 Branch 147 IF_ICMPGE L2422 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I69 Branch 126 IFEQ L1117 - true: 32,0,0| Number of FF evals: 2159
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I33 Branch 69 IFEQ L665 - true: 177,0,0| Number of FF evals: 1340
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I39 Branch 237 IFNULL L1921 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()Ljava/lang/Object;: Line 1480: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1465: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1464: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1967: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: I22 Branch 220 IFNE L1830 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1974: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1466: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I7 Branch 241 IF_ICMPEQ L2290 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: I22 Branch 220 IFNE L1830 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getFromKey()Ljava/lang/Object;: Line 2238: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Z: I8 Branch 145 IF_ICMPGT L1247 - true: 2,0,0| Number of FF evals: 1588
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1660: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 115 IFNE L1057 - false: 65,0,0| Number of FF evals: 2002
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1803: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1802: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1805: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1984: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I105 Branch 6 IFNE L158 - true: 41734,36281,29835| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1987: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1988: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(Ljava/lang/Object;Z)Z: root-Branch: 85960,75257,0| Number of FF evals: 42383
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I71 Branch 42 IFNE L438 - false: 77,0,0| Number of FF evals: 995
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()I: Line 1497: 85960,75257,44625| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1985: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I30 Branch 87 IFNULL L802 - false: 322,0,0| Number of FF evals: 836
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I71 Branch 42 IFNE L438 - true: 14,0,0| Number of FF evals: 1040
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1995: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1975: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1994: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1999: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I4 Branch 270 IFNULL L2081 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I30 Branch 53 IFNE L533 - false: 20831,18851,0| Number of FF evals: 35752
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I4 Branch 270 IFNULL L2081 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()Ljava/util/Iterator;: Line 1449: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isToInclusive()Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I28 Branch 111 IFEQ L1024 - true: 258,0,0| Number of FF evals: 3975
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I28 Branch 111 IFEQ L1024 - false: 298,0,0| Number of FF evals: 1250
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I68 Branch 31 IFEQ L370 - false: 25203,22905,135| Number of FF evals: 42386
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I48 Branch 41 IFEQ L430 - true: 77,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 427: 155,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 426: 155,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 174 IF_ICMPEQ L1660 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 429: 155,0,0| Number of FF evals: 375
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: Line 1956: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: Line 2041: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 430: 155,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I118 Branch 129 IF_ICMPEQ L1134 - false: 35,0,0| Number of FF evals: 440
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 174 IF_ICMPEQ L1660 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I96 Branch 113 IFEQ L1037 - true: 6118,5320,0| Number of FF evals: 41774
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1827: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1830: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1829: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: I5 Branch 250 IFNE L2018 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1826: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: I5 Branch 250 IFNE L2018 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: I22 Branch 216 IFNE L1816 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: I4 Branch 173 IFNULL L1644 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: I22 Branch 216 IFNE L1816 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 96 IF_ICMPLE L896 - false: 118,0,0| Number of FF evals: 725
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 200 IFNE L1727 - false: 85960,75257,51507| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()I: Line 1423: 85960,75257,44655| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: I4 Branch 173 IFNULL L1644 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I63 Branch 155 IF_ICMPNE L1341 - false: 127,0,0| Number of FF evals: 1114
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getToKey()Ljava/lang/Object;: Line 1940: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I50 Branch 238 IFNULL L1922 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42383
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 200 IFNE L1727 - true: 85960,75257,51519| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I50 Branch 238 IFNULL L1922 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()I: Line 2285: 85960,75257,44634| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Values;)V: Line 1525: 12627,1924,0| Number of FF evals: 6215
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 96 IF_ICMPLE L896 - true: 135,0,0| Number of FF evals: 986
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I4 Branch 235 IFNONNULL L1911 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2419: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I17 Branch 67 IFNE L658 - false: 335,0,0| Number of FF evals: 1692
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 38 IFNONNULL L420 - false: 173,0,0| Number of FF evals: 619
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1816: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I164 Branch 158 IFNULL L1362 - false: 151,0,0| Number of FF evals: 1472
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I17 Branch 67 IFNE L658 - true: 1997,932,201| Number of FF evals: 9743
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1815: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1812: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1813: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2368: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I4 Branch 235 IFNONNULL L1911 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2367: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2366: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: Line 1718: 85960,75257,51911| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2365: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2427: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2420: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2421: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2422: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.mapIterator()Lorg/apache/commons/collections4/OrderedMapIterator;: Line 824: 45,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2364: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2363: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2362: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 103 IFNE L961 - true: 299,0,0| Number of FF evals: 4393
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I91 Branch 128 IF_ICMPGE L1127 - false: 56,0,0| Number of FF evals: 528
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I96 Branch 113 IFEQ L1037 - false: 6118,5320,0| Number of FF evals: 41774
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()Ljava/util/Iterator;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: I4 Branch 268 IFNULL L2076 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I32 Branch 29 IFNE L365 - false: 18,0,0| Number of FF evals: 914
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I44 Branch 30 IFEQ L366 - true: 18,0,0| Number of FF evals: 490
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: I4 Branch 268 IFNULL L2076 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I71 Branch 98 IFEQ L912 - true: 23236,21141,1285| Number of FF evals: 42386
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I44 Branch 30 IFEQ L366 - false: 18,0,0| Number of FF evals: 657
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: Line 2024: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I30 Branch 90 IFNULL L815 - false: 266,0,0| Number of FF evals: 545
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: Line 2076: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 103 IFNE L961 - false: 390,0,0| Number of FF evals: 2940
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()Ljava/lang/Object;: root-Branch: 12627,1924,0| Number of FF evals: 6215
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: Line 1590: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: I5 Branch 247 IF_ICMPEQ L2004 - true: 85960,75257,44603| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 162 IFNE L1400 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I43 Branch 193 IFNULL L2173 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I16 Branch 133 IF_ICMPLE L1169 - false: 47,0,0| Number of FF evals: 404
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I105 Branch 119 IFEQ L1078 - true: 17647,15976,500| Number of FF evals: 42389
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isFromInclusive()Z: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I127 Branch 58 IF_ICMPLE L563 - false: 312,0,0| Number of FF evals: 930
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I105 Branch 119 IFEQ L1078 - false: 17647,15976,501| Number of FF evals: 42389
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 88 IFNULL L804 - false: 1027,0,0| Number of FF evals: 2161
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isInternalNode()Z: I9 Branch 151 IF_ACMPEQ L1316 - false: 9,0,0| Number of FF evals: 1405
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: Line 1410: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()Ljava/util/Set;: Line 2233: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1761: 85960,75257,41690| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2439: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I23 Branch 68 IF_ACMPNE L661 - false: 3618,2795,477| Number of FF evals: 20525
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: Line 1753: 85960,75257,39460| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: Line 1756: 85960,75257,39617| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2081: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 88 IFNULL L804 - true: 322,0,0| Number of FF evals: 816
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getToKey()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I110 Branch 7 IFEQ L159 - true: 41734,36281,29837| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I43 Branch 193 IFNULL L2173 - false: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2434: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2435: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 162 IFNE L1400 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2433: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1774: 85960,75257,38576| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isFromInclusive()Z: Line 1945: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 52 IF_ACMPNE L531 - true: 13682,2979,0| Number of FF evals: 7340
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 52 IF_ACMPNE L531 - false: 34513,23810,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: Line 1628: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getFromKey()Ljava/lang/Object;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: I5 Branch 247 IF_ICMPEQ L2004 - false: 85960,75257,44625| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: root-Branch: 85960,75257,0| Number of FF evals: 42383
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I149 Branch 131 IF_ICMPGE L1142 - false: 528,0,0| Number of FF evals: 4667
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I37 Branch 39 IF_ICMPGT L429 - false: 155,0,0| Number of FF evals: 1507
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()I: root-Branch: 85960,75257,44657| Number of FF evals: 42383
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Z: I3 Branch 144 IFNULL L1247 - true: 180,0,0| Number of FF evals: 520
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I37 Branch 39 IF_ICMPGT L429 - true: 169,0,0| Number of FF evals: 1413
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getFromKey()Ljava/lang/Object;: Line 1935: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 961: 299,0,0| Number of FF evals: 197
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isExternalNode()Z: I4 Branch 152 IFNE L1323 - true: 11,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isToInclusive()Z: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: I4 Branch 170 IFNONNULL L1620 - true: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I139 Branch 59 IF_ACMPNE L572 - false: 63,0,0| Number of FF evals: 223
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I165 Branch 61 IF_ACMPNE L581 - false: 312,0,0| Number of FF evals: 1545
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 959: 299,0,0| Number of FF evals: 197
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Ljava/lang/Object;)Z: I37 Branch 34 IFEQ L386 - false: 326,0,0| Number of FF evals: 1147
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: I4 Branch 170 IFNONNULL L1620 - false: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I80 Branch 139 IFNONNULL L1211 - true: 114,0,0| Number of FF evals: 1662
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()Ljava/util/Set;: I4 Branch 36 IFNONNULL L399 - true: 448,0,0| Number of FF evals: 890
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I79 Branch 54 IF_ACMPNE L545 - false: 312,0,0| Number of FF evals: 1173
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 201 IFNE L1736 - false: 85960,75257,33220| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 201 IFNE L1736 - true: 85960,75257,33216| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2163: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: Line 2325: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I13 Branch 195 IFNONNULL L2185 - true: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I13 Branch 195 IFNONNULL L2185 - false: 85960,75257,66474| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I107 Branch 142 IFEQ L1217 - false: 3512,3021,122| Number of FF evals: 40944
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 2220: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I57 Branch 106 IFEQ L974 - true: 8620,7381,113| Number of FF evals: 42280
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I32 Branch 192 IFNULL L2172 - false: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 2381: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I32 Branch 192 IFNULL L2172 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I58 Branch 125 IFEQ L1114 - true: 32,0,0| Number of FF evals: 2033
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I41 Branch 231 IFNULL L1901 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I41 Branch 231 IFNULL L1901 - false: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2173: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: Line 1736: 85960,75257,33396| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2172: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2166: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2165: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1890: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I69 Branch 138 IF_ACMPNE L1207 - true: 114,0,0| Number of FF evals: 1662
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()Ljava/util/Collection;: I4 Branch 37 IFNONNULL L407 - false: 45,0,0| Number of FF evals: 694
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: Line 1508: 85960,75257,42884| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1891: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Ljava/lang/Object;ZLjava/lang/Object;Z)V: I46 Branch 228 IFLE L1878 - true: 24,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I110 Branch 156 IFNULL L1351 - true: 1863,0,0| Number of FF evals: 3108
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()Ljava/util/Collection;: I4 Branch 37 IFNONNULL L407 - true: 2334,0,0| Number of FF evals: 3636
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 65 IFNULL L657 - true: 1432,0,0| Number of FF evals: 2146
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1902: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1901: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: Line 1507: 85960,75257,42894| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()Ljava/util/Set;: root-Branch: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()I: Line 1454: 85960,75257,44557| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.contains(Ljava/lang/Object;)Z: root-Branch: 85960,75257,0| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 91 IFNULL L817 - false: 423,0,0| Number of FF evals: 757
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;)V: Line 1609: 45,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 91 IFNULL L817 - true: 266,0,0| Number of FF evals: 527
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 26 IFNONNULL L340 - false: 45,0,0| Number of FF evals: 307
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 204 IFNE L1761 - true: 85960,75257,41664| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 26 IFNONNULL L340 - true: 133,0,0| Number of FF evals: 236
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 47 IF_ACMPNE L499 - false: 28580,25044,3414| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 204 IFNE L1761 - false: 85960,75257,41719| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 1636: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 339: 45,0,0| Number of FF evals: 81
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 340: 45,0,0| Number of FF evals: 81
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()Ljava/lang/Object;: Line 1649: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isFromInclusive()Z: Line 2248: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I93 Branch 140 IFEQ L1215 - true: 114,0,0| Number of FF evals: 882
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: root-Branch: 85960,75257,42941| Number of FF evals: 42384
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I69 Branch 138 IF_ACMPNE L1207 - false: 333,0,0| Number of FF evals: 2195
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I93 Branch 140 IFEQ L1215 - false: 260,0,0| Number of FF evals: 2321
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I116 Branch 76 IF_ACMPNE L714 - false: 6569,2924,763| Number of FF evals: 9972
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I76 Branch 5 IFEQ L149 - false: 12733,11117,5182| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(Ljava/lang/Object;)Z: Line 2204: 85960,75257,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 176 IF_ICMPEQ L1562 - false: 20596,17536,0| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I5 Branch 202 IFNE L1745 - false: 85960,75257,66316| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I52 Branch 232 IFNULL L1902 - true: 85960,75257,70539| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I152 Branch 60 IF_ACMPNE L576 - true: 1548,0,0| Number of FF evals: 3344
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 86 IFNONNULL L798 - false: 518,0,0| Number of FF evals: 1200
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()Ljava/util/Comparator;: root-Branch: 85960,75257,6807| Number of FF evals: 42383
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I5 Branch 202 IFNE L1745 - true: 85960,75257,66322| Number of FF evals: 42385
Number of times BBC is called, activated, and useful for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I52 Branch 232 IFNULL L1902 - false: 85960,75257,70539| Number of FF evals: 42385
* Search finished after 602s and 895 generations, 408795 statements, best individual has fitness: 1455.0
* Minimizing test suite
[MASTER] 14:30:45.453 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 57%
* Total number of goals: 822
* Number of covered goals: 465
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 602
* Number of covered goals: 306
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 569
* Number of covered goals: 314
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 186
* Number of covered goals: 115
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 41%
* Total number of goals: 116
* Number of covered goals: 47
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 41%
* Total number of goals: 116
* Number of covered goals: 47
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 602
* Number of covered goals: 303
* Generated 173 tests with total length 2593
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:31:27.548 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6667666666666666% of time used, but only 13/173 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 14:31:30.521 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1628260290456/org/apache/commons/collections4/trie/AbstractPatriciaTrie_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1628260290456/org/apache/commons/collections4/trie/AbstractPatriciaTrie_21_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:30.521 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:30.521 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:30.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Integer>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>,java.lang.Integer>>: 118
[MASTER] 14:31:30.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_21_1628260290456/org/apache/commons/collections4/trie/AbstractPatriciaTrie_21_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:30.531 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:30.532 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1628260290456/org/apache/commons/collections4/trie/AbstractPatriciaTrie_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:30 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import java.util.SortedMap;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_21_tmp__ESTest extends AbstractPatriciaTrie_21_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       Integer integer0 = new Integer(0);
31:       assertEquals(0, (int)integer0);
32:       assertNotNull(integer0);
33:       
34:       AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "P", 0);
35:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
36:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
37:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
38:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
39:       
40:       AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "?O;@=rX=5){2", 0);
41:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
43:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
44:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
45:       
46:       Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
47:       abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;
48:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
49:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
50:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
51:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
52:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
53:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
54:       assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isInternalNode());
55:       assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isEmpty());
56:       assertTrue(abstractPatriciaTrie_TrieEntry1.parent.isExternalNode());
57:       
58:       abstractPatriciaTrie_TrieEntry1.value = "?O;@=rX=5){2";
59:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
60:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
61:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
62:       
63:       Comparator<Map.Entry<String, Object>> comparator1 = Map.Entry.comparingByKey();
64:       assertNotNull(comparator1);
65:       
66:       Comparator<Map.Entry<Integer, Object>> comparator2 = (Comparator<Map.Entry<Integer, Object>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
67:       assertNotNull(comparator2);
68:       
69:       abstractPatriciaTrie_TrieEntry0.predecessor = abstractPatriciaTrie_TrieEntry1;
70:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
71:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
72:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
73:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
74:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
75:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
76:       assertFalse(abstractPatriciaTrie_TrieEntry0.predecessor.isInternalNode());
77:       assertFalse(abstractPatriciaTrie_TrieEntry0.predecessor.isEmpty());
78:       assertTrue(abstractPatriciaTrie_TrieEntry0.predecessor.isExternalNode());
79:       
80:       Comparator<Integer> comparator3 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
81:       Integer integer1 = new Integer(0);
82:       assertTrue(integer1.equals((Object)integer0));
83:       assertEquals(0, (int)integer1);
84:       assertNotNull(integer1);
85:       
86:       String string0 = abstractPatriciaTrie_TrieEntry1.setKeyValue(integer1, "W_xHYa8i");
87:       assertTrue(integer0.equals((Object)integer1));
88:       assertTrue(integer1.equals((Object)integer0));
89:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
90:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
91:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
92:       assertEquals("?O;@=rX=5){2", string0);
93:       assertNotNull(string0);
94:       
95:       abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;
96:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
97:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
98:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
99:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
100:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
101:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
102:       assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isInternalNode());
103:       assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isEmpty());
104:       assertTrue(abstractPatriciaTrie_TrieEntry1.parent.isExternalNode());
105:       
106:       Object object0 = patriciaTrie0.put("P", comparator1);
107:       assertNull(object0);
108:       
109:       String string1 = abstractPatriciaTrie_TrieEntry0.setValue("");
110:       assertTrue(integer0.equals((Object)integer1));
111:       assertFalse(string1.equals((Object)string0));
112:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
113:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
114:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
115:       assertEquals("P", string1);
116:       assertNotNull(string1);
117:       
118:       Comparator<Map.Entry<AbstractMap.SimpleEntry<Integer, String>, Integer>> comparator4 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<Integer, String>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator3);
119:       assertNotNull(comparator4);
120:       
121:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isExternalNode();
122:       assertTrue(integer0.equals((Object)integer1));
123:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
124:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
125:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
126:       assertTrue(boolean0);
127:       
128:       SortedMap<String, Object> sortedMap0 = patriciaTrie0.prefixMap("");
129:       assertFalse(sortedMap0.isEmpty());
130:       assertEquals(1, sortedMap0.size());
131:       assertNotNull(sortedMap0);
132:   }
133: }
RegularFileObject[/tmp/EvoSuite_21_1628260290456/org/apache/commons/collections4/trie/AbstractPatriciaTrie_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:30 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_21_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_21_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:30.533 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "P", 0);
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "?O;@=rX=5){2", 0);
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.parent.isExternalNode());

abstractPatriciaTrie_TrieEntry1.value = "?O;@=rX=5){2";
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());

Comparator<Map.Entry<String, Object>> comparator1 = Map.Entry.comparingByKey();
assertNotNull(comparator1);

Comparator<Map.Entry<Integer, Object>> comparator2 = (Comparator<Map.Entry<Integer, Object>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
assertNotNull(comparator2);

abstractPatriciaTrie_TrieEntry0.predecessor = abstractPatriciaTrie_TrieEntry1;
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.predecessor.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.predecessor.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.predecessor.isExternalNode());

Comparator<Integer> comparator3 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Integer integer1 = new Integer(0);
assertTrue(integer1.equals((Object)integer0));
assertEquals(0, (int)integer1);
assertNotNull(integer1);

String string0 = abstractPatriciaTrie_TrieEntry1.setKeyValue(integer1, "W_xHYa8i");
assertTrue(integer0.equals((Object)integer1));
assertTrue(integer1.equals((Object)integer0));
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertEquals("?O;@=rX=5){2", string0);
assertNotNull(string0);

abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.parent.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.parent.isExternalNode());

Object object0 = patriciaTrie0.put("P", comparator1);
assertNull(object0);

String string1 = abstractPatriciaTrie_TrieEntry0.setValue("");
assertTrue(integer0.equals((Object)integer1));
assertFalse(string1.equals((Object)string0));
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("P", string1);
assertNotNull(string1);

Comparator<Map.Entry<AbstractMap.SimpleEntry<Integer, String>, Integer>> comparator4 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<Integer, String>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator3);
assertNotNull(comparator4);

boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isExternalNode();
assertTrue(integer0.equals((Object)integer1));
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(boolean0);

SortedMap<String, Object> sortedMap0 = patriciaTrie0.prefixMap("");
assertFalse(sortedMap0.isEmpty());
assertEquals(1, sortedMap0.size());
assertNotNull(sortedMap0);


[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_25_1628260290628/org/apache/commons/collections4/trie/AbstractPatriciaTrie_25_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_25_1628260290628/org/apache/commons/collections4/trie/AbstractPatriciaTrie_25_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.String>>: 135
[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_25_1628260290628/org/apache/commons/collections4/trie/AbstractPatriciaTrie_25_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:30.663 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:30.664 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_25_1628260290628/org/apache/commons/collections4/trie/AbstractPatriciaTrie_25_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:30 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import java.util.SortedMap;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_25_tmp__ESTest extends AbstractPatriciaTrie_25_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       Object object0 = patriciaTrie0.put("z.6[-;", "z.6[-;");
31:       assertNull(object0);
32:       
33:       AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(patriciaTrie0, "eT/y=zu@HH5.F,O[IK", (-1210));
34:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
35:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
36:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
37:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
38:       
39:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
40:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
43:       assertFalse(boolean0);
44:       
45:       Object object1 = patriciaTrie0.put("z.6[-;", abstractPatriciaTrie_TrieEntry0);
46:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
47:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
48:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
49:       assertEquals("z.6[-;", object1);
50:       assertNotNull(object1);
51:       
52:       abstractPatriciaTrie_TrieEntry0.key = null;
53:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
54:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
55:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
56:       
57:       abstractPatriciaTrie_TrieEntry0.value = "1s:Sm";
58:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
59:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
60:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
61:       
62:       Object object2 = patriciaTrie0.put("eT/y=zu@HH5.F,O[IK", (Object) null);
63:       assertNull(object2);
64:       
65:       abstractPatriciaTrie_TrieEntry0.bitIndex = 1663;
66:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
67:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
68:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
69:       
70:       AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object>((AbstractMap.SimpleImmutableEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry0, 2);
71:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
72:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
73:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
74:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
75:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
76:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
77:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
78:       
79:       boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
80:       assertFalse(boolean1 == boolean0);
81:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
82:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
83:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
84:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
85:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
86:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
87:       assertTrue(boolean1);
88:       
89:       PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
90:       assertNotNull(patriciaTrie1);
91:       
92:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(abstractPatriciaTrie_TrieEntry0);
93:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
94:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
95:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
96:       assertNotNull(abstractMap_SimpleEntry0);
97:       
98:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = patriciaTrie1.put("`{%;5%F;kvn|J1", abstractMap_SimpleEntry0);
99:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
100:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
101:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
102:       assertNull(abstractMap_SimpleEntry1);
103:       
104:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Object, String>("1s:Sm", "keyAnalyzer");
105:       assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
106:       assertNotNull(abstractMap_SimpleEntry2);
107:       
108:       Comparator<Map.Entry<Object, String>> comparator0 = Map.Entry.comparingByValue();
109:       assertNotNull(comparator0);
110:       
111:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry3 = patriciaTrie1.put("1s:Sm", abstractMap_SimpleEntry2);
112:       assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
113:       assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
114:       assertNull(abstractMap_SimpleEntry3);
115:       
116:       SortedMap<String, AbstractMap.SimpleEntry<Object, String>> sortedMap0 = patriciaTrie1.headMap("");
117:       assertEquals(0, sortedMap0.size());
118:       assertTrue(sortedMap0.isEmpty());
119:       assertNotNull(sortedMap0);
120:       
121:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.higherEntry("z.6[-;");
122:       assertNull(abstractPatriciaTrie_TrieEntry2);
123:       
124:       Integer integer0 = new Integer(0);
125:       assertEquals(0, (int)integer0);
126:       assertNotNull(integer0);
127:       
128:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry4 = new AbstractMap.SimpleEntry<String, Integer>("I^:d^o0M)is", integer0);
129:       assertNotNull(abstractMap_SimpleEntry4);
130:       
131:       AbstractMap.SimpleEntry<Object, Integer> abstractMap_SimpleEntry5 = new AbstractMap.SimpleEntry<Object, Integer>(abstractMap_SimpleEntry4);
132:       assertNotNull(abstractMap_SimpleEntry5);
133:       
134:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
135:       Comparator<Map.Entry<Integer, String>> comparator2 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator1);
136:       assertNotNull(comparator2);
137:       
138:       AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>>("z.6[-;", abstractMap_SimpleEntry5, 1663);
139:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
140:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
141:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
142:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
143:       
144:       boolean boolean2 = abstractPatriciaTrie_TrieEntry3.isExternalNode();
145:       assertFalse(boolean2 == boolean0);
146:       assertTrue(boolean2 == boolean1);
147:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
148:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
149:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
150:       assertTrue(boolean2);
151:   }
152: }
RegularFileObject[/tmp/EvoSuite_25_1628260290628/org/apache/commons/collections4/trie/AbstractPatriciaTrie_25_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:30 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_25_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_25_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_25_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_25_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:30.666 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie0);

Object object0 = patriciaTrie0.put("z.6[-;", "z.6[-;");
assertNull(object0);

AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(patriciaTrie0, "eT/y=zu@HH5.F,O[IK", (-1210));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(boolean0);

Object object1 = patriciaTrie0.put("z.6[-;", abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertEquals("z.6[-;", object1);
assertNotNull(object1);

abstractPatriciaTrie_TrieEntry0.key = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());

abstractPatriciaTrie_TrieEntry0.value = "1s:Sm";
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());

Object object2 = patriciaTrie0.put("eT/y=zu@HH5.F,O[IK", (Object) null);
assertNull(object2);

abstractPatriciaTrie_TrieEntry0.bitIndex = 1663;
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());

AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object>((AbstractMap.SimpleImmutableEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry0, 2);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
assertFalse(boolean1 == boolean0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(boolean1);

PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
assertNotNull(patriciaTrie1);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractMap_SimpleEntry0);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = patriciaTrie1.put("`{%;5%F;kvn|J1", abstractMap_SimpleEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNull(abstractMap_SimpleEntry1);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Object, String>("1s:Sm", "keyAnalyzer");
assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
assertNotNull(abstractMap_SimpleEntry2);

Comparator<Map.Entry<Object, String>> comparator0 = Map.Entry.comparingByValue();
assertNotNull(comparator0);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry3 = patriciaTrie1.put("1s:Sm", abstractMap_SimpleEntry2);
assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
assertNull(abstractMap_SimpleEntry3);

SortedMap<String, AbstractMap.SimpleEntry<Object, String>> sortedMap0 = patriciaTrie1.headMap("");
assertEquals(0, sortedMap0.size());
assertTrue(sortedMap0.isEmpty());
assertNotNull(sortedMap0);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.higherEntry("z.6[-;");
assertNull(abstractPatriciaTrie_TrieEntry2);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry4 = new AbstractMap.SimpleEntry<String, Integer>("I^:d^o0M)is", integer0);
assertNotNull(abstractMap_SimpleEntry4);

AbstractMap.SimpleEntry<Object, Integer> abstractMap_SimpleEntry5 = new AbstractMap.SimpleEntry<Object, Integer>(abstractMap_SimpleEntry4);
assertNotNull(abstractMap_SimpleEntry5);

Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, String>> comparator2 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator1);
assertNotNull(comparator2);

AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>>("z.6[-;", abstractMap_SimpleEntry5, 1663);
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

boolean boolean2 = abstractPatriciaTrie_TrieEntry3.isExternalNode();
assertFalse(boolean2 == boolean0);
assertTrue(boolean2 == boolean1);
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertTrue(boolean2);


[MASTER] 14:31:31.295 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1628260291270/org/apache/commons/collections4/trie/AbstractPatriciaTrie_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1628260291270/org/apache/commons/collections4/trie/AbstractPatriciaTrie_40_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:31.295 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.295 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.296 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>,java.util.AbstractMap.SimpleEntry<java.lang.Object,java.lang.Object>>>: 50
[MASTER] 14:31:31.296 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_40_1628260291270/org/apache/commons/collections4/trie/AbstractPatriciaTrie_40_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:31.296 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:31.296 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1628260291270/org/apache/commons/collections4/trie/AbstractPatriciaTrie_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:31 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_40_tmp__ESTest extends AbstractPatriciaTrie_40_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(" m+Q!0", patriciaTrie0);
31:       assertNotNull(abstractMap_SimpleEntry0);
32:       
33:       int int0 = 0;
34:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>>(" m+Q!0", abstractMap_SimpleEntry0, 0);
35:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
36:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
37:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
38:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
39:       
40:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isInternalNode();
41:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
42:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
43:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
44:       assertFalse(boolean0);
45:       
46:       PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
47:       assertNotNull(patriciaTrie1);
48:       
49:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
50:       Comparator<Map.Entry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleEntry<Object, Object>>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleEntry<Object, Object>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<Object, Object>>) comparator0);
51:       assertNotNull(comparator1);
52:       
53:       // Undeclared exception!
54:       try { 
55:         patriciaTrie1.remove((Object) abstractMap_SimpleEntry0, (Object) patriciaTrie0);
56:         fail("Expecting exception: ClassCastException");
57:       
58:       } catch(ClassCastException e) {
59:          //
60:          // no message in exception (getMessage() returned null)
61:          //
62:       }
63:   }
64: }
RegularFileObject[/tmp/EvoSuite_40_1628260291270/org/apache/commons/collections4/trie/AbstractPatriciaTrie_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:31 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_40_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_40_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:31.296 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
assertNotNull(patriciaTrie0);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(" m+Q!0", patriciaTrie0);
assertNotNull(abstractMap_SimpleEntry0);

int int0 = 0;
AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>>(" m+Q!0", abstractMap_SimpleEntry0, 0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isInternalNode();
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(boolean0);

PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie1);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleEntry<Object, Object>>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleEntry<Object, Object>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<Object, Object>>) comparator0);
assertNotNull(comparator1);

patriciaTrie1.remove((Object) abstractMap_SimpleEntry0, (Object) patriciaTrie0);

[MASTER] 14:31:31.475 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_48_1628260291448/org/apache/commons/collections4/trie/AbstractPatriciaTrie_48_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_48_1628260291448/org/apache/commons/collections4/trie/AbstractPatriciaTrie_48_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:31.475 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.475 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 63
[MASTER] 14:31:31.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_48_1628260291448/org/apache/commons/collections4/trie/AbstractPatriciaTrie_48_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:31.476 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:31.476 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_48_1628260291448/org/apache/commons/collections4/trie/AbstractPatriciaTrie_48_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:31 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.apache.commons.collections4.trie.PatriciaTrie;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class AbstractPatriciaTrie_48_tmp__ESTest extends AbstractPatriciaTrie_48_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
27:       assertNotNull(patriciaTrie0);
28:       
29:       PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
30:       assertTrue(patriciaTrie1.equals((Object)patriciaTrie0));
31:       assertNotNull(patriciaTrie1);
32:       
33:       PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
34:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
35:       assertTrue(patriciaTrie1.equals((Object)patriciaTrie0));
36:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
37:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie0));
38:       assertNotNull(patriciaTrie2);
39:       
40:       Integer integer0 = new Integer((-851));
41:       assertEquals((-851), (int)integer0);
42:       assertNotNull(integer0);
43:       
44:       Integer integer1 = new Integer(0);
45:       assertFalse(integer1.equals((Object)integer0));
46:       assertEquals(0, (int)integer1);
47:       assertNotNull(integer1);
48:       
49:       AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(integer0, integer1, 104);
50:       assertFalse(integer0.equals((Object)integer1));
51:       assertFalse(integer1.equals((Object)integer0));
52:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
53:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
54:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
55:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
56:       
57:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>("Trie[", patriciaTrie0);
58:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
59:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
60:       assertNotNull(abstractMap_SimpleEntry0);
61:       
62:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
63:       Comparator<Map.Entry<Object, String>> comparator1 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
64:       assertNotNull(comparator1);
65:       
66:       Integer integer2 = new Integer(0);
67:       assertTrue(integer2.equals((Object)integer1));
68:       assertFalse(integer2.equals((Object)integer0));
69:       assertEquals(0, (int)integer2);
70:       assertNotNull(integer2);
71:       
72:       Object object0 = abstractMap_SimpleEntry0.setValue((Object) null);
73:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
74:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
75:       assertNotSame(patriciaTrie0, patriciaTrie2);
76:       assertNotSame(patriciaTrie0, patriciaTrie1);
77:       assertNotNull(object0);
78:       
79:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>>("", abstractMap_SimpleEntry0, (-851));
80:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
81:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
82:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
83:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
84:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
85:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
86:       
87:       Integer integer3 = new Integer(0);
88:       assertTrue(integer3.equals((Object)integer2));
89:       assertTrue(integer3.equals((Object)integer1));
90:       assertFalse(integer3.equals((Object)integer0));
91:       assertEquals(0, (int)integer3);
92:       assertNotNull(integer3);
93:       
94:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(integer3, "D$]RU~n;v^SRER");
95:       assertTrue(integer3.equals((Object)integer2));
96:       assertTrue(integer3.equals((Object)integer1));
97:       assertFalse(integer3.equals((Object)integer0));
98:       assertNotNull(abstractMap_SimpleEntry1);
99:       
100:       AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(abstractMap_SimpleEntry1);
101:       assertTrue(integer3.equals((Object)integer2));
102:       assertTrue(integer3.equals((Object)integer1));
103:       assertFalse(integer3.equals((Object)integer0));
104:       assertNotNull(abstractMap_SimpleImmutableEntry0);
105:       
106:       AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>>(object0, abstractMap_SimpleImmutableEntry0, 104);
107:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
108:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
109:       assertTrue(integer3.equals((Object)integer2));
110:       assertTrue(integer3.equals((Object)integer1));
111:       assertFalse(integer3.equals((Object)integer0));
112:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
113:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
114:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
115:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
116:       
117:       Object object1 = abstractPatriciaTrie_TrieEntry2.getKey();
118:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
119:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
120:       assertTrue(integer3.equals((Object)integer2));
121:       assertTrue(integer3.equals((Object)integer1));
122:       assertFalse(integer3.equals((Object)integer0));
123:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
124:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
125:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
126:       assertSame(object1, object0);
127:       assertNotSame(patriciaTrie0, patriciaTrie2);
128:       assertNotSame(patriciaTrie0, patriciaTrie1);
129:       assertSame(object0, object1);
130:       assertNotNull(object1);
131:       
132:       PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie0);
133:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
134:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
135:       assertNotNull(patriciaTrie3);
136:       
137:       Object object2 = patriciaTrie3.put("", "");
138:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
139:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
140:       assertNotSame(patriciaTrie0, patriciaTrie2);
141:       assertNotSame(patriciaTrie0, patriciaTrie1);
142:       assertNull(object2);
143:       
144:       int int0 = patriciaTrie3.size();
145:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
146:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
147:       assertEquals(1, int0);
148:       assertNotSame(patriciaTrie0, patriciaTrie2);
149:       assertNotSame(patriciaTrie0, patriciaTrie1);
150:       
151:       String string0 = patriciaTrie3.firstKey();
152:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
153:       assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
154:       assertEquals("", string0);
155:       assertNotSame(patriciaTrie0, patriciaTrie2);
156:       assertNotSame(patriciaTrie0, patriciaTrie1);
157:       assertNotNull(string0);
158:   }
159: }
RegularFileObject[/tmp/EvoSuite_48_1628260291448/org/apache/commons/collections4/trie/AbstractPatriciaTrie_48_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:31 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_48_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_48_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_48_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_48_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:31.478 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
assertNotNull(patriciaTrie0);

PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
assertTrue(patriciaTrie1.equals((Object)patriciaTrie0));
assertNotNull(patriciaTrie1);

PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie1.equals((Object)patriciaTrie0));
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie2.equals((Object)patriciaTrie0));
assertNotNull(patriciaTrie2);

Integer integer0 = new Integer((-851));
assertEquals((-851), (int)integer0);
assertNotNull(integer0);

Integer integer1 = new Integer(0);
assertFalse(integer1.equals((Object)integer0));
assertEquals(0, (int)integer1);
assertNotNull(integer1);

AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(integer0, integer1, 104);
assertFalse(integer0.equals((Object)integer1));
assertFalse(integer1.equals((Object)integer0));
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>("Trie[", patriciaTrie0);
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertNotNull(abstractMap_SimpleEntry0);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator1 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
assertNotNull(comparator1);

Integer integer2 = new Integer(0);
assertTrue(integer2.equals((Object)integer1));
assertFalse(integer2.equals((Object)integer0));
assertEquals(0, (int)integer2);
assertNotNull(integer2);

Object object0 = abstractMap_SimpleEntry0.setValue((Object) null);
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertNotSame(patriciaTrie0, patriciaTrie2);
assertNotSame(patriciaTrie0, patriciaTrie1);
assertNotNull(object0);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, Object>>("", abstractMap_SimpleEntry0, (-851));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Integer integer3 = new Integer(0);
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertEquals(0, (int)integer3);
assertNotNull(integer3);

AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(integer3, "D$]RU~n;v^SRER");
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertNotNull(abstractMap_SimpleEntry1);

AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(abstractMap_SimpleEntry1);
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertNotNull(abstractMap_SimpleImmutableEntry0);

AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>>(object0, abstractMap_SimpleImmutableEntry0, 104);
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

Object object1 = abstractPatriciaTrie_TrieEntry2.getKey();
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertSame(object1, object0);
assertNotSame(patriciaTrie0, patriciaTrie2);
assertNotSame(patriciaTrie0, patriciaTrie1);
assertSame(object0, object1);
assertNotNull(object1);

PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie0);
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertNotNull(patriciaTrie3);

Object object2 = patriciaTrie3.put("", "");
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertNotSame(patriciaTrie0, patriciaTrie2);
assertNotSame(patriciaTrie0, patriciaTrie1);
assertNull(object2);

int int0 = patriciaTrie3.size();
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertEquals(1, int0);
assertNotSame(patriciaTrie0, patriciaTrie2);
assertNotSame(patriciaTrie0, patriciaTrie1);

String string0 = patriciaTrie3.firstKey();
assertTrue(patriciaTrie0.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie0.equals((Object)patriciaTrie2));
assertEquals("", string0);
assertNotSame(patriciaTrie0, patriciaTrie2);
assertNotSame(patriciaTrie0, patriciaTrie1);
assertNotNull(string0);


[MASTER] 14:31:31.744 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1628260291718/org/apache/commons/collections4/trie/AbstractPatriciaTrie_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1628260291718/org/apache/commons/collections4/trie/AbstractPatriciaTrie_58_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:31.744 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.744 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:31.745 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.String>>: 140
[MASTER] 14:31:31.745 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_58_1628260291718/org/apache/commons/collections4/trie/AbstractPatriciaTrie_58_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:31.745 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:31.745 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1628260291718/org/apache/commons/collections4/trie/AbstractPatriciaTrie_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:31 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import java.util.SortedMap;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_58_tmp__ESTest extends AbstractPatriciaTrie_58_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       Object object0 = patriciaTrie0.put("z.6[-;", "z.6[-;");
31:       assertNull(object0);
32:       
33:       AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(patriciaTrie0, "eT/y=zu@HH5.F,O[IK", (-1210));
34:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
35:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
36:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
37:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
38:       
39:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
40:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
43:       assertFalse(boolean0);
44:       
45:       Object object1 = patriciaTrie0.put("z.6[-;", abstractPatriciaTrie_TrieEntry0);
46:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
47:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
48:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
49:       assertEquals("z.6[-;", object1);
50:       assertNotNull(object1);
51:       
52:       abstractPatriciaTrie_TrieEntry0.key = null;
53:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
54:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
55:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
56:       
57:       abstractPatriciaTrie_TrieEntry0.value = "1s:Sm";
58:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
59:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
60:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
61:       
62:       Object object2 = patriciaTrie0.put("eT/y=zu@HH5.F,O[IK", (Object) null);
63:       assertNull(object2);
64:       
65:       abstractPatriciaTrie_TrieEntry0.bitIndex = 1663;
66:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
67:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
68:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
69:       
70:       AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object>((AbstractMap.SimpleImmutableEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry0, 2);
71:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
72:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
73:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
74:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
75:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
76:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
77:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
78:       
79:       boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
80:       assertFalse(boolean1 == boolean0);
81:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
82:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
83:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
84:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
85:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
86:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
87:       assertTrue(boolean1);
88:       
89:       PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
90:       assertNotNull(patriciaTrie1);
91:       
92:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(abstractPatriciaTrie_TrieEntry0);
93:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
94:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
95:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
96:       assertNotNull(abstractMap_SimpleEntry0);
97:       
98:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = patriciaTrie1.put("`{%;5%F;kvn|J1", abstractMap_SimpleEntry0);
99:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
100:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
101:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
102:       assertNull(abstractMap_SimpleEntry1);
103:       
104:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Object, String>("1s:Sm", "keyAnalyzer");
105:       assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
106:       assertNotNull(abstractMap_SimpleEntry2);
107:       
108:       Comparator<Map.Entry<Object, String>> comparator0 = Map.Entry.comparingByValue();
109:       assertNotNull(comparator0);
110:       
111:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry3 = patriciaTrie1.put("keyAnalyzer", abstractMap_SimpleEntry2);
112:       assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
113:       assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
114:       assertNull(abstractMap_SimpleEntry3);
115:       
116:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry4 = patriciaTrie1.put("1s:Sm", abstractMap_SimpleEntry2);
117:       assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
118:       assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
119:       assertNull(abstractMap_SimpleEntry4);
120:       
121:       SortedMap<String, AbstractMap.SimpleEntry<Object, String>> sortedMap0 = patriciaTrie1.headMap("");
122:       assertTrue(sortedMap0.isEmpty());
123:       assertEquals(0, sortedMap0.size());
124:       assertNotNull(sortedMap0);
125:       
126:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.higherEntry("z.6[-;");
127:       assertNull(abstractPatriciaTrie_TrieEntry2);
128:       
129:       Integer integer0 = new Integer(0);
130:       assertEquals(0, (int)integer0);
131:       assertNotNull(integer0);
132:       
133:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry5 = new AbstractMap.SimpleEntry<String, Integer>("I^:d^o0M)i", integer0);
134:       assertNotNull(abstractMap_SimpleEntry5);
135:       
136:       AbstractMap.SimpleEntry<Object, Integer> abstractMap_SimpleEntry6 = new AbstractMap.SimpleEntry<Object, Integer>(abstractMap_SimpleEntry5);
137:       assertNotNull(abstractMap_SimpleEntry6);
138:       
139:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
140:       Comparator<Map.Entry<Integer, String>> comparator2 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator1);
141:       assertNotNull(comparator2);
142:       
143:       AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>>("z.6[-;", abstractMap_SimpleEntry6, 1663);
144:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
145:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
146:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
147:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
148:       
149:       boolean boolean2 = abstractPatriciaTrie_TrieEntry3.isExternalNode();
150:       assertFalse(boolean2 == boolean0);
151:       assertTrue(boolean2 == boolean1);
152:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
153:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
154:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
155:       assertTrue(boolean2);
156:       
157:       PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
158:       assertNotNull(patriciaTrie2);
159:   }
160: }
RegularFileObject[/tmp/EvoSuite_58_1628260291718/org/apache/commons/collections4/trie/AbstractPatriciaTrie_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:31 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_58_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:31.747 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie0);

Object object0 = patriciaTrie0.put("z.6[-;", "z.6[-;");
assertNull(object0);

AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(patriciaTrie0, "eT/y=zu@HH5.F,O[IK", (-1210));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(boolean0);

Object object1 = patriciaTrie0.put("z.6[-;", abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertEquals("z.6[-;", object1);
assertNotNull(object1);

abstractPatriciaTrie_TrieEntry0.key = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());

abstractPatriciaTrie_TrieEntry0.value = "1s:Sm";
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());

Object object2 = patriciaTrie0.put("eT/y=zu@HH5.F,O[IK", (Object) null);
assertNull(object2);

abstractPatriciaTrie_TrieEntry0.bitIndex = 1663;
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());

AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<String, Object>, Object>((AbstractMap.SimpleImmutableEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry0, 2);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
assertFalse(boolean1 == boolean0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertTrue(boolean1);

PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
assertNotNull(patriciaTrie1);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotNull(abstractMap_SimpleEntry0);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = patriciaTrie1.put("`{%;5%F;kvn|J1", abstractMap_SimpleEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNull(abstractMap_SimpleEntry1);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Object, String>("1s:Sm", "keyAnalyzer");
assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
assertNotNull(abstractMap_SimpleEntry2);

Comparator<Map.Entry<Object, String>> comparator0 = Map.Entry.comparingByValue();
assertNotNull(comparator0);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry3 = patriciaTrie1.put("keyAnalyzer", abstractMap_SimpleEntry2);
assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
assertNull(abstractMap_SimpleEntry3);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry4 = patriciaTrie1.put("1s:Sm", abstractMap_SimpleEntry2);
assertFalse(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry0));
assertNotSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry0);
assertNull(abstractMap_SimpleEntry4);

SortedMap<String, AbstractMap.SimpleEntry<Object, String>> sortedMap0 = patriciaTrie1.headMap("");
assertTrue(sortedMap0.isEmpty());
assertEquals(0, sortedMap0.size());
assertNotNull(sortedMap0);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.higherEntry("z.6[-;");
assertNull(abstractPatriciaTrie_TrieEntry2);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry5 = new AbstractMap.SimpleEntry<String, Integer>("I^:d^o0M)i", integer0);
assertNotNull(abstractMap_SimpleEntry5);

AbstractMap.SimpleEntry<Object, Integer> abstractMap_SimpleEntry6 = new AbstractMap.SimpleEntry<Object, Integer>(abstractMap_SimpleEntry5);
assertNotNull(abstractMap_SimpleEntry6);

Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, String>> comparator2 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator1);
assertNotNull(comparator2);

AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleEntry<Object, Integer>>("z.6[-;", abstractMap_SimpleEntry6, 1663);
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

boolean boolean2 = abstractPatriciaTrie_TrieEntry3.isExternalNode();
assertFalse(boolean2 == boolean0);
assertTrue(boolean2 == boolean1);
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertTrue(boolean2);

PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
assertNotNull(patriciaTrie2);


[MASTER] 14:31:33.179 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_114_1628260293152/org/apache/commons/collections4/trie/AbstractPatriciaTrie_114_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_114_1628260293152/org/apache/commons/collections4/trie/AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:33.179 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.179 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.180 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.Object>>: 85
[MASTER] 14:31:33.180 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_114_1628260293152/org/apache/commons/collections4/trie/AbstractPatriciaTrie_114_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:33.180 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:33.180 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_114_1628260293152/org/apache/commons/collections4/trie/AbstractPatriciaTrie_114_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:33 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import java.util.function.BiFunction;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_114_tmp__ESTest extends AbstractPatriciaTrie_114_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       Integer integer0 = new Integer(944);
28:       assertEquals(944, (int)integer0);
29:       assertNotNull(integer0);
30:       
31:       AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "{QHNULlqQ|]BP\"'$\"", 1);
32:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
33:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
34:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
35:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
36:       
37:       Comparator<Map.Entry<Comparable<Object>, Object>> comparator0 = Map.Entry.comparingByKey();
38:       assertNotNull(comparator0);
39:       
40:       String string0 = abstractPatriciaTrie_TrieEntry0.toString();
41:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
42:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
43:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
44:       assertEquals("Entry(key=944 [1], value={QHNULlqQ|]BP\"'$\", parent=null, left=944 [1], right=null, predecessor=944 [1])", string0);
45:       assertNotNull(string0);
46:       
47:       PatriciaTrie<Comparable<Object>> patriciaTrie0 = new PatriciaTrie<Comparable<Object>>();
48:       assertNotNull(patriciaTrie0);
49:       
50:       BiFunction<Object, Object, Comparable<Object>> biFunction0 = (BiFunction<Object, Object, Comparable<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
51:       patriciaTrie0.replaceAll(biFunction0);
52:       Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
53:       doReturn((String) null).when(comparable0).toString();
54:       abstractPatriciaTrie_TrieEntry0.value = "Entry(key=944 [1], value={QHNULlqQ|]BP\"'$\", parent=null, left=944 [1], right=null, predecessor=944 [1])";
55:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
56:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
57:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
58:       
59:       AbstractPatriciaTrie.TrieEntry<String, Comparable<Object>> abstractPatriciaTrie_TrieEntry1 = patriciaTrie0.getNearestEntryForKey("", 944);
60:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
61:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
62:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
63:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
64:       
65:       Comparable<Object> comparable1 = patriciaTrie0.put("", comparable0);
66:       assertNull(comparable1);
67:       
68:       Comparable<Object> comparable2 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
69:       Comparable<Object> comparable3 = patriciaTrie0.put("", comparable2);
70:       assertFalse(comparable3.equals((Object)comparable2));
71:       assertSame(comparable3, comparable0);
72:       assertNotSame(comparable3, comparable2);
73:       assertNotNull(comparable3);
74:       
75:       Comparable<Object> comparable4 = patriciaTrie0.remove((Object) "{QHNULlqQ|]BP\"'$\"");
76:       assertNull(comparable4);
77:       
78:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractPatriciaTrie_TrieEntry0, "The offsets and lengths must be at Character boundaries");
79:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
80:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
81:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
82:       assertNotNull(abstractMap_SimpleEntry0);
83:       
84:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
85:       Comparator<Map.Entry<Integer, Object>> comparator2 = (Comparator<Map.Entry<Integer, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);
86:       assertNotNull(comparator2);
87:       
88:       AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>>(integer0, abstractMap_SimpleEntry0, 1);
89:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
90:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
91:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
92:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
93:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
94:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
95:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
96:       
97:       abstractPatriciaTrie_TrieEntry2.bitIndex = 1136;
98:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
99:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
100:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
101:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
102:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
103:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
104:       
105:       boolean boolean0 = abstractPatriciaTrie_TrieEntry2.isInternalNode();
106:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
107:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
108:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
109:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
110:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
111:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
112:       assertFalse(boolean0);
113:   }
114: }
RegularFileObject[/tmp/EvoSuite_114_1628260293152/org/apache/commons/collections4/trie/AbstractPatriciaTrie_114_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:33 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_114_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.lang.Comparable", false, AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.class.getClassLoader()));
109:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.class.getClassLoader()));
110:     mock(Class.forName("java.util.function.BiFunction", false, AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.class.getClassLoader()));
111:   }
112: 
113:   private static void resetClasses() {
114:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_114_tmp__ESTest_scaffolding.class.getClassLoader()); 
115: 
116:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
119:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
129:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
130:       "org.apache.commons.collections4.trie.PatriciaTrie",
131:       "org.apache.commons.collections4.trie.KeyAnalyzer",
132:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
140:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
141:     );
142:   }
143: }

[MASTER] 14:31:33.181 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(944);
assertEquals(944, (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, "{QHNULlqQ|]BP\"'$\"", 1);
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

Comparator<Map.Entry<Comparable<Object>, Object>> comparator0 = Map.Entry.comparingByKey();
assertNotNull(comparator0);

String string0 = abstractPatriciaTrie_TrieEntry0.toString();
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("Entry(key=944 [1], value={QHNULlqQ|]BP\"'$\", parent=null, left=944 [1], right=null, predecessor=944 [1])", string0);
assertNotNull(string0);

PatriciaTrie<Comparable<Object>> patriciaTrie0 = new PatriciaTrie<Comparable<Object>>();
assertNotNull(patriciaTrie0);

BiFunction<Object, Object, Comparable<Object>> biFunction0 = (BiFunction<Object, Object, Comparable<Object>>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
patriciaTrie0.replaceAll(biFunction0);
Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(comparable0).toString();
abstractPatriciaTrie_TrieEntry0.value = "Entry(key=944 [1], value={QHNULlqQ|]BP\"'$\", parent=null, left=944 [1], right=null, predecessor=944 [1])";
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

AbstractPatriciaTrie.TrieEntry<String, Comparable<Object>> abstractPatriciaTrie_TrieEntry1 = patriciaTrie0.getNearestEntryForKey("", 944);
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Comparable<Object> comparable1 = patriciaTrie0.put("", comparable0);
assertNull(comparable1);

Comparable<Object> comparable2 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
Comparable<Object> comparable3 = patriciaTrie0.put("", comparable2);
assertFalse(comparable3.equals((Object)comparable2));
assertSame(comparable3, comparable0);
assertNotSame(comparable3, comparable2);
assertNotNull(comparable3);

Comparable<Object> comparable4 = patriciaTrie0.remove((Object) "{QHNULlqQ|]BP\"'$\"");
assertNull(comparable4);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(abstractPatriciaTrie_TrieEntry0, "The offsets and lengths must be at Character boundaries");
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractMap_SimpleEntry0);

Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, Object>> comparator2 = (Comparator<Map.Entry<Integer, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);
assertNotNull(comparator2);

AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>>(integer0, abstractMap_SimpleEntry0, 1);
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

abstractPatriciaTrie_TrieEntry2.bitIndex = 1136;
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

boolean boolean0 = abstractPatriciaTrie_TrieEntry2.isInternalNode();
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(boolean0);


[MASTER] 14:31:33.641 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_136_1628260293617/org/apache/commons/collections4/trie/AbstractPatriciaTrie_136_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_136_1628260293617/org/apache/commons/collections4/trie/AbstractPatriciaTrie_136_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:33.641 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.641 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Comparable<java.lang.String>,java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.util.AbstractMap.SimpleImmutableEntry>>,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Comparable<java.lang.String>,java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.util.AbstractMap.SimpleImmutableEntry>>,java.lang.Integer>>: 75
[MASTER] 14:31:33.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_136_1628260293617/org/apache/commons/collections4/trie/AbstractPatriciaTrie_136_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:33.642 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:33.643 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_136_1628260293617/org/apache/commons/collections4/trie/AbstractPatriciaTrie_136_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:33 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.apache.commons.collections4.trie.PatriciaTrie;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class AbstractPatriciaTrie_136_tmp__ESTest extends AbstractPatriciaTrie_136_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Integer integer0 = new Integer(190);
27:       assertEquals(190, (int)integer0);
28:       assertNotNull(integer0);
29:       
30:       PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
31:       assertNotNull(patriciaTrie0);
32:       
33:       Integer integer1 = new Integer(190);
34:       assertTrue(integer1.equals((Object)integer0));
35:       assertEquals(190, (int)integer1);
36:       assertNotNull(integer1);
37:       
38:       PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
39:       assertNotNull(patriciaTrie1);
40:       
41:       PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);
42:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
43:       assertNotNull(patriciaTrie2);
44:       
45:       Object object0 = patriciaTrie2.put("", "");
46:       assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
47:       assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
48:       assertNotSame(patriciaTrie1, patriciaTrie2);
49:       assertNotSame(patriciaTrie2, patriciaTrie1);
50:       assertNull(object0);
51:       
52:       Integer integer2 = new Integer(1136);
53:       assertFalse(integer2.equals((Object)integer1));
54:       assertFalse(integer2.equals((Object)integer0));
55:       assertEquals(1136, (int)integer2);
56:       assertNotNull(integer2);
57:       
58:       Object object1 = patriciaTrie1.put("", integer2);
59:       assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
60:       assertFalse(integer2.equals((Object)integer1));
61:       assertFalse(integer2.equals((Object)integer0));
62:       assertNotSame(patriciaTrie1, patriciaTrie2);
63:       assertNull(object1);
64:       
65:       AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("}\n", "");
66:       assertNotNull(abstractMap_SimpleEntry0);
67:       
68:       AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, String>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, String>, String>(abstractMap_SimpleEntry0, (String) null, 1136);
69:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
70:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
71:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
72:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
73:       
74:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
75:       Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>, Integer>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>, Integer>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>>) comparator0);
76:       assertNotNull(comparator1);
77:       
78:       Object object2 = abstractPatriciaTrie_TrieEntry0.getKey();
79:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
80:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
81:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
82:       assertNotNull(object2);
83:       
84:       Object object3 = patriciaTrie2.put("}\n", object2);
85:       assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
86:       assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
87:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
88:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
89:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
90:       assertNotSame(patriciaTrie1, patriciaTrie2);
91:       assertNotSame(patriciaTrie2, patriciaTrie1);
92:       assertNull(object3);
93:       
94:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = patriciaTrie2.ceilingEntry("  ");
95:       assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
96:       assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
97:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
98:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
99:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
100:       assertNotSame(patriciaTrie1, patriciaTrie2);
101:       assertNotSame(patriciaTrie2, patriciaTrie1);
102:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
103:       
104:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.followRight(abstractPatriciaTrie_TrieEntry1);
105:       assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
106:       assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
107:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
108:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
109:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
110:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
111:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
112:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
113:       assertNotSame(patriciaTrie1, patriciaTrie2);
114:       assertNotSame(patriciaTrie2, patriciaTrie1);
115:       assertSame(abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry2);
116:       assertSame(abstractPatriciaTrie_TrieEntry2, abstractPatriciaTrie_TrieEntry1);
117:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
118:   }
119: }
RegularFileObject[/tmp/EvoSuite_136_1628260293617/org/apache/commons/collections4/trie/AbstractPatriciaTrie_136_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:33 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_136_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_136_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_136_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_136_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:33.644 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(190);
assertEquals(190, (int)integer0);
assertNotNull(integer0);

PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
assertNotNull(patriciaTrie0);

Integer integer1 = new Integer(190);
assertTrue(integer1.equals((Object)integer0));
assertEquals(190, (int)integer1);
assertNotNull(integer1);

PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie1);

PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertNotNull(patriciaTrie2);

Object object0 = patriciaTrie2.put("", "");
assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
assertNotSame(patriciaTrie1, patriciaTrie2);
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNull(object0);

Integer integer2 = new Integer(1136);
assertFalse(integer2.equals((Object)integer1));
assertFalse(integer2.equals((Object)integer0));
assertEquals(1136, (int)integer2);
assertNotNull(integer2);

Object object1 = patriciaTrie1.put("", integer2);
assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
assertFalse(integer2.equals((Object)integer1));
assertFalse(integer2.equals((Object)integer0));
assertNotSame(patriciaTrie1, patriciaTrie2);
assertNull(object1);

AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("}\n", "");
assertNotNull(abstractMap_SimpleEntry0);

AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, String>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, String>, String>(abstractMap_SimpleEntry0, (String) null, 1136);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>, Integer>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>, Integer>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Comparable<String>, AbstractMap.SimpleImmutableEntry<String, AbstractMap.SimpleImmutableEntry>>>) comparator0);
assertNotNull(comparator1);

Object object2 = abstractPatriciaTrie_TrieEntry0.getKey();
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotNull(object2);

Object object3 = patriciaTrie2.put("}\n", object2);
assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotSame(patriciaTrie1, patriciaTrie2);
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNull(object3);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = patriciaTrie2.ceilingEntry("  ");
assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotSame(patriciaTrie1, patriciaTrie2);
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNotNull(abstractPatriciaTrie_TrieEntry1);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = patriciaTrie1.followRight(abstractPatriciaTrie_TrieEntry1);
assertFalse(patriciaTrie1.equals((Object)patriciaTrie2));
assertFalse(patriciaTrie2.equals((Object)patriciaTrie1));
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertNotSame(patriciaTrie1, patriciaTrie2);
assertNotSame(patriciaTrie2, patriciaTrie1);
assertSame(abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry2);
assertSame(abstractPatriciaTrie_TrieEntry2, abstractPatriciaTrie_TrieEntry1);
assertNotNull(abstractPatriciaTrie_TrieEntry2);


[MASTER] 14:31:33.704 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_139_1628260293680/org/apache/commons/collections4/trie/AbstractPatriciaTrie_139_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_139_1628260293680/org/apache/commons/collections4/trie/AbstractPatriciaTrie_139_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:33.704 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.704 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:33.705 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Comparable<java.lang.String>,java.lang.String>,java.lang.Object>>: 125
[MASTER] 14:31:33.705 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_139_1628260293680/org/apache/commons/collections4/trie/AbstractPatriciaTrie_139_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:33.705 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:33.705 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_139_1628260293680/org/apache/commons/collections4/trie/AbstractPatriciaTrie_139_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:33 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_139_tmp__ESTest extends AbstractPatriciaTrie_139_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       PatriciaTrie<AbstractMap.SimpleEntry<String, Integer>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Integer>>();
31:       assertNotNull(patriciaTrie1);
32:       
33:       int int0 = patriciaTrie0.bitIndex("org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet", "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet");
34:       assertEquals((-2), int0);
35:       
36:       String string0 = "SU;r";
37:       Integer integer0 = new Integer(1459);
38:       assertFalse(integer0.equals((Object)int0));
39:       assertEquals(1459, (int)integer0);
40:       assertNotNull(integer0);
41:       
42:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Integer>("SU;r", integer0);
43:       assertFalse(integer0.equals((Object)int0));
44:       assertNotNull(abstractMap_SimpleEntry0);
45:       
46:       patriciaTrie1.clear();
47:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, Integer>(abstractMap_SimpleEntry0);
48:       assertFalse(integer0.equals((Object)int0));
49:       assertNotNull(abstractMap_SimpleEntry1);
50:       
51:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("SU;r", abstractMap_SimpleEntry1, 1459);
52:       assertFalse(integer0.equals((Object)int0));
53:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
54:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
55:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
56:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
57:       
58:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry2 = abstractPatriciaTrie_TrieEntry0.setKeyValue("org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet", abstractMap_SimpleEntry1);
59:       assertFalse(integer0.equals((Object)int0));
60:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
61:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
62:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
63:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
64:       assertSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry1);
65:       assertNotNull(abstractMap_SimpleEntry2);
66:       
67:       Integer integer1 = new Integer(1459);
68:       assertTrue(integer1.equals((Object)integer0));
69:       assertFalse(integer1.equals((Object)int0));
70:       assertEquals(1459, (int)integer1);
71:       assertNotNull(integer1);
72:       
73:       Integer integer2 = abstractMap_SimpleEntry1.setValue(integer1);
74:       assertTrue(integer0.equals((Object)integer1));
75:       assertFalse(integer0.equals((Object)int0));
76:       assertTrue(integer1.equals((Object)integer0));
77:       assertFalse(integer1.equals((Object)int0));
78:       assertFalse(integer2.equals((Object)int0));
79:       assertTrue(integer2.equals((Object)integer1));
80:       assertEquals(1459, (int)integer2);
81:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
82:       assertNotNull(integer2);
83:       
84:       Integer integer3 = new Integer((-1937));
85:       assertFalse(integer3.equals((Object)integer1));
86:       assertFalse(integer3.equals((Object)integer0));
87:       assertFalse(integer3.equals((Object)int0));
88:       assertFalse(integer3.equals((Object)integer2));
89:       assertEquals((-1937), (int)integer3);
90:       assertNotNull(integer3);
91:       
92:       Integer integer4 = abstractMap_SimpleEntry1.setValue(integer3);
93:       assertTrue(integer0.equals((Object)integer1));
94:       assertFalse(integer0.equals((Object)int0));
95:       assertFalse(integer0.equals((Object)integer3));
96:       assertFalse(integer3.equals((Object)integer1));
97:       assertFalse(integer3.equals((Object)integer0));
98:       assertFalse(integer3.equals((Object)int0));
99:       assertFalse(integer3.equals((Object)integer2));
100:       assertTrue(integer4.equals((Object)integer0));
101:       assertFalse(integer4.equals((Object)integer3));
102:       assertTrue(integer4.equals((Object)integer2));
103:       assertFalse(integer4.equals((Object)int0));
104:       assertEquals(1459, (int)integer4);
105:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
106:       assertNotNull(integer4);
107:       
108:       Comparator<Map.Entry<Comparable<Object>, Integer>> comparator0 = Map.Entry.comparingByKey();
109:       assertNotNull(comparator0);
110:       
111:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("SU;r", abstractMap_SimpleEntry2, 32);
112:       assertTrue(integer0.equals((Object)integer1));
113:       assertFalse(integer0.equals((Object)int0));
114:       assertTrue(integer0.equals((Object)integer4));
115:       assertFalse(integer0.equals((Object)integer3));
116:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
117:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
118:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
119:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
120:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
121:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
122:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
123:       
124:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
125:       Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, String>, Object>> comparator2 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, String>, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);
126:       assertNotNull(comparator2);
127:       
128:       abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;
129:       assertTrue(abstractPatriciaTrie_TrieEntry0.parent.isExternalNode());
130:       assertFalse(abstractPatriciaTrie_TrieEntry0.parent.isEmpty());
131:       assertFalse(abstractPatriciaTrie_TrieEntry0.parent.isInternalNode());
132:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
133:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
134:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
135:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
136:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
137:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
138:       
139:       abstractPatriciaTrie_TrieEntry1.predecessor = abstractPatriciaTrie_TrieEntry0;
140:       assertFalse(abstractPatriciaTrie_TrieEntry1.predecessor.isInternalNode());
141:       assertTrue(abstractPatriciaTrie_TrieEntry1.predecessor.isExternalNode());
142:       assertFalse(abstractPatriciaTrie_TrieEntry1.predecessor.isEmpty());
143:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
144:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
145:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
146:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
147:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
148:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
149:       
150:       Integer integer5 = abstractMap_SimpleEntry1.setValue((Integer) null);
151:       assertFalse(integer5.equals((Object)integer4));
152:       assertFalse(integer5.equals((Object)integer2));
153:       assertFalse(integer5.equals((Object)int0));
154:       assertFalse(integer5.equals((Object)integer0));
155:       assertFalse(integer5.equals((Object)integer1));
156:       assertTrue(integer0.equals((Object)integer1));
157:       assertFalse(integer0.equals((Object)int0));
158:       assertTrue(integer0.equals((Object)integer4));
159:       assertFalse(integer0.equals((Object)integer3));
160:       assertEquals((-1937), (int)integer5);
161:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
162:       assertNotNull(integer5);
163:       
164:       Comparator<Map.Entry<AbstractMap.SimpleEntry<String, Integer>, Comparable<Object>>> comparator3 = Map.Entry.comparingByValue();
165:       assertNotNull(comparator3);
166:       
167:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.predecessor;
168:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
169:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
170:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
171:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
172:       
173:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry3 = patriciaTrie1.previousEntry(abstractPatriciaTrie_TrieEntry2);
174:       assertTrue(integer0.equals((Object)integer1));
175:       assertFalse(integer0.equals((Object)int0));
176:       assertFalse(integer0.equals((Object)integer5));
177:       assertTrue(integer0.equals((Object)integer4));
178:       assertFalse(integer0.equals((Object)integer3));
179:       assertFalse(abstractPatriciaTrie_TrieEntry3.equals((Object)abstractPatriciaTrie_TrieEntry2));
180:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
181:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
182:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
183:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
184:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
185:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
186:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
187:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
188:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
189:       assertNotSame(abstractPatriciaTrie_TrieEntry2, abstractPatriciaTrie_TrieEntry3);
190:       assertNotSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry2);
191:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
192:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
193:       
194:       PatriciaTrie<AbstractMap.SimpleEntry<String, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Object>>();
195:       assertNotNull(patriciaTrie2);
196:       
197:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Object>> abstractPatriciaTrie_TrieEntry4 = patriciaTrie2.ceilingEntry("SU;r");
198:       assertNull(abstractPatriciaTrie_TrieEntry4);
199:       
200:       // Undeclared exception!
201:       try { 
202:         patriciaTrie2.get(patriciaTrie0);
203:         fail("Expecting exception: ClassCastException");
204:       
205:       } catch(ClassCastException e) {
206:          //
207:          // no message in exception (getMessage() returned null)
208:          //
209:       }
210:   }
211: }
RegularFileObject[/tmp/EvoSuite_139_1628260293680/org/apache/commons/collections4/trie/AbstractPatriciaTrie_139_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:33 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_139_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_139_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_139_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_139_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:33.707 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie0);

PatriciaTrie<AbstractMap.SimpleEntry<String, Integer>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Integer>>();
assertNotNull(patriciaTrie1);

int int0 = patriciaTrie0.bitIndex("org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet", "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet");
assertEquals((-2), int0);

String string0 = "SU;r";
Integer integer0 = new Integer(1459);
assertFalse(integer0.equals((Object)int0));
assertEquals(1459, (int)integer0);
assertNotNull(integer0);

AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Integer>("SU;r", integer0);
assertFalse(integer0.equals((Object)int0));
assertNotNull(abstractMap_SimpleEntry0);

patriciaTrie1.clear();
AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, Integer>(abstractMap_SimpleEntry0);
assertFalse(integer0.equals((Object)int0));
assertNotNull(abstractMap_SimpleEntry1);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("SU;r", abstractMap_SimpleEntry1, 1459);
assertFalse(integer0.equals((Object)int0));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry2 = abstractPatriciaTrie_TrieEntry0.setKeyValue("org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet", abstractMap_SimpleEntry1);
assertFalse(integer0.equals((Object)int0));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertSame(abstractMap_SimpleEntry2, abstractMap_SimpleEntry1);
assertNotNull(abstractMap_SimpleEntry2);

Integer integer1 = new Integer(1459);
assertTrue(integer1.equals((Object)integer0));
assertFalse(integer1.equals((Object)int0));
assertEquals(1459, (int)integer1);
assertNotNull(integer1);

Integer integer2 = abstractMap_SimpleEntry1.setValue(integer1);
assertTrue(integer0.equals((Object)integer1));
assertFalse(integer0.equals((Object)int0));
assertTrue(integer1.equals((Object)integer0));
assertFalse(integer1.equals((Object)int0));
assertFalse(integer2.equals((Object)int0));
assertTrue(integer2.equals((Object)integer1));
assertEquals(1459, (int)integer2);
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertNotNull(integer2);

Integer integer3 = new Integer((-1937));
assertFalse(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertFalse(integer3.equals((Object)int0));
assertFalse(integer3.equals((Object)integer2));
assertEquals((-1937), (int)integer3);
assertNotNull(integer3);

Integer integer4 = abstractMap_SimpleEntry1.setValue(integer3);
assertTrue(integer0.equals((Object)integer1));
assertFalse(integer0.equals((Object)int0));
assertFalse(integer0.equals((Object)integer3));
assertFalse(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer0));
assertFalse(integer3.equals((Object)int0));
assertFalse(integer3.equals((Object)integer2));
assertTrue(integer4.equals((Object)integer0));
assertFalse(integer4.equals((Object)integer3));
assertTrue(integer4.equals((Object)integer2));
assertFalse(integer4.equals((Object)int0));
assertEquals(1459, (int)integer4);
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertNotNull(integer4);

Comparator<Map.Entry<Comparable<Object>, Integer>> comparator0 = Map.Entry.comparingByKey();
assertNotNull(comparator0);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("SU;r", abstractMap_SimpleEntry2, 32);
assertTrue(integer0.equals((Object)integer1));
assertFalse(integer0.equals((Object)int0));
assertTrue(integer0.equals((Object)integer4));
assertFalse(integer0.equals((Object)integer3));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, String>, Object>> comparator2 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Comparable<String>, String>, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);
assertNotNull(comparator2);

abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;
assertTrue(abstractPatriciaTrie_TrieEntry0.parent.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.parent.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.parent.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());

abstractPatriciaTrie_TrieEntry1.predecessor = abstractPatriciaTrie_TrieEntry0;
assertFalse(abstractPatriciaTrie_TrieEntry1.predecessor.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.predecessor.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.predecessor.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());

Integer integer5 = abstractMap_SimpleEntry1.setValue((Integer) null);
assertFalse(integer5.equals((Object)integer4));
assertFalse(integer5.equals((Object)integer2));
assertFalse(integer5.equals((Object)int0));
assertFalse(integer5.equals((Object)integer0));
assertFalse(integer5.equals((Object)integer1));
assertTrue(integer0.equals((Object)integer1));
assertFalse(integer0.equals((Object)int0));
assertTrue(integer0.equals((Object)integer4));
assertFalse(integer0.equals((Object)integer3));
assertEquals((-1937), (int)integer5);
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertNotNull(integer5);

Comparator<Map.Entry<AbstractMap.SimpleEntry<String, Integer>, Comparable<Object>>> comparator3 = Map.Entry.comparingByValue();
assertNotNull(comparator3);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.predecessor;
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry3 = patriciaTrie1.previousEntry(abstractPatriciaTrie_TrieEntry2);
assertTrue(integer0.equals((Object)integer1));
assertFalse(integer0.equals((Object)int0));
assertFalse(integer0.equals((Object)integer5));
assertTrue(integer0.equals((Object)integer4));
assertFalse(integer0.equals((Object)integer3));
assertFalse(abstractPatriciaTrie_TrieEntry3.equals((Object)abstractPatriciaTrie_TrieEntry2));
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotSame(abstractPatriciaTrie_TrieEntry2, abstractPatriciaTrie_TrieEntry3);
assertNotSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry2);
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertNotNull(abstractPatriciaTrie_TrieEntry3);

PatriciaTrie<AbstractMap.SimpleEntry<String, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Object>>();
assertNotNull(patriciaTrie2);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Object>> abstractPatriciaTrie_TrieEntry4 = patriciaTrie2.ceilingEntry("SU;r");
assertNull(abstractPatriciaTrie_TrieEntry4);

patriciaTrie2.get(patriciaTrie0);

[MASTER] 14:31:34.093 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_156_1628260294071/org/apache/commons/collections4/trie/AbstractPatriciaTrie_156_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_156_1628260294071/org/apache/commons/collections4/trie/AbstractPatriciaTrie_156_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:34.093 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:34.093 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:34.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Integer>>: 37
[MASTER] 14:31:34.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.String,java.lang.Object>>: 59
[MASTER] 14:31:34.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_156_1628260294071/org/apache/commons/collections4/trie/AbstractPatriciaTrie_156_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:34.094 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:34.095 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_156_1628260294071/org/apache/commons/collections4/trie/AbstractPatriciaTrie_156_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:34 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_156_tmp__ESTest extends AbstractPatriciaTrie_156_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Comparable<Object>> patriciaTrie0 = new PatriciaTrie<Comparable<Object>>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("org.apache.commons.collections4.trie.AbstractPatriciaTrie", " + ", 418);
31:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
32:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
33:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
34:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
35:       
36:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
37:       Comparator<Map.Entry<Object, Integer>> comparator1 = (Comparator<Map.Entry<Object, Integer>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
38:       assertNotNull(comparator1);
39:       
40:       abstractPatriciaTrie_TrieEntry0.key = "org.apache.commons.collections4.trie.AbstractPatriciaTrie";
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
43:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
44:       
45:       Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
46:       Comparator<Map.Entry<String, Object>> comparator3 = Map.Entry.comparingByKey();
47:       assertNotNull(comparator3);
48:       
49:       abstractPatriciaTrie_TrieEntry0.predecessor = null;
50:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
51:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
52:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
53:       
54:       abstractPatriciaTrie_TrieEntry0.predecessor = null;
55:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
56:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
57:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
58:       
59:       Comparator<Map.Entry<String, Object>> comparator4 = (Comparator<Map.Entry<String, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator2);
60:       assertFalse(comparator4.equals((Object)comparator3));
61:       assertNotNull(comparator4);
62:       
63:       String string0 = abstractPatriciaTrie_TrieEntry0.toString();
64:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
65:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
66:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
67:       assertEquals("Entry(key=org.apache.commons.collections4.trie.AbstractPatriciaTrie [418], value= + , parent=null, left=org.apache.commons.collections4.trie.AbstractPatriciaTrie [418], right=null, )", string0);
68:       assertNotNull(string0);
69:       
70:       PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
71:       assertNotNull(patriciaTrie1);
72:       
73:       String string1 = patriciaTrie1.put("]={\n", "org.apache.commons.collections4.trie.AbstractPatriciaTrie");
74:       assertNull(string1);
75:       
76:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = patriciaTrie1.firstEntry();
77:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
78:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
79:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
80:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
81:       
82:       int int0 = patriciaTrie1.size();
83:       assertEquals(1, int0);
84:       
85:       PatriciaTrie<AbstractMap.SimpleEntry<String, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Object>>();
86:       assertNotNull(patriciaTrie2);
87:       
88:       String string2 = patriciaTrie2.previousKey("]={\n");
89:       assertNull(string2);
90:       
91:       String string3 = "FromKey is out of range: ";
92:       AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = null;
93:       try {
94:         abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((Map.Entry<? extends String, ?>) null);
95:         fail("Expecting exception: NullPointerException");
96:       
97:       } catch(NullPointerException e) {
98:          //
99:          // no message in exception (getMessage() returned null)
100:          //
101:          verifyException("java.util.AbstractMap$SimpleEntry", e);
102:       }
103:   }
104: }
RegularFileObject[/tmp/EvoSuite_156_1628260294071/org/apache/commons/collections4/trie/AbstractPatriciaTrie_156_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:34 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_156_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_156_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_156_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_156_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:34.095 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Comparable<Object>> patriciaTrie0 = new PatriciaTrie<Comparable<Object>>();
assertNotNull(patriciaTrie0);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("org.apache.commons.collections4.trie.AbstractPatriciaTrie", " + ", 418);
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, Integer>> comparator1 = (Comparator<Map.Entry<Object, Integer>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
assertNotNull(comparator1);

abstractPatriciaTrie_TrieEntry0.key = "org.apache.commons.collections4.trie.AbstractPatriciaTrie";
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<String, Object>> comparator3 = Map.Entry.comparingByKey();
assertNotNull(comparator3);

abstractPatriciaTrie_TrieEntry0.predecessor = null;
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

abstractPatriciaTrie_TrieEntry0.predecessor = null;
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

Comparator<Map.Entry<String, Object>> comparator4 = (Comparator<Map.Entry<String, Object>>)Map.Entry.comparingByValue((Comparator<? super Object>) comparator2);
assertFalse(comparator4.equals((Object)comparator3));
assertNotNull(comparator4);

String string0 = abstractPatriciaTrie_TrieEntry0.toString();
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("Entry(key=org.apache.commons.collections4.trie.AbstractPatriciaTrie [418], value= + , parent=null, left=org.apache.commons.collections4.trie.AbstractPatriciaTrie [418], right=null, )", string0);
assertNotNull(string0);

PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
assertNotNull(patriciaTrie1);

String string1 = patriciaTrie1.put("]={\n", "org.apache.commons.collections4.trie.AbstractPatriciaTrie");
assertNull(string1);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = patriciaTrie1.firstEntry();
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

int int0 = patriciaTrie1.size();
assertEquals(1, int0);

PatriciaTrie<AbstractMap.SimpleEntry<String, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<String, Object>>();
assertNotNull(patriciaTrie2);

String string2 = patriciaTrie2.previousKey("]={\n");
assertNull(string2);

String string3 = "FromKey is out of range: ";
AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((Map.Entry<? extends String, ?>) null);

[MASTER] 14:31:34.287 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_164_1628260294266/org/apache/commons/collections4/trie/AbstractPatriciaTrie_164_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_164_1628260294266/org/apache/commons/collections4/trie/AbstractPatriciaTrie_164_tmp__ESTest_scaffolding.java]]
[MASTER] 14:31:34.287 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:34.287 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 14:31:34.288 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Object,java.lang.Object>,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Object,java.lang.Object>,java.util.AbstractMap.SimpleEntry<java.lang.Integer,java.lang.String>>>: 40
[MASTER] 14:31:34.288 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_164_1628260294266/org/apache/commons/collections4/trie/AbstractPatriciaTrie_164_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 14:31:34.288 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 14:31:34.288 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_164_1628260294266/org/apache/commons/collections4/trie/AbstractPatriciaTrie_164_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 14:31:34 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.apache.commons.collections4.trie.PatriciaTrie;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class AbstractPatriciaTrie_164_tmp__ESTest extends AbstractPatriciaTrie_164_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Integer integer0 = new Integer(1701);
27:       assertEquals(1701, (int)integer0);
28:       assertNotNull(integer0);
29:       
30:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "");
31:       assertNotNull(abstractMap_SimpleEntry0);
32:       
33:       AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(abstractMap_SimpleEntry0);
34:       assertNotNull(abstractMap_SimpleImmutableEntry0);
35:       
36:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleImmutableEntry0);
37:       assertNotNull(abstractMap_SimpleEntry1);
38:       
39:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
40:       Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Object, Object>, AbstractMap.SimpleEntry<Integer, String>>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Object, Object>, AbstractMap.SimpleEntry<Integer, String>>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Object, Object>>) comparator0);
41:       assertNotNull(comparator1);
42:       
43:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>>("", abstractMap_SimpleEntry1, 0);
44:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
45:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
46:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
47:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
48:       
49:       AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleEntry1);
50:       assertTrue(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry1));
51:       assertNotNull(abstractMap_SimpleEntry2);
52:       
53:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>>((String) null, abstractMap_SimpleEntry2, 0);
54:       assertTrue(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry2));
55:       assertTrue(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry1));
56:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
57:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
58:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
59:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
60:       
61:       abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;
62:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
63:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
64:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
65:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
66:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
67:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
68:       assertTrue(abstractPatriciaTrie_TrieEntry0.right.isExternalNode());
69:       assertTrue(abstractPatriciaTrie_TrieEntry0.right.isEmpty());
70:       assertFalse(abstractPatriciaTrie_TrieEntry0.right.isInternalNode());
71:       
72:       String string0 = abstractPatriciaTrie_TrieEntry0.toString();
73:       assertTrue(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry2));
74:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
75:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
76:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
77:       assertEquals("Entry(key= [0], value=1701=, parent=null, left= [0], right=null [0], predecessor= [0])", string0);
78:       assertNotSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
79:       assertNotNull(string0);
80:       
81:       PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
82:       assertNotNull(patriciaTrie0);
83:       
84:       AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("Entry(key= [0], value=1701=, parent=null, left= [0], right=null [0], predecessor= [0])", integer0, 2);
85:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
86:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
87:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
88:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
89:       
90:       AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.predecessor;
91:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
92:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
93:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
94:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
95:       
96:       AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry4 = patriciaTrie0.nextEntryImpl(abstractPatriciaTrie_TrieEntry3, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
97:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
98:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
99:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
100:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
101:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
102:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
103:       assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
104:       assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
105:       assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
106:       assertSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry4);
107:       assertSame(abstractPatriciaTrie_TrieEntry4, abstractPatriciaTrie_TrieEntry3);
108:       assertNotNull(abstractPatriciaTrie_TrieEntry4);
109:   }
110: }
RegularFileObject[/tmp/EvoSuite_164_1628260294266/org/apache/commons/collections4/trie/AbstractPatriciaTrie_164_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 14:31:34 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: import static org.evosuite.shaded.org.mockito.Mockito.*;
17: @EvoSuiteClassExclude
18: public class AbstractPatriciaTrie_164_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
24: 
25: 
26:   @BeforeClass 
27:   public static void initEvoSuiteFramework() { 
28:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
29:     org.evosuite.runtime.GuiSupport.initialize(); 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
31:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
32:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
33:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
34:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
35:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
36:     setSystemProperties();
37:     initializeClasses();
38:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
39:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
40:   } 
41: 
42:   @Before 
43:   public void initTestCase(){ 
44:     threadStopper.storeCurrentThreads();
45:     threadStopper.startRecordingTime();
46:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
47:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
48:     org.evosuite.runtime.GuiSupport.setHeadless(); 
49:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
50:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
51:   } 
52: 
53:   @After 
54:   public void doneWithTestCase(){ 
55:     threadStopper.killAndJoinClientThreads();
56:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
57:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
58:     resetClasses(); 
59:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
61:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
62:   } 
63: 
64:   public static void setSystemProperties() {
65:  
66:     /*No java.lang.System property to set*/
67:   }
68: 
69:   private static void initializeClasses() {
70:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_164_tmp__ESTest_scaffolding.class.getClassLoader() ,
71:       "org.apache.commons.collections4.MapIterator",
72:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
73:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
74:       "org.apache.commons.collections4.trie.PatriciaTrie",
75:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
76:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
77:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
78:       "org.apache.commons.collections4.Get",
79:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
80:       "org.apache.commons.collections4.Trie",
81:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
82:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
83:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
86:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
88:       "org.apache.commons.collections4.IterableSortedMap",
89:       "org.apache.commons.collections4.OrderedMap",
90:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
92:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
93:       "org.apache.commons.collections4.OrderedMapIterator",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
96:       "org.apache.commons.collections4.Put",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
98:       "org.apache.commons.collections4.trie.KeyAnalyzer",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
100:       "org.apache.commons.collections4.IterableMap",
101:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
103:       "org.apache.commons.collections4.OrderedIterator",
104:       "org.apache.commons.collections4.IterableGet"
105:     );
106:   } 
107:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
108:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_164_tmp__ESTest_scaffolding.class.getClassLoader()));
109:   }
110: 
111:   private static void resetClasses() {
112:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_164_tmp__ESTest_scaffolding.class.getClassLoader()); 
113: 
114:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
115:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
116:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
117:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
118:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
119:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
120:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
121:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
122:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
123:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
124:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
125:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
126:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
127:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
128:       "org.apache.commons.collections4.trie.PatriciaTrie",
129:       "org.apache.commons.collections4.trie.KeyAnalyzer",
130:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator"
139:     );
140:   }
141: }

[MASTER] 14:31:34.289 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(1701);
assertEquals(1701, (int)integer0);
assertNotNull(integer0);

AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "");
assertNotNull(abstractMap_SimpleEntry0);

AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(abstractMap_SimpleEntry0);
assertNotNull(abstractMap_SimpleImmutableEntry0);

AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleImmutableEntry0);
assertNotNull(abstractMap_SimpleEntry1);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Object, Object>, AbstractMap.SimpleEntry<Integer, String>>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Object, Object>, AbstractMap.SimpleEntry<Integer, String>>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Object, Object>>) comparator0);
assertNotNull(comparator1);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>>("", abstractMap_SimpleEntry1, 0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleEntry1);
assertTrue(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry1));
assertNotNull(abstractMap_SimpleEntry2);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Integer, String>>((String) null, abstractMap_SimpleEntry2, 0);
assertTrue(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry2));
assertTrue(abstractMap_SimpleEntry2.equals((Object)abstractMap_SimpleEntry1));
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.right.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.right.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry0.right.isInternalNode());

String string0 = abstractPatriciaTrie_TrieEntry0.toString();
assertTrue(abstractMap_SimpleEntry1.equals((Object)abstractMap_SimpleEntry2));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertEquals("Entry(key= [0], value=1701=, parent=null, left= [0], right=null [0], predecessor= [0])", string0);
assertNotSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry2);
assertNotNull(string0);

PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
assertNotNull(patriciaTrie0);

AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("Entry(key= [0], value=1701=, parent=null, left= [0], right=null [0], predecessor= [0])", integer0, 2);
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.predecessor;
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry4 = patriciaTrie0.nextEntryImpl(abstractPatriciaTrie_TrieEntry3, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
assertSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry4);
assertSame(abstractPatriciaTrie_TrieEntry4, abstractPatriciaTrie_TrieEntry3);
assertNotNull(abstractPatriciaTrie_TrieEntry4);


[MASTER] 14:31:35.150 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.218 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.291 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.357 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.422 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.478 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.532 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.648 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.702 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.767 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.815 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.879 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:35.937 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.021 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.085 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.149 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.332 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.386 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.455 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.496 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.558 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.617 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.725 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.779 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.835 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.882 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.925 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:36.973 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.022 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.064 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.131 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.189 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.245 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.344 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.388 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.436 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.481 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.538 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.599 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.641 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.725 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.833 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.887 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.936 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:37.996 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.044 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.086 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.136 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.187 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.230 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.277 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.383 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.433 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.486 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.530 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.577 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.635 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:38.699 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.134 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.226 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.283 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.338 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.391 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.458 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.522 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.579 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.679 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.748 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.804 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.855 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.899 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.945 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:39.996 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.045 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.091 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.141 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.193 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.271 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.334 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.383 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.439 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.494 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.557 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.613 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.665 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.724 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.806 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.866 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.929 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:40.988 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.044 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.091 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.141 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.224 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.278 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.339 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.389 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.437 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.497 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.540 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.582 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.670 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.708 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.758 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.805 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.849 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.912 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:41.960 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.012 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.086 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.148 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.313 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.391 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.451 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.508 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.564 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.615 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.676 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.718 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.764 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.814 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.854 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.909 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:42.955 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.000 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.047 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.094 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.178 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.231 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.312 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.443 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.501 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.647 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.701 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.771 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.845 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.923 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:43.985 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.035 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.083 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.188 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.236 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.301 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.343 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.387 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.424 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.493 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.545 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.902 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.956 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:44.995 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:45.041 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:45.094 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:45.192 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:46.825 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 14:31:48.167 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'AbstractPatriciaTrie_ESTest' to results/Collections-28/org.apache.commons.collections4.trie.AbstractPatriciaTrie/BBC-F0-100/tests/12
* Done!

* Computation finished
