* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.collections4.trie.AbstractPatriciaTrie
* Starting Client-0
* Connecting to master process on port 9160
* Analyzing classpath: 
  - subjects/buggy-versions/Collections-28/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.trie.AbstractPatriciaTrie
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3013
* Using seed 3426815841
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 988 / 3013
[MASTER] 21:13:17.254 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 21:13:17.260 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 21:13:47.823 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 21:15:29.858 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()Ljava/util/Comparator;: Line 1713: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I47 Branch 112 IFEQ L1029 - true: 1810
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I40 Branch 136 IFEQ L1201 - false: 91
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: Line 2335: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I93 Branch 55 IF_ACMPNE L553 - true: 3673
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I35 Branch 242 IFNONNULL L2295 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: Line 1727: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I16 Branch 267 IFNULL L2071 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: I19 Branch 148 IFEQ L2435 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I106 Branch 107 IFEQ L982 - false: 1804
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I35 Branch 242 IFNONNULL L2295 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 89 IFNONNULL L811 - false: 63
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1134: 22
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I16 Branch 267 IFNULL L2071 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: I19 Branch 148 IFEQ L2435 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I106 Branch 107 IFEQ L982 - true: 1804
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Ljava/lang/Object;)Z: I3 Branch 32 IFNONNULL L379 - false: 135
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2408: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectKey(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 25 IFNONNULL L312 - false: 66
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()I: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2398: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 104 IFNE L962 - false: 119
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: Line 1400: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 172 IFNONNULL L1636 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2405: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()Ljava/util/Set;: Line 1930: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2390: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I42 Branch 40 IFNE L430 - true: 123
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2394: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I218 Branch 160 IFNULL L1373 - true: 195
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: I4 Branch 172 IFNONNULL L1636 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: Line 1472: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: Line 1471: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getFromKey()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 255 IFNE L2041 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2388: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: Line 2389: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(Ljava/lang/Object;Z)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I52 Branch 97 IFEQ L907 - false: 86
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 255 IFNE L2041 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Ljava/lang/Object;: I5 Branch 45 IF_ACMPEQ L480 - true: 344
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I39 Branch 117 IFEQ L1065 - false: 101
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()Ljava/util/Iterator;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I146 Branch 130 IFLT L1142 - true: 1812
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: I8 Branch 199 IFNE L1718 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I39 Branch 117 IFEQ L1065 - true: 21
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I19 Branch 245 IFNONNULL L1988 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I41 Branch 246 IFNULL L1995 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I19 Branch 245 IFNONNULL L1988 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: I41 Branch 246 IFNULL L1995 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: I4 Branch 179 IFNONNULL L1590 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: Line 2013: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: I4 Branch 179 IFNONNULL L1590 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: Line 2290: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: Line 2320: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I4 Branch 134 IFNONNULL L1196 - false: 4478
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: Line 2295: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2376: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 95 IFNE L894 - false: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2373: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2372: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I64 Branch 137 IFNULL L1207 - false: 1
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 141 IF_ACMPNE L1216 - true: 359
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 141 IF_ACMPNE L1216 - false: 117
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I137 Branch 78 IF_ACMPEQ L724 - true: 534
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 207 IFNE L1782 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: I17 Branch 167 IF_ICMPEQ L1466 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I30 Branch 48 IFNE L501 - false: 7342
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 207 IFNE L1782 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I85 Branch 127 IF_ACMPNE L1127 - false: 22
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getToKey()Ljava/lang/Object;: Line 2243: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: I4 Branch 265 IFEQ L2325 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: Line 2004: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: I4 Branch 265 IFEQ L2325 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: Line 2018: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()Ljava/lang/Object;: I8 Branch 85 IFNULL L790 - false: 492
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I15 Branch 116 IFNE L1058 - false: 73
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I11 Branch 66 IF_ACMPEQ L657 - false: 244
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()Ljava/lang/Object;: I8 Branch 85 IFNULL L790 - true: 402
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: I4 Branch 264 IFNE L2320 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I171 Branch 159 IF_ICMPNE L1363 - false: 804
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hasNext()Z: I4 Branch 264 IFNE L2320 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I22 Branch 177 IFNONNULL L1567 - false: 6621
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isToInclusive()Z: Line 2253: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: I17 Branch 167 IF_ICMPEQ L1466 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 165 IFNE L1410 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 1745: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2069: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2070: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I120 Branch 99 IFEQ L920 - true: 4658
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: I4 Branch 165 IFNE L1410 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I171 Branch 159 IF_ICMPNE L1363 - true: 41
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2192: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2071: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2191: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2072: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I16 Branch 260 IF_ACMPNE L2390 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I16 Branch 260 IF_ACMPNE L2390 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I8 Branch 229 IFNONNULL L1891 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()Ljava/lang/Object;: Line 1528: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 75 IF_ACMPNE L706 - true: 59
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I120 Branch 99 IFEQ L920 - false: 4658
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: I13 Branch 208 IFNULL L1795 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: I4 Branch 203 IFNONNULL L1753 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 206 IFNE L1774 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I101 Branch 75 IF_ACMPNE L706 - false: 2425
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isToInclusive()Z: Line 1950: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: I15 Branch 244 IFNONNULL L1975 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: I13 Branch 208 IFNULL L1795 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1792: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1793: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I8 Branch 229 IFNONNULL L1891 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(Ljava/lang/Object;)Z: Line 1795: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: I4 Branch 203 IFNONNULL L1753 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 206 IFNE L1774 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2182: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2184: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: Line 2185: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(Ljava/lang/Object;)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: I15 Branch 244 IFNONNULL L1975 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I32 Branch 196 IFNULL L2191 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1654: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2273: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1655: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: I5 Branch 181 IF_ICMPEQ L2125 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1656: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: Line 1429: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()V: Line 1428: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I32 Branch 196 IFNULL L2191 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I91 Branch 128 IF_ICMPGE L1127 - true: 22
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2278: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(Ljava/lang/Object;)Z: Line 1459: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2281: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2280: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeMap;)V: Line 2279: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1922: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I160 Branch 80 IF_ACMPNE L730 - true: 41
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1921: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I160 Branch 80 IF_ACMPNE L730 - false: 1561
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I109 Branch 57 IF_ACMPNE L557 - false: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I139 Branch 8 IFEQ L165 - true: 13258
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: Line 1911: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Ljava/lang/Object;: I10 Branch 46 IFEQ L481 - false: 4
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I97 Branch 56 IF_ACMPEQ L553 - false: 1479
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I139 Branch 8 IFEQ L165 - false: 13258
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Ljava/lang/Object;ZLjava/lang/Object;Z)V: I14 Branch 225 IFNONNULL L1874 - false: 144
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I40 Branch 105 IFEQ L969 - false: 15
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2312: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2315: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2314: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: I8 Branch 168 IFEQ L1512 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: I8 Branch 168 IFEQ L1512 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 2316: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 2228: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(Ljava/lang/Object;)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()Ljava/lang/Object;: Line 1615: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: Line 1644: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(Ljava/lang/Object;II)Ljava/util/SortedMap;: I12 Branch 92 IF_ICMPLE L856 - false: 5189
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I13 Branch 191 IFNONNULL L2166 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I13 Branch 191 IFNONNULL L2166 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I96 Branch 74 IF_ACMPNE L704 - false: 59
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$KeySet;)V: Line 1477: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I216 Branch 63 IFEQ L600 - true: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: I5 Branch 181 IF_ICMPEQ L2125 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(Ljava/lang/Object;)Z: Line 1512: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I43 Branch 197 IFNULL L2192 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I43 Branch 197 IFNULL L2192 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1556: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()Ljava/util/Iterator;: Line 1492: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1555: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I55 Branch 263 IF_ICMPLT L2405 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 1554: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I9 Branch 259 IFEQ L2373 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: I13 Branch 212 IFNULL L1805 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I56 Branch 118 IFEQ L1070 - true: 4557
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I9 Branch 259 IFEQ L2373 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: Line 531: 46
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: Line 2259: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()Ljava/util/Set;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(Ljava/lang/Object;)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: I5 Branch 266 IF_ICMPEQ L2335 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()I: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: I8 Branch 199 IFNE L1718 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I49 Branch 70 IFEQ L674 - false: 311
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(Ljava/lang/Object;)Z: Line 2212: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: Line 1620: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I55 Branch 263 IF_ICMPLT L2405 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I31 Branch 261 IF_ICMPNE L2398 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()V: I5 Branch 266 IF_ICMPEQ L2335 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()I: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()V: I31 Branch 261 IF_ICMPNE L2398 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()Ljava/lang/Object;: Line 790: 402
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()Ljava/lang/Object;: Line 789: 402
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I203 Branch 62 IFEQ L596 - false: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: I4 Branch 171 IFNONNULL L1628 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I100 Branch 51 IF_ICMPLE L515 - false: 3
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: Line 2158: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I7 Branch 241 IF_ICMPEQ L2290 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: I4 Branch 171 IFNONNULL L1628 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1782: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getToKey()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I146 Branch 79 IFEQ L725 - true: 41
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I75 Branch 73 IFEQ L694 - false: 38
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 251 IFNE L2024 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I3 Branch 143 IFNONNULL L1237 - true: 15
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: I13 Branch 212 IFNULL L1805 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 251 IFNE L2024 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I75 Branch 73 IFEQ L694 - true: 121
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I41 Branch 124 IFNE L1106 - true: 69
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I117 Branch 157 IF_ICMPNE L1352 - false: 25
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()I: Line 2125: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.contains(Ljava/lang/Object;)Z: Line 1502: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 123 IF_ICMPGT L1101 - false: 22
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: I26 Branch 147 IF_ICMPGE L2422 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I39 Branch 237 IFNULL L1921 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isFromInclusive()Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: I26 Branch 147 IF_ICMPGE L2422 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I33 Branch 69 IFEQ L665 - true: 99
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I39 Branch 237 IFNULL L1921 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()Ljava/lang/Object;: Line 1480: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1465: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1464: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1967: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: I22 Branch 220 IFNE L1830 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1974: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(Ljava/lang/Object;)Z: Line 1466: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()Ljava/util/Iterator;: I7 Branch 241 IF_ICMPEQ L2290 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: I22 Branch 220 IFNE L1830 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.getFromKey()Ljava/lang/Object;: Line 2238: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Z: I8 Branch 145 IF_ICMPGT L1247 - true: 13
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 1660: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1803: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1802: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(Ljava/lang/Object;)Z: Line 1805: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1984: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I105 Branch 6 IFNE L158 - true: 13258
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1987: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1988: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(Ljava/lang/Object;Z)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()I: Line 1497: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1985: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I30 Branch 87 IFNULL L802 - false: 271
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1995: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I9 Branch 115 IFNE L1057 - true: 21
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$RangeMap;)V: Line 1975: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1994: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()Ljava/util/Iterator;: Line 1999: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I4 Branch 270 IFNULL L2081 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I30 Branch 53 IFNE L533 - false: 3673
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I225 Branch 161 IF_ICMPNE L1374 - false: 25
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: I4 Branch 270 IFNULL L2081 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()Ljava/util/Iterator;: Line 1449: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isToInclusive()Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I28 Branch 111 IFEQ L1024 - false: 1
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I68 Branch 31 IFEQ L370 - false: 6478
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I48 Branch 41 IFEQ L430 - true: 67
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I118 Branch 129 IF_ICMPEQ L1134 - true: 47
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 174 IF_ICMPEQ L1660 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/SortedMap;: Line 1956: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(Ljava/lang/Object;)Z: Line 2041: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I118 Branch 129 IF_ICMPEQ L1134 - false: 58
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 174 IF_ICMPEQ L1660 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I96 Branch 113 IFEQ L1037 - true: 1810
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1827: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1830: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1829: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: I5 Branch 250 IFNE L2018 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(Ljava/lang/Object;Z)Z: Line 1826: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()Z: I5 Branch 250 IFNE L2018 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: I22 Branch 216 IFNE L1816 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: I4 Branch 173 IFNULL L1644 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: I22 Branch 216 IFNE L1816 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 96 IF_ICMPLE L896 - false: 339
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 200 IFNE L1727 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()I: Line 1423: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.hasPrevious()Z: I4 Branch 173 IFNULL L1644 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I63 Branch 155 IF_ICMPNE L1341 - true: 168
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Ljava/lang/Object;)Z: I31 Branch 33 IFNE L386 - false: 43
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getToKey()Ljava/lang/Object;: Line 1940: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I50 Branch 238 IFNULL L1922 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 200 IFNE L1727 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I50 Branch 238 IFNULL L1922 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()I: Line 2285: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Values;)V: Line 1525: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I21 Branch 96 IF_ICMPLE L896 - true: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I4 Branch 235 IFNONNULL L1911 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2419: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I17 Branch 67 IFNE L658 - false: 244
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1816: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I164 Branch 158 IFNULL L1362 - false: 41
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I17 Branch 67 IFNE L658 - true: 643
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 38 IFNONNULL L420 - true: 38
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1815: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1812: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 1813: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2368: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()Ljava/lang/Object;: I4 Branch 235 IFNONNULL L1911 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2367: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2366: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(Ljava/lang/Object;)Z: Line 1718: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2365: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2427: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2420: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2421: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(Ljava/io/ObjectInputStream;)V: Line 2422: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2364: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2363: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.<init>(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$PrefixRangeEntrySet;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Ljava/lang/Object;II)V: Line 2362: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I91 Branch 128 IF_ICMPGE L1127 - false: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I96 Branch 113 IFEQ L1037 - false: 1810
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()Ljava/util/Iterator;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: I4 Branch 268 IFNULL L2076 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I32 Branch 29 IFNE L365 - false: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I44 Branch 30 IFEQ L366 - true: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: I4 Branch 268 IFNULL L2076 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I71 Branch 98 IFEQ L912 - true: 4658
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;ILjava/lang/Object;ILorg/apache/commons/collections4/trie/AbstractPatriciaTrie$Reference;)Z: I44 Branch 30 IFEQ L366 - false: 52
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(Ljava/lang/Object;)Z: Line 2024: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I30 Branch 90 IFNULL L815 - false: 551
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()Z: Line 2076: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()V: Line 1590: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: I5 Branch 247 IF_ICMPEQ L2004 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I39 Branch 3 IFEQ L139 - true: 17
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 162 IFNE L1400 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I43 Branch 193 IFNULL L2173 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I16 Branch 133 IF_ICMPLE L1169 - false: 67
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I105 Branch 119 IFEQ L1078 - true: 4557
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isFromInclusive()Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I127 Branch 58 IF_ICMPLE L563 - false: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 88 IFNULL L804 - false: 1263
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I105 Branch 119 IFEQ L1078 - false: 4557
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(Ljava/lang/Object;)Z: Line 1410: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()Ljava/util/Set;: Line 2233: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1761: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2439: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I23 Branch 68 IF_ACMPNE L661 - false: 208
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: Line 1753: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()Ljava/util/Set;: Line 1756: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()Ljava/util/Map$Entry;: Line 2081: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 88 IFNULL L804 - true: 271
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getToKey()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I110 Branch 7 IFEQ L159 - true: 13258
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I43 Branch 193 IFNULL L2173 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2434: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2435: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(Ljava/lang/Object;)Z: I4 Branch 162 IFNE L1400 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(Ljava/io/ObjectOutputStream;)V: Line 2433: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;: Line 1774: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.isFromInclusive()Z: Line 1945: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 52 IF_ACMPNE L531 - true: 46
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 52 IF_ACMPNE L531 - false: 3715
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()Ljava/lang/Object;: Line 1628: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getFromKey()Ljava/lang/Object;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()I: I5 Branch 247 IF_ICMPEQ L2004 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I149 Branch 131 IF_ICMPGE L1142 - false: 112
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I37 Branch 39 IF_ICMPGT L429 - false: 40
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()I: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Ljava/lang/Object;)Ljava/lang/Object;: I37 Branch 39 IF_ICMPGT L429 - true: 40
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.getFromKey()Ljava/lang/Object;: Line 1935: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I165 Branch 61 IF_ACMPNE L581 - true: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isToInclusive()Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: I4 Branch 170 IFNONNULL L1620 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I139 Branch 59 IF_ACMPNE L572 - false: 1248
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Ljava/lang/Object;)Z: I37 Branch 34 IFEQ L386 - true: 43
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Ljava/lang/Object;)Z: I37 Branch 34 IFEQ L386 - false: 68
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()Ljava/lang/Object;: I4 Branch 170 IFNONNULL L1620 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I80 Branch 139 IFNONNULL L1211 - true: 1
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 20 IFNULL L242 - false: 18
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()Ljava/util/Set;: I4 Branch 36 IFNONNULL L399 - true: 126
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I79 Branch 54 IF_ACMPNE L545 - false: 3673
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 201 IFNE L1736 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: I8 Branch 201 IFNE L1736 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2163: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I11 Branch 153 IF_ICMPNE L1330 - false: 25
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.next()Ljava/util/Map$Entry;: Line 2325: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I13 Branch 195 IFNONNULL L2185 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()Ljava/lang/Object;: I13 Branch 195 IFNONNULL L2185 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I107 Branch 142 IFEQ L1217 - false: 1011
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(Ljava/lang/Object;Z)Z: Line 2220: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I57 Branch 106 IFEQ L974 - true: 1804
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I32 Branch 192 IFNULL L2172 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: Line 2381: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: I32 Branch 192 IFNULL L2172 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I82 Branch 50 IF_ACMPNE L508 - true: 3
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(Ljava/lang/Object;II)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I58 Branch 125 IFEQ L1114 - true: 23
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I41 Branch 231 IFNULL L1901 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I41 Branch 231 IFNULL L1901 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2173: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(Ljava/lang/Object;)Ljava/lang/Object;: Line 1736: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2172: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2166: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()Ljava/lang/Object;: Line 2165: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1890: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(Ljava/lang/Object;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I37 Branch 23 IFEQ L260 - false: 13
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I69 Branch 138 IF_ACMPNE L1207 - true: 1
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: Line 1508: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1891: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()Ljava/lang/String;: I110 Branch 156 IFNULL L1351 - true: 6480
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()Ljava/util/Collection;: I4 Branch 37 IFNONNULL L407 - true: 1278
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 65 IFNULL L657 - true: 1686
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1902: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: Line 1901: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: Line 1507: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()Ljava/util/Set;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()I: Line 1454: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.contains(Ljava/lang/Object;)Z: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 91 IFNULL L817 - false: 975
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(Ljava/lang/Object;)Ljava/lang/Object;: I40 Branch 91 IFNULL L817 - true: 551
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 26 IFNONNULL L340 - false: 46
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 204 IFNE L1761 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: I9 Branch 26 IFNONNULL L340 - true: 211
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I5 Branch 47 IF_ACMPNE L499 - false: 7342
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;: I5 Branch 204 IFNE L1761 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 1636: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 339: 46
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 340: 46
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I68 Branch 72 IF_ACMPEQ L692 - false: 38
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()Ljava/lang/Object;: Line 1649: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.isFromInclusive()Z: Line 2248: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I93 Branch 140 IFEQ L1215 - true: 1
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()V: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I69 Branch 138 IF_ACMPNE L1207 - false: 182
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I93 Branch 140 IFEQ L1215 - false: 118
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I116 Branch 76 IF_ACMPNE L714 - false: 1693
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I76 Branch 5 IFEQ L149 - false: 4090
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(Ljava/lang/Object;)Z: Line 2204: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;: I7 Branch 176 IF_ICMPEQ L1562 - false: 6621
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I5 Branch 202 IFNE L1745 - false: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I52 Branch 232 IFNULL L1902 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(Lorg/apache/commons/collections4/trie/AbstractPatriciaTrie$TrieEntry;)V: I152 Branch 60 IF_ACMPNE L576 - true: 3632
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(Ljava/lang/Object;)Ljava/lang/Object;: I3 Branch 86 IFNONNULL L798 - false: 59
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()Ljava/util/Comparator;: root-Branch: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: I5 Branch 202 IFNE L1745 - true: 25826
Number of times BBC is called for org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()Ljava/lang/Object;: I52 Branch 232 IFNULL L1902 - false: 25826
Number of times BBC is called in total: 8191046
* Search finished after 602s and 271 generations, 105057 statements, best individual has fitness: 1484.0
* Minimizing test suite
[MASTER] 21:24:24.997 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 822
* Number of covered goals: 456
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 602
* Number of covered goals: 295
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 569
* Number of covered goals: 313
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 186
* Number of covered goals: 115
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 41%
* Total number of goals: 116
* Number of covered goals: 47
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 41%
* Total number of goals: 116
* Number of covered goals: 47
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 49%
* Total number of goals: 602
* Number of covered goals: 293
* Generated 167 tests with total length 2010
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:25:15.877 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7908833333333334% of time used, but only 30/167 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 21:25:28.285 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_31_1627593928017/org/apache/commons/collections4/trie/AbstractPatriciaTrie_31_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_31_1627593928017/org/apache/commons/collections4/trie/AbstractPatriciaTrie_31_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:28.299 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:28.299 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:28.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.String>>: 45
[MASTER] 21:25:28.304 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_31_1627593928017/org/apache/commons/collections4/trie/AbstractPatriciaTrie_31_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:28.305 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:28.306 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_31_1627593928017/org/apache/commons/collections4/trie/AbstractPatriciaTrie_31_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:28 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.apache.commons.collections4.trie.PatriciaTrie;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class AbstractPatriciaTrie_31_tmp__ESTest extends AbstractPatriciaTrie_31_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
27:       assertNotNull(patriciaTrie0);
28:       
29:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "", (-2991));
30:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
31:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
32:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
33:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
34:       
35:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
36:       assertNull(abstractPatriciaTrie_TrieEntry1);
37:       
38:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry0);
39:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
40:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertNull(abstractPatriciaTrie_TrieEntry2);
43:       
44:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
45:       Comparator<Map.Entry<Integer, String>> comparator1 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
46:       assertNotNull(comparator1);
47:       
48:       Integer integer0 = new Integer((-2991));
49:       assertEquals((-2991), (int)integer0);
50:       assertNotNull(integer0);
51:       
52:       AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(patriciaTrie0, integer0, (-2991));
53:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
54:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
55:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
56:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
57:       
58:       Integer integer1 = new Integer(0);
59:       assertFalse(integer1.equals((Object)integer0));
60:       assertEquals(0, (int)integer1);
61:       assertNotNull(integer1);
62:       
63:       Integer integer2 = abstractPatriciaTrie_TrieEntry3.setValue(integer1);
64:       assertFalse(integer0.equals((Object)integer1));
65:       assertFalse(integer1.equals((Object)integer0));
66:       assertFalse(integer2.equals((Object)integer1));
67:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
68:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
69:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
70:       assertEquals((-2991), (int)integer2);
71:       assertNotNull(integer2);
72:       
73:       boolean boolean0 = abstractPatriciaTrie_TrieEntry3.isEmpty();
74:       assertFalse(integer0.equals((Object)integer1));
75:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
76:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
77:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
78:       assertFalse(boolean0);
79:       
80:       Integer integer3 = new Integer((-2991));
81:       assertTrue(integer3.equals((Object)integer0));
82:       assertTrue(integer3.equals((Object)integer2));
83:       assertFalse(integer3.equals((Object)integer1));
84:       assertEquals((-2991), (int)integer3);
85:       assertNotNull(integer3);
86:       
87:       Integer integer4 = new Integer((-2991));
88:       assertTrue(integer4.equals((Object)integer2));
89:       assertTrue(integer4.equals((Object)integer3));
90:       assertTrue(integer4.equals((Object)integer0));
91:       assertFalse(integer4.equals((Object)integer1));
92:       assertEquals((-2991), (int)integer4);
93:       assertNotNull(integer4);
94:       
95:       Comparator<Map.Entry<String, String>> comparator2 = Map.Entry.comparingByValue();
96:       assertNotNull(comparator2);
97:       
98:       String string0 = abstractPatriciaTrie_TrieEntry0.setKeyValue(".@#8eh^~]l9/&HV", "j(&x5X8gM= @[^W^TNr");
99:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
100:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
101:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
102:       assertEquals("", string0);
103:       assertNotNull(string0);
104:       
105:       AbstractPatriciaTrie.TrieEntry<Integer, Integer> abstractPatriciaTrie_TrieEntry4 = new AbstractPatriciaTrie.TrieEntry<Integer, Integer>(integer3, integer4, (-2991));
106:       assertTrue(integer3.equals((Object)integer0));
107:       assertTrue(integer3.equals((Object)integer2));
108:       assertTrue(integer3.equals((Object)integer4));
109:       assertFalse(integer3.equals((Object)integer1));
110:       assertTrue(integer4.equals((Object)integer2));
111:       assertTrue(integer4.equals((Object)integer3));
112:       assertTrue(integer4.equals((Object)integer0));
113:       assertFalse(integer4.equals((Object)integer1));
114:       assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
115:       assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
116:       assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
117:       assertNotNull(abstractPatriciaTrie_TrieEntry4);
118:       
119:       Integer integer5 = new Integer((-2991));
120:       assertTrue(integer5.equals((Object)integer2));
121:       assertTrue(integer5.equals((Object)integer3));
122:       assertTrue(integer5.equals((Object)integer4));
123:       assertTrue(integer5.equals((Object)integer0));
124:       assertFalse(integer5.equals((Object)integer1));
125:       assertEquals((-2991), (int)integer5);
126:       assertNotNull(integer5);
127:       
128:       Comparator<Map.Entry<Integer, String>> comparator3 = Map.Entry.comparingByKey();
129:       assertFalse(comparator3.equals((Object)comparator1));
130:       assertNotNull(comparator3);
131:       
132:       abstractPatriciaTrie_TrieEntry4.key = integer5;
133:       assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
134:       assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
135:       assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
136:       
137:       boolean boolean1 = abstractPatriciaTrie_TrieEntry4.isEmpty();
138:       assertTrue(boolean1 == boolean0);
139:       assertTrue(integer3.equals((Object)integer0));
140:       assertTrue(integer3.equals((Object)integer5));
141:       assertTrue(integer3.equals((Object)integer2));
142:       assertTrue(integer3.equals((Object)integer4));
143:       assertFalse(integer3.equals((Object)integer1));
144:       assertTrue(integer4.equals((Object)integer2));
145:       assertTrue(integer4.equals((Object)integer3));
146:       assertTrue(integer4.equals((Object)integer0));
147:       assertTrue(integer4.equals((Object)integer5));
148:       assertFalse(integer4.equals((Object)integer1));
149:       assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
150:       assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
151:       assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
152:       assertFalse(boolean1);
153:       
154:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry5 = patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, String>) null);
155:       assertNull(abstractPatriciaTrie_TrieEntry5);
156:       
157:       AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((String) null, (Object) null);
158:       assertNotNull(abstractMap_SimpleEntry0);
159:       
160:       AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry6 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, Object>(abstractMap_SimpleEntry0, comparator2, (-2991));
161:       assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
162:       assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
163:       assertFalse(abstractPatriciaTrie_TrieEntry6.isEmpty());
164:       assertNotNull(abstractPatriciaTrie_TrieEntry6);
165:       
166:       boolean boolean2 = abstractPatriciaTrie_TrieEntry6.isInternalNode();
167:       assertTrue(boolean2 == boolean0);
168:       assertTrue(boolean2 == boolean1);
169:       assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
170:       assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
171:       assertFalse(abstractPatriciaTrie_TrieEntry6.isEmpty());
172:       assertFalse(boolean2);
173:       
174:       PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Object>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Object>>();
175:       assertNotNull(patriciaTrie1);
176:       
177:       Comparator<? super String> comparator4 = patriciaTrie1.comparator();
178:       assertNotNull(comparator4);
179:       
180:       Integer integer6 = new Integer(0);
181:       assertFalse(integer6.equals((Object)integer3));
182:       assertTrue(integer6.equals((Object)integer1));
183:       assertFalse(integer6.equals((Object)integer0));
184:       assertFalse(integer6.equals((Object)integer5));
185:       assertFalse(integer6.equals((Object)integer2));
186:       assertFalse(integer6.equals((Object)integer4));
187:       assertEquals(0, (int)integer6);
188:       assertNotNull(integer6);
189:       
190:       AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, Integer>("", integer6);
191:       assertFalse(integer6.equals((Object)integer3));
192:       assertTrue(integer6.equals((Object)integer1));
193:       assertFalse(integer6.equals((Object)integer0));
194:       assertFalse(integer6.equals((Object)integer5));
195:       assertFalse(integer6.equals((Object)integer2));
196:       assertFalse(integer6.equals((Object)integer4));
197:       assertNotNull(abstractMap_SimpleEntry1);
198:       
199:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry7 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("", abstractMap_SimpleEntry1, (-2991));
200:       assertFalse(integer6.equals((Object)integer3));
201:       assertTrue(integer6.equals((Object)integer1));
202:       assertFalse(integer6.equals((Object)integer0));
203:       assertFalse(integer6.equals((Object)integer5));
204:       assertFalse(integer6.equals((Object)integer2));
205:       assertFalse(integer6.equals((Object)integer4));
206:       assertFalse(abstractPatriciaTrie_TrieEntry7.isInternalNode());
207:       assertTrue(abstractPatriciaTrie_TrieEntry7.isExternalNode());
208:       assertFalse(abstractPatriciaTrie_TrieEntry7.isEmpty());
209:       assertNotNull(abstractPatriciaTrie_TrieEntry7);
210:       
211:       boolean boolean3 = abstractPatriciaTrie_TrieEntry7.isExternalNode();
212:       assertFalse(integer6.equals((Object)integer3));
213:       assertTrue(integer6.equals((Object)integer1));
214:       assertFalse(integer6.equals((Object)integer0));
215:       assertFalse(integer6.equals((Object)integer5));
216:       assertFalse(integer6.equals((Object)integer2));
217:       assertFalse(integer6.equals((Object)integer4));
218:       assertFalse(boolean3 == boolean1);
219:       assertFalse(boolean3 == boolean0);
220:       assertFalse(boolean3 == boolean2);
221:       assertFalse(abstractPatriciaTrie_TrieEntry7.isInternalNode());
222:       assertTrue(abstractPatriciaTrie_TrieEntry7.isExternalNode());
223:       assertFalse(abstractPatriciaTrie_TrieEntry7.isEmpty());
224:       assertTrue(boolean3);
225:   }
226: }
RegularFileObject[/tmp/EvoSuite_31_1627593928017/org/apache/commons/collections4/trie/AbstractPatriciaTrie_31_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:28 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_31_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_31_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_31_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_31_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:25:28.312 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
assertNotNull(patriciaTrie0);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "", (-2991));
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
assertNull(abstractPatriciaTrie_TrieEntry1);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertNull(abstractPatriciaTrie_TrieEntry2);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, String>> comparator1 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
assertNotNull(comparator1);

Integer integer0 = new Integer((-2991));
assertEquals((-2991), (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(patriciaTrie0, integer0, (-2991));
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

Integer integer1 = new Integer(0);
assertFalse(integer1.equals((Object)integer0));
assertEquals(0, (int)integer1);
assertNotNull(integer1);

Integer integer2 = abstractPatriciaTrie_TrieEntry3.setValue(integer1);
assertFalse(integer0.equals((Object)integer1));
assertFalse(integer1.equals((Object)integer0));
assertFalse(integer2.equals((Object)integer1));
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertEquals((-2991), (int)integer2);
assertNotNull(integer2);

boolean boolean0 = abstractPatriciaTrie_TrieEntry3.isEmpty();
assertFalse(integer0.equals((Object)integer1));
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertFalse(boolean0);

Integer integer3 = new Integer((-2991));
assertTrue(integer3.equals((Object)integer0));
assertTrue(integer3.equals((Object)integer2));
assertFalse(integer3.equals((Object)integer1));
assertEquals((-2991), (int)integer3);
assertNotNull(integer3);

Integer integer4 = new Integer((-2991));
assertTrue(integer4.equals((Object)integer2));
assertTrue(integer4.equals((Object)integer3));
assertTrue(integer4.equals((Object)integer0));
assertFalse(integer4.equals((Object)integer1));
assertEquals((-2991), (int)integer4);
assertNotNull(integer4);

Comparator<Map.Entry<String, String>> comparator2 = Map.Entry.comparingByValue();
assertNotNull(comparator2);

String string0 = abstractPatriciaTrie_TrieEntry0.setKeyValue(".@#8eh^~]l9/&HV", "j(&x5X8gM= @[^W^TNr");
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertEquals("", string0);
assertNotNull(string0);

AbstractPatriciaTrie.TrieEntry<Integer, Integer> abstractPatriciaTrie_TrieEntry4 = new AbstractPatriciaTrie.TrieEntry<Integer, Integer>(integer3, integer4, (-2991));
assertTrue(integer3.equals((Object)integer0));
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer4));
assertFalse(integer3.equals((Object)integer1));
assertTrue(integer4.equals((Object)integer2));
assertTrue(integer4.equals((Object)integer3));
assertTrue(integer4.equals((Object)integer0));
assertFalse(integer4.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry4);

Integer integer5 = new Integer((-2991));
assertTrue(integer5.equals((Object)integer2));
assertTrue(integer5.equals((Object)integer3));
assertTrue(integer5.equals((Object)integer4));
assertTrue(integer5.equals((Object)integer0));
assertFalse(integer5.equals((Object)integer1));
assertEquals((-2991), (int)integer5);
assertNotNull(integer5);

Comparator<Map.Entry<Integer, String>> comparator3 = Map.Entry.comparingByKey();
assertFalse(comparator3.equals((Object)comparator1));
assertNotNull(comparator3);

abstractPatriciaTrie_TrieEntry4.key = integer5;
assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());

boolean boolean1 = abstractPatriciaTrie_TrieEntry4.isEmpty();
assertTrue(boolean1 == boolean0);
assertTrue(integer3.equals((Object)integer0));
assertTrue(integer3.equals((Object)integer5));
assertTrue(integer3.equals((Object)integer2));
assertTrue(integer3.equals((Object)integer4));
assertFalse(integer3.equals((Object)integer1));
assertTrue(integer4.equals((Object)integer2));
assertTrue(integer4.equals((Object)integer3));
assertTrue(integer4.equals((Object)integer0));
assertTrue(integer4.equals((Object)integer5));
assertFalse(integer4.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry4.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry4.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry4.isExternalNode());
assertFalse(boolean1);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry5 = patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, String>) null);
assertNull(abstractPatriciaTrie_TrieEntry5);

AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((String) null, (Object) null);
assertNotNull(abstractMap_SimpleEntry0);

AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, Object> abstractPatriciaTrie_TrieEntry6 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, Object>(abstractMap_SimpleEntry0, comparator2, (-2991));
assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry6.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry6);

boolean boolean2 = abstractPatriciaTrie_TrieEntry6.isInternalNode();
assertTrue(boolean2 == boolean0);
assertTrue(boolean2 == boolean1);
assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry6.isEmpty());
assertFalse(boolean2);

PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Object>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Object>>();
assertNotNull(patriciaTrie1);

Comparator<? super String> comparator4 = patriciaTrie1.comparator();
assertNotNull(comparator4);

Integer integer6 = new Integer(0);
assertFalse(integer6.equals((Object)integer3));
assertTrue(integer6.equals((Object)integer1));
assertFalse(integer6.equals((Object)integer0));
assertFalse(integer6.equals((Object)integer5));
assertFalse(integer6.equals((Object)integer2));
assertFalse(integer6.equals((Object)integer4));
assertEquals(0, (int)integer6);
assertNotNull(integer6);

AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, Integer>("", integer6);
assertFalse(integer6.equals((Object)integer3));
assertTrue(integer6.equals((Object)integer1));
assertFalse(integer6.equals((Object)integer0));
assertFalse(integer6.equals((Object)integer5));
assertFalse(integer6.equals((Object)integer2));
assertFalse(integer6.equals((Object)integer4));
assertNotNull(abstractMap_SimpleEntry1);

AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>> abstractPatriciaTrie_TrieEntry7 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, Integer>>("", abstractMap_SimpleEntry1, (-2991));
assertFalse(integer6.equals((Object)integer3));
assertTrue(integer6.equals((Object)integer1));
assertFalse(integer6.equals((Object)integer0));
assertFalse(integer6.equals((Object)integer5));
assertFalse(integer6.equals((Object)integer2));
assertFalse(integer6.equals((Object)integer4));
assertFalse(abstractPatriciaTrie_TrieEntry7.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry7.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry7.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry7);

boolean boolean3 = abstractPatriciaTrie_TrieEntry7.isExternalNode();
assertFalse(integer6.equals((Object)integer3));
assertTrue(integer6.equals((Object)integer1));
assertFalse(integer6.equals((Object)integer0));
assertFalse(integer6.equals((Object)integer5));
assertFalse(integer6.equals((Object)integer2));
assertFalse(integer6.equals((Object)integer4));
assertFalse(boolean3 == boolean1);
assertFalse(boolean3 == boolean0);
assertFalse(boolean3 == boolean2);
assertFalse(abstractPatriciaTrie_TrieEntry7.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry7.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry7.isEmpty());
assertTrue(boolean3);


[MASTER] 21:25:28.716 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_35_1627593928537/org/apache/commons/collections4/trie/AbstractPatriciaTrie_35_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_35_1627593928537/org/apache/commons/collections4/trie/AbstractPatriciaTrie_35_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:28.716 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:28.716 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:28.717 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Integer>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.String,java.lang.String>,java.lang.Integer>,java.lang.Integer>>: 76
[MASTER] 21:25:28.717 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_35_1627593928537/org/apache/commons/collections4/trie/AbstractPatriciaTrie_35_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:28.717 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:28.717 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_35_1627593928537/org/apache/commons/collections4/trie/AbstractPatriciaTrie_35_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:28 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.HashMap;
15: import java.util.Map;
16: import java.util.function.BiFunction;
17: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
18: import org.apache.commons.collections4.trie.PatriciaTrie;
19: import org.evosuite.runtime.EvoRunner;
20: import org.evosuite.runtime.EvoRunnerParameters;
21: import org.evosuite.runtime.ViolatedAssumptionAnswer;
22: import org.junit.runner.RunWith;
23: 
24: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
25: public class AbstractPatriciaTrie_35_tmp__ESTest extends AbstractPatriciaTrie_35_tmp__ESTest_scaffolding {
26: 
27:   @Test(timeout = 4000)
28:   public void test0()  throws Throwable  {
29:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
30:       assertTrue(hashMap0.isEmpty());
31:       assertEquals(0, hashMap0.size());
32:       assertNotNull(hashMap0);
33:       
34:       BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
35:       doReturn((Object) null).when(biFunction0).apply(any() , any());
36:       Integer integer0 = hashMap0.compute("", biFunction0);
37:       assertTrue(hashMap0.isEmpty());
38:       assertEquals(0, hashMap0.size());
39:       assertNull(integer0);
40:       
41:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);
42:       assertTrue(hashMap0.isEmpty());
43:       assertEquals(0, hashMap0.size());
44:       assertNotNull(patriciaTrie0);
45:       
46:       Object object0 = patriciaTrie0.put("", "");
47:       assertTrue(hashMap0.isEmpty());
48:       assertEquals(0, hashMap0.size());
49:       assertNull(object0);
50:       
51:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("", hashMap0, (-2));
52:       assertTrue(hashMap0.isEmpty());
53:       assertEquals(0, hashMap0.size());
54:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
55:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
56:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
57:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
58:       
59:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>("i6p\"1QMt)f1|Qp0", "i6p\"1QMt)f1|Qp0", (-2));
60:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
61:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
62:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
63:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
64:       
65:       Integer integer1 = new Integer((-778));
66:       assertEquals((-778), (int)integer1);
67:       assertNotNull(integer1);
68:       
69:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Object>("", integer1, (-778));
70:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
71:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
72:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
73:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
74:       
75:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
76:       Comparator<Map.Entry<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<String, String>, Integer>, Integer>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<String, String>, Integer>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator0);
77:       assertNotNull(comparator1);
78:       
79:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.left;
80:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
81:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
82:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
83:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
84:       
85:       // Undeclared exception!
86:       try { 
87:         patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry3);
88:         fail("Expecting exception: NullPointerException");
89:       
90:       } catch(NullPointerException e) {
91:          //
92:          // no message in exception (getMessage() returned null)
93:          //
94:          verifyException("org.apache.commons.collections4.trie.AbstractPatriciaTrie", e);
95:       }
96:   }
97: }
RegularFileObject[/tmp/EvoSuite_35_1627593928537/org/apache/commons/collections4/trie/AbstractPatriciaTrie_35_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:28 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_35_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_35_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_35_tmp__ESTest_scaffolding.class.getClassLoader()));
121:     mock(Class.forName("java.util.function.BiFunction", false, AbstractPatriciaTrie_35_tmp__ESTest_scaffolding.class.getClassLoader()));
122:   }
123: 
124:   private static void resetClasses() {
125:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_35_tmp__ESTest_scaffolding.class.getClassLoader()); 
126: 
127:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
128:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
129:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
130:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
140:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
141:       "org.apache.commons.collections4.trie.PatriciaTrie",
142:       "org.apache.commons.collections4.trie.KeyAnalyzer",
143:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
150:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
151:     );
152:   }
153: }

[MASTER] 21:25:28.719 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
assertTrue(hashMap0.isEmpty());
assertEquals(0, hashMap0.size());
assertNotNull(hashMap0);

BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
doReturn((Object) null).when(biFunction0).apply(any() , any());
Integer integer0 = hashMap0.compute("", biFunction0);
assertTrue(hashMap0.isEmpty());
assertEquals(0, hashMap0.size());
assertNull(integer0);

PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);
assertTrue(hashMap0.isEmpty());
assertEquals(0, hashMap0.size());
assertNotNull(patriciaTrie0);

Object object0 = patriciaTrie0.put("", "");
assertTrue(hashMap0.isEmpty());
assertEquals(0, hashMap0.size());
assertNull(object0);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("", hashMap0, (-2));
assertTrue(hashMap0.isEmpty());
assertEquals(0, hashMap0.size());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>("i6p\"1QMt)f1|Qp0", "i6p\"1QMt)f1|Qp0", (-2));
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Integer integer1 = new Integer((-778));
assertEquals((-778), (int)integer1);
assertNotNull(integer1);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Object>("", integer1, (-778));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<String, String>, Integer>, Integer>> comparator1 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<String, String>, Integer>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator0);
assertNotNull(comparator1);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.left;
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry3);

[MASTER] 21:25:29.718 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_45_1627593929610/org/apache/commons/collections4/trie/AbstractPatriciaTrie_45_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_45_1627593929610/org/apache/commons/collections4/trie/AbstractPatriciaTrie_45_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:29.718 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:29.718 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:29.719 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleEntry,java.lang.Object>,java.lang.Integer>>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleEntry,java.lang.Object>,java.lang.Integer>>>: 70
[MASTER] 21:25:29.719 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_45_1627593929610/org/apache/commons/collections4/trie/AbstractPatriciaTrie_45_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:29.719 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:29.720 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_45_1627593929610/org/apache/commons/collections4/trie/AbstractPatriciaTrie_45_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:29 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import java.util.SortedMap;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_45_tmp__ESTest extends AbstractPatriciaTrie_45_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("", (String) null);
31:       assertNotNull(abstractMap_SimpleEntry0);
32:       
33:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, String>(abstractMap_SimpleEntry0);
34:       assertNotNull(abstractMap_SimpleEntry1);
35:       
36:       AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(abstractMap_SimpleEntry1);
37:       assertNotNull(abstractMap_SimpleImmutableEntry0);
38:       
39:       AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleImmutableEntry<Object, String>>((AbstractMap.SimpleEntry<Object, Object>) null, abstractMap_SimpleImmutableEntry0, (-323));
40:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
41:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
42:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
43:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
44:       
45:       Comparator<Map.Entry<Integer, Object>> comparator0 = Map.Entry.comparingByKey();
46:       assertNotNull(comparator0);
47:       
48:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry2 = abstractPatriciaTrie_TrieEntry0.key;
49:       assertNull(abstractMap_SimpleEntry2);
50:       
51:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = patriciaTrie0.getEntry((Object) null);
52:       assertNull(abstractPatriciaTrie_TrieEntry1);
53:       
54:       SortedMap<String, Object> sortedMap0 = patriciaTrie0.subMap("Ls+b2g8Nm", "tKGoy2");
55:       assertTrue(sortedMap0.isEmpty());
56:       assertEquals(0, sortedMap0.size());
57:       assertNotNull(sortedMap0);
58:       
59:       Integer integer0 = new Integer(0);
60:       assertEquals(0, (int)integer0);
61:       assertNotNull(integer0);
62:       
63:       AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, ">Y'-Vi(j}VmWW3", (-2577));
64:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
65:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
66:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
67:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
68:       
69:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
70:       Comparator<Map.Entry<Integer, AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>> comparator2 = (Comparator<Map.Entry<Integer, AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>) comparator1);
71:       assertNotNull(comparator2);
72:       
73:       boolean boolean0 = abstractPatriciaTrie_TrieEntry2.isInternalNode();
74:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
75:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
76:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
77:       assertFalse(boolean0);
78:   }
79: }
RegularFileObject[/tmp/EvoSuite_45_1627593929610/org/apache/commons/collections4/trie/AbstractPatriciaTrie_45_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:29 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_45_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_45_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_45_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_45_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:25:29.721 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
assertNotNull(patriciaTrie0);

AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("", (String) null);
assertNotNull(abstractMap_SimpleEntry0);

AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, String>(abstractMap_SimpleEntry0);
assertNotNull(abstractMap_SimpleEntry1);

AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(abstractMap_SimpleEntry1);
assertNotNull(abstractMap_SimpleImmutableEntry0);

AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, AbstractMap.SimpleImmutableEntry<Object, String>>((AbstractMap.SimpleEntry<Object, Object>) null, abstractMap_SimpleImmutableEntry0, (-323));
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

Comparator<Map.Entry<Integer, Object>> comparator0 = Map.Entry.comparingByKey();
assertNotNull(comparator0);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry2 = abstractPatriciaTrie_TrieEntry0.key;
assertNull(abstractMap_SimpleEntry2);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = patriciaTrie0.getEntry((Object) null);
assertNull(abstractPatriciaTrie_TrieEntry1);

SortedMap<String, Object> sortedMap0 = patriciaTrie0.subMap("Ls+b2g8Nm", "tKGoy2");
assertTrue(sortedMap0.isEmpty());
assertEquals(0, sortedMap0.size());
assertNotNull(sortedMap0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, ">Y'-Vi(j}VmWW3", (-2577));
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>> comparator2 = (Comparator<Map.Entry<Integer, AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, Object>, Integer>>) comparator1);
assertNotNull(comparator2);

boolean boolean0 = abstractPatriciaTrie_TrieEntry2.isInternalNode();
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertFalse(boolean0);


[MASTER] 21:25:30.401 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_53_1627593930331/org/apache/commons/collections4/trie/AbstractPatriciaTrie_53_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_53_1627593930331/org/apache/commons/collections4/trie/AbstractPatriciaTrie_53_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:30.401 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:30.401 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:30.402 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Integer,java.lang.String>>: 46
[MASTER] 21:25:30.402 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_53_1627593930331/org/apache/commons/collections4/trie/AbstractPatriciaTrie_53_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:30.402 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:30.403 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_53_1627593930331/org/apache/commons/collections4/trie/AbstractPatriciaTrie_53_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:30 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.Collection;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_53_tmp__ESTest extends AbstractPatriciaTrie_53_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "", (-2991));
31:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
32:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
33:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
34:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
35:       
36:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
37:       assertNull(abstractPatriciaTrie_TrieEntry1);
38:       
39:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry0);
40:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
43:       assertNull(abstractPatriciaTrie_TrieEntry2);
44:       
45:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
46:       Comparator<Map.Entry<Integer, String>> comparator1 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
47:       assertNotNull(comparator1);
48:       
49:       Integer integer0 = new Integer((-2991));
50:       assertEquals((-2991), (int)integer0);
51:       assertNotNull(integer0);
52:       
53:       AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(patriciaTrie0, integer0, (-2991));
54:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
55:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
56:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
57:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
58:       
59:       PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
60:       assertNotNull(patriciaTrie1);
61:       
62:       Object object0 = patriciaTrie1.put("", patriciaTrie0);
63:       assertNull(object0);
64:       
65:       patriciaTrie1.decrementSize();
66:       PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie0);
67:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
68:       assertNotNull(patriciaTrie2);
69:       
70:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry4 = patriciaTrie2.firstEntry();
71:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
72:       assertNotSame(patriciaTrie2, patriciaTrie1);
73:       assertNull(abstractPatriciaTrie_TrieEntry4);
74:       
75:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry5 = patriciaTrie2.ceilingEntry("\n");
76:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
77:       assertNotSame(patriciaTrie2, patriciaTrie1);
78:       assertNull(abstractPatriciaTrie_TrieEntry5);
79:       
80:       PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie2);
81:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
82:       assertTrue(patriciaTrie3.equals((Object)patriciaTrie2));
83:       assertTrue(patriciaTrie3.equals((Object)patriciaTrie1));
84:       assertNotNull(patriciaTrie3);
85:       
86:       AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry6 = patriciaTrie3.lastEntry();
87:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie3));
88:       assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
89:       assertTrue(patriciaTrie3.equals((Object)patriciaTrie2));
90:       assertTrue(patriciaTrie3.equals((Object)patriciaTrie1));
91:       assertNotSame(patriciaTrie2, patriciaTrie3);
92:       assertNotSame(patriciaTrie2, patriciaTrie1);
93:       assertNotSame(patriciaTrie3, patriciaTrie1);
94:       assertNotSame(patriciaTrie3, patriciaTrie2);
95:       assertNull(abstractPatriciaTrie_TrieEntry6);
96:       
97:       PatriciaTrie<String> patriciaTrie4 = new PatriciaTrie<String>();
98:       assertTrue(patriciaTrie4.equals((Object)patriciaTrie0));
99:       assertNotNull(patriciaTrie4);
100:       
101:       Collection<String> collection0 = patriciaTrie4.values();
102:       assertTrue(patriciaTrie4.equals((Object)patriciaTrie0));
103:       assertNotSame(patriciaTrie4, patriciaTrie0);
104:       assertFalse(collection0.contains("\n"));
105:       assertNotNull(collection0);
106:       
107:       String string0 = patriciaTrie4.put("", "HPx(i");
108:       assertFalse(patriciaTrie4.equals((Object)patriciaTrie0));
109:       assertNotSame(patriciaTrie4, patriciaTrie0);
110:       assertNull(string0);
111:       
112:       String string1 = patriciaTrie0.put(" + ", "");
113:       assertFalse(patriciaTrie0.equals((Object)patriciaTrie4));
114:       assertNotSame(patriciaTrie0, patriciaTrie4);
115:       assertNull(string1);
116:       
117:       // Undeclared exception!
118:       try { 
119:         patriciaTrie0.subtree((String) null, (-1431), (-1431));
120:         fail("Expecting exception: StringIndexOutOfBoundsException");
121:       
122:       } catch(StringIndexOutOfBoundsException e) {
123:       }
124:   }
125: }
RegularFileObject[/tmp/EvoSuite_53_1627593930331/org/apache/commons/collections4/trie/AbstractPatriciaTrie_53_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:30 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_53_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_53_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_53_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_53_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:25:30.406 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
assertNotNull(patriciaTrie0);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "", (-2991));
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
assertNull(abstractPatriciaTrie_TrieEntry1);

AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry0);
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNull(abstractPatriciaTrie_TrieEntry2);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Integer, String>> comparator1 = (Comparator<Map.Entry<Integer, String>>)Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
assertNotNull(comparator1);

Integer integer0 = new Integer((-2991));
assertEquals((-2991), (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(patriciaTrie0, integer0, (-2991));
assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry3);

PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
assertNotNull(patriciaTrie1);

Object object0 = patriciaTrie1.put("", patriciaTrie0);
assertNull(object0);

patriciaTrie1.decrementSize();
PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie0);
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertNotNull(patriciaTrie2);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry4 = patriciaTrie2.firstEntry();
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNull(abstractPatriciaTrie_TrieEntry4);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry5 = patriciaTrie2.ceilingEntry("\n");
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNull(abstractPatriciaTrie_TrieEntry5);

PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie2);
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie3.equals((Object)patriciaTrie2));
assertTrue(patriciaTrie3.equals((Object)patriciaTrie1));
assertNotNull(patriciaTrie3);

AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry6 = patriciaTrie3.lastEntry();
assertTrue(patriciaTrie2.equals((Object)patriciaTrie3));
assertTrue(patriciaTrie2.equals((Object)patriciaTrie1));
assertTrue(patriciaTrie3.equals((Object)patriciaTrie2));
assertTrue(patriciaTrie3.equals((Object)patriciaTrie1));
assertNotSame(patriciaTrie2, patriciaTrie3);
assertNotSame(patriciaTrie2, patriciaTrie1);
assertNotSame(patriciaTrie3, patriciaTrie1);
assertNotSame(patriciaTrie3, patriciaTrie2);
assertNull(abstractPatriciaTrie_TrieEntry6);

PatriciaTrie<String> patriciaTrie4 = new PatriciaTrie<String>();
assertTrue(patriciaTrie4.equals((Object)patriciaTrie0));
assertNotNull(patriciaTrie4);

Collection<String> collection0 = patriciaTrie4.values();
assertTrue(patriciaTrie4.equals((Object)patriciaTrie0));
assertNotSame(patriciaTrie4, patriciaTrie0);
assertFalse(collection0.contains("\n"));
assertNotNull(collection0);

String string0 = patriciaTrie4.put("", "HPx(i");
assertFalse(patriciaTrie4.equals((Object)patriciaTrie0));
assertNotSame(patriciaTrie4, patriciaTrie0);
assertNull(string0);

String string1 = patriciaTrie0.put(" + ", "");
assertFalse(patriciaTrie0.equals((Object)patriciaTrie4));
assertNotSame(patriciaTrie0, patriciaTrie4);
assertNull(string1);

patriciaTrie0.subtree((String) null, (-1431), (-1431));

[MASTER] 21:25:35.103 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_100_1627593935015/org/apache/commons/collections4/trie/AbstractPatriciaTrie_100_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_100_1627593935015/org/apache/commons/collections4/trie/AbstractPatriciaTrie_100_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:35.103 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:35.103 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:35.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 46
[MASTER] 21:25:35.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 62
[MASTER] 21:25:35.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_100_1627593935015/org/apache/commons/collections4/trie/AbstractPatriciaTrie_100_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:35.107 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:35.108 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_100_1627593935015/org/apache/commons/collections4/trie/AbstractPatriciaTrie_100_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:35 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.evosuite.runtime.EvoRunner;
16: import org.evosuite.runtime.EvoRunnerParameters;
17: import org.evosuite.runtime.ViolatedAssumptionAnswer;
18: import org.junit.runner.RunWith;
19: 
20: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
21: public class AbstractPatriciaTrie_100_tmp__ESTest extends AbstractPatriciaTrie_100_tmp__ESTest_scaffolding {
22: 
23:   @Test(timeout = 4000)
24:   public void test0()  throws Throwable  {
25:       Integer integer0 = new Integer(32);
26:       assertEquals(32, (int)integer0);
27:       assertNotNull(integer0);
28:       
29:       AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Object, String>>(integer0, (AbstractMap.SimpleImmutableEntry<Object, String>) null, 32);
30:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
31:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
32:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
33:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
34:       
35:       abstractPatriciaTrie_TrieEntry0.parent = null;
36:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
37:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
38:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
39:       
40:       abstractPatriciaTrie_TrieEntry0.predecessor = null;
41:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
42:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
43:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
44:       
45:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
46:       Comparator<Map.Entry<Object, String>> comparator1 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
47:       assertNotNull(comparator1);
48:       
49:       String string0 = abstractPatriciaTrie_TrieEntry0.toString();
50:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
51:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
52:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
53:       assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string0);
54:       assertNotNull(string0);
55:       
56:       Comparator<String> comparator2 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
57:       Comparator<Map.Entry<Object, String>> comparator3 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator2);
58:       assertFalse(comparator3.equals((Object)comparator1));
59:       assertNotNull(comparator3);
60:       
61:       Comparator<Object> comparator4 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
62:       Comparator<Map.Entry<Object, String>> comparator5 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator4);
63:       assertFalse(comparator5.equals((Object)comparator1));
64:       assertFalse(comparator5.equals((Object)comparator3));
65:       assertNotSame(comparator5, comparator1);
66:       assertNotNull(comparator5);
67:       
68:       String string1 = abstractPatriciaTrie_TrieEntry0.toString();
69:       assertTrue(string1.equals((Object)string0));
70:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
71:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
72:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
73:       assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string1);
74:       assertNotNull(string1);
75:       
76:       abstractPatriciaTrie_TrieEntry0.value = null;
77:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
78:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
79:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
80:       
81:       abstractPatriciaTrie_TrieEntry0.predecessor = null;
82:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
83:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
84:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
85:       
86:       String string2 = abstractPatriciaTrie_TrieEntry0.toString();
87:       assertTrue(string2.equals((Object)string1));
88:       assertTrue(string2.equals((Object)string0));
89:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
90:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
91:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
92:       assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string2);
93:       assertNotNull(string2);
94:   }
95: }
RegularFileObject[/tmp/EvoSuite_100_1627593935015/org/apache/commons/collections4/trie/AbstractPatriciaTrie_100_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:35 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_100_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_100_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_100_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_100_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:25:35.110 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer(32);
assertEquals(32, (int)integer0);
assertNotNull(integer0);

AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Object, String>>(integer0, (AbstractMap.SimpleImmutableEntry<Object, String>) null, 32);
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

abstractPatriciaTrie_TrieEntry0.parent = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

abstractPatriciaTrie_TrieEntry0.predecessor = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator1 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
assertNotNull(comparator1);

String string0 = abstractPatriciaTrie_TrieEntry0.toString();
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string0);
assertNotNull(string0);

Comparator<String> comparator2 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator3 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator2);
assertFalse(comparator3.equals((Object)comparator1));
assertNotNull(comparator3);

Comparator<Object> comparator4 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator5 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator4);
assertFalse(comparator5.equals((Object)comparator1));
assertFalse(comparator5.equals((Object)comparator3));
assertNotSame(comparator5, comparator1);
assertNotNull(comparator5);

String string1 = abstractPatriciaTrie_TrieEntry0.toString();
assertTrue(string1.equals((Object)string0));
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string1);
assertNotNull(string1);

abstractPatriciaTrie_TrieEntry0.value = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

abstractPatriciaTrie_TrieEntry0.predecessor = null;
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());

String string2 = abstractPatriciaTrie_TrieEntry0.toString();
assertTrue(string2.equals((Object)string1));
assertTrue(string2.equals((Object)string0));
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertEquals("Entry(key=32 [32], value=null, parent=null, left=32 [32], right=null, )", string2);
assertNotNull(string2);


[MASTER] 21:25:35.868 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_110_1627593935769/org/apache/commons/collections4/trie/AbstractPatriciaTrie_110_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_110_1627593935769/org/apache/commons/collections4/trie/AbstractPatriciaTrie_110_tmp__ESTest_scaffolding.java]]
[MASTER] 21:25:35.868 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:35.868 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:25:35.870 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 41
[MASTER] 21:25:35.870 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 45
[MASTER] 21:25:35.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>>: 51
[MASTER] 21:25:35.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Integer>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleEntry<java.lang.String,java.lang.String>,java.lang.Integer>>: 130
[MASTER] 21:25:35.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_110_1627593935769/org/apache/commons/collections4/trie/AbstractPatriciaTrie_110_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:25:35.871 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:25:35.872 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_110_1627593935769/org/apache/commons/collections4/trie/AbstractPatriciaTrie_110_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:25:35 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.Map;
14: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
15: import org.apache.commons.collections4.trie.PatriciaTrie;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.ViolatedAssumptionAnswer;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class AbstractPatriciaTrie_110_tmp__ESTest extends AbstractPatriciaTrie_110_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       Integer integer0 = new Integer((-1596));
27:       assertEquals((-1596), (int)integer0);
28:       assertNotNull(integer0);
29:       
30:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(integer0, integer0);
31:       assertNotNull(abstractMap_SimpleEntry0);
32:       
33:       Comparator<Map.Entry<Comparable<Object>, String>> comparator0 = Map.Entry.comparingByKey();
34:       assertNotNull(comparator0);
35:       
36:       Comparator<Map.Entry<Comparable<Object>, String>> comparator1 = Map.Entry.comparingByKey();
37:       assertSame(comparator1, comparator0);
38:       assertNotNull(comparator1);
39:       
40:       Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
41:       Comparator<Map.Entry<Object, String>> comparator3 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator2);
42:       assertNotNull(comparator3);
43:       
44:       Comparator<Object> comparator4 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
45:       Comparator<Map.Entry<Object, String>> comparator5 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator4);
46:       assertFalse(comparator5.equals((Object)comparator3));
47:       assertNotSame(comparator5, comparator3);
48:       assertNotNull(comparator5);
49:       
50:       Comparator<Object> comparator6 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
51:       Comparator<Map.Entry<Object, String>> comparator7 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator6);
52:       assertFalse(comparator7.equals((Object)comparator3));
53:       assertFalse(comparator7.equals((Object)comparator5));
54:       assertNotSame(comparator7, comparator3);
55:       assertNotSame(comparator7, comparator5);
56:       assertNotNull(comparator7);
57:       
58:       AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>>(integer0, abstractMap_SimpleEntry0, (-1596));
59:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
60:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
61:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
62:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
63:       
64:       AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = abstractPatriciaTrie_TrieEntry0.setKeyValue(integer0, abstractMap_SimpleEntry0);
65:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
66:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
67:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
68:       assertSame(abstractMap_SimpleEntry0, abstractMap_SimpleEntry1);
69:       assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry0);
70:       assertNotNull(abstractMap_SimpleEntry1);
71:       
72:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
73:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
74:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
75:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
76:       assertSame(abstractMap_SimpleEntry0, abstractMap_SimpleEntry1);
77:       assertFalse(boolean0);
78:       
79:       AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("&pFo", integer0, (-737));
80:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
81:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
82:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
83:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
84:       
85:       Integer integer1 = new Integer((-737));
86:       assertFalse(integer1.equals((Object)integer0));
87:       assertEquals((-737), (int)integer1);
88:       assertNotNull(integer1);
89:       
90:       Integer integer2 = abstractPatriciaTrie_TrieEntry1.setKeyValue("FL\"8rJh*1TF.1LzM", integer1);
91:       assertFalse(integer0.equals((Object)integer1));
92:       assertFalse(integer1.equals((Object)integer0));
93:       assertFalse(integer2.equals((Object)integer1));
94:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
95:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
96:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
97:       assertEquals((-1596), (int)integer2);
98:       assertNotNull(integer2);
99:       
100:       Integer integer3 = new Integer((-737));
101:       assertFalse(integer3.equals((Object)integer0));
102:       assertTrue(integer3.equals((Object)integer1));
103:       assertFalse(integer3.equals((Object)integer2));
104:       assertEquals((-737), (int)integer3);
105:       assertNotNull(integer3);
106:       
107:       abstractPatriciaTrie_TrieEntry1.value = integer3;
108:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
109:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
110:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
111:       
112:       boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
113:       assertFalse(integer0.equals((Object)integer3));
114:       assertFalse(integer0.equals((Object)integer1));
115:       assertTrue(boolean1 == boolean0);
116:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
117:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
118:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
119:       assertFalse(boolean1);
120:       
121:       AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("", integer0, 0);
122:       assertFalse(integer0.equals((Object)integer3));
123:       assertFalse(integer0.equals((Object)integer1));
124:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
125:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
126:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
127:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
128:       
129:       Comparator<Object> comparator8 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
130:       Comparator<Map.Entry<AbstractMap.SimpleEntry<String, String>, Integer>> comparator9 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<String, String>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator8);
131:       assertNotNull(comparator9);
132:       
133:       abstractPatriciaTrie_TrieEntry2.parent = abstractPatriciaTrie_TrieEntry1;
134:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
135:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
136:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
137:       assertTrue(abstractPatriciaTrie_TrieEntry2.parent.isExternalNode());
138:       assertFalse(abstractPatriciaTrie_TrieEntry2.parent.isInternalNode());
139:       assertFalse(abstractPatriciaTrie_TrieEntry2.parent.isEmpty());
140:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
141:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
142:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
143:       
144:       Integer integer4 = abstractPatriciaTrie_TrieEntry2.setValue(abstractPatriciaTrie_TrieEntry1.value);
145:       assertFalse(integer3.equals((Object)integer0));
146:       assertTrue(integer3.equals((Object)integer1));
147:       assertFalse(integer3.equals((Object)integer2));
148:       assertFalse(integer0.equals((Object)integer3));
149:       assertFalse(integer0.equals((Object)integer1));
150:       assertFalse(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer0));
151:       assertTrue(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer1));
152:       assertFalse(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer2));
153:       assertFalse(integer4.equals((Object)integer1));
154:       assertFalse(integer4.equals((Object)integer3));
155:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
156:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
157:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
158:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
159:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
160:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
161:       assertEquals((-1596), (int)integer4);
162:       assertNotNull(integer4);
163:       
164:       abstractPatriciaTrie_TrieEntry2.bitIndex = (-3660);
165:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
166:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
167:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
168:       
169:       String string0 = abstractPatriciaTrie_TrieEntry2.toString();
170:       assertFalse(integer0.equals((Object)integer3));
171:       assertFalse(integer0.equals((Object)integer1));
172:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
173:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
174:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
175:       assertEquals("Entry(key= [-3660], value=-737, parent=FL\"8rJh*1TF.1LzM [-737], left= [-3660], right=null, predecessor= [-3660])", string0);
176:       assertNotNull(string0);
177:       
178:       PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>>();
179:       assertNotNull(patriciaTrie0);
180:   }
181: }
RegularFileObject[/tmp/EvoSuite_110_1627593935769/org/apache/commons/collections4/trie/AbstractPatriciaTrie_110_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:25:35 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_110_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_110_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_110_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_110_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:25:35.879 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Integer integer0 = new Integer((-1596));
assertEquals((-1596), (int)integer0);
assertNotNull(integer0);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(integer0, integer0);
assertNotNull(abstractMap_SimpleEntry0);

Comparator<Map.Entry<Comparable<Object>, String>> comparator0 = Map.Entry.comparingByKey();
assertNotNull(comparator0);

Comparator<Map.Entry<Comparable<Object>, String>> comparator1 = Map.Entry.comparingByKey();
assertSame(comparator1, comparator0);
assertNotNull(comparator1);

Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator3 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator2);
assertNotNull(comparator3);

Comparator<Object> comparator4 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator5 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator4);
assertFalse(comparator5.equals((Object)comparator3));
assertNotSame(comparator5, comparator3);
assertNotNull(comparator5);

Comparator<Object> comparator6 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<Object, String>> comparator7 = (Comparator<Map.Entry<Object, String>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator6);
assertFalse(comparator7.equals((Object)comparator3));
assertFalse(comparator7.equals((Object)comparator5));
assertNotSame(comparator7, comparator3);
assertNotSame(comparator7, comparator5);
assertNotNull(comparator7);

AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<Object, Object>>(integer0, abstractMap_SimpleEntry0, (-1596));
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertNotNull(abstractPatriciaTrie_TrieEntry0);

AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = abstractPatriciaTrie_TrieEntry0.setKeyValue(integer0, abstractMap_SimpleEntry0);
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertSame(abstractMap_SimpleEntry0, abstractMap_SimpleEntry1);
assertSame(abstractMap_SimpleEntry1, abstractMap_SimpleEntry0);
assertNotNull(abstractMap_SimpleEntry1);

boolean boolean0 = abstractPatriciaTrie_TrieEntry0.isEmpty();
assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
assertSame(abstractMap_SimpleEntry0, abstractMap_SimpleEntry1);
assertFalse(boolean0);

AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("&pFo", integer0, (-737));
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry1);

Integer integer1 = new Integer((-737));
assertFalse(integer1.equals((Object)integer0));
assertEquals((-737), (int)integer1);
assertNotNull(integer1);

Integer integer2 = abstractPatriciaTrie_TrieEntry1.setKeyValue("FL\"8rJh*1TF.1LzM", integer1);
assertFalse(integer0.equals((Object)integer1));
assertFalse(integer1.equals((Object)integer0));
assertFalse(integer2.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertEquals((-1596), (int)integer2);
assertNotNull(integer2);

Integer integer3 = new Integer((-737));
assertFalse(integer3.equals((Object)integer0));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer2));
assertEquals((-737), (int)integer3);
assertNotNull(integer3);

abstractPatriciaTrie_TrieEntry1.value = integer3;
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());

boolean boolean1 = abstractPatriciaTrie_TrieEntry1.isEmpty();
assertFalse(integer0.equals((Object)integer3));
assertFalse(integer0.equals((Object)integer1));
assertTrue(boolean1 == boolean0);
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertFalse(boolean1);

AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("", integer0, 0);
assertFalse(integer0.equals((Object)integer3));
assertFalse(integer0.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertNotNull(abstractPatriciaTrie_TrieEntry2);

Comparator<Object> comparator8 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Comparator<Map.Entry<AbstractMap.SimpleEntry<String, String>, Integer>> comparator9 = (Comparator<Map.Entry<AbstractMap.SimpleEntry<String, String>, Integer>>)Map.Entry.comparingByValue((Comparator<? super Integer>) comparator8);
assertNotNull(comparator9);

abstractPatriciaTrie_TrieEntry2.parent = abstractPatriciaTrie_TrieEntry1;
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertTrue(abstractPatriciaTrie_TrieEntry2.parent.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.parent.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.parent.isEmpty());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());

Integer integer4 = abstractPatriciaTrie_TrieEntry2.setValue(abstractPatriciaTrie_TrieEntry1.value);
assertFalse(integer3.equals((Object)integer0));
assertTrue(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer2));
assertFalse(integer0.equals((Object)integer3));
assertFalse(integer0.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer0));
assertTrue(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry1.value.equals((Object)integer2));
assertFalse(integer4.equals((Object)integer1));
assertFalse(integer4.equals((Object)integer3));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
assertEquals((-1596), (int)integer4);
assertNotNull(integer4);

abstractPatriciaTrie_TrieEntry2.bitIndex = (-3660);
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());

String string0 = abstractPatriciaTrie_TrieEntry2.toString();
assertFalse(integer0.equals((Object)integer3));
assertFalse(integer0.equals((Object)integer1));
assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
assertEquals("Entry(key= [-3660], value=-737, parent=FL\"8rJh*1TF.1LzM [-737], left= [-3660], right=null, predecessor= [-3660])", string0);
assertNotNull(string0);

PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>>();
assertNotNull(patriciaTrie0);


[MASTER] 21:25:36.958 [logback-2] ERROR JUnitAnalyzer - Cannot create tmp dir: /tmp/EvoSuite_123_1627593936958
[MASTER] 21:25:36.959 [logback-1] WARN  JUnitAnalyzer - Failed to create tmp dir
[MASTER] 21:26:00.797 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_245_1627593960730/org/apache/commons/collections4/trie/AbstractPatriciaTrie_244_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_245_1627593960730/org/apache/commons/collections4/trie/AbstractPatriciaTrie_244_tmp__ESTest_scaffolding.java]]
[MASTER] 21:26:00.798 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:00.798 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:00.799 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.Integer>>: 75
[MASTER] 21:26:00.800 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.util.AbstractMap.SimpleImmutableEntry<java.util.AbstractMap.SimpleEntry<java.lang.String,java.lang.String>,java.lang.Object>>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Comparable<java.lang.String>,java.util.AbstractMap.SimpleImmutableEntry<java.util.AbstractMap.SimpleEntry<java.lang.String,java.lang.String>,java.lang.Object>>>: 87
[MASTER] 21:26:00.801 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Comparable<java.lang.Integer>,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.Comparable<java.lang.Integer>,java.lang.Comparable<java.lang.Object>>>: 91
[MASTER] 21:26:00.801 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_245_1627593960730/org/apache/commons/collections4/trie/AbstractPatriciaTrie_244_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:26:00.801 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:26:00.802 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_245_1627593960730/org/apache/commons/collections4/trie/AbstractPatriciaTrie_244_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:26:00 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_244_tmp__ESTest extends AbstractPatriciaTrie_244_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
31:       assertNotNull(patriciaTrie1);
32:       
33:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("", (String) null, (-2047));
34:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
35:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
36:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
37:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
38:       
39:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(abstractPatriciaTrie_TrieEntry0);
40:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
41:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
42:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
43:       assertNotNull(abstractMap_SimpleEntry0);
44:       
45:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry1 = patriciaTrie1.put("", abstractMap_SimpleEntry0);
46:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
47:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
48:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
49:       assertNull(abstractMap_SimpleEntry1);
50:       
51:       String string0 = "jir.=.2,4";
52:       AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<String, String>("P53!*", "jir.=.2,4");
53:       assertNotNull(abstractMap_SimpleEntry2);
54:       
55:       AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>(abstractMap_SimpleEntry2);
56:       assertNotNull(abstractMap_SimpleImmutableEntry0);
57:       
58:       Comparator<Map.Entry<Integer, Comparable<Object>>> comparator0 = Map.Entry.comparingByValue();
59:       assertNotNull(comparator0);
60:       
61:       Comparator<Map.Entry<Object, Comparable<Object>>> comparator1 = Map.Entry.comparingByValue();
62:       assertNotNull(comparator1);
63:       
64:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry3 = new AbstractMap.SimpleEntry<Object, String>(abstractMap_SimpleImmutableEntry0);
65:       assertFalse(abstractMap_SimpleEntry3.equals((Object)abstractMap_SimpleEntry0));
66:       assertNotNull(abstractMap_SimpleEntry3);
67:       
68:       Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
69:       Comparator<Map.Entry<Integer, AbstractMap.SimpleImmutableEntry<Object, Comparable<Object>>>> comparator3 = Map.Entry.comparingByKey();
70:       assertNotNull(comparator3);
71:       
72:       AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry4 = patriciaTrie1.put("v47)y", (AbstractMap.SimpleEntry<Object, String>) null);
73:       assertNull(abstractMap_SimpleEntry4);
74:       
75:       Comparator<Map.Entry<Object, Integer>> comparator4 = (Comparator<Map.Entry<Object, Integer>>)Map.Entry.comparingByKey((Comparator<? super Object>) comparator2);
76:       assertNotNull(comparator4);
77:       
78:       int int0 = (-1);
79:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>>("jir.=.2,4", abstractMap_SimpleEntry3, (-1));
80:       assertFalse(abstractMap_SimpleEntry3.equals((Object)abstractMap_SimpleEntry0));
81:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
82:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
83:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
84:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
85:       
86:       Comparator<Object> comparator5 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
87:       Comparator<Map.Entry<Comparable<String>, AbstractMap.SimpleImmutableEntry<AbstractMap.SimpleEntry<String, String>, Object>>> comparator6 = (Comparator<Map.Entry<Comparable<String>, AbstractMap.SimpleImmutableEntry<AbstractMap.SimpleEntry<String, String>, Object>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleImmutableEntry<AbstractMap.SimpleEntry<String, String>, Object>>) comparator5);
88:       assertNotNull(comparator6);
89:       
90:       Comparator<Object> comparator7 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
91:       Comparator<Map.Entry<Comparable<Integer>, Comparable<Object>>> comparator8 = (Comparator<Map.Entry<Comparable<Integer>, Comparable<Object>>>)Map.Entry.comparingByKey((Comparator<? super Comparable<Integer>>) comparator7);
92:       assertNotNull(comparator8);
93:       
94:       AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.parent;
95:       assertNull(abstractPatriciaTrie_TrieEntry2);
96:       
97:       // Undeclared exception!
98:       try { 
99:         patriciaTrie1.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<Object, String>>) null, abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry1);
100:         fail("Expecting exception: NullPointerException");
101:       
102:       } catch(NullPointerException e) {
103:          //
104:          // no message in exception (getMessage() returned null)
105:          //
106:       }
107:   }
108: }
RegularFileObject[/tmp/EvoSuite_245_1627593960730/org/apache/commons/collections4/trie/AbstractPatriciaTrie_244_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:26:00 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_244_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_244_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_244_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_244_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:26:00.803 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 21:26:04.941 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_273_1627593964867/org/apache/commons/collections4/trie/AbstractPatriciaTrie_272_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_273_1627593964867/org/apache/commons/collections4/trie/AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.java]]
[MASTER] 21:26:04.941 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:04.941 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:04.943 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.String,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.String,java.lang.String>>: 79
[MASTER] 21:26:04.943 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Integer>,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Integer>,java.lang.Comparable<java.lang.Integer>>>: 159
[MASTER] 21:26:04.943 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Integer>,java.lang.Object>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Integer>,java.lang.Comparable<java.lang.Integer>>>: 162
[MASTER] 21:26:04.943 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_273_1627593964867/org/apache/commons/collections4/trie/AbstractPatriciaTrie_272_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:26:04.943 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:26:04.945 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
[MASTER] 21:26:04.945 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_273_1627593964867/org/apache/commons/collections4/trie/AbstractPatriciaTrie_272_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:26:04 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import java.util.AbstractMap;
12: import java.util.Comparator;
13: import java.util.HashMap;
14: import java.util.Map;
15: import java.util.Set;
16: import java.util.SortedMap;
17: import java.util.function.BiFunction;
18: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
19: import org.apache.commons.collections4.trie.PatriciaTrie;
20: import org.evosuite.runtime.EvoRunner;
21: import org.evosuite.runtime.EvoRunnerParameters;
22: import org.evosuite.runtime.ViolatedAssumptionAnswer;
23: import org.junit.runner.RunWith;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
26: public class AbstractPatriciaTrie_272_tmp__ESTest extends AbstractPatriciaTrie_272_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>(1467, 1467);
31:       assertTrue(hashMap0.isEmpty());
32:       assertEquals(0, hashMap0.size());
33:       assertNotNull(hashMap0);
34:       
35:       PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);
36:       assertTrue(hashMap0.isEmpty());
37:       assertEquals(0, hashMap0.size());
38:       assertNotNull(patriciaTrie0);
39:       
40:       PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
41:       assertNotNull(patriciaTrie1);
42:       
43:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 1467);
44:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
45:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
46:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
47:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
48:       
49:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = patriciaTrie1.addEntry(abstractPatriciaTrie_TrieEntry0, 1467);
50:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
51:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
52:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
53:       assertTrue(abstractPatriciaTrie_TrieEntry1.isEmpty());
54:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
55:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
56:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
57:       
58:       int int0 = patriciaTrie1.bitsPerElement();
59:       assertEquals(16, int0);
60:       
61:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "", 1467);
62:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
63:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
64:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
65:       assertNotNull(abstractPatriciaTrie_TrieEntry2);
66:       
67:       abstractPatriciaTrie_TrieEntry2.right = abstractPatriciaTrie_TrieEntry0;
68:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
69:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
70:       assertTrue(abstractPatriciaTrie_TrieEntry0.isEmpty());
71:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
72:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
73:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
74:       assertTrue(abstractPatriciaTrie_TrieEntry2.right.isExternalNode());
75:       assertTrue(abstractPatriciaTrie_TrieEntry2.right.isEmpty());
76:       assertFalse(abstractPatriciaTrie_TrieEntry2.right.isInternalNode());
77:       
78:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
79:       Comparator<Map.Entry<String, String>> comparator1 = (Comparator<Map.Entry<String, String>>)Map.Entry.comparingByKey((Comparator<? super String>) comparator0);
80:       assertNotNull(comparator1);
81:       
82:       abstractPatriciaTrie_TrieEntry2.bitIndex = 1467;
83:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
84:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
85:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
86:       
87:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.left;
88:       assertFalse(abstractPatriciaTrie_TrieEntry3.equals((Object)abstractPatriciaTrie_TrieEntry1));
89:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
90:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
91:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
92:       assertNotSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry1);
93:       assertNotNull(abstractPatriciaTrie_TrieEntry3);
94:       
95:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry4 = patriciaTrie1.nextEntryInSubtree(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry2);
96:       assertFalse(abstractPatriciaTrie_TrieEntry3.equals((Object)abstractPatriciaTrie_TrieEntry1));
97:       assertFalse(abstractPatriciaTrie_TrieEntry2.isInternalNode());
98:       assertFalse(abstractPatriciaTrie_TrieEntry2.isEmpty());
99:       assertTrue(abstractPatriciaTrie_TrieEntry2.isExternalNode());
100:       assertFalse(abstractPatriciaTrie_TrieEntry3.isInternalNode());
101:       assertFalse(abstractPatriciaTrie_TrieEntry3.isEmpty());
102:       assertTrue(abstractPatriciaTrie_TrieEntry3.isExternalNode());
103:       assertNotSame(abstractPatriciaTrie_TrieEntry3, abstractPatriciaTrie_TrieEntry1);
104:       assertNull(abstractPatriciaTrie_TrieEntry4);
105:       
106:       Set<String> set0 = patriciaTrie0.keySet();
107:       assertTrue(hashMap0.isEmpty());
108:       assertEquals(0, hashMap0.size());
109:       assertEquals(0, set0.size());
110:       assertTrue(set0.isEmpty());
111:       assertFalse(set0.contains(""));
112:       assertNotNull(set0);
113:       
114:       AbstractPatriciaTrie.TrieEntry<Comparable<String>, Object> abstractPatriciaTrie_TrieEntry5 = new AbstractPatriciaTrie.TrieEntry<Comparable<String>, Object>("", patriciaTrie0, 16);
115:       assertTrue(hashMap0.isEmpty());
116:       assertEquals(0, hashMap0.size());
117:       assertFalse(abstractPatriciaTrie_TrieEntry5.isEmpty());
118:       assertTrue(abstractPatriciaTrie_TrieEntry5.isExternalNode());
119:       assertFalse(abstractPatriciaTrie_TrieEntry5.isInternalNode());
120:       assertNotNull(abstractPatriciaTrie_TrieEntry5);
121:       
122:       Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
123:       Comparator<Map.Entry<String, Comparable<Object>>> comparator3 = Map.Entry.comparingByValue();
124:       assertNotNull(comparator3);
125:       
126:       BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
127:       doReturn((Object) null).when(biFunction0).apply(any() , any());
128:       String string0 = patriciaTrie1.compute("'3W.<!(mz#sXlV+4FY", biFunction0);
129:       assertNull(string0);
130:       
131:       Integer integer0 = new Integer(16);
132:       assertTrue(integer0.equals((Object)int0));
133:       assertEquals(16, (int)integer0);
134:       assertNotNull(integer0);
135:       
136:       Integer integer1 = hashMap0.put((String) null, integer0);
137:       assertTrue(integer0.equals((Object)int0));
138:       assertFalse(hashMap0.isEmpty());
139:       assertEquals(1, hashMap0.size());
140:       assertNull(integer1);
141:       
142:       Integer integer2 = hashMap0.put((String) null, integer0);
143:       assertTrue(integer0.equals((Object)int0));
144:       assertTrue(integer2.equals((Object)int0));
145:       assertFalse(hashMap0.isEmpty());
146:       assertEquals(1, hashMap0.size());
147:       assertEquals(16, (int)integer2);
148:       assertNotNull(integer2);
149:       
150:       patriciaTrie1.modCount = (-1);
151:       SortedMap<String, Object> sortedMap0 = patriciaTrie0.tailMap("fromKey > toKey");
152:       assertFalse(hashMap0.isEmpty());
153:       assertEquals(1, hashMap0.size());
154:       assertTrue(sortedMap0.isEmpty());
155:       assertEquals(0, sortedMap0.size());
156:       assertNotNull(sortedMap0);
157:       
158:       Comparator<Object> comparator4 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
159:       Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, Comparable<Integer>>> comparator5 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, Comparable<Integer>>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Integer, Integer>>) comparator4);
160:       assertNotNull(comparator5);
161:       
162:       Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, Comparable<Integer>>> comparator6 = (Comparator<Map.Entry<AbstractMap.SimpleImmutableEntry<Integer, Integer>, Comparable<Integer>>>)Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleImmutableEntry<Integer, Integer>>) comparator2);
163:       assertFalse(comparator6.equals((Object)comparator5));
164:       assertNotSame(comparator6, comparator5);
165:       assertNotNull(comparator6);
166:       
167:       boolean boolean0 = abstractPatriciaTrie_TrieEntry5.isInternalNode();
168:       assertFalse(hashMap0.isEmpty());
169:       assertEquals(1, hashMap0.size());
170:       assertFalse(abstractPatriciaTrie_TrieEntry5.isEmpty());
171:       assertTrue(abstractPatriciaTrie_TrieEntry5.isExternalNode());
172:       assertFalse(abstractPatriciaTrie_TrieEntry5.isInternalNode());
173:       assertFalse(boolean0);
174:       
175:       Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
176:       doReturn((String) null).when(comparable0).toString();
177:       AbstractPatriciaTrie.TrieEntry<Integer, Comparable<Object>> abstractPatriciaTrie_TrieEntry6 = new AbstractPatriciaTrie.TrieEntry<Integer, Comparable<Object>>((Integer) null, comparable0, 3);
178:       assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
179:       assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
180:       assertTrue(abstractPatriciaTrie_TrieEntry6.isEmpty());
181:       assertNotNull(abstractPatriciaTrie_TrieEntry6);
182:       
183:       Comparator<Map.Entry<Integer, Comparable<Object>>> comparator7 = Map.Entry.comparingByValue();
184:       assertNotNull(comparator7);
185:       
186:       String string1 = abstractPatriciaTrie_TrieEntry6.toString();
187:       assertTrue(abstractPatriciaTrie_TrieEntry6.isExternalNode());
188:       assertFalse(abstractPatriciaTrie_TrieEntry6.isInternalNode());
189:       assertTrue(abstractPatriciaTrie_TrieEntry6.isEmpty());
190:       assertNotNull(string1);
191:   }
192: }
RegularFileObject[/tmp/EvoSuite_273_1627593964867/org/apache/commons/collections4/trie/AbstractPatriciaTrie_272_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:26:04 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_272_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.lang.Comparable", false, AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.class.getClassLoader()));
121:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.class.getClassLoader()));
122:     mock(Class.forName("java.util.function.BiFunction", false, AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.class.getClassLoader()));
123:   }
124: 
125:   private static void resetClasses() {
126:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_272_tmp__ESTest_scaffolding.class.getClassLoader()); 
127: 
128:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
131:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
140:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
141:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
142:       "org.apache.commons.collections4.trie.PatriciaTrie",
143:       "org.apache.commons.collections4.trie.KeyAnalyzer",
144:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
150:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
151:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
152:     );
153:   }
154: }

[MASTER] 21:26:09.205 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_282_1627593969111/org/apache/commons/collections4/trie/AbstractPatriciaTrie_281_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_282_1627593969111/org/apache/commons/collections4/trie/AbstractPatriciaTrie_281_tmp__ESTest_scaffolding.java]]
[MASTER] 21:26:09.205 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Collections-28/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:09.206 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Collections-28/target/classes
[MASTER] 21:26:09.206 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Object>,java.lang.Integer>>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.String,java.util.AbstractMap.SimpleEntry<java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer,java.lang.Object>,java.lang.Integer>>>: 51
[MASTER] 21:26:09.207 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.Comparator<java.util.Map.Entry<java.lang.Object,java.lang.String>> cannot be converted to java.util.Comparator<java.util.Map.Entry<java.lang.String,java.lang.String>>: 85
[MASTER] 21:26:09.209 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_282_1627593969111/org/apache/commons/collections4/trie/AbstractPatriciaTrie_281_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 21:26:09.210 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 21:26:09.216 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_282_1627593969111/org/apache/commons/collections4/trie/AbstractPatriciaTrie_281_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Jul 29 21:26:09 GMT 2021
4:  */
5: 
6: package org.apache.commons.collections4.trie;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.AbstractMap;
13: import java.util.Comparator;
14: import java.util.Map;
15: import org.apache.commons.collections4.trie.AbstractPatriciaTrie;
16: import org.apache.commons.collections4.trie.PatriciaTrie;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.evosuite.runtime.ViolatedAssumptionAnswer;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class AbstractPatriciaTrie_281_tmp__ESTest extends AbstractPatriciaTrie_281_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
28:       assertNotNull(patriciaTrie0);
29:       
30:       String string0 = "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet";
31:       patriciaTrie0.decrementSize();
32:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet", "", (-3483));
33:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
34:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
35:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
36:       assertNotNull(abstractPatriciaTrie_TrieEntry0);
37:       
38:       boolean boolean0 = abstractPatriciaTrie_TrieEntry0.equals(patriciaTrie0);
39:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
40:       assertTrue(abstractPatriciaTrie_TrieEntry0.isExternalNode());
41:       assertFalse(abstractPatriciaTrie_TrieEntry0.isInternalNode());
42:       assertFalse(boolean0);
43:       
44:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, String>("", "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet", (-1841));
45:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
46:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
47:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
48:       assertNotNull(abstractPatriciaTrie_TrieEntry1);
49:       
50:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
51:       Comparator<Map.Entry<String, AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<Integer, Object>, Integer>>> comparator1 = (Comparator<Map.Entry<String, AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<Integer, Object>, Integer>>>)Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<AbstractMap.SimpleImmutableEntry<Integer, Object>, Integer>>) comparator0);
52:       assertNotNull(comparator1);
53:       
54:       abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
55:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
56:       assertTrue(abstractPatriciaTrie_TrieEntry0.isInternalNode());
57:       assertFalse(abstractPatriciaTrie_TrieEntry0.isExternalNode());
58:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
59:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
60:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
61:       assertFalse(abstractPatriciaTrie_TrieEntry0.left.isInternalNode());
62:       assertFalse(abstractPatriciaTrie_TrieEntry0.left.isEmpty());
63:       assertTrue(abstractPatriciaTrie_TrieEntry0.left.isExternalNode());
64:       
65:       abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
66:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
67:       assertTrue(abstractPatriciaTrie_TrieEntry0.isInternalNode());
68:       assertFalse(abstractPatriciaTrie_TrieEntry0.isExternalNode());
69:       assertTrue(abstractPatriciaTrie_TrieEntry1.isExternalNode());
70:       assertFalse(abstractPatriciaTrie_TrieEntry1.isEmpty());
71:       assertFalse(abstractPatriciaTrie_TrieEntry1.isInternalNode());
72:       assertFalse(abstractPatriciaTrie_TrieEntry0.left.isInternalNode());
73:       assertFalse(abstractPatriciaTrie_TrieEntry0.left.isEmpty());
74:       assertTrue(abstractPatriciaTrie_TrieEntry0.left.isExternalNode());
75:       
76:       Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
77:       String string1 = abstractPatriciaTrie_TrieEntry0.toString();
78:       assertFalse(string1.equals((Object)string0));
79:       assertFalse(abstractPatriciaTrie_TrieEntry0.isEmpty());
80:       assertTrue(abstractPatriciaTrie_TrieEntry0.isInternalNode());
81:       assertFalse(abstractPatriciaTrie_TrieEntry0.isExternalNode());
82:       assertEquals("Entry(key=org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet [-3483], value=, parent=null, left= [-1841], right=null, predecessor=org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet [-3483])", string1);
83:       assertNotNull(string1);
84:       
85:       Comparator<Map.Entry<String, String>> comparator3 = (Comparator<Map.Entry<String, String>>)Map.Entry.comparingByValue((Comparator<? super String>) comparator2);
86:       assertNotNull(comparator3);
87:       
88:       AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.parent;
89:       assertNull(abstractPatriciaTrie_TrieEntry2);
90:       
91:       // Undeclared exception!
92:       try { 
93:         patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, (AbstractPatriciaTrie.TrieEntry<String, String>) null);
94:         fail("Expecting exception: NullPointerException");
95:       
96:       } catch(NullPointerException e) {
97:          //
98:          // no message in exception (getMessage() returned null)
99:          //
100:       }
101:   }
102: }
RegularFileObject[/tmp/EvoSuite_282_1627593969111/org/apache/commons/collections4/trie/AbstractPatriciaTrie_281_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Jul 29 21:26:09 GMT 2021
5:  */
6: 
7: package org.apache.commons.collections4.trie;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractPatriciaTrie_281_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.trie.AbstractPatriciaTrie"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractPatriciaTrie_281_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.apache.commons.collections4.MapIterator",
84:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
85:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
86:       "org.apache.commons.collections4.trie.PatriciaTrie",
87:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
88:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
89:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
90:       "org.apache.commons.collections4.Get",
91:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
92:       "org.apache.commons.collections4.Trie",
93:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
94:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
95:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
96:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
97:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator",
98:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
99:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
100:       "org.apache.commons.collections4.IterableSortedMap",
101:       "org.apache.commons.collections4.OrderedMap",
102:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
103:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
104:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
105:       "org.apache.commons.collections4.OrderedMapIterator",
106:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
107:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$1",
108:       "org.apache.commons.collections4.Put",
109:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
110:       "org.apache.commons.collections4.trie.KeyAnalyzer",
111:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
112:       "org.apache.commons.collections4.IterableMap",
113:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
114:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
115:       "org.apache.commons.collections4.OrderedIterator",
116:       "org.apache.commons.collections4.IterableGet"
117:     );
118:   } 
119:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
120:     mock(Class.forName("java.util.Comparator", false, AbstractPatriciaTrie_281_tmp__ESTest_scaffolding.class.getClassLoader()));
121:   }
122: 
123:   private static void resetClasses() {
124:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractPatriciaTrie_281_tmp__ESTest_scaffolding.class.getClassLoader()); 
125: 
126:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
127:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
128:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
129:       "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
130:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
131:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
132:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
133:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
134:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
135:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
136:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
137:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
138:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
139:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
140:       "org.apache.commons.collections4.trie.PatriciaTrie",
141:       "org.apache.commons.collections4.trie.KeyAnalyzer",
142:       "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
143:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator",
144:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
145:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator",
146:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
147:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator",
148:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator",
149:       "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"
150:     );
151:   }
152: }

[MASTER] 21:26:09.217 [logback-1] WARN  JUnitAnalyzer - Failed to compile the test cases 
* Writing tests to file
* Writing JUnit test case 'AbstractPatriciaTrie_ESTest' to results/Collections-28/org.apache.commons.collections4.trie.AbstractPatriciaTrie/BBC-F0-50/tests/7
* Done!

* Computation finished
