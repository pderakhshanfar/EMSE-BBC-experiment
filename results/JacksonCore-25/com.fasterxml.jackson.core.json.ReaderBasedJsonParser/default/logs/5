* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
* Starting Client-0
* Connecting to master process on port 21943
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonCore-25/target/classes
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.core.json.ReaderBasedJsonParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 5457
* Using seed 2778963490
* Starting evolution
* Initial Number of Goals in DynaMOSA = 780 / 5457
[MASTER] 09:52:30.055 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.io.IOContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.json.ReaderBasedJsonParser due to org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.core.io.IOContext canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 09:55:32.011 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.json.ReaderBasedJsonParser due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.io.IOContext due to org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.core.json.ReaderBasedJsonParser canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 09:57:05.442 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.json.ReaderBasedJsonParser due to org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer canUseFunctionalMocks=false, canBeMocked: true
* Search finished after 306s and 141 generations, 141778 statements, best individual has fitness: 3087.0
* Minimizing test suite
[MASTER] 09:58:30.608 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 45%
* Total number of goals: 1431
* Number of covered goals: 647
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 45%
* Total number of goals: 1404
* Number of covered goals: 636
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 120
* Number of covered goals: 120
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 924
* Number of covered goals: 375
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 192
* Number of covered goals: 79
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 75%
* Total number of goals: 51
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 1404
* Number of covered goals: 634
* Generated 531 tests with total length 8346
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 09:59:54.080 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68005% of time used, but only 32/531 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 10:00:16.253 [logback-2] ERROR ClientNodeImpl - Error when generating tests for: com.fasterxml.jackson.core.json.ReaderBasedJsonParser with seed 2778963490. Configuration id : default
org.evosuite.runtime.mock.java.lang.MockRuntimeException: java.io.UnsupportedEncodingException: _y[]S'EZ9>{$
	at com.fasterxml.jackson.core.util.RequestPayload.toString(RequestPayload.java:62)
	at <evosuite>.<evosuite>(<evosuite>)
	at <evosuite>.<evosuite>(<evosuite>)
Caused by: java.io.UnsupportedEncodingException: _y[]S'EZ9>{$
	at java.lang.StringCoding.decode(StringCoding.java:190)
	at java.lang.String.<init>(String.java:426)
	at java.lang.String.<init>(String.java:491)
	at com.fasterxml.jackson.core.util.RequestPayload.toString(RequestPayload.java:60)
	at com.fasterxml.jackson.core.JsonParseException.getMessage(JsonParseException.java:139)
	at org.evosuite.result.Failure.<init>(Failure.java:58)
	at org.evosuite.result.TestGenerationResultBuilder.setTestCase(TestGenerationResultBuilder.java:180)
	at org.evosuite.junit.writer.TestSuiteWriter.testToString(TestSuiteWriter.java:718)
	at org.evosuite.junit.writer.TestSuiteWriter.getUnitTestsAllInSameFile(TestSuiteWriter.java:337)
	at org.evosuite.junit.writer.TestSuiteWriter.writeTestSuite(TestSuiteWriter.java:243)
	at org.evosuite.junit.JUnitAnalyzer.compileTests(JUnitAnalyzer.java:355)
	at org.evosuite.junit.JUnitAnalyzer.removeTestsThatDoNotCompile(JUnitAnalyzer.java:105)
	at org.evosuite.TestSuiteGenerator.compileAndCheckTests(TestSuiteGenerator.java:559)
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:516)
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:215)
	at org.evosuite.rmi.service.ClientNodeImpl.lambda$startNewSearch$101(ClientNodeImpl.java:150)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
* Computation finished
