* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: com.fasterxml.jackson.core.json.ReaderBasedJsonParser
* Starting Client-0
* Connecting to master process on port 9178
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonCore-25/target/classes
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.core.json.ReaderBasedJsonParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 5457
* Using seed 3223364712
* Starting evolution
* Initial Number of Goals in DynaMOSA = 780 / 5457
[MASTER] 10:02:56.206 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseAposName()Ljava/lang/String;
[MASTER] 10:02:56.512 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue()Ljava/lang/String;
[MASTER] 10:07:08.999 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.io.IOContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.fasterxml.jackson.core.json.ReaderBasedJsonParser due to org.evosuite.ga.ConstructionFailedException: Have no generator for class com.fasterxml.jackson.core.io.IOContext canUseFunctionalMocks=false, canBeMocked: true
* Search finished after 304s and 107 generations, 102326 statements, best individual has fitness: 3081.0
* Minimizing test suite
[MASTER] 10:08:49.173 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 46%
* Total number of goals: 1431
* Number of covered goals: 659
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 1404
* Number of covered goals: 643
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 127
* Number of covered goals: 127
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 41%
* Total number of goals: 924
* Number of covered goals: 376
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 192
* Number of covered goals: 79
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 51
* Number of covered goals: 50
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 78%
* Total number of goals: 51
* Number of covered goals: 40
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 1404
* Number of covered goals: 638
* Generated 390 tests with total length 7621
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:10:05.927 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7550666666666667% of time used, but only 5/390 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 10:10:30.800 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 10 seconds more than allowed.
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'ReaderBasedJsonParser_ESTest' to results/JacksonCore-25/com.fasterxml.jackson.core.json.ReaderBasedJsonParser/BBC-F0/tests/30
* Done!

* Computation finished
