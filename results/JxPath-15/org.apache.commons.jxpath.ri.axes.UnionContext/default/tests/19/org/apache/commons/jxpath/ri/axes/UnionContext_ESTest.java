/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 03:40:19 GMT 2021
 */

package org.apache.commons.jxpath.ri.axes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.function.Consumer;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.axes.AncestorContext;
import org.apache.commons.jxpath.ri.axes.AttributeContext;
import org.apache.commons.jxpath.ri.axes.NamespaceContext;
import org.apache.commons.jxpath.ri.axes.NodeSetContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.axes.SelfContext;
import org.apache.commons.jxpath.ri.axes.UnionContext;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnionContext_ESTest extends UnionContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      SelfContext selfContext0 = new SelfContext(nodeSetContext0, (NodeTest) null);
      AttributeContext attributeContext0 = new AttributeContext(selfContext0, (NodeTest) null);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      attributeContext0.getContextNodePointer();
      evalContextArray0[0] = (EvalContext) selfContext0;
      nodeSetContext0.setPosition((-1674));
      evalContextArray0[1] = (EvalContext) attributeContext0;
      UnionContext unionContext0 = new UnionContext(attributeContext0, evalContextArray0);
      UnionContext unionContext1 = new UnionContext((EvalContext) null, evalContextArray0);
      unionContext1.setPosition(47);
      // Undeclared exception!
      try { 
        unionContext0.setPosition(47);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-149));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      EvalContext[] evalContextArray0 = new EvalContext[1];
      evalContextArray0[0] = (EvalContext) nodeSetContext0;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      BasicNodeSet basicNodeSet1 = new BasicNodeSet();
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      QName qName0 = new QName("\"! ", "\"! ");
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null);
      basicNodeSet0.add((Pointer) nodePointer0);
      UnionContext unionContext1 = new UnionContext(nodeSetContext0, evalContextArray0);
      unionContext0.getCurrentNodePointer();
      unionContext0.setPosition((-149));
      boolean boolean0 = unionContext0.setPosition(1);
      assertEquals(1, unionContext0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      basicNodeSet0.add((Pointer) null);
      basicNodeSet0.add((Pointer) null);
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      evalContextArray0[0] = (EvalContext) nodeSetContext0;
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.getCurrentNodePointer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      EvalContext[] evalContextArray0 = new EvalContext[1];
      evalContextArray0[0] = (EvalContext) nodeSetContext0;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("DJDt\"W!X");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      UnionContext unionContext0 = new UnionContext(nodeSetContext0, evalContextArray0);
      unionContext0.getValue();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) basicVariables0);
      variablePointer0.createPath(jXPathContext0);
      basicNodeSet0.add((Pointer) variablePointer0);
      basicNodeSet0.add((Pointer) variablePointer0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      SelfContext selfContext0 = new SelfContext(unionContext0, nodeTypeTest0);
      UnionContext unionContext1 = new UnionContext(selfContext0, evalContextArray0);
      unionContext0.getCurrentNodePointer();
      assertEquals(3, nodeSetContext0.getPosition());
      assertEquals(1, unionContext0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      basicNodeSet0.add((Pointer) null);
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      evalContextArray0[0] = (EvalContext) nodeSetContext0;
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.getCurrentNodePointer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      EvalContext[] evalContextArray0 = new EvalContext[1];
      evalContextArray0[0] = (EvalContext) nodeSetContext0;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("\"id");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      Object object0 = unionContext0.getValue();
      JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
      NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0);
      basicNodeSet0.add((Pointer) nodePointer0);
      UnionContext unionContext1 = new UnionContext(evalContextArray0[0], evalContextArray0);
      unionContext1.getCurrentNodePointer();
      assertEquals(1, unionContext1.getPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      SelfContext selfContext0 = new SelfContext(nodeSetContext0, (NodeTest) null);
      AttributeContext attributeContext0 = new AttributeContext(selfContext0, (NodeTest) null);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      attributeContext0.getContextNodePointer();
      evalContextArray0[0] = (EvalContext) selfContext0;
      evalContextArray0[1] = (EvalContext) attributeContext0;
      UnionContext unionContext0 = new UnionContext(attributeContext0, evalContextArray0);
      UnionContext unionContext1 = new UnionContext((EvalContext) null, evalContextArray0);
      unionContext1.setPosition(47);
      // Undeclared exception!
      try { 
        unionContext0.setPosition(47);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[0];
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      unionContext0.getCurrentNodePointer();
      assertEquals(1, unionContext0.getPosition());
      
      unionContext0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, unionContext0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RootContext rootContext0 = new RootContext((JXPathContextReferenceImpl) null, (NodePointer) null);
      EvalContext[] evalContextArray0 = new EvalContext[1];
      evalContextArray0[0] = (EvalContext) rootContext0;
      UnionContext unionContext0 = new UnionContext(rootContext0, evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.setPosition(128);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.RootContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnionContext unionContext0 = new UnionContext((EvalContext) null, (EvalContext[]) null);
      // Undeclared exception!
      try { 
        unionContext0.getDocumentOrder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[2];
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      evalContextArray0[0] = (EvalContext) unionContext0;
      // Undeclared exception!
      try { 
        unionContext0.getCurrentNodePointer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      NodeTest nodeTest0 = null;
      SelfContext selfContext0 = new SelfContext(nodeSetContext0, (NodeTest) null);
      AttributeContext attributeContext0 = new AttributeContext(selfContext0, (NodeTest) null);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      attributeContext0.getContextNodePointer();
      selfContext0.getContextNodeList();
      evalContextArray0[0] = (EvalContext) selfContext0;
      evalContextArray0[1] = (EvalContext) attributeContext0;
      UnionContext unionContext0 = new UnionContext(attributeContext0, evalContextArray0);
      int int0 = 20;
      unionContext0.setPosition(20);
      unionContext0.nextSet();
      // Undeclared exception!
      try { 
        selfContext0.getCurrentNodePointer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[1];
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      int int0 = unionContext0.getDocumentOrder();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[1];
      evalContextArray0[0] = null;
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      unionContext0.getDocumentOrder();
      Consumer<BasicNodeSet> consumer0 = (Consumer<BasicNodeSet>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        unionContext0.forEachRemaining(consumer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      SelfContext selfContext0 = new SelfContext(nodeSetContext0, (NodeTest) null);
      AttributeContext attributeContext0 = new AttributeContext(selfContext0, (NodeTest) null);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      attributeContext0.getContextNodePointer();
      selfContext0.getContextNodeList();
      evalContextArray0[0] = (EvalContext) selfContext0;
      evalContextArray0[1] = (EvalContext) attributeContext0;
      UnionContext unionContext0 = new UnionContext(attributeContext0, evalContextArray0);
      unionContext0.setPosition(20);
      unionContext0.setPosition(1);
      assertEquals(1, unionContext0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[9];
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      int int0 = unionContext0.getDocumentOrder();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicNodeSet basicNodeSet0 = new BasicNodeSet();
      NodeSetContext nodeSetContext0 = new NodeSetContext((EvalContext) null, basicNodeSet0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer");
      NamespaceContext namespaceContext0 = new NamespaceContext(nodeSetContext0, processingInstructionTest0);
      EvalContext[] evalContextArray0 = new EvalContext[2];
      AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, false, processingInstructionTest0);
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("U7tdYQ%`;[4Hf(X");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      ancestorContext0.setPosition((-1));
      basicNodeSet0.remove(variablePointer0);
      evalContextArray0[0] = (EvalContext) ancestorContext0;
      evalContextArray0[1] = (EvalContext) nodeSetContext0;
      UnionContext unionContext0 = new UnionContext(namespaceContext0, evalContextArray0);
      unionContext0.getDocumentOrder();
      // Undeclared exception!
      try { 
        unionContext0.setPosition(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.EvalContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[1];
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.setPosition(27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[12];
      UnionContext unionContext0 = new UnionContext(evalContextArray0[0], evalContextArray0);
      assertEquals(1, unionContext0.getDocumentOrder());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[4];
      UnionContext unionContext0 = new UnionContext(evalContextArray0[2], evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.getCurrentNodePointer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvalContext[] evalContextArray0 = new EvalContext[6];
      evalContextArray0[0] = null;
      evalContextArray0[1] = null;
      evalContextArray0[2] = null;
      evalContextArray0[3] = null;
      evalContextArray0[4] = null;
      evalContextArray0[5] = null;
      UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
      // Undeclared exception!
      try { 
        unionContext0.setPosition(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.axes.UnionContext", e);
      }
  }
}
