* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 9931
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 1758972295
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 18:03:55.761 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:03:55.761 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 18:04:43.316 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 18:05:16.593 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 18:05:22.927 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:05:23.123 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[MASTER] 18:06:00.563 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
* Search finished after 607s and 469 generations, 178211 statements, best individual has fitness: 1578.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 36%
* Total number of goals: 685
* Number of covered goals: 249
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 170
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 75%
* Total number of goals: 4
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 36%
* Total number of goals: 506
* Number of covered goals: 184
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 170
* Generated 16 tests with total length 80
* Resulting test suite's coverage: 33% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 18:14:11.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:14:11.075 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:11.075 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
compiler0.parseTestCode("E=z");

[MASTER] 18:14:13.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:13.305 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
compiler0.parseTestCode("Suppliers.supp=ierFunction()");

[MASTER] 18:14:14.369 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:14.369 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
compiler0.parseTestCode("Suppliers.supplierFunction()");

[MASTER] 18:14:15.905 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback but in com.google.common.base.Preconditions.checkState(Preconditions.java:134): org.evosuite.runtime.mock.java.lang.MockThrowable: INTERNAL COMPILER ERROR.
Please report this problem.
null
  Node(NAME com): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer
  Parent(GETPROP): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer

[MASTER] 18:14:15.906 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.NameAnalyzer");
Node node1 = new Node(118, node0, node0, node0, 86, 327);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node0, node1);

[MASTER] 18:14:20.140 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:20.140 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
compiler0.parseSyntheticCode("4*KjJ8Y", "4*KjJ8Y");

[MASTER] 18:14:21.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:21.156 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
compiler0.parseTestCode("w");

[MASTER] 18:14:22.185 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:22.185 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
compiler0.parseTestCode("com.google.javascript.jscomp.parsing.TypeSafeDispatcher");

[MASTER] 18:14:23.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:23.634 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
compiler0.parseTestCode("window");

[MASTER] 18:14:24.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:24.885 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
compiler0.parseTestCode("E");

[MASTER] 18:14:26.028 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 18:14:26.029 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.NameAnalyzer$ProcessExternals");
Node node1 = new Node((-1614220135), node0, node0);
node0.addChildrenToFront(node1);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);
nameAnalyzer0.process(node0, node0);

[MASTER] 18:14:27.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:27.073 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NameAnalyzer nameAnalyzer0 = new NameAnalyzer((AbstractCompiler) null, false);
Compiler compiler0 = new Compiler();
char[] charArray0 = new char[7];
charArray0[0] = 'M';
CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
SourceFile sourceFile0 = SourceFile.fromReader("Z;z#PRda0Hbu.fwM6u", charArrayReader0);
compiler0.parse(sourceFile0);

[MASTER] 18:14:29.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test04 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback but in com.google.common.base.Preconditions.checkState(Preconditions.java:134): org.evosuite.runtime.mock.java.lang.MockThrowable: INTERNAL COMPILER ERROR.
Please report this problem.
null
  Node(NAME com): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer
  Parent(GETPROP): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer

[MASTER] 18:14:29.494 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.NameAnalyzer");
Node node1 = new Node(118, node0, node0, node0, 86, 327);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node0, node1);

[MASTER] 18:14:30.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test10 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback but in com.google.common.base.Preconditions.checkState(Preconditions.java:134): org.evosuite.runtime.mock.java.lang.MockThrowable: INTERNAL COMPILER ERROR.
Please report this problem.
null
  Node(NAME com): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer
  Parent(GETPROP): [testcode]:1:0
com.google.javascript.jscomp.NameAnalyzer

[MASTER] 18:14:30.740 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.NameAnalyzer");
Node node1 = new Node(118, node0, node0, node0, 86, 327);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node0, node1);

* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/BBC-F0-50/tests/11
* Done!

* Computation finished
