* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.jscomp.NameAnalyzer
* Starting Client-0
* Connecting to master process on port 19891
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-114/build/classes
  - subjects/buggy-versions/Closure-114/lib/args4j.jar
  - subjects/buggy-versions/Closure-114/lib/guava.jar
  - subjects/buggy-versions/Closure-114/lib/json.jar
  - subjects/buggy-versions/Closure-114/lib/jsr305.jar
  - subjects/buggy-versions/Closure-114/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-114/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-114/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.NameAnalyzer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2352
* Using seed 3670216888
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 531 / 2352
[MASTER] 18:03:57.841 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleEntry<K, V> : Type points to itself
[MASTER] 18:03:57.841 [logback-2] ERROR TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[MASTER] 18:04:02.224 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:07:00.622 [logback-2] ERROR TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 18:08:30.889 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 18:08:59.218 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
* Search finished after 601s and 526 generations, 228247 statements, best individual has fitness: 1533.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 685
* Number of covered goals: 259
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 561
* Number of covered goals: 184
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 37%
* Total number of goals: 506
* Number of covered goals: 189
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 3
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 22%
* Total number of goals: 18
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 33%
* Total number of goals: 561
* Number of covered goals: 184
* Generated 24 tests with total length 133
* Resulting test suite's coverage: 35% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 18:14:28.502 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 18:14:30.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:30.986 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Compiler compiler1 = new Compiler();
compiler0.parseTestCode("lr=IXEJ;[mx]");

[MASTER] 18:14:52.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:52.445 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
Compiler compiler1 = new Compiler();
compiler0.parseTestCode("lr=IXEJ;[mx]");

[MASTER] 18:14:54.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test20 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Multiple entries with same key: author=NOT_IMPLEMENTED and author=AUTHOR
[MASTER] 18:14:54.869 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = compiler0.parseSyntheticCode("+m", "+m");
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.process(node0, node0);
nameAnalyzer0.process(node0, node0);
assertEquals(40, Node.ORIGINALNAME_PROP);


[MASTER] 18:14:54.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test19 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 18:14:54.869 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
Node node0 = new Node(2105, 2105, 2105);
NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);
nameAnalyzer0.removeUnreferenced();
Node node1 = new Node((-238), 101, (-1460365957));
nameAnalyzer0.removeUnreferenced();
Node.newString(2105, "", (-1768), (-3943));
Node node2 = new Node(1, node1, node0, node1, node1, 53, 32);
NameAnalyzer nameAnalyzer1 = new NameAnalyzer(compiler0, false);
compiler0.parseSyntheticCode("com.google.javascript.rhino.jstype.TemplatizedType", "window");

* Writing tests to file
* Writing JUnit test case 'NameAnalyzer_ESTest' to results/Closure-114/com.google.javascript.jscomp.NameAnalyzer/BBC-F0-50/tests/12
* Done!

* Computation finished
